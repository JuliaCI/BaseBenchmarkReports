cset: moving following pidspec: 7915
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.453803146 seconds)
loading group "string"... done (took 0.615115728 seconds)
loading group "linalg"... done (took 8.068613882 seconds)
loading group "parallel"... done (took 0.171673837 seconds)
loading group "find"... done (took 1.216893716 seconds)
loading group "tuple"... done (took 1.971182747 seconds)
loading group "dates"... done (took 1.336970963 seconds)
loading group "micro"... done (took 0.253924697 seconds)
loading group "io"... done (took 0.993105906 seconds)
loading group "scalar"... done (took 40.921308241 seconds)
loading group "sparse"... done (took 13.045070892 seconds)
loading group "broadcast"... done (took 1.063108094 seconds)
loading group "union"... done (took 13.565032341 seconds)
loading group "simd"... done (took 5.113378686 seconds)
loading group "random"... done (took 10.251932475 seconds)
loading group "problem"... done (took 1.875981898 seconds)
loading group "array"... done (took 22.803147791 seconds)
loading group "misc"... done (took 1.721678219 seconds)
loading group "sort"... done (took 3.507083019 seconds)
loading group "collection"... done (took 19.273631076 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.530572457 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.134375034 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.136272374 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.127248888 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15538587 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.122103055 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.132781194 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.090413027 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.83519524 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.154493948 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.12206659 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.440426554 seconds)
done (took 5.308761803 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.178163423 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08686849 seconds)
    (2/2) benchmarking "String"...
    done (took 0.087555952 seconds)
  done (took 1.312290672 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.069466842 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.129765298 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070869402 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070765578 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070896357 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069919807 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069860194 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069925781 seconds)
  done (took 1.690786355 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.077361825 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07299552 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070237494 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.071754319 seconds)
  done (took 1.430310743 seconds)
done (took 5.829036323 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.811785338 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.218192394 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193065426 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.433047473 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137009927 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.167835565 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.640945362 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323531966 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.193686629 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.084628408 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.113906765 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.353696476 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.113317702 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642032718 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079135029 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.095574497 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142725251 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.415322649 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.071727633 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085513694 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.09265716 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.132314364 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.09037594 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078258417 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.149171599 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.071774107 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.14131477 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084604622 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.070392815 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.224620788 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.177359137 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.653091968 seconds)
  done (took 10.460185613 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.104154042 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.105555736 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072959061 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.130050373 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.105233078 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.073780377 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.079240715 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071141852 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.094897663 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.135494256 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.096223477 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107774795 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069441918 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072454451 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.089448663 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.209809328 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08411568 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.086126114 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074620178 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083846879 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.112593691 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082819504 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.085365303 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.085798754 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.132842541 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.183891494 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099824543 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.101335889 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070171868 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.087390389 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.118405622 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.132340718 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069372422 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.070074075 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.131734695 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097740205 seconds)
  done (took 4.784066855 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.050861201 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.150420638 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.095269393 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.14007437 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069171543 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089578875 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114222668 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.069759257 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085263291 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217291443 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.336674723 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.641107353 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115241361 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.111061949 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.071715155 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068491598 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.074795307 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.070928611 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.587035636 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.101005645 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112713157 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086963155 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.076008983 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07700347 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.366242895 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074434549 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.070830228 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074977457 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062305084 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.133180508 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074098507 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.99166257 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.169630045 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070849879 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.106353071 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.302596264 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095368495 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.149734648 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072925272 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.068976014 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.16168125 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.075599122 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.070428967 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.088545936 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108330017 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.123476644 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.070545693 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.074404 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.170774216 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.097615894 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.068546107 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.085530511 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.110765963 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158784434 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.080798249 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068671461 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.265068829 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.093613289 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074428354 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.069154277 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.187927166 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136232459 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.072903588 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072985237 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075033464 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.07607126 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.384947066 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.072876741 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.1549768 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.074626101 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082863935 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.075894456 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.075959093 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07950628 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079336605 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.092135711 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.067855044 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069966877 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079167933 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070421209 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070487934 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071002445 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.087195219 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.405286568 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.070978208 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072864638 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068407327 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.094395061 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.205659387 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072498661 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.070410942 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10404263 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073486631 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.07058465 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11237551 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.071208803 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.08856606 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.073797806 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.116767124 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070346235 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.108420907 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.072194764 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.104641674 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.074174598 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.102207909 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.083916108 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072644237 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.44920413 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.069899404 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.06868342 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.072436889 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069523495 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072391733 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.07130137 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083743485 seconds)
  done (took 22.609502837 seconds)
done (took 40.041114408 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.271389915 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07996987 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.077854803 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.077442624 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.077438809 seconds)
  done (took 1.821612654 seconds)
done (took 3.038836786 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.128133989 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104749826 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068251548 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.102346379 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068420203 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106489351 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.105801881 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.081945323 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105782468 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068924393 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.104380244 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.068837099 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068434289 seconds)
  done (took 2.420309679 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088688226 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088402447 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073996338 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08736836 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067219323 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087590979 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.086420362 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093782092 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086954283 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076947402 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067796293 seconds)
  done (took 2.115269947 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.087785723 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089468243 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073752906 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086976619 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.067242247 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08659927 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.088426539 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093914808 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.089263858 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080333367 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.070233088 seconds)
  done (took 2.120767432 seconds)
done (took 7.860414456 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08178881 seconds)
  done (took 1.280446913 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.610921656 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.128453479 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.085812916 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.116121881 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.199130851 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.12345998 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.277051955 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.091175654 seconds)
  done (took 9.018716338 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.096533271 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.088369444 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.072471356 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.074987327 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072127725 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.073131685 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.072875777 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.07335723 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075016388 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.075357972 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.075906964 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072100306 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.072365724 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.076661388 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.078511906 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.078121495 seconds)
  done (took 2.500698627 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.096565198 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.096945885 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.078223744 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.078606975 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.07602817 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.076250235 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07773252 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077338105 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.07457015 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.076452123 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07799359 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.079376096 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.077514764 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.070397781 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.080020248 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.081335555 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.076715488 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.080085997 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.081548405 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.081557838 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.081170361 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.070708189 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.077780633 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.080142145 seconds)
  done (took 3.216628212 seconds)
done (took 17.223660829 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.111089477 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071196043 seconds)
  done (took 1.389911947 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.086487537 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087310663 seconds)
  done (took 1.387951061 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.086922078 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.068954008 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093802087 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.08124578 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.07000722 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.069653261 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.091571441 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.069642921 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.069275197 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.069342599 seconds)
  done (took 1.984257937 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071330921 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.080311292 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.073750521 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.085202812 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077486029 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.06800744 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075387531 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.071465042 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081027956 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066790896 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.07508956 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086736369 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074696036 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.089033976 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.076027893 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.074508065 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.076993584 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.073327367 seconds)
  done (took 2.59108108 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.070313853 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.071198053 seconds)
  done (took 1.358600039 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.070075981 seconds)
    (2/7) benchmarking "second"...
    done (took 0.067496434 seconds)
    (3/7) benchmarking "month"...
    done (took 0.070724083 seconds)
    (4/7) benchmarking "year"...
    done (took 0.070265514 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.069012729 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.067880543 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.069053889 seconds)
  done (took 1.698311546 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.40111303 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.119800093 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.336178198 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.078323786 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.08887295 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.275580357 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069394024 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075617003 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074882833 seconds)
  done (took 2.784701341 seconds)
done (took 14.416578592 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083736105 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.09116046 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100811582 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.394437878 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.095327536 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.070186083 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116989023 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.193625682 seconds)
done (took 2.37194088 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.220914638 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.722287043 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.450206114 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.219887416 seconds)
  done (took 2.611666733 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.359413055 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09562593 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.064625065 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.073777063 seconds)
  done (took 1.822991162 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070046969 seconds)
    (2/2) benchmarking "read"...
    done (took 0.073991275 seconds)
  done (took 1.370413366 seconds)
done (took 7.253594528 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071062355 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.069497131 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.067472285 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069947488 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066769205 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.067786755 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070712489 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069729368 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.072157056 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.071861821 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071746389 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069213266 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069703068 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072078067 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.093620319 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.069119299 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069136832 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.069195176 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.071429959 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069440515 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.069069343 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072175671 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.069188534 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.069422573 seconds)
  done (took 2.966887876 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.089161951 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.069922944 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.075262664 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.075007602 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.073272611 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.074735608 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076402341 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.071797537 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.077464538 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.073978076 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074701044 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.075091007 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.074484907 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.075164185 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07393275 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.075555213 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.07701846 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071531786 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074334445 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.075198871 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.191750471 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071575921 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.075699701 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077126569 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.074909762 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074604451 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.074201014 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.072032199 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076757733 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.075133139 seconds)
  done (took 3.60410221 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.073612745 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.067301783 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.067442308 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.07481645 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.066709952 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.067830931 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06690393 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067520115 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067855017 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066988779 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068002907 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.068579761 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.069053586 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.070388309 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069859317 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.072875933 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.085753226 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.069603801 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.070179443 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.070345042 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.072383279 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.069069493 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.068985778 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.068771705 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.069135108 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.068691041 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.069304865 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.069038163 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.070207804 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.068829266 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.072326795 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.073209457 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.06903145 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075985965 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.073684694 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.0696412 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.073381457 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.069510156 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.070223539 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.069275083 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.068907751 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068676826 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.069163347 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.076346389 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.069689439 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.070711606 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.069690685 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.07091749 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.069785773 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.072570744 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.069352915 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.06962786 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.071452388 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.070662637 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.073462029 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.068614847 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.070034144 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.069007322 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.071167541 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.069114966 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.068595126 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.069048024 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.071155239 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068947419 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083771486 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075188538 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.069098945 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.071174324 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.070028353 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.072065771 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.071029757 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.083652588 seconds)
  done (took 6.333185283 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.093695618 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.091922917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069472174 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068541742 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065776846 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067482637 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073107736 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06807572 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069368817 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086124558 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067569073 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069475833 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06891586 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.071469093 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068103407 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069021798 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075431345 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065483622 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067930669 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071154363 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067857786 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073380676 seconds)
  done (took 2.837091352 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.159455653 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.073944899 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.110514091 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079321998 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073356854 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.078980205 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073401571 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073556148 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074058419 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072431849 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073576805 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075929553 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07604364 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073013505 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074440324 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.073549833 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075739044 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.07382403 seconds)
  done (took 2.707332159 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.08036045 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070426567 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.091279071 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069648194 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069481185 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072652694 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074058178 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077354252 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.071879166 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.069316218 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.078033055 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071935468 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0716628 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071299449 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074888561 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071527812 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.073877015 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071843633 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080318539 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076053412 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.076362836 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080114192 seconds)
  done (took 2.887678357 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083488291 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071498911 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.085600063 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072510181 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.06501245 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067863211 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.07352435 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.069176991 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.074589685 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.071420485 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069508001 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068195285 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.0719988 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071225339 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.07431206 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0721717 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.073413743 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071878881 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073971765 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067375727 seconds)
  done (took 2.692352428 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.090581384 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071458506 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072442042 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078884088 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071365466 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071205807 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07879254 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071961487 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073525169 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.095264092 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.074058164 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074445819 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081221478 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078293576 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073880072 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081853874 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080923094 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080867575 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074576233 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073465267 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.095027093 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07416536 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081227307 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.073535005 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074514802 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073810886 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074368202 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078422346 seconds)
  done (took 3.41869793 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070494499 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069897002 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.067769543 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066995703 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.067522448 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066686782 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066927566 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.069106654 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072076232 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068026458 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.071751997 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.071730779 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07206567 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.072325024 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072455643 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.071803314 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072076161 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.069504811 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06947281 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070006306 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.071923241 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072131274 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.071704414 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069008542 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068910793 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.07150831 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069135361 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06924802 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071612091 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068801505 seconds)
  done (took 3.351963798 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079149266 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076933609 seconds)
  done (took 1.407358923 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066761198 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084824124 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067563028 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.075115767 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07640518 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072889681 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.079381478 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07538419 seconds)
  done (took 1.84426966 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085976371 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.083983601 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.07452354 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.085928368 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.084210144 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.090195131 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.142340068 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.072932315 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.078543658 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.070191341 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.089391295 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.071137094 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.078824269 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073054129 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.078559839 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079082928 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.069403678 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.078044741 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.074891592 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.07060739 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073137038 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081843734 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07496348 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.067272703 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.073655221 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.097149049 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.08397858 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.072113959 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075417202 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.080731505 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.078709636 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.066147271 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.072754579 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.073566535 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.070157924 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.083607009 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086924004 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075597089 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.08243519 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073577283 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082853277 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.067548434 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.077721354 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.079739756 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0840477 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.073414922 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.072833758 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.067414368 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070281232 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.077187403 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.067574451 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073042281 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.066829099 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079737609 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.076306305 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.084349304 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.071207748 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.074534169 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.075977091 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.075962547 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.079916619 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.074659471 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075293456 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.072417234 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.083821819 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.07764346 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080114502 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.065606068 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064487448 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.069020534 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.081167115 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095293556 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.076309509 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.07102768 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.072326093 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.06986791 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076070446 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073109996 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078715812 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.080282648 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.072198752 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.077462142 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080575995 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073017879 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.07529608 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.080732036 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.071445335 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.075214614 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.070512453 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.089418106 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.071246001 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.069784711 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.070593072 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083268624 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.075564892 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.072037377 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.069997832 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.080152527 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06624203 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.072225833 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072711288 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07263163 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.082462704 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076177765 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.076741808 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.080499152 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.07926843 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07190613 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07477942 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.068343241 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072705274 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.070567435 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.078461593 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065217667 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.198420634 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071529884 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.073566469 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.083566181 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.072305314 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.073360733 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.081819983 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.080078451 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.073235227 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.069560583 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.076031491 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.073348198 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.075885285 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.080906591 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.071366694 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.067661505 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.067227928 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.076779713 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.072433928 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.07698368 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.078127869 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075866796 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.066671528 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.070586143 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.0783426 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.082566075 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.07386885 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.074381197 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.080591311 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.074931289 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.072278103 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.080300524 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.075963912 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.071746691 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.07870431 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.073244897 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.067579038 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075142618 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.075974188 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.072558849 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.07657648 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.077115787 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.075772426 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.073799758 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071536358 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.079992972 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073247259 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.071528366 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.073381528 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.071674506 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.085121148 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.075311925 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.067354522 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.069679398 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.081990268 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.070578448 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.071862633 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.071347852 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.075149482 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.073201335 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.07040656 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.071818575 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.074159045 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083102141 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.076188439 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072812374 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.077838404 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.084404919 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.072222352 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.074688897 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.07155956 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073033323 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.073447476 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.081912609 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.077428249 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074132513 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072502686 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067221854 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075579076 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07848294 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06979782 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06865599 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.069315606 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.076927877 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.078661011 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.07755257 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.073190186 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071087837 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073341614 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075914287 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07587802 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.072252179 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.071999287 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.07922147 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.070506727 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.079554594 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073498273 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.083473612 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07590384 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.067101794 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.074779527 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070388623 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.079042124 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066833041 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069806874 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.071527666 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.072893311 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.070798211 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.07416768 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065370557 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078119587 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.079439335 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.071796466 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070734526 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071137244 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078366265 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072978932 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075286973 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075066769 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.205777645 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.085520943 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.072773805 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.077707843 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.084926352 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.07325878 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.067598544 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079595792 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.072531077 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.072163751 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.072563512 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.07091121 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076841675 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081368417 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.080085734 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.066321195 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07533671 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.071555087 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.072206079 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.068174023 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.078035064 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.076432239 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.074456757 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080508728 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073799871 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.072998988 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077004502 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.07140748 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.073290551 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.073794916 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.0761856 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.073113025 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.07496137 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.07267474 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.076603153 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.071492403 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.071592187 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.074795882 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.073861348 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.073393323 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078739387 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.072709308 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07298785 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.075398333 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.074161286 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073005338 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.073232482 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.072455097 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.076330175 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074000448 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.07263829 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.074960044 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065465207 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077934678 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.069453756 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077628253 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07083645 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.068061789 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.080457269 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.07515652 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07686425 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.070471691 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071878911 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.073905988 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.072225081 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07625382 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.08001816 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.070929569 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.083844031 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.081644654 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074053305 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.074911295 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.072031546 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072199392 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069661709 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.07152257 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071758819 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.07124513 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070471805 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075638847 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073143418 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.07297577 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.074318792 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.073533368 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.072794763 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.074065055 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.066473665 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.0723257 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.072176273 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.074946829 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.083488866 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.072104699 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.07184997 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.072066775 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073622094 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.07164223 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.069015741 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.080408137 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.081162464 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.073260746 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079267208 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.07166801 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.074107741 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083425335 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.065798629 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.070661129 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.069771598 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.069723656 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0791551 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.07265665 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.081523597 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.07205365 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.070633855 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.068579754 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.07287146 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.070433209 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.065905377 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.069256309 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075789439 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070321793 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070941485 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.203119306 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073995207 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073767455 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.084055025 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.073476167 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.074817492 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.074353778 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.070262846 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.072466706 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.07319007 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.075618867 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.073941949 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.07194208 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.070627963 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.072866946 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.074092933 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.075215666 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.072767961 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.075123805 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.079607317 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073133129 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.076037657 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.075764706 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.067390424 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.077082961 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.072431551 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.073228896 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.072023974 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.076532297 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075624021 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073253656 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.082614126 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.072558359 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074103518 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073528022 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.071175654 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.072775212 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.072068484 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.072551516 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.071280289 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.073725575 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.081571745 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.070596313 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.075714359 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.073481421 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072331976 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.080757076 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.074130805 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.075621735 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.078477245 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.07311386 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.07472613 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.080780306 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.076841481 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076181152 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074834264 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.074138277 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078855124 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.071870832 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.079544992 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.07336731 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.072559895 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.074016836 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069895616 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.07352313 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.071780259 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072393127 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.079792306 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.074068092 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.071716555 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071078701 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.070372956 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.073924042 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.075393598 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.080088493 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.074872037 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075546772 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.06726953 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.069166934 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.07301346 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.07149427 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.074740481 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.075480129 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078613367 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.074913316 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.073069798 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.072393341 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.082232108 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078575003 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07734105 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.070537432 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.076597472 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.073494782 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.075827446 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.073745455 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.073062787 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.074075967 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.077594531 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.074974257 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.07183139 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.0807216 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.076479601 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073153897 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.074498831 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073846019 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072846143 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.067466276 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.072322902 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.074584439 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077236222 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074454487 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072288262 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082645344 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069911046 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.072568418 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074383064 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07035222 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.076170034 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.066520873 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07342641 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072144338 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072160556 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.197950603 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.070938823 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069887267 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073743242 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070839918 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06808525 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.084790314 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.083251413 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.076212112 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072033789 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.071712373 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.068388942 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06749938 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.072342566 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07424661 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.075300435 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.083950742 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.072303158 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.072354725 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.067524278 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0732109 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076660576 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.076594507 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.06963903 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.067044815 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.073074766 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.076038757 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.078096389 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.072595561 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.072438437 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077236398 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.075003428 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.070229388 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075753527 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.070271033 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.076156765 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085714308 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.072873806 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073486965 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.079274356 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.080757311 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.072193404 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.067854688 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.072764285 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075562929 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.073066576 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.073736844 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.073661286 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.088861383 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074589274 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071770264 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.071690507 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.075127078 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.071704758 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079475331 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07223513 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.070459125 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075379537 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.073452759 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.079328388 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073902931 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.077188882 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073523856 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074122755 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.070604122 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071646967 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.070620728 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.071680104 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.073793042 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.073093849 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.077298901 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.081176567 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.072295804 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083357505 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.082270281 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.074398304 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068868847 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.072454979 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.071911887 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.067972364 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.073268752 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.07057377 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.070880695 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.071509851 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.071890173 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.073765204 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077843883 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.073860381 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.073040366 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.072475144 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.067096106 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.075183246 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.075359266 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.074214299 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.069989695 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.073040235 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.073886223 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.076836222 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07609744 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.070375888 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.074550463 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.074114636 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073170828 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066960033 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.079560257 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071770952 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.074037397 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.071461473 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072164188 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.073157913 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075773344 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.076935556 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.073411668 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.074670903 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.076028425 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073671814 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068601019 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068710247 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076789502 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.069278045 seconds)
  done (took 46.23379853 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.108260805 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068202998 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066962969 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.068277179 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.078769027 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067265042 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066918395 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06905951 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069648733 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071599967 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067503611 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066335088 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074107885 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081205576 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077246473 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070376758 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066161693 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06690621 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065774139 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06667782 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074498285 seconds)
  done (took 2.882698601 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.078273289 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.082904756 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079638576 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.086123315 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074995991 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074886683 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080957611 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076519474 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.085531947 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07921921 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085091676 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077379288 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.079749136 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.07913216 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079341886 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077019722 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087522535 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07761001 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.077407846 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081954645 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.077213761 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.080914953 seconds)
  done (took 3.08612579 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071835133 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.0708472 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.072378964 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.06521775 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.072148592 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.066305967 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.075359198 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.070169961 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.075010118 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.072118538 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.072481037 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.071440812 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.074071495 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.067474692 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.073384484 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.070953707 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.115681917 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.077383514 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.072764441 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.074232331 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.068505954 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.074873083 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.067731041 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.068189147 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.072715202 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.076405017 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.073687264 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.070805282 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.072392915 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.071636269 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.072715539 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.070938065 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.075122494 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.073569845 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.071362758 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.071598211 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.071986917 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.07251078 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.067713934 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.0705454 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.073443469 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.068175266 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.074082954 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.07417465 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.070784127 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.069787255 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.074127416 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.072284145 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.068451172 seconds)
  done (took 4.891589423 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.083114974 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.115844162 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.073821204 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096839525 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.086269726 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.078943443 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.077023506 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.098039144 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.06942837 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.070611033 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.087557325 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.086106906 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071907901 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.076729559 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.075816252 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.071952797 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.073004399 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071154672 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.075491269 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071240843 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.076091965 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.078995872 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.086686951 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.085072485 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075918341 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.071186343 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.071939595 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.076477874 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.084029553 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.076845821 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.077249081 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.077523287 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.086941868 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.077170568 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071118161 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.074321358 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.088273666 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.072079102 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.074123845 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.069469536 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.074130965 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.07609651 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.078115999 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.088286083 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.071786455 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.077343136 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.070612435 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067056118 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081911274 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.07387833 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.079578005 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.084796842 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073744473 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.069281886 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073696751 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.083912846 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.069000267 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.067957768 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.072476347 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081194176 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067162535 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073177076 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.083149496 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071323914 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076643504 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08481983 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.077826085 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.075917947 seconds)
  done (took 6.770172773 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.079935998 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101179301 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.090547002 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.090477056 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082053567 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.082514642 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.082461058 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.082326661 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081908927 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.087081425 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.083654688 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.124796311 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.078098846 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084493651 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.082874979 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.083161998 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.082080781 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08185028 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082243679 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079968519 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079761246 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086712019 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.079569143 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086317607 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09233123 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075093676 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079134102 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079581549 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.087689373 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079230333 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083134382 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.080786814 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081279101 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.08979049 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.085824549 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.082071271 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071689781 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081897083 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.08127845 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.080200361 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075826239 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.087465924 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.079417412 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.075012871 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080678181 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081604839 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.089622336 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.086481442 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.084331735 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086711294 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.081409942 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089726158 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081951902 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082176324 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.089628336 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.091955331 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089550864 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.090144202 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.082269194 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.089433294 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089339536 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.092324898 seconds)
  done (took 6.595969348 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.087438894 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.0777856 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.08657188 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.065163466 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067700898 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075739257 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068129943 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.067884414 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.078710509 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.077831498 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08066998 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.075182882 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079185986 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079623167 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076058713 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078245828 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078160489 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.078121294 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080226004 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.078325054 seconds)
  done (took 2.888443433 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078369585 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088033827 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.070432789 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07600437 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073169008 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.077390943 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.075494567 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076162165 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073554864 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.075926138 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.08259984 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.082348375 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07311156 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.077868039 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.082116035 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.077999235 seconds)
  done (took 2.584625541 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08868382 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.077181618 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.083268416 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.071983998 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071989837 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06881115 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.071924918 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.068077801 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.067980495 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.084423812 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.072122728 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.082848758 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.07209551 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.070811218 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.068779005 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.077211681 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.067952553 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.068998444 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.071820502 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.085639368 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075775444 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.070518345 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.075225229 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.072076668 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.074773472 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07640193 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070791605 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.072099951 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.069190192 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.072134088 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.074911189 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.075728547 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06853559 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.069972231 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069867291 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.067130456 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069580884 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069891789 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.075080867 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.06961509 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069282595 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.073897638 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.071813538 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.07097834 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066628954 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.070046085 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06603722 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071868548 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067380152 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072206263 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.0696202 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072686731 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.070094321 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.076973002 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.072442547 seconds)
  done (took 5.337867588 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084590182 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074205676 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065067675 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068069027 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.075602099 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.073458117 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.075845077 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073389574 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073581407 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.07005934 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073434675 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07481308 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.073773678 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075977598 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073532217 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075456264 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.067671083 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073465163 seconds)
  done (took 2.677884735 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075067073 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069768014 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.076892899 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069739241 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.07105997 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.074694066 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067770113 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.070772737 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071254337 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072142649 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07203236 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.074388444 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.073803126 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.073941373 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072044208 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071621389 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.075101071 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070929367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.07173041 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.068572015 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073833467 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068732616 seconds)
  done (took 2.934865814 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.098789622 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.087204395 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.14422888 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082589768 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.090014039 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.07542563 seconds)
  done (took 1.928134531 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096222138 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105470312 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070180576 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073618822 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079819604 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073310763 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073672137 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074073385 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082004536 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079756379 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074132197 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082316848 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082318968 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081571215 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079383261 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079453124 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074082711 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073548925 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069806077 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087636595 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073421951 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082481535 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073719483 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073561612 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073872514 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081165229 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081973357 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079110972 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073615262 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08196226 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079593748 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076297003 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084382317 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.082135829 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075076978 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083102802 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076262698 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088491129 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080020907 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.082198896 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073523458 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079916702 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082351438 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078216588 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083143363 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074408673 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07825798 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073958193 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073872841 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089388971 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079402381 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081393297 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079474481 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.083061946 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.082766403 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090683095 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08062633 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08271401 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080210631 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07973702 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081845363 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079415013 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081910977 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079447447 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079796927 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081607587 seconds)
  done (took 6.619779431 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108875405 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.070679646 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073723019 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079414551 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081163832 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074977941 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074024575 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074327323 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073954906 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070541115 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112650708 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073784289 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081712994 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081081798 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073861778 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074252684 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073936108 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081221282 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07030158 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089276936 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073436929 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080824935 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081938113 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08096918 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079188307 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079164768 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073543104 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07398016 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073712409 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07400105 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079190072 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073929047 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081014196 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070687473 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081068976 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073904499 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074042725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078503231 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074118389 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079166285 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081199587 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087734146 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073883653 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073704962 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079825996 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073914647 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074337516 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071340496 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074103561 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071156023 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079098339 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079318537 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079400762 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081036196 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073868395 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073734361 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073999046 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073565875 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073987968 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079677614 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08125889 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073557767 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08916759 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07414157 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074237484 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081550689 seconds)
  done (took 6.502269787 seconds)
done (took 137.207925645 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.196078033 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.174338179 seconds)
  done (took 1.717918018 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073836188 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.103686748 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080803578 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13278076 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070306097 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.104662537 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103040149 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.082391042 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.070354324 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070479978 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.07011944 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.072572062 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135771735 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.070212075 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.069735083 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.072927478 seconds)
  done (took 2.744640965 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.104377613 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.169106187 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107064869 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069304009 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.103845958 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077444571 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.071145785 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.082792246 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.076221367 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068847576 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.076505143 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074103174 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068647834 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074704992 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075231713 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.076586159 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.068702719 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076468314 seconds)
  done (took 2.885416567 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102895437 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094491329 seconds)
  done (took 1.563760686 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.164343847 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.13908138 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.211022254 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.360084344 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.16531912 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.15451534 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.152295505 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.153106065 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.124145036 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.143624148 seconds)
  done (took 3.12985677 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.105384535 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.160541628 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279891398 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.123172001 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07716085 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.09786859 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.125034067 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082500677 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084530004 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084046534 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.083927627 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081781323 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.104399504 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077309826 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078109857 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.081536202 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.108352604 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076740088 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.07916971 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079418726 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.10517797 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069945673 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077368525 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07672116 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.081402671 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081034086 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070023216 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.071175179 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079805484 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079075993 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.081261568 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095886867 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.081025772 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.110939813 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.075197973 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.112147892 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.081068025 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.077426283 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079263901 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077816631 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081999416 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.08206535 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077517856 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.080561744 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.069785688 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.081036513 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070136914 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.070073155 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.081334059 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.071345691 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081729255 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.080675043 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.110078369 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071197647 seconds)
  done (took 6.233828747 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109214924 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.11244265 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.075687773 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.119937019 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109248353 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.075796306 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.109968221 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.102434583 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.110776505 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07443882 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.072187547 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.074701291 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.085806629 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.086611542 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.121788778 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.113907756 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.077512724 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07529661 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.112427188 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111963266 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.072393725 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103778488 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097467576 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.109944016 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.071528733 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.074522112 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.072700713 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.074338439 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.080639662 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.082380255 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.074279769 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.084307301 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088376116 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.081683366 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070960922 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071972906 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072398783 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.083112487 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083296536 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.082864273 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.081935635 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072052934 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072119995 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074157963 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.07407913 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072096887 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.083155938 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.084793555 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.082733405 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073202039 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074278592 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.074854694 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073955055 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.084531889 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.082384942 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.085806184 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.084082267 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07256929 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072627407 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.076804816 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084529447 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083149016 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.083420327 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073558749 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.083935081 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072695468 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084204302 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.088112569 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.073137916 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.073947159 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.072595847 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073682887 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074094983 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.082225515 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.081728846 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.073430654 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.073527342 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072355542 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083887908 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082443044 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072557969 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080887652 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071940296 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.074185222 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073622026 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073388787 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.081299873 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.083333305 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.073294734 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.071606363 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072900737 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072308074 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.070246483 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.079743839 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082615229 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082222883 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081314009 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.073638633 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081558199 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080852362 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072875195 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081648164 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071521746 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073245255 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072617788 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080749491 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080333606 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081505457 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072190892 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.071617258 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.080200464 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083233748 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071337529 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.081229642 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082729337 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.081440748 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.071051098 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082739698 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071581362 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082352844 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072583532 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.082200465 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071214058 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081097889 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071358351 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070781961 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071506914 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081227204 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073477529 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071398137 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.072867913 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072376379 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08140572 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.084419535 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073942682 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080543292 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080716538 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072845601 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079127457 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070277255 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079399756 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071535217 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070879216 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069750601 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082525464 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070443762 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070180929 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070798634 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080249062 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069783417 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081546936 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078432774 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06936218 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082015195 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080584178 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.07796281 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080612073 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072192724 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070397983 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070375583 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071641683 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078736951 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079266745 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071782678 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070495448 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078596569 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.079735128 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069403551 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078900155 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078732144 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079623189 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071104032 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071841112 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081047863 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080897208 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078981816 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079555441 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079431613 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070300113 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078774015 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078672514 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07036152 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084462323 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070710785 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082972804 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079254868 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078337585 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079916288 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080392431 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080418618 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.081005054 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083674401 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070903265 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070116401 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080043998 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070183226 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07074334 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078583361 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07058568 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071008237 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084058155 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07156157 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.08081641 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069508451 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079897653 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068660546 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072825563 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326697219 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.076086757 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.076525428 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.086650583 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.077155551 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.084305629 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.087631666 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.086045618 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.075536784 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.076989269 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.085923557 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.084876194 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.074136667 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074731008 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.077123783 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.084526168 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.083031667 seconds)
  done (took 19.377220589 seconds)
done (took 39.023741881 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.218390122 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.161595111 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.182031362 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.1249873 seconds)
  done (took 2.189033487 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.122308617 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108307327 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.098414545 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.070594955 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.10514269 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.070224779 seconds)
  done (took 2.009610881 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.319352429 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.218692825 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.195468526 seconds)
  done (took 2.162082501 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.218763002 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.205880022 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47321121 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.289778609 seconds)
  done (took 2.73303756 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.150447554 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.093614575 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071796833 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089345452 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13837977 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165314056 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.105306443 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.130889025 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.084753293 seconds)
  done (took 2.523459197 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.154060781 seconds)
done (took 13.202856234 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.132817746 seconds)
    (2/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.203393281 seconds)
    (3/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.100098761 seconds)
    (4/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.172775661 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.108011136 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.183370299 seconds)
    (7/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.094842351 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.203563919 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.090945296 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.124515245 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.088642044 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.16633526 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.196344611 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.083050382 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106426668 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.095701288 seconds)
    (17/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.215625663 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.079078341 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.15791184 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.203447436 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.079529289 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.125730902 seconds)
    (23/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.084689333 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.087543068 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078389324 seconds)
    (26/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.118301721 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.183416446 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.077409163 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.234553137 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.083087473 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07934035 seconds)
    (32/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.093070659 seconds)
    (33/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070480173 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094126483 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.069575228 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.157653335 seconds)
    (37/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.107486585 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077642574 seconds)
    (39/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.103082569 seconds)
    (40/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.078221582 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.094400361 seconds)
    (42/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.120742232 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.084599191 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.076088466 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.122060282 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.07000448 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.177782787 seconds)
    (48/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.082692733 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.215238743 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.163758907 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.100890755 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.096881152 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.109858738 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.075207585 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.094583585 seconds)
    (56/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.177087994 seconds)
    (57/309) benchmarking ("sort", Float64, false)...
    done (took 0.139344976 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078760337 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.078751503 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.077515687 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.09759792 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.095010846 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070023894 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.084807907 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.071789738 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.097990221 seconds)
    (67/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.408784842 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.184460575 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.224851122 seconds)
    (70/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.098166885 seconds)
    (71/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.080425345 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076191324 seconds)
    (73/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.121416139 seconds)
    (74/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.068327335 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.09454881 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.186015981 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.190383493 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.101491811 seconds)
    (79/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.056353751 seconds)
    (80/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.074731081 seconds)
    (81/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.125833241 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 0.072657947 seconds)
    (83/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.069670751 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.095480537 seconds)
    (85/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.058007831 seconds)
    (86/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.079092574 seconds)
    (87/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.198657889 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.216004504 seconds)
    (89/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.07827722 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.162337926 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.054401008 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.095242167 seconds)
    (93/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.075718595 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.073074291 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.169352197 seconds)
    (96/309) benchmarking ("sort", Int8, false)...
    done (took 0.148821979 seconds)
    (97/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.117580752 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.070666455 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.082877696 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.096897999 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056729043 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.081602292 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.082740212 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.080777022 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.079797021 seconds)
    (106/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.058252604 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102134863 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.073447877 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.05695949 seconds)
    (110/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.083265765 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.217549037 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.072827641 seconds)
    (113/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.058311347 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.056927657 seconds)
    (115/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.167699511 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.056949766 seconds)
    (117/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.159110811 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.080534365 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.100129298 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.069639441 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.219655092 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.15725354 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.083846621 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073098332 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.079845504 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.102796094 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.08351745 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.149693763 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.081266702 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.096720615 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104136149 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.157895393 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.081058677 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.079304054 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.154054722 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.075525204 seconds)
    (137/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119189363 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070118786 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.07740566 seconds)
    (140/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.195423287 seconds)
    (141/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.058131436 seconds)
    (142/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.073093481 seconds)
    (143/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.090792598 seconds)
    (144/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072088522 seconds)
    (145/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.071432533 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.098287865 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.072316646 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.078031736 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.078857523 seconds)
    (150/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.151912356 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.071184093 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.079294074 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.054597602 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.185660798 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.196227019 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.057069228 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.083930966 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.081514225 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.056833491 seconds)
    (160/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.097886185 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.101427645 seconds)
    (162/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.081653604 seconds)
    (163/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.058414767 seconds)
    (164/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.056906292 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.129916277 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.210368733 seconds)
    (167/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.127804406 seconds)
    (168/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.12008706 seconds)
    (169/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.087011203 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.167746023 seconds)
    (171/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.082456213 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.059030118 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.124872617 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.166745095 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.076714683 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.078970375 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.06006116 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.058197175 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.056602526 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.088908044 seconds)
    (181/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.074219438 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.079730579 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.081678574 seconds)
    (184/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.078209017 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.218511473 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.072110515 seconds)
    (187/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.079403873 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.071723914 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.056951705 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.075506757 seconds)
    (191/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.069338699 seconds)
    (192/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05689169 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.157033844 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.219549651 seconds)
    (195/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.08332326 seconds)
    (196/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085396035 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.070070066 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.225197132 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134671634 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.127662083 seconds)
    (201/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.058437891 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.07192396 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.058882785 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.083809646 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.081316738 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.072806081 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.079791264 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.187326565 seconds)
    (209/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.058890086 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074137292 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.073427137 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.080397084 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.101198419 seconds)
    (214/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.058446191 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.142278488 seconds)
    (216/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.077159076 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.07770118 seconds)
    (218/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074818685 seconds)
    (219/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080538516 seconds)
    (220/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.05692314 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071312918 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.072244244 seconds)
    (223/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.122851977 seconds)
    (224/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.059304551 seconds)
    (225/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.077136806 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.056791372 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.159762965 seconds)
    (228/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.076399282 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.150672925 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.057116566 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073284994 seconds)
    (232/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074373086 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.057143185 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.083127291 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.073555147 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.134602621 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.072787387 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056956995 seconds)
    (239/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.080988844 seconds)
    (240/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.155674047 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.070234438 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.077746885 seconds)
    (243/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078950193 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.073737907 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.057346642 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.072809899 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.071721312 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.16822069 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.073019909 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.057210218 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.079162382 seconds)
    (252/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.194217975 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.058233971 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.082597506 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.085696763 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.118259231 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.080541488 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.144300544 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.100893639 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.058566956 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.059199796 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.147531221 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.077888672 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.102117342 seconds)
    (265/309) benchmarking ("sort", BigInt, false)...
    done (took 0.203552581 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.120862506 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.195777031 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.07367413 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.084003262 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097114532 seconds)
    (271/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.058168274 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.05709984 seconds)
    (273/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.059058333 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.078098294 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.071799973 seconds)
    (276/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.075191075 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.08024826 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.07024711 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.209178109 seconds)
    (280/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.058234657 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.121586205 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.070661345 seconds)
    (283/309) benchmarking ("sort", Float32, false)...
    done (took 0.139822733 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139991949 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.194908918 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.079907161 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.093637949 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055940498 seconds)
    (289/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075848432 seconds)
    (290/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.055243666 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056878658 seconds)
    (292/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.056862697 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.075235792 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.078871466 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.058639596 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072147218 seconds)
    (297/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071682419 seconds)
    (298/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.057200471 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.058027503 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192633167 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.097433783 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.135563023 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.056931345 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.056145423 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.076938426 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056250861 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.056369879 seconds)
    (308/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.067354215 seconds)
    (309/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.074693693 seconds)
  done (took 33.347407148 seconds)
done (took 34.795767917 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.09263224 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.098302764 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080226574 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.098557495 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.085188085 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.081118654 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.077921173 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082878694 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.084006382 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.085972649 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.082515627 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058373647 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079270861 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.079616687 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.081074535 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096959826 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.086621203 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.08067448 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.081240389 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.071390248 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.081154892 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.072336036 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.074480626 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.060565701 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.086652765 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078863147 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.080053869 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.082024524 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.072455309 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.072946438 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.077035283 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.081266722 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.072185905 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.086940339 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.079612777 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.078227788 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.080002297 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.081587501 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071075535 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069768316 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078953445 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069629573 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077232245 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078686939 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.076137712 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075701468 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077188228 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081249931 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.095312009 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071603746 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.080164143 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.080190579 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080058949 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.076895385 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073587543 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.077302789 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075401508 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095787165 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.07875794 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072688772 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078371394 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079074038 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.075248052 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.077102037 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.079111577 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.081667613 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.080267602 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.075800843 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078687597 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.075672432 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.069380403 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076856039 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072942131 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.069409992 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.080225617 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.082342918 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067983369 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.075709658 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076935093 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.075169172 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068371425 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071285293 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.074350426 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.076604192 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070908316 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.057558431 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.073713548 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076274781 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.068275828 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07753593 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076237329 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.077600099 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.071435867 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07997642 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068845082 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.075072598 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.070006725 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.069578747 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.070985906 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.075094673 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.069221421 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071162178 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.079065269 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071020429 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.07598047 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082931324 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.069107863 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.07613354 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.068622007 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.068884417 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082780465 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078917073 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.069865264 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071716336 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.068420123 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.076823922 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067863423 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068896808 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.069671881 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.069623779 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.075651654 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.071149938 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.07260388 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.078290778 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.084039396 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068310593 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072603936 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070501771 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069464059 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.075593247 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.203641362 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070200306 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.07276794 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.067813345 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.074996692 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.073246308 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.080372652 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.075372433 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078485877 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.071492312 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.078949057 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075542471 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.075879837 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075387999 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.068162062 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.062901294 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072638824 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073892233 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.073596046 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.072581176 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.073188201 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.072373332 seconds)
done (took 13.276010421 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.07214622 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.149345516 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.105910409 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.104164006 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.093359432 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.073582958 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.083817711 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.107879887 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.075024011 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.109166585 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.096628288 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.092615767 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.121834731 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069754307 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070207216 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.076045715 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07436879 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.088717912 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.107934084 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.093499345 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.120007433 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069132933 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.096889276 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.093455842 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.092592241 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.098236554 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070814404 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073943111 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.073600785 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.1060079 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.093995501 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.073839665 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.071044941 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.103409861 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.098062784 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.088032828 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070248865 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.087716427 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.070589896 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.069499824 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.071758077 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.103685328 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.084450085 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.085076152 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.074184765 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.080614422 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071036028 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.087937303 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.094132788 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.083258764 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.09006524 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.105682161 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.072525896 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.088298336 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068293385 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.090413894 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080571535 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.072559994 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.07005321 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.078082208 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.070554751 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.073412845 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084815495 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.084164317 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074794852 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.089379024 seconds)
  done (took 7.216209114 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.090528114 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.09708322 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087594493 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.088376307 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070339608 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071675814 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.071147507 seconds)
  done (took 2.114895822 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071714518 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.093712577 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093788411 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094583297 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085558614 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.092401143 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080447496 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070102317 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.093031552 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072028138 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.092244201 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.105929265 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07376238 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078468063 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.095530445 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.070135106 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.095273817 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071018102 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074257445 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.095732496 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073109618 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100476676 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073775569 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070786032 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085229848 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.070526836 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119797464 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075095167 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072305859 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.075823057 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070544022 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.116768911 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.087960221 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.082042384 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073981386 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088674346 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.088639853 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072197214 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.091075946 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.082643997 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.088066271 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.073385806 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.074868296 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.07137095 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.078780956 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.084567919 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.075131664 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.074048621 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.075911661 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.094546074 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.073918548 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088805622 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.077042737 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.079265226 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.075967207 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.080551595 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084393055 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.074333499 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.094873146 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.075105554 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.089197897 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087463399 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.084956561 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087635766 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073556087 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.085400682 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.085185759 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.073291067 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073208958 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074491118 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086940388 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.069783342 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.072512544 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081671236 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072885052 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094856978 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.09474065 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072611774 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.084903354 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071544076 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070727886 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071028873 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.09451561 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075880491 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070418178 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.075000106 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074833471 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.069011038 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.070546996 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076943639 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.071724757 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.074828453 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.076559011 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.076719025 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076327743 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.091610758 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.076281052 seconds)
  done (took 9.402078058 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074850243 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.074026277 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07638237 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.074829509 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.074263323 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.074298142 seconds)
  done (took 2.010010043 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.0988025 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.072085438 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084347606 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076105471 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10996355 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090745489 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091833759 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082052014 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.088369331 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082991826 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.091373759 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092571899 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096033535 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076123622 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.091523152 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075717502 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091764915 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079147112 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.082672443 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076460675 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090641756 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076089786 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07657865 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.086091514 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.079836993 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075466092 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083238858 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.08735829 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.085729017 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.086075768 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.078879436 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.0823653 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.076486769 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.086056206 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.094824893 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.077552365 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078718778 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.083914767 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078765968 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.084280848 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.096004957 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079330164 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.081509713 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.0843886 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.086300783 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.07787075 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.084489488 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08677881 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.093774319 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.082291538 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082682417 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.077616733 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.081054748 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.081968533 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.076207689 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081989057 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.081198118 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.091264981 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.076884581 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.074440604 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.073408164 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.079868071 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081575917 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.080185493 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.084951378 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.080934142 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.074677218 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077342832 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076446839 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075488001 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.080693507 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07258674 seconds)
  done (took 7.512362092 seconds)
done (took 29.779427099 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542609674 seconds)
  done (took 2.064263918 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.636926296 seconds)
  done (took 2.183953918 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.544033291 seconds)
  done (took 8.089851157 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.406410626 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.511242075 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.757144625 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.138721082 seconds)
  done (took 3.396468882 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.731426362 seconds)
  done (took 2.287693292 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.237231567 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.225139597 seconds)
  done (took 2.027051957 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.387159677 seconds)
  done (took 1.935681209 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.180662766 seconds)
  done (took 2.729463714 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.266479305 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184057104 seconds)
  done (took 2.001837917 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.502295869 seconds)
  done (took 2.051104074 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.912962788 seconds)
  done (took 6.46685343 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.223494314 seconds)
  done (took 1.81452087 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.245954383 seconds)
  done (took 1.797772478 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.763449549 seconds)
  done (took 3.318342919 seconds)
done (took 43.717766681 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.088317324 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.089605669 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.089552256 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.086743234 seconds)
  done (took 1.895639293 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.08135635 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077808863 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081279715 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077316646 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.081715414 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.07690193 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.078830626 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.07986355 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.077054977 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07781308 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.076959314 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.076849642 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.079673611 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.078918592 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.075707006 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080000885 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081128035 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077535109 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.079757047 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077400703 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.074925024 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.079580164 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.079702806 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.076583568 seconds)
  done (took 3.440025694 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.082606425 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.077832956 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080655032 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076732336 seconds)
  done (took 1.879967982 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.082825956 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.096915064 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093967198 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.083081571 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.09741873 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.091272979 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073452839 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073663573 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.075785007 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082202422 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.073127058 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.101836848 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.093600655 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.082340331 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.08495119 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.070558339 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.072875741 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.092492965 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083075263 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.083544501 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.075351779 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.082693695 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.072427002 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.092983788 seconds)
  done (took 3.571036055 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091029209 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.110170488 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.085446092 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093967997 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096526139 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.06961391 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.093022855 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096034257 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.132174582 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069855142 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074843169 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.07020238 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.077592609 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.069815045 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085573733 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.113631583 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.117950522 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073699252 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.102647059 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.070610152 seconds)
  done (took 3.365653637 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.077062977 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074052616 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.072112005 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069662247 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.081740586 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.076932354 seconds)
  done (took 2.02344074 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.072554143 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.071898191 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.074172783 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.075220371 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.079352287 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.074316748 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.073054976 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.075604646 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.075539008 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.07467708 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.074423925 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.07379345 seconds)
  done (took 2.460788827 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.208539167 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.072630829 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.07365048 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.070956436 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074966523 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.070844885 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085611389 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072363742 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.096767127 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.070629336 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.071763571 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.073217614 seconds)
  done (took 2.611949517 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213192742 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08039313 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244638381 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157882231 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11630331 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121493693 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122699004 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120697185 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.148142291 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105306605 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172451978 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173209276 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112502965 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14371747 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095144841 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.103875191 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160142985 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169081043 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111601396 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171814384 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156847343 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131632228 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152710287 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107413684 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110465349 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127854623 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.076362884 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084880711 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176269944 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139024197 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149427948 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116518632 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097052165 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183013216 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178631337 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146384044 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153276844 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08930358 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.107254804 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.138894628 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206831119 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093668408 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16823765 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259285628 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.087259702 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140033884 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124474476 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.125285652 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.11062685 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094766606 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151353234 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190871533 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.144032134 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093172528 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130296396 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118935187 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.119077985 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118877263 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188277681 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168557316 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133048307 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.076567978 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11507613 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158347691 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138109444 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.113892457 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.131863061 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096029515 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140620268 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160190622 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128151433 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149485243 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.122770156 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093849268 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123690145 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145440256 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132212915 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166821658 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129192497 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.077418317 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128297015 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105963136 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085472081 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.154540542 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080088752 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179751735 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10388274 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.110703974 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.130537284 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113815121 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113329409 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164128606 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147912449 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.251108921 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.070501454 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111157038 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.126815401 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151432331 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.091780019 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114074787 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122835097 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082374825 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141784033 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.080233436 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128349388 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079741011 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129154431 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135850603 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.081869527 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128838179 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108708264 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.106563559 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138450304 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164447261 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09357424 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086638691 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17492522 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12742941 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.108971532 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149567287 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161111071 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104204046 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105731496 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156420749 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184642829 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094411423 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167587518 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111313387 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.088133394 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.093132143 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128450631 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116675595 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12933512 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086306678 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.123082644 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173200193 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.079786352 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100687705 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139484904 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083269631 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084963191 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111444034 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109218217 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.100376319 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.104088545 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.110904485 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14293931 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132346679 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113673935 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130450352 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.252881342 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178393345 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093963046 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.107681649 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110035263 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.074579685 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.140150031 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161628392 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084947762 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168777472 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.12724446 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122035172 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123133903 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088922352 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146289931 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084092133 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075093082 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151251101 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115140993 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115912586 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.155462087 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121134063 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.131224321 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.127127898 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138452604 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136080699 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.134953029 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109989839 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.092253992 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11640181 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132578199 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.078214118 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095321111 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.084739144 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109543301 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100707875 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088114861 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146549148 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12947081 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115189787 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116273446 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101962893 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152214117 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080836683 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133572381 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.123926375 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100394787 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.158518728 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156095806 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136464061 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103961541 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144124076 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.077371287 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081342687 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.095709739 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.2767503 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08838962 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088378347 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121754225 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153030055 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134182954 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141773765 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129259767 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125931685 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161113201 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.074316242 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.126273449 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151502151 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127069435 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.109394816 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095356702 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.103908449 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14660065 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11518113 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188190322 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11750086 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127652632 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157861229 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.105601181 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085263799 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108193465 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14001101 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108820522 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147447403 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103214754 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092902403 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113616021 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.07968172 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10363785 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131638737 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123429567 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138976158 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.121909564 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137784237 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082124152 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120593653 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126059154 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126868281 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.068278528 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12412696 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164480123 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099075872 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121972116 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156152082 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083549583 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.139923261 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177798611 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.295041283 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091198266 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114580618 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12576448 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133038281 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126224127 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146166045 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112685146 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143523361 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114881069 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.091096744 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.093924315 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103087375 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110753159 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.101050625 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.111608321 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.118889597 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100600768 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13757953 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107972262 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115545015 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122147444 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.104580985 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096401135 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102777301 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182668333 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124951335 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177934996 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.105193395 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.148143493 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169441865 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079731457 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083509869 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.08274061 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145021767 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08924313 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135350079 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.112483101 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123187086 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12860394 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148992414 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100512916 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.072880494 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115308953 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137996528 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130331296 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103294139 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.107876224 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17101236 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.104208571 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083251926 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1181256 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121068586 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107501065 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173646502 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.065322451 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110073549 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.225300388 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087177478 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133479734 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160287999 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084896454 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.108798899 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123976109 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117320647 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133099531 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105321449 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115030948 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.132995656 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156554606 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134128586 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093930118 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116610983 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133643334 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161151618 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110865784 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102112962 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178634693 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155474553 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.163672551 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.091856383 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117503402 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118388168 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112998022 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14180931 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088118043 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168253168 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086290771 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14153077 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10784469 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093447776 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133677987 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.113803614 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092776045 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152111553 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12204916 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087317842 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082201329 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123195041 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127252866 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110180981 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.079820924 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142616445 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077765509 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135761847 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164057981 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085206469 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108970849 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099650286 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083256463 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.258103281 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107781797 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09342302 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104848926 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177703798 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091470488 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154998972 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139278315 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117623512 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140026312 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107118497 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.644912353 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.083252314 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156143313 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121620046 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181920947 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105015429 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1221918 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113942474 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127620704 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.151965786 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109412276 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.191509495 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137927444 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120673949 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084717171 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107187924 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109466765 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.092048545 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.11214602 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117290945 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119733631 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09736516 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.120830528 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128479728 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.086530824 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102126199 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162520423 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121900551 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149070709 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145766616 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090742281 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122401067 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140744039 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084297412 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.124593009 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156101579 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109862923 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104383819 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.084887542 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103975675 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.310181437 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079229797 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165790635 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125463542 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115305317 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11797159 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.11728906 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138269319 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112598695 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1270041 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09703944 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.113376886 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120185997 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086956111 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082815772 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113223911 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117560368 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.103085322 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102569781 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.104028988 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157039483 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.076659253 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104459424 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120184107 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149707036 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180436092 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.093319677 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088446901 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124161435 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119590986 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.11726577 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125791398 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.083293308 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086349065 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.084621611 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082728825 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113351993 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118404388 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120597182 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114866254 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168079787 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.087842649 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.24429014 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100304338 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110210505 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074463445 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082830321 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100817839 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103950788 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112259942 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11551915 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164166723 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.10031036 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.093846448 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094917774 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07832266 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08703615 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131321845 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112726701 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.27034361 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107161298 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067313626 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114097233 seconds)
  done (took 61.600730182 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.116221769 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086483355 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.101134888 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.14926484 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.128411993 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.206653916 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158045597 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.194369604 seconds)
  done (took 2.800681804 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.076216528 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100814149 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.112195541 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.091599823 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.071357441 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.073177955 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.238533196 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.087191506 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.071164473 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.101938827 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.083461887 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.07371584 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.44749385 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.073493446 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.075395723 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066256051 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.071588046 seconds)
  done (took 3.568129074 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.423457672 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.627092855 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.36488284 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.081128534 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.94840838 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.099146472 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.159206578 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.14316525 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08251616 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.529349693 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.415223881 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.137521907 seconds)
  done (took 18.673946309 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.090800243 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.08260812 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.099048132 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.097899505 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.085242185 seconds)
  done (took 2.115314348 seconds)
done (took 111.613815851 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.089981906 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.625169372 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057547654 seconds)
  done (took 2.37547171 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092279771 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.094308798 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.094321982 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.09201862 seconds)
  done (took 2.042138467 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.082358925 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.084455447 seconds)
  done (took 1.828430397 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.24968487 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.179871165 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.10613564 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.091176241 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.087650892 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.087397397 seconds)
  done (took 1.9350051 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.079062029 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.083138874 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.080373223 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.084535519 seconds)
  done (took 1.990119055 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.085318306 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.059081406 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.060986924 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.064692764 seconds)
  done (took 1.932958187 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.096265273 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.08750825 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.086620455 seconds)
  done (took 1.935202899 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.111141153 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.09376256 seconds)
  done (took 1.870197449 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.089765226 seconds)
  done (took 1.755519184 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.104236056 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.109708155 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.141905876 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.121282778 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.15213819 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.119105707 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.093068493 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.093939227 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.084128346 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.095157586 seconds)
  done (took 2.780099125 seconds)
done (took 22.730445313 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.087223272 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.385494759 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.368775775 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.099057879 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.677831563 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.363980012 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.012584876 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.103407702 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.125904066 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.074907011 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.093750168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.656051686 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.004287889 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.33215311 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.988878357 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.334096306 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652299398 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072737705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071819266 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072264667 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.989820082 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071898205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071971882 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072653918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654411966 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377479382 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.07305875 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.334279355 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072649271 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074612962 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.36016436 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072881329 seconds)
  done (took 16.452316735 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07780093 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.132079155 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.08161143 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.094645481 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.078094007 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077237006 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.078912976 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.076579102 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150568869 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.076018244 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094734173 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.075442691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.079285313 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.076778279 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.095379813 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.075159343 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.075382138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073112308 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072718159 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072279413 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.092048226 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.07213425 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072822226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.073089026 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.073854516 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.086051621 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073380633 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072822524 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072562753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074926957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07644966 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073412086 seconds)
  done (took 4.306852151 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12510223 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.136884028 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.082284182 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.114075751 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121960988 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.077741072 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.155864618 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.104014866 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.138343345 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.07603582 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.094527607 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.076493049 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112809429 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.075495349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.097556197 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.074656432 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073587602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073434984 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.072733372 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072817297 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093138258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073490723 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.072785049 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074170328 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072915424 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087192991 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.073100888 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.073703251 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072988017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07524486 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076115226 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.073362687 seconds)
  done (took 4.552562027 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.079708416 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080662016 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.088496045 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.089544318 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.074964802 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.076550508 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.077813576 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.074348973 seconds)
  done (took 2.323897614 seconds)
done (took 29.307979274 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.087934097 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.075791481 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.081310008 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.089376733 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.079261085 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.083185048 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.071398413 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.0803717 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077665847 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.077738155 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07968023 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071745075 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.075906819 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.071123108 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.078665559 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.072946884 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084373337 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.077500376 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084130626 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085041669 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.074723972 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.078036827 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07997177 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084013428 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.084105105 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.083964264 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.082487907 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.077792412 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.073104955 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07553855 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082433299 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089435729 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.076540573 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.087273247 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.07546179 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.075693893 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.079485115 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.075347759 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.088212528 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.084707012 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.077551393 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.084422661 seconds)
  done (took 5.01011527 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.095350122 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.101639208 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.092195486 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067837114 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.071182962 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070729824 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094915318 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.063907401 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.064777885 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093512831 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059495378 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.064213336 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.067569042 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.057357772 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065195267 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.061602448 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.066486319 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.060142951 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.064701443 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.064106374 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094552869 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.057659575 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08312753 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.067941967 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060407797 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065840742 seconds)
  done (took 3.566790394 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.082311851 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.091128752 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.095902687 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13740163 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.110715624 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.084400603 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084345993 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.101641418 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.094460841 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071836198 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.075861885 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098513832 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.095292701 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.079611177 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.072403889 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.091354441 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.089393086 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.073845528 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.078124176 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.099959923 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.092453365 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.091529776 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.101354537 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.088274005 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.071529685 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.074865283 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.075812301 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.086071352 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07603911 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.082604336 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075201978 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.076703785 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.074666044 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084270177 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.076165702 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.073718507 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.100414782 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082339767 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.08404532 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.072691243 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.08077693 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.074100081 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09838363 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.133798715 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071830677 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.078626874 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075945056 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.08205515 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071250835 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.092963099 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084985887 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.07166429 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.075076257 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071232306 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.071311338 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075484345 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.073722244 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.075082981 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081720265 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.078401519 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.097251808 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.076903428 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.088654811 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.071525368 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.080203741 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.071197565 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.073397743 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.071047511 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.101664552 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.073889076 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.11673689 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073734838 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07323752 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.081408294 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.08013896 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078633241 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07197254 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089034962 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.085118354 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077092732 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.080858876 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.075450244 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074780677 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.096628407 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.074293842 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074040152 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.073254867 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077843483 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.074681246 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.073655949 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086095746 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07214154 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075269858 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089384971 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.07173742 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.073250649 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078387863 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.07662756 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072000561 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083488886 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.076581333 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072840523 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.082317287 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073130926 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.075357456 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.085285567 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078692542 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.071367271 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.076289624 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077632194 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.072568051 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.073547799 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.075414676 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.073745725 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081362023 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.078623757 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.076917847 seconds)
  done (took 11.245541901 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.179525239 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.166922182 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074677628 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.15686036 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.081087168 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084222265 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.157936869 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100166687 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.072440309 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.073169526 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.073685713 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.116417049 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.112218928 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122122947 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083528316 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.072091112 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.089540689 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.121363261 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.160311293 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.155211496 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.090157487 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.082109314 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074363959 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.073600197 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074699542 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.083299383 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.091375372 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.083696077 seconds)
  done (took 4.627635749 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.08813959 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.115441538 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.081971111 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.097303388 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096896313 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.072788404 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.075099724 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07508526 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086784223 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083415547 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.072273955 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077726135 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.079892349 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.07607615 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.073493139 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.080546623 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.079755592 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.074019244 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.075878531 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078074758 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.083611197 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.098146098 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.076581374 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071708976 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.077551335 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.071898516 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.067670515 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089451079 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.073431501 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.101003087 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.070580815 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.078166315 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087688682 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.073557833 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.072592322 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.07267619 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07227049 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.072044125 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.074545836 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.070745631 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.071201943 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061812497 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.071767946 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083744183 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.08000184 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060697354 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077514688 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077854934 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.078364395 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.070472787 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.075027899 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.076022844 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.075948674 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.080397922 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.076570593 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07751278 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.073198348 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.079004435 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.082826977 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.072198835 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06968811 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.070874076 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.077307695 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069276926 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.081549972 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.077140606 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070918658 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072643511 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.074457266 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.08015998 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073269382 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.076826884 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069639658 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.074607092 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077670878 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.074159316 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.073583771 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070696983 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.072048245 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.073199523 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059395397 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072559298 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057503094 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.075467606 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.070310209 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.070840633 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.072578206 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.077183721 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084168623 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073712453 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.078398214 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073546175 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071464105 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.075915764 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.064307195 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.074931068 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.084499305 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.087472052 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.072511693 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.070397527 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08652736 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.0774543 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.071352454 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.060206473 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077184034 seconds)
  done (took 9.727993501 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.099257467 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.078348416 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.092883942 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.098357064 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.094081904 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080086504 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082893881 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.073883867 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089397312 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.07912905 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.08248354 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.07280114 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.083290847 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08277469 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075144842 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083869333 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.076830475 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.091741886 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.088474227 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.072811507 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081889511 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.085736873 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.096693535 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.087861701 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.085785299 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.086817896 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.096608263 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.08373074 seconds)
  done (took 4.111758621 seconds)
done (took 39.961443088 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.777071212 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.934562261 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.761232034 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.086877583 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.020890078 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.781481737 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.925327457 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.761896377 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.044980058 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.789340992 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.037399269 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.278933686 seconds)
done (took 65.888660622 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.824706129 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.899654197 seconds)
    (2/2) benchmarking "String"...
    done (took 1.983561405 seconds)
  done (took 5.566447857 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.039574627 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.323131415 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.994915194 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.751636407 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.753052098 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.066868698 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.561002638 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.26344605 seconds)
  done (took 30.399718771 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.92882924 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.974393241 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.469343956 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.500764714 seconds)
  done (took 15.610296523 seconds)
done (took 63.213964659 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.753170516 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.790949005 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.793566656 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.731645554 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.806471946 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.757131489 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.935977234 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.981572254 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.743523849 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.732749612 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.747674419 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.219423809 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.757305518 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.924500543 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.740671484 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.752629663 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.787837982 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.233347983 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.902008506 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.758054579 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.750980014 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.758467508 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.743145167 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.75464823 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.758867398 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.739262467 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.13811165 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.743187107 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.35723662 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.736137335 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.767057534 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.066428529 seconds)
  done (took 203.846358571 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.73998816 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.640305049 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.668501719 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.774780027 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.095145381 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.91906692 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.84353423 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.169599923 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.738019483 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.7586608 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.910241548 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.733250768 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.9385834 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.678694854 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.762076769 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.830799969 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.893291883 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.937624762 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.761247367 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.890728502 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.755106799 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.749785071 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.688651272 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.878054741 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.771903788 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.79727393 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.887739745 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.75289048 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.927332616 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.853642611 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.771768714 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.739891777 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.962282902 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.609769372 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.755993301 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.765654057 seconds)
  done (took 168.026599621 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.908333536 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.740310313 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.736785952 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.736830621 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.748938745 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.736835656 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.737180482 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.86201678 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.861100189 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.35513522 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.183564824 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.787438282 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.533667258 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.735509203 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.803359686 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.732811948 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.748604473 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.734201573 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.750653701 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.765972196 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.736149269 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.737974929 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.86436202 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.744998469 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.908958532 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.740361398 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.736961692 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.742086115 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.107518106 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.733991998 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.742230746 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.995889874 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.7345809 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.738620804 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.576280171 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.962504639 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.814649714 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.73660803 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.743249175 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.737403026 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.955845817 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.736678816 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.740932339 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.740758922 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.868474874 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.733577121 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.86303116 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.738260581 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.21996937 seconds)
    (49/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.733922997 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.73869274 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.736939997 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.35287449 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.313032602 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.734262318 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.737638329 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.740377452 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.74042466 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.737970596 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.742892604 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.349322 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.810619435 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.739952103 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.741334063 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.745971039 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.738647401 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.934672232 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.735411726 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.168525039 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.799286269 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.858637068 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.862968911 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.74236007 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.805349474 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.82922187 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.736140971 seconds)
    (76/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.738229053 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.739400321 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.73926596 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.738219152 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.819284929 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.73657436 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.87038576 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.746090666 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.740340779 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.789321548 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.80793736 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.736599924 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.57100669 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.741744922 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.73982972 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.998840174 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.801718222 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.735486051 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.74026699 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.738519022 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.874383101 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.858174065 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.446667485 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.739837707 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.41285236 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.739496619 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.887784784 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.738516492 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.870909935 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.74229657 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.823979612 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.741461368 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.741345414 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.740030602 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.773367874 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.74066883 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.798701373 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.741406658 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.115042046 seconds)
  done (took 398.113408954 seconds)
done (took 773.636234067 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.399332075 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.359579985 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.464361318 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.376029613 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.353039328 seconds)
  done (took 13.626313257 seconds)
done (took 15.300624442 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.829311978 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.833040123 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.761294239 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.830435517 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.762333463 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.83199793 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.812731491 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.766237212 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.804169804 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.765692383 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.797803393 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.766533111 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.753736687 seconds)
  done (took 24.989366815 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.982197905 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.980711517 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.811299669 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.980413268 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.788007585 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.99424254 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.910893618 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.896848883 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.892555051 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.757555154 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.755076594 seconds)
  done (took 22.426171195 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.978293585 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.989975371 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.817541424 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.979895577 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.792978397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.985565954 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.909360376 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.898253477 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.898824903 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.757190098 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.755819286 seconds)
  done (took 22.443051706 seconds)
done (took 71.533387999 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.751067448 seconds)
  done (took 3.427373546 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.780861802 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.946013198 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.758922053 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.756093368 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.751033867 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.752854064 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.758728088 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.754583508 seconds)
  done (took 15.937327506 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.746950466 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.751589545 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.750381608 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.751197402 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.747317289 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.747369097 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.74960861 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.748273318 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.753578446 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.751210257 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.75267778 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.748852317 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.747943962 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.751601524 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.753654753 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.75199237 seconds)
  done (took 29.681768745 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.750680952 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.749743239 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.748581373 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.752173793 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.748377555 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.749882278 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.751040563 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.748257183 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.750471487 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.752426035 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.750827856 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.749283188 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.748796881 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.750336779 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.750478065 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.751408341 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.749090602 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.750615382 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.754372498 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.750854069 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.753985473 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.74992228 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.749906632 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.751141451 seconds)
  done (took 43.693557504 seconds)
done (took 94.415840676 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.527578193 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.42692621 seconds)
  done (took 9.634132407 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.756074873 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.753009716 seconds)
  done (took 5.24765906 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.755762648 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.752749868 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.754160553 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.753161004 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.754782049 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.753479344 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.753995482 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.753801686 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.755059979 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.754091205 seconds)
  done (took 19.2215017 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.752722775 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.753913255 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.75064531 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.759697548 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.752408132 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.751869745 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.753746421 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.7550081 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.752816487 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.754474086 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.753795907 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.750111026 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.754397679 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.751490762 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.755328816 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.751048012 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.751254895 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.751046646 seconds)
  done (took 33.235539856 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.755228516 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.754941222 seconds)
  done (took 5.190682464 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.75134063 seconds)
    (2/7) benchmarking "second"...
    done (took 1.751483444 seconds)
    (3/7) benchmarking "month"...
    done (took 1.751572338 seconds)
    (4/7) benchmarking "year"...
    done (took 1.750574939 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.751608564 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.750363538 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.751639675 seconds)
  done (took 13.939222936 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.755039732 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.915654216 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.984124264 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.408865528 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.755979574 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.757517844 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.707008532 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.758476318 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.7594356 seconds)
  done (took 19.484272351 seconds)
done (took 107.632545191 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.561848752 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.75043954 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.994416898 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.813767397 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.765713108 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.094894305 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.752259029 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.054968844 seconds)
done (took 42.469617066 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.76212779 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 4.013233595 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 4.039018297 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.77594409 seconds)
  done (took 16.509315936 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.736087769 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.280573482 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.784818035 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.339555604 seconds)
  done (took 19.85526276 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.120228584 seconds)
    (2/2) benchmarking "read"...
    done (took 2.102932126 seconds)
  done (took 5.909997529 seconds)
done (took 50.719303572 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.755435365 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.755928256 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.754225816 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.755972173 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.75351447 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.754170828 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.755612465 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.757534511 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.756244219 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.756631301 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.757394152 seconds)
    (12/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.753927428 seconds)
    (13/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.753485516 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756914631 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.755324013 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.754107807 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.756018952 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.753612619 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.757248466 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.754031095 seconds)
    (21/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.754142402 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.757970322 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.755922983 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.754937352 seconds)
  done (took 43.814193565 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.756609329 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.756074567 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.758094961 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.759769817 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.754836162 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.758333053 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.758001583 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.754286189 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.759023166 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.75710031 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.754324666 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.755571717 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.757586134 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.755569801 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.7612842 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.754509119 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.757848669 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.755663882 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.756541039 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.755488966 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.763034285 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.75513932 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.756817566 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.757602037 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.757276624 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.756987284 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.757962124 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.757106521 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.759959733 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.755934502 seconds)
  done (took 54.398907759 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.764637327 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.765997724 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.758885393 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.760129532 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.758354637 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.758914783 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.759820815 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.759115151 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.759459463 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.759240809 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.758713874 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.760811298 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.760066764 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.759770463 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.758498697 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.759391638 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.758949228 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.761462956 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.76055395 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.759367756 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.759942868 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.760337844 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.759915492 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.759926882 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.760337517 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.760083071 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.759740994 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.760133219 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.759753838 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.760394406 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.7599483 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.760303088 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.760437801 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.761464587 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.762386101 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.760053071 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.764126633 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.767683444 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.761112464 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.760183305 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.761630299 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.760601881 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.761949924 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.760546689 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.761270403 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.761521164 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.76154088 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.760019188 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.761095007 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.761776175 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.761360636 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.761899439 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.76007232 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.761712463 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.760603756 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.761340472 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.762084095 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.763032885 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.762723759 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.76199973 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.762748111 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.761550181 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.761350309 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.762813904 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.763223111 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.762190104 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.7626811 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.763281105 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.764559433 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.76298872 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.76351891 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.763464516 seconds)
  done (took 128.491274444 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.76274397 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.760051517 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.759399311 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.759699965 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.760994098 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.76131844 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.760117598 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764461381 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76032941 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.761598734 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762294251 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.760175166 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761090333 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.763202778 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.762880805 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.760344684 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.762348803 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.759416894 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.763566535 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.763851151 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.762763837 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.76063984 seconds)
  done (took 40.442547733 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.763658476 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.765572928 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.761518317 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.762880131 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.760310387 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.7636234 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.763637623 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.764261254 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.76446188 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759560703 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.760436925 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76384023 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.76256277 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.762107928 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.762323066 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.762629673 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762764704 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.762276306 seconds)
  done (took 33.418552825 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.761533999 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.761612903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.764201953 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.761135695 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.766673545 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.764434285 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.761279775 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.764396683 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.765417451 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.762159999 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.767570489 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.764034584 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.765185856 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.762084687 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.764403306 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.762030275 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.766131849 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.761294702 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.765157427 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.762368584 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.76334173 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.765687837 seconds)
  done (took 40.494781992 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.764982468 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.765119788 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.763225155 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.762182844 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.765080654 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.765232321 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.765123958 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.763628324 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.765059082 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.765414245 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.764079559 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.76501604 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.763082789 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.762863476 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.763314444 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763886986 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.76616905 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.763999014 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766398561 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.763068326 seconds)
  done (took 36.978984997 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.768889406 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766871877 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.767446431 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.766618715 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.766823811 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.76643767 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.769046532 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.767243669 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.767186808 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.768021697 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.767816301 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.766923756 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768028004 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.768147637 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.768251866 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.76796461 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.76742083 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.771856815 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.768864366 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.768499948 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.769080949 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.768469106 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.768279656 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.769278959 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.769152532 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.768995389 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.76885026 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.768093347 seconds)
  done (took 51.201447486 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.768813311 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.768336592 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.765162053 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.764616043 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.765530589 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.765854372 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.764886915 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.764854918 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.766922717 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.766236852 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.769269913 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.76795827 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.76823899 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.768085352 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.768178695 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.768338122 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.768589998 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.767037432 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.766467577 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.766070579 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.76847902 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.76829654 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.769458514 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.765385846 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.766051985 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.768934779 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.765122169 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.766906607 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.768871042 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.767016411 seconds)
  done (took 54.708426825 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.787550835 seconds)
    (2/2) benchmarking "in"...
    done (took 1.787545403 seconds)
  done (took 5.268754821 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.76572949 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.770422227 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.769426487 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.767587084 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.766219826 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.770662709 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.769893425 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.767506379 seconds)
  done (took 15.8427012 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.770521172 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.76924645 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.771118773 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.770875612 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.770978655 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.770606177 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.776006082 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.770643772 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.771500591 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.771927787 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.776538126 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.778589396 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.773001932 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.771106884 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.770698071 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.7722558 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.77054434 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.772130065 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.771066005 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.771301672 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.770579021 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.773797471 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.771760229 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.768128868 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.772903629 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.780206308 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.775272663 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.771521651 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.772150047 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.775286862 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.771484722 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.7676858 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.77166547 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.773491095 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.77212168 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.772080633 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.780261127 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.771512236 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.776414987 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.771475087 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.772326043 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.76969551 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.772446402 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.773333813 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.774453691 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.773375926 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.772983074 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.769297761 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.772349913 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.776489277 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.777039007 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.771981147 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.769556654 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775869304 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.773868681 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.780169734 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.773992364 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.775299247 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.782143345 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.782224819 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.785301376 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.780993174 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.774999874 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.774237158 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.781928636 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.795728836 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.778897981 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.770448195 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.770474549 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.773121448 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.779104936 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.786208959 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.782416662 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.775093483 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.773932416 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.777685297 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.773579017 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.773813753 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.780556591 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.77711284 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.774015976 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.776994858 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.782861028 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.796322573 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.775331091 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.775421601 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.77665363 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.774525363 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.77447709 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.783685041 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.775266227 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.77440094 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.776240392 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.775087052 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.776479729 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.777678922 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.773424105 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.775411792 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.774653244 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.775807944 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.775900404 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.778211626 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.783077703 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.776651895 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.774860215 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.780686145 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.776191041 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.775256009 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.78254304 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.779441856 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.776327718 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.775842525 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.782255409 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.774063197 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.779862078 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.783785959 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.776472386 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.777654921 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.777467049 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.776101069 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.78699 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.800439754 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.777568483 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.776401194 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.781402704 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.789003685 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.777283519 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.780409701 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.776907464 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.773716598 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.773450322 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.779645221 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.776643882 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.777646635 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.77819187 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.777915563 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.773318156 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.77802447 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.776690254 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.777452781 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.779440434 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.777767491 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.778810975 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.781818303 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.777285219 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.779128013 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.782724015 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.777427789 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.780598176 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.778714533 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.775439752 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.778443346 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.777818104 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.777556337 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.779953274 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.777541106 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.777462945 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.778745799 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.778639696 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.779174501 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.778347203 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.779051491 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.781525174 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.779650805 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.782059897 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.780968536 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.776894993 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.778194965 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.779518 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.777723881 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.779236641 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.781253597 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.781600793 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.786743183 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.7797428 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.780833986 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.784595093 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.779173446 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.779468544 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779771803 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.781964682 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.787072996 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.782439864 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.784361532 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.779726624 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780312237 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.779538566 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.78013758 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.779652481 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.779899199 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.781967095 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.786853748 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.792954741 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790304534 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.780317684 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.78298835 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.781485531 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.783961698 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.784529398 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.781002912 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.779568339 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780850641 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.779558845 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.780816139 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.782906223 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.781545644 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.779140116 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.781367055 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.780115752 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.780830989 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.780695422 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.782275114 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.782836022 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.778685793 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.781911887 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.780849592 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.781657012 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.77933892 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.78004548 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.781063478 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.781446603 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.783457674 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.787584155 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.778889244 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.782897655 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.782564177 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.782703156 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.781117967 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.782038446 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.783903575 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.782167343 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.788406511 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.782870598 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.781344022 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787568819 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.782565718 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.784472453 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.785556366 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.782541327 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.778179886 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.784624593 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.790892162 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.782340275 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.78336028 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.782772891 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.78258641 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.781712698 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.788226062 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.779514884 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.782566052 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.782355745 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.784530777 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.780963837 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.784626948 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.783571779 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.784119959 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.783945667 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.783225689 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.783650233 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.78558326 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.783956823 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.783086686 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.783297475 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.785513612 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.791398056 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.786936108 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.783769415 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.784855673 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.784026567 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.787504948 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.784603458 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.784406948 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.784867596 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.794939872 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.793448063 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.790429998 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.785672543 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.785159291 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.787933722 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.78578947 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.787721028 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.786394782 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.785039905 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.785547402 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.783258477 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.782096853 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.786073104 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.784437695 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.786657217 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.785193193 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.788219249 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.785215204 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.784400153 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.785289583 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.78512844 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.786377304 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.785230771 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.784903424 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.787324166 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.787105073 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.784915387 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.784820932 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.790610528 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.785775913 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.785913747 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.785632877 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.785727282 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.784411294 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.786103266 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.785384174 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.789306219 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.795094268 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.788551502 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.793918126 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.787484888 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.794745624 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.786603551 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.788606789 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.793228919 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.783674423 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.785598586 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.787088929 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.786512141 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.790815534 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.786894908 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.786963174 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.790728687 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.786761497 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.788987325 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.786036135 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.787606675 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.787810588 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.786703249 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.794460122 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.788334633 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.790890831 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.790599378 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.784858651 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.78726699 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.788298206 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.78710029 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.791329651 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.789094815 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.788190547 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.787163521 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.788130083 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.787123353 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.788614082 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.786924488 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.784051755 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.788405495 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.793631569 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.789907501 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.792234601 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.787526936 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.794456329 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.788861934 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.794421445 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.78901845 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.788860314 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.789070907 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.79006285 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.790309381 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.787666153 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.789601112 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.789574941 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.78919542 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.792229169 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.790086413 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.790813973 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.790129485 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.789139192 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.789826562 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.797953221 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.810887153 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.790081847 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.79262173 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.786229676 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.790737678 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.795769393 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.791762258 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.788882322 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.791002112 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.799319862 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797432988 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.790588463 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.789734106 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.789835325 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.789849847 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.790170027 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.789744672 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.790695109 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.78902766 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.790911139 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.789526728 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.794251827 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.789915368 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.792620766 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.792333298 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.791567031 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.800267678 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.791705524 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.791148367 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.791041143 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.790851981 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.791413483 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.79260779 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.79192318 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.791285877 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.790635647 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.791323682 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.797943374 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.797262199 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.794120278 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.79080537 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.791817625 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.791437348 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.792111921 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.793162168 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.792307977 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.792093417 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.792050957 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.791852876 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.791709076 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.791094659 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.791319747 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.792808562 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.791709467 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.795124186 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.798792086 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.792595757 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.790333975 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.79254119 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.791900858 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.791194547 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.791994028 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.799654083 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79553179 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.802545024 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.800205983 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.797182888 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.793729147 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.79500718 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.801626651 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.79231729 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.794521336 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.793619392 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.796172055 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.794282935 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.797425289 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.79523824 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.79901481 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.794491467 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.793681704 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.79972568 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.794772423 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.794048859 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.794470768 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.796450357 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.794153305 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.789905721 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.794018893 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.79331028 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.799297748 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.795869808 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794278349 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.795478726 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.793503657 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.794421133 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.798397479 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.79366654 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.795996466 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.790820004 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.795524606 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.794180205 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.794710354 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.79212254 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.794593373 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.794473087 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.797002398 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.801202311 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.79155167 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.797323489 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.795562979 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.795250724 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.795636824 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794976559 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.791108965 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.791848825 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.795008172 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.794419572 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.795536081 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.798240384 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.795203271 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.79558068 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.796038161 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.794858524 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.798365831 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.805903376 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.803012865 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.79303142 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.796928615 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.796695129 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.799135131 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795078399 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.795842276 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.796817072 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.796684685 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.79590758 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.796516236 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.795660797 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.798674966 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.813809573 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.796096548 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.797270784 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.797976369 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.80007146 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.797433048 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.793775881 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.797335712 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.798155437 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.798722333 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.803522099 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.797833595 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.802108853 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.796972138 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.797764352 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.801280761 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.800882594 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.803999979 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.799034422 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.797278387 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.798944271 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.801347096 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.813541359 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.798101519 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.806857545 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.824607438 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.798395884 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.798156309 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.797204023 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.797114643 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.798539922 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.79893765 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.798491791 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.798078844 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.798019887 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.799044878 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.799536536 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803615299 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.799569448 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.799071491 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.798409078 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.797932679 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.798650239 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.794765851 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.79997599 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.797959811 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.798726206 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.799096623 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.80003073 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.798645815 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812862906 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.80874602 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.798556439 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.799610855 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.798159634 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.803313252 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.801871598 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.810608354 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.807690974 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.79983232 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.799824822 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.802322062 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.799513316 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.797137974 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.799971643 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.800191994 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.799639174 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.796242903 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.811300951 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.807822736 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.80533025 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.800464583 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801346178 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.801888158 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.799567942 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.80021552 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.800152338 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.803040755 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.799954253 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.803120614 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.800101959 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.799052236 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.802614382 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.808876422 seconds)
  done (took 1066.880518398 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.798806157 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797668679 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.797480925 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.797863548 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797720286 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.798440098 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.79832984 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.797917068 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.798057224 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.799482316 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.797092373 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797177918 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.798611473 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.79833791 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798387985 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.800019862 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.798214684 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.798757968 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.798620819 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799226159 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.799253096 seconds)
  done (took 39.490469916 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.8014892 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.798910333 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.799429512 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.801546552 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.799460002 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.801190487 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.799912773 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801573853 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.800990693 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.799929827 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.801829993 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.802293127 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.799768053 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.799533405 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.799061973 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.802574385 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.801798886 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.798981848 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.802437483 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.799131115 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.80292262 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.799790612 seconds)
  done (took 41.341666726 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.803247469 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.80234459 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.802351076 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.800385108 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.802928682 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.799062997 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.803633969 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.803109912 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.803330953 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.802807026 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.801776742 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.80390879 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.80940848 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.808593606 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.805058821 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.802295627 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.946124467 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.803981166 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.804862606 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.804031018 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.801439805 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.8083485 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.802016074 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.802157158 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.802405729 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.804261796 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.803915586 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.803393587 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.805593688 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.804821477 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.808991454 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.804911756 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.803721874 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.805814165 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.803695786 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.805566566 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.808619804 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.80602982 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.802126739 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.80447691 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.813675058 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.824651671 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.805977624 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.81034188 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.804965334 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.805325386 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.807174199 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.812882799 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.801336193 seconds)
  done (took 90.319901273 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.804574144 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.804785461 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.802029504 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.805599062 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.805658389 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.805778014 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.806061143 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.805460617 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.802763577 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.803400175 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.804467798 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.80259075 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.801837848 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.805320709 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.805833921 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.803004244 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.801342813 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.80195417 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.80122362 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.801830465 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.802580146 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.805130305 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.8054815 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.802268616 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.805929397 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.803058002 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.802231255 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.806823669 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.803560486 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.802109951 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.806095181 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.805652095 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.806611184 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.803112667 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.80365417 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.806623134 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.808128729 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.805145896 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.807560995 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.803655677 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.806614211 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.807117719 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.807325233 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.807179512 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.80359775 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.804067203 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.803434469 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.804711597 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.803702957 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.806972096 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.807029759 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.80443753 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.806818208 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.804851561 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.806693033 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.806483519 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.804238481 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.803704473 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.807418859 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.804418853 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.804388053 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.808438008 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.804506013 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.807295655 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.806872556 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.804342752 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.803994639 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.807035909 seconds)
  done (took 124.461441772 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.807860063 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.809110688 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.808586658 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.808095268 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.808477156 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.808893132 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.809403679 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.808206533 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.808383285 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.808003104 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.80822206 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.807944178 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.807970896 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.808201302 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.807688835 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.808762581 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.809365128 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.809487291 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.809473257 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.809010936 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.80890819 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.808725182 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.809441444 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.809169281 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.810993865 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.809463309 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.808580018 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.809806943 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.809699268 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.810151059 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.809999402 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.809434512 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.811279998 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.809771799 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.811307905 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.810476056 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.810696152 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.810411999 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.810771285 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.810329292 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.810329663 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.811937732 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.810527796 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.809419421 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.809199687 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.810951594 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.810580033 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.812543457 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.809678688 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.810184887 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.810880161 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.811043636 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.81055189 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.811802419 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.810670285 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.811123578 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.811120251 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.811418221 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.811139477 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.810807428 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.811191815 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.811621687 seconds)
  done (took 113.94381348 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.810870443 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.81019765 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.80773231 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.809213425 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.810773945 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.807720062 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.810865547 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.810407388 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.811404085 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.812163655 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.811403643 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.808718863 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810675374 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811261711 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.808569345 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.810117234 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809353776 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.808753463 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813152447 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.80904584 seconds)
  done (took 37.937622178 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.80970966 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.812818812 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.809349591 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.810159524 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.812969393 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.81064181 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.81257354 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812795104 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.810242091 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.811801883 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.812864744 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.811775972 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809207614 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.81009786 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.812958074 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.809772401 seconds)
  done (took 30.71746207 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.809679974 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.813044771 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.812582812 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.813058903 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.810365774 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.810425016 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.8128867 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.810011452 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.809476908 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.812743926 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.81343163 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.812661966 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.813034487 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.813500465 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.810310843 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.814199816 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.811831082 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.811334304 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.81418643 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.813869295 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.811773506 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.811410093 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.813549939 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.814187309 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.81197975 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.811842315 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.811132782 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.81170992 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.810801562 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.814453257 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.812701184 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.812605312 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.812033906 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.812668163 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.81443279 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.811826792 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.815456832 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.815759987 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.816212526 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.813938864 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.815371444 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.811891501 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.814285022 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.816557511 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.812379324 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.814586011 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.811684463 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.813393126 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.811974163 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.813938897 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.814821144 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.815398946 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.815831658 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.815945205 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.816862803 seconds)
  done (took 101.45751031 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.815304275 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.816254739 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.812063394 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.815394469 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.81708866 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.813429467 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.81551498 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.812393621 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.812986351 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.816850172 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.814079993 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.815857134 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.814202476 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.816666781 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.81486883 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.816736461 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.812496405 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.812582574 seconds)
  done (took 34.404696152 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.813313462 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.814683577 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.816851935 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.813459699 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.814259971 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.815607656 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814150778 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.81789464 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817282315 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.814782021 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814470104 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.818490697 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.816557995 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.817211052 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.815496637 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.81476415 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.818255187 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.817712342 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.81487013 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.814337438 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.818120737 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.81736579 seconds)
  done (took 41.691061158 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.818434256 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.816818057 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.832609833 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.837639434 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.838638884 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.853270552 seconds)
  done (took 12.739470494 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.814125957 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.816996476 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.816008148 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.817841099 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.818017869 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.815919186 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815625947 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815021946 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.818496318 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.815148455 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.815639676 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819071307 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.818767191 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81519252 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819330239 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819260934 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.81599613 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.81532308 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816655171 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819158328 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.815504274 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819061553 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.816660899 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816387229 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816809149 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81605169 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820201789 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.817012525 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.816685077 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819929359 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819143161 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817290225 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819797723 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.816875241 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820019318 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820487864 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.816945558 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820351501 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821003007 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.81766936 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.820326329 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819664573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820376232 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817620327 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821880039 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818230318 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818118453 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817558557 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818721857 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.820553871 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.82144248 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.817783896 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821497223 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821196031 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820163652 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.820662278 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.818859566 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.817767141 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821181998 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.818603836 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818236076 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.82056115 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.817959831 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.819429999 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821557378 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819121238 seconds)
  done (took 121.755284131 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.81809562 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.819216248 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.81777588 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.819804849 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819144289 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818398701 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.818503072 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.819756544 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819043437 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.819549041 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821893928 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819214736 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819514495 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.819243906 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821435112 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819371552 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.819169049 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.818958415 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.81903715 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823644144 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820259087 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820316383 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819982238 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820169691 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.82052965 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823882071 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.820757828 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821388693 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821863491 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.820413998 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820011084 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.821156984 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821062455 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.821161311 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.819907924 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819555681 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821143102 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.820076614 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820095833 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.823236295 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.819860249 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.825695194 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821747565 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.820545378 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.821845142 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.82096973 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821594024 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821362547 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.822077034 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.820849118 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821050175 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.821894417 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821779772 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821547738 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.822025211 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.821094957 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821700355 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.821168993 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821501656 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824400018 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.822361173 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.821668195 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.824588419 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.821824141 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.82273963 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.821601168 seconds)
  done (took 121.9251347 seconds)
done (took 2485.808067133 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.873335899 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 7.050214757 seconds)
  done (took 15.670948865 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.992123835 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.946707839 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.829876976 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.840920607 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.82596188 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.850286037 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.840658482 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.825872464 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.83144803 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.830856258 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.831646317 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.018596001 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.824952495 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.826282606 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.830885767 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.924827824 seconds)
  done (took 51.628474352 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.833738502 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.835363096 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.845148409 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.833969768 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.834161522 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.849350394 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.866058411 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.837763492 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895981322 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.845617412 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.952641841 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.843205815 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.833621449 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.903321737 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.849326372 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.849118789 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.928640441 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.911099915 seconds)
  done (took 35.302615459 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.914819836 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.831381749 seconds)
  done (took 10.509236262 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.86398894 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.874340365 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.824285049 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.833729867 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.845998192 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.82732437 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.869114259 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.826491647 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.833134414 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.862972358 seconds)
  done (took 70.218866661 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.839582667 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.835779283 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.835570697 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.833850655 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.827234306 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.826745048 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.83400487 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.830339638 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.510055847 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.869611216 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.837506379 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.839836589 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.832437869 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.835775997 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.832144124 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.858155591 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.933430352 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.831761627 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.832324996 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.84053574 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.83562693 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.885997851 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.851101311 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.838105427 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.865290227 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.509043949 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.84160184 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.839850429 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.922351375 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.831458701 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.834590298 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.834258642 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.835333557 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.180617968 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.110462376 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.831878106 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.847175475 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.842917395 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.831849259 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.927021531 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.832895138 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.840550525 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.492872846 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.091172083 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.944357742 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.87894383 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.148099774 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.850701206 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.836737935 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.863542472 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.835924654 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.836701338 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.849183692 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.316636311 seconds)
  done (took 130.193417784 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.830979597 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.179792441 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.005006489 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.831424296 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.120664818 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040724868 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.829730997 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.882604935 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.829767887 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.06128706 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.087476727 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.939667206 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829470291 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.831244053 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.825259353 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.826914947 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.993845554 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.90442506 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.830416869 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.826688809 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.866592044 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080624517 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.959317693 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.829989231 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.862226153 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.049881954 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.956965673 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.940498392 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.631140106 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.831084554 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.899438653 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.830278466 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.832873988 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.827272959 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.994122403 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.927993695 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920873159 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.831611499 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.829734805 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.827941225 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.505489774 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.036537504 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.930067643 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.980461324 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.031257718 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.041627184 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.613314364 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.831868658 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.577974667 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.00146069 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.065058446 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.066272825 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.958720686 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.832502189 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.167153735 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.832069158 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.834544988 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.087830934 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.981868281 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.935033728 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.831819593 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.833546242 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.829165441 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.085663404 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.838277336 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.929591316 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.832154777 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.82750824 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.936242475 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.940497606 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.976049389 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.048497284 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.867980802 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.744252287 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.368553552 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.085317449 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.903490707 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.087798422 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.832674541 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.830025329 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.919819243 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.680094901 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.09481144 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.086436798 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.097029745 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872172388 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.564063431 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.833763998 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.067576257 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.066563083 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.086364384 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.041968136 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.078269399 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.16444605 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.83382861 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.833996163 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.055736614 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.972243955 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.833571669 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.183838977 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.070456722 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.410996594 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.859354076 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.148779453 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.969576003 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.833868544 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.478331726 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.835135146 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.061701343 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.880141127 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.834112222 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.836268627 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.059898395 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.81679366 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.83654087 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.48494479 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.90346915 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.837874239 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.074228274 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.840991946 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099518173 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.836771835 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.080642475 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.427366908 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.868410591 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.013646375 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.039747417 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.836259489 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.088700299 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.085119536 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.959215179 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.062630859 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.449961774 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.83674113 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.129463209 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.840767759 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.837183943 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.013041738 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.838918387 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.988492979 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.837643424 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.126721747 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.862111276 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.08101011 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.834707105 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.097947317 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.876753668 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.890474313 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.83604315 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.961742904 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.833239632 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.760416623 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.99365598 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.830648605 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.82622078 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.384894537 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.828822736 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.987955383 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.068105775 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.856171969 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.906642894 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.499222851 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.828820442 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.920003535 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.853807716 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.232477522 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.826275196 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.083936532 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.827113056 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.824981984 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.826113544 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.074992842 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.011621253 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.825854539 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.820738357 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.7236814 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.824362218 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.824935593 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.011406997 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.14479529 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.821068657 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.03727408 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.831104412 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.957658248 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.828120944 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.90141533 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.16400886 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.822157721 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.821280764 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.824969771 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.824200452 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.824469452 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.040023847 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.8524581 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.363615898 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.9668761 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.096018432 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.13976736 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.082292922 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.86970039 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.824000771 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.089281802 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.826701558 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.890573294 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.826947885 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.8502307 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.063063687 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.823830179 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.092094153 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.114197757 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.862163284 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.875485412 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.82788632 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.823809897 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.819505174 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.976248406 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.911915109 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.826755967 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.822815023 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.942957957 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.951433833 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.035695614 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.822221694 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.863214567 seconds)
  done (took 894.22013949 seconds)
done (took 1209.491062676 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.823540007 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.822857833 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.810837684 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.82337623 seconds)
  done (took 29.032818103 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.831216795 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.829653149 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.833473809 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.828516881 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.831026073 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.828835464 seconds)
  done (took 12.735259025 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.898247535 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.824014765 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.823603292 seconds)
  done (took 21.299005361 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.898427214 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.213342944 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.937146795 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.255419716 seconds)
  done (took 10.057842555 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.832857153 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.828545783 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.829627613 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.830964902 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.831775981 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.834661535 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.830708738 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.831535419 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.831872605 seconds)
  done (took 18.237553659 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.346853735 seconds)
done (took 97.460829374 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.146647042 seconds)
    (2/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.933896125 seconds)
    (3/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.866677064 seconds)
    (4/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.085874415 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.526568555 seconds)
    (6/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.876559695 seconds)
    (7/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.827056661 seconds)
    (8/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.388781154 seconds)
    (9/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.065219121 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.81151205 seconds)
    (11/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.993088026 seconds)
    (12/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.841607345 seconds)
    (13/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.135364738 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.889537554 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.217182711 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.177071076 seconds)
    (17/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.288627507 seconds)
    (18/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.871784328 seconds)
    (19/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.840356271 seconds)
    (20/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.972011904 seconds)
    (21/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.11415313 seconds)
    (22/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.889950308 seconds)
    (23/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.841108664 seconds)
    (24/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.451550899 seconds)
    (25/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.873567618 seconds)
    (26/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.866323007 seconds)
    (27/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.836947167 seconds)
    (28/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.856911943 seconds)
    (29/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.142778482 seconds)
    (30/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.862034128 seconds)
    (31/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.86624509 seconds)
    (32/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.853015952 seconds)
    (33/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.83970549 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.169554231 seconds)
    (35/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.060366953 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.970176778 seconds)
    (37/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.157560326 seconds)
    (38/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.868133313 seconds)
    (39/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.840139719 seconds)
    (40/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.87074043 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.85412633 seconds)
    (42/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.910814861 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.983163573 seconds)
    (44/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.942677531 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.909946442 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.110318548 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.077472722 seconds)
    (48/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.842752953 seconds)
    (49/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.825150844 seconds)
    (50/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.945250936 seconds)
    (51/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.842137561 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.26231447 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.492323479 seconds)
    (54/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.868596395 seconds)
    (55/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.849422348 seconds)
    (56/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.091373072 seconds)
    (57/309) benchmarking ("sort", Float64, false)...
    done (took 5.608822735 seconds)
    (58/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.993360731 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.922696284 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.089731074 seconds)
    (61/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.939173639 seconds)
    (62/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.844747967 seconds)
    (63/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.186761327 seconds)
    (64/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.037089316 seconds)
    (65/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.901700133 seconds)
    (66/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.522498757 seconds)
    (67/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.951885745 seconds)
    (68/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.180463042 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.814557841 seconds)
    (70/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.747405608 seconds)
    (71/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.969176884 seconds)
    (72/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.228078279 seconds)
    (73/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.085714949 seconds)
    (74/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.763524726 seconds)
    (75/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.801409695 seconds)
    (76/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.164190671 seconds)
    (77/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.033454208 seconds)
    (78/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.070359764 seconds)
    (79/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.076060111 seconds)
    (80/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.935663632 seconds)
    (81/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.011969795 seconds)
    (82/309) benchmarking ("sort", Int64, false)...
    done (took 5.549666211 seconds)
    (83/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.993312171 seconds)
    (84/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.775113075 seconds)
    (85/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.293016962 seconds)
    (86/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.878893153 seconds)
    (87/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.037746143 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.087238198 seconds)
    (89/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.872354593 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.914839428 seconds)
    (91/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.979800461 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.800363759 seconds)
    (93/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.955941635 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.025594165 seconds)
    (95/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.112390539 seconds)
    (96/309) benchmarking ("sort", Int8, false)...
    done (took 4.790559558 seconds)
    (97/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.970795099 seconds)
    (98/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.847879922 seconds)
    (99/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.091813031 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.867998523 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.150732693 seconds)
    (102/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.930842952 seconds)
    (103/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.945706332 seconds)
    (104/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.85320069 seconds)
    (105/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.30478229 seconds)
    (106/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.963637133 seconds)
    (107/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.96730677 seconds)
    (108/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.234714829 seconds)
    (109/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.944931286 seconds)
    (110/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.844374031 seconds)
    (111/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 8.142354239 seconds)
    (112/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.972820917 seconds)
    (113/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.143074466 seconds)
    (114/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.341083574 seconds)
    (115/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.079642258 seconds)
    (116/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.193841376 seconds)
    (117/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.92042558 seconds)
    (118/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.038846876 seconds)
    (119/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.651947766 seconds)
    (120/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.200870989 seconds)
    (121/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.282143344 seconds)
    (122/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.847046556 seconds)
    (123/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.984883064 seconds)
    (124/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.179229752 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.10580627 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.864392779 seconds)
    (127/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.986618375 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 2.071203812 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.865309385 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.984758753 seconds)
    (131/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.848392375 seconds)
    (132/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.206592057 seconds)
    (133/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.094025097 seconds)
    (134/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.997534385 seconds)
    (135/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.135953959 seconds)
    (136/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.06172837 seconds)
    (137/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.077624107 seconds)
    (138/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.219165979 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.092475997 seconds)
    (140/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.027383312 seconds)
    (141/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.111026024 seconds)
    (142/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.845798528 seconds)
    (143/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.748800793 seconds)
    (144/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.236055544 seconds)
    (145/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.97818137 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.821490767 seconds)
    (147/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.170904745 seconds)
    (148/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.280831777 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.950208207 seconds)
    (150/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.174260668 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.175773932 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.867841872 seconds)
    (153/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.089015554 seconds)
    (154/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.83750225 seconds)
    (155/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.137688223 seconds)
    (156/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.032683551 seconds)
    (157/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.842558819 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.942447192 seconds)
    (159/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.935612724 seconds)
    (160/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.388330937 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.204411939 seconds)
    (162/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.862714619 seconds)
    (163/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.941603158 seconds)
    (164/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.926559539 seconds)
    (165/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.839008039 seconds)
    (166/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.394061359 seconds)
    (167/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.369394218 seconds)
    (168/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.956729143 seconds)
    (169/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.536129649 seconds)
    (170/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.938519323 seconds)
    (171/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.915487799 seconds)
    (172/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.797022917 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.898773785 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.812483169 seconds)
    (175/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.977126305 seconds)
    (176/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.846044339 seconds)
    (177/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.816576851 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.075534212 seconds)
    (179/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.257685353 seconds)
    (180/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.685441549 seconds)
    (181/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.914495564 seconds)
    (182/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.847812395 seconds)
    (183/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.853903293 seconds)
    (184/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.316220398 seconds)
    (185/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.806524252 seconds)
    (186/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.22991739 seconds)
    (187/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.912964858 seconds)
    (188/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.204999483 seconds)
    (189/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.883127327 seconds)
    (190/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.886269706 seconds)
    (191/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.941945625 seconds)
    (192/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.891395425 seconds)
    (193/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.81429863 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.799540521 seconds)
    (195/309) benchmarking ("perf_sum", Int8, true)...
    done (took 2.073502525 seconds)
    (196/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.330308793 seconds)
    (197/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.879796713 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.112528181 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.910961223 seconds)
    (200/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.852636839 seconds)
    (201/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.915732865 seconds)
    (202/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.937970394 seconds)
    (203/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.794084916 seconds)
    (204/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.748911689 seconds)
    (205/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.030708336 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.951534035 seconds)
    (207/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.898948401 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.719594609 seconds)
    (209/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.30968134 seconds)
    (210/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.8526566 seconds)
    (211/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.875603245 seconds)
    (212/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.851460868 seconds)
    (213/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.923099765 seconds)
    (214/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.189662989 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.827670652 seconds)
    (216/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.791000358 seconds)
    (217/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.131833937 seconds)
    (218/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.908963524 seconds)
    (219/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.820163081 seconds)
    (220/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.037883155 seconds)
    (221/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.845137909 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.090711753 seconds)
    (223/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.028428966 seconds)
    (224/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.788898614 seconds)
    (225/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.540239376 seconds)
    (226/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.112322414 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.800188023 seconds)
    (228/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.865249474 seconds)
    (229/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.658879891 seconds)
    (230/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.97294783 seconds)
    (231/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.801898098 seconds)
    (232/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.945788974 seconds)
    (233/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.380552358 seconds)
    (234/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.813337064 seconds)
    (235/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 8.010454459 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.854428133 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.77113122 seconds)
    (238/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.717343347 seconds)
    (239/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.817122187 seconds)
    (240/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.109061965 seconds)
    (241/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.971843169 seconds)
    (242/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.30274456 seconds)
    (243/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.23246398 seconds)
    (244/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.918024021 seconds)
    (245/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.097653064 seconds)
    (246/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.815112853 seconds)
    (247/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.997819498 seconds)
    (248/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.996378713 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.427962341 seconds)
    (250/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.079919751 seconds)
    (251/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.844790395 seconds)
    (252/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.813388863 seconds)
    (253/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.795194776 seconds)
    (254/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.532462251 seconds)
    (255/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.512053204 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.79902639 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.23857254 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.900711039 seconds)
    (259/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.456932155 seconds)
    (260/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.349591566 seconds)
    (261/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.162394896 seconds)
    (262/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.919097835 seconds)
    (263/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.812637144 seconds)
    (264/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.301195615 seconds)
    (265/309) benchmarking ("sort", BigInt, false)...
    done (took 7.616203686 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.804467909 seconds)
    (267/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.884751465 seconds)
    (268/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.816784279 seconds)
    (269/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.010160657 seconds)
    (270/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.868580958 seconds)
    (271/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.799371225 seconds)
    (272/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.065028187 seconds)
    (273/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.799936016 seconds)
    (274/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.028821196 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.911644821 seconds)
    (276/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.817024638 seconds)
    (277/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.19424491 seconds)
    (278/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.917139335 seconds)
    (279/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.798476332 seconds)
    (280/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.00720903 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.892229179 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.982294492 seconds)
    (283/309) benchmarking ("sort", Float32, false)...
    done (took 5.514400734 seconds)
    (284/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.914589428 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.813796774 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.52229551 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.984119663 seconds)
    (288/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.801153528 seconds)
    (289/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.062381798 seconds)
    (290/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.184017862 seconds)
    (291/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.904054499 seconds)
    (292/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.499099705 seconds)
    (293/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.880175687 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.848910034 seconds)
    (295/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.227597634 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.845958086 seconds)
    (297/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.815847003 seconds)
    (298/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.915801421 seconds)
    (299/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.297273662 seconds)
    (300/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.822217793 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.508776255 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.866394363 seconds)
    (303/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.798149421 seconds)
    (304/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.023287384 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.837926765 seconds)
    (306/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.977178989 seconds)
    (307/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.186257061 seconds)
    (308/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.27211177 seconds)
    (309/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.962260203 seconds)
  done (took 994.376521421 seconds)
done (took 996.208643679 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.849762464 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.844428673 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.826464743 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.848548258 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.935078489 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.853871258 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.839034854 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.833284337 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.874615639 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.87684691 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.824409759 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.853371128 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.828095427 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.829217554 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.828441319 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.840297402 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.146913786 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.85826461 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.8447296 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.837764116 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.842568084 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.827218876 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.879756231 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.853631094 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.830999356 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.83036406 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.828727698 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.850651797 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.938020459 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.832461121 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.833801026 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.838334033 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.142008749 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.857552107 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.816585043 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.841140933 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.834650786 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.831382847 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.831175185 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.853682062 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.237421392 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.864880148 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.822277339 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.827641533 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.821851919 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.825899698 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.822631901 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.829382391 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833497734 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.834713006 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.225704312 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.875194058 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.82213668 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.819073883 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.831551173 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.817580329 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.821809646 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.834417827 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.837757687 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833310769 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.129313414 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.852578338 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.82091904 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.831243549 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.827846463 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.262853246 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.855637957 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.820601111 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.233195382 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.867159723 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.261102808 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.867350913 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.817963286 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.829806157 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.849216629 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.132934828 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.843562956 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.81466864 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.823416424 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.815311339 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.827764524 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.828321353 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.820827044 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.818685056 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.830424757 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.843389915 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.826099233 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.814478236 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.824348263 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.833435056 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.822263263 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.825648978 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.816671264 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.807537538 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.821697371 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.815086718 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.813370011 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.813964779 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.814262235 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.820106816 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.221713398 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.868671984 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.808274329 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.803327817 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.80713671 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.820613854 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.218041886 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.851508521 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.826551295 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.852473048 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.806696356 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.109584294 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.837550259 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.821127509 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.81212867 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.806181763 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.797436563 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.108022596 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.246280309 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.855151 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.802969217 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.794852706 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.813018398 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.802123458 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.795411723 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.113982872 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.832318382 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.807768593 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.917337512 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.809434326 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.828822303 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.797708219 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.805166296 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.825789355 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.814437327 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.828949013 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.801525686 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.814540286 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.818195195 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.797859224 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.808746067 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.811151056 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.802232876 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.804178561 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.792588652 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.824695073 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.808473523 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.810193532 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.819901173 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.9174552 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.798308892 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.104283926 seconds)
done (took 285.655218985 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.869549634 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.790614328 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.889975816 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.793491931 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.874352661 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.88034877 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.792223149 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.789635974 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.794327532 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.185488687 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.792519297 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.791377147 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.793610096 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.792660918 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.877312504 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.795557217 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.791454481 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.150509927 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.79407333 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.868296155 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.787983739 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.792627602 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.79621442 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.168114724 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.79585869 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.792192181 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.866753633 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.79598888 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.130829346 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.79576065 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.791586405 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.130888234 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.886795323 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.812439189 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.806166302 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.802442272 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.878186476 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.800650798 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.876649725 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.877200731 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.89356255 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.836811699 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.792200972 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.796606817 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.799431148 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.798576346 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.791644188 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.823253503 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.79391302 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.792016686 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.150828135 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.805877258 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.796154786 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.792771366 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.795868272 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.82832941 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.796260025 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.796899736 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.888990525 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.797731335 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.860007158 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.168354514 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.189809143 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.799388934 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.791125833 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.798404825 seconds)
  done (took 179.383481952 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.864116968 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.869853537 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.862552747 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.804181295 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.847429127 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.864756546 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.798710013 seconds)
  done (took 14.630804516 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.805473381 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.798978984 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.84841759 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.850395963 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.799818968 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.949600733 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.799019946 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.806033917 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.797000413 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.849489289 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.798098752 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.801031975 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.806088281 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.794732177 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.85158988 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.811609173 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.917851805 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.801562847 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.799934344 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.953630047 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.796333215 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.804475077 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.852604228 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.809600834 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.798793984 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.804926822 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.396574215 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.799057427 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.796255425 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.799344767 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.796285248 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.8407517 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.79892442 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.795185611 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.797969065 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.91521906 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.800180696 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.796418881 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.80256822 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.795674974 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.800675946 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.798638992 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.797825054 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.797919696 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.799136106 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.822684768 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.799914258 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.801572932 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.798450001 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.800481337 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.849008824 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.801765639 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.796565267 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.798249896 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.853909402 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.807526882 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.802258757 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.796335887 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.799457702 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.795599955 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.95341066 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.848931871 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.801904099 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.851172608 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.801591135 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.801305024 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.802505855 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.799669868 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.897748743 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.801822543 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.850212724 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.798796739 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.959813181 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.82590179 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.802849827 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.804767034 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.80496623 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.803102549 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.79425677 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.810033622 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.799917822 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.801579032 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.808508697 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.797721454 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.797978294 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.913884919 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.908657242 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.799829059 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.814759689 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.808653352 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.800265375 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.853852234 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.803538991 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.798701457 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.858247004 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.923056166 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.85812577 seconds)
  done (took 199.040055512 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.806388253 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.812598844 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.804726423 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.817898231 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.804299016 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.80448479 seconds)
  done (took 12.573941789 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.806920649 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.807403413 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.803852078 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.801426871 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.80202766 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.805527232 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.804197591 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.803450431 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.809971968 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.802175266 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.803153428 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.803486143 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.803840693 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.802300332 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.800774981 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.802854107 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.801845729 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.797927838 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.800955238 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.801228844 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.947721046 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.798112868 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.799744693 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.800650221 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.804442741 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.799203271 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.808133944 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.797015977 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.796612912 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.807128597 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.802407692 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.798412455 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.796336703 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.802833087 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.801723246 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.797027372 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.800256508 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.800036934 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.79115333 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.793489803 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.79471929 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.790528349 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.791250514 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.792347569 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.794236986 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.797451462 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.79995245 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.801802933 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.795187793 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.793099869 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.793885597 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.792189095 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.794377125 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.795077066 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.799035306 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.799040958 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.797600282 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.793334355 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.791516326 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.796044967 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.790131212 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.787676008 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.789954528 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.792440382 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.796592855 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.790775906 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.787183279 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.791737907 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.786855796 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.788861733 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.78866673 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.785282344 seconds)
  done (took 132.311678115 seconds)
done (took 539.675343649 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.927114852 seconds)
  done (took 8.63713089 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.853254456 seconds)
  done (took 8.654772629 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.403637112 seconds)
  done (took 10.167165726 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.847162875 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.848027885 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.838685966 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.837514793 seconds)
  done (took 29.155363963 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.954764292 seconds)
  done (took 8.715082163 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.851847465 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.827540486 seconds)
  done (took 15.470304588 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.009599672 seconds)
  done (took 8.774636803 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.995560422 seconds)
  done (took 8.783873628 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.84217383 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.857267791 seconds)
  done (took 15.474235163 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.811235419 seconds)
  done (took 8.570911022 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.465092975 seconds)
  done (took 11.322650523 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.841269293 seconds)
  done (took 8.705225271 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.845480439 seconds)
  done (took 8.598907302 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 6.97051373 seconds)
  done (took 8.722214667 seconds)
done (took 161.462826226 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.822699837 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.817330928 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.819149622 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.821901608 seconds)
  done (took 29.032479522 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.859939777 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.859387754 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.860637729 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.869698509 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.863474533 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.859480072 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.851683581 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.852048711 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.869777464 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.863824267 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.861749964 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.861844376 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.859313922 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.852553107 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.861949856 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.862292501 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.871303072 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.861698009 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.854088946 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.862836317 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.827518564 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.871175393 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.868948015 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.82852832 seconds)
  done (took 46.36866981 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.022894232 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.894905195 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.977795153 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.875808725 seconds)
  done (took 9.520223848 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.871838306 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.872561297 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.888041027 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.923692506 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.94614583 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.877939589 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.842307467 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.83782123 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.82521003 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.872058666 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.94275088 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.861878318 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.956075299 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.81447241 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.001424743 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.813994599 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.813332346 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.866456545 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.917088727 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.931301163 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.814787678 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.865442331 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.870016254 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.862298662 seconds)
  done (took 46.839357083 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.812483211 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.821037826 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.819426659 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.813381873 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.813884369 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.814560345 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.820345141 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.814893416 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.835792634 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.814716163 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.813107846 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.813462678 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.811986818 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.813106652 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.814135953 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.826146788 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.827125563 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.814080856 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.81713515 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.820352914 seconds)
  done (took 38.09244762 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.807440954 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.668623757 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.159760367 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.06473613 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.808794736 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.807756515 seconds)
  done (took 31.058590861 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.828820523 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.821542716 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.81496637 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.872753652 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.955011137 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.824057155 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.815002622 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.827670262 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.864471379 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.881173221 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.839356613 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.84602428 seconds)
  done (took 23.930361401 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.810362985 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.827141357 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.811907395 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.842814312 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.827514459 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.825088392 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.822136359 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.808204137 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.830941544 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.835168801 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.824421177 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.827321651 seconds)
  done (took 43.639189107 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.899445245 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.699280071 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.852565819 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.53797186 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.347126552 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.022541716 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.330134152 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.149269717 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.813883454 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.084309597 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.80870404 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062285505 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.064584164 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.810772913 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.89826918 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.26693843 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.115462542 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.046792541 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840732395 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.569406212 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.000891712 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.462799589 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.677359993 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.007174326 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.087801921 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.010725686 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.139213898 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.84120631 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016030768 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917796701 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.887496737 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.877638752 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.151335207 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257639839 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991965417 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.88712586 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.532728576 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.594552854 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.871942128 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.603485303 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.767951496 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.02249303 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.891130771 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.883155581 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.817338996 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.461239036 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221242883 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.888615613 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.585654582 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.884133282 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.894077165 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973965159 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.887659766 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.700181827 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837835654 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.164340769 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.880978444 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890026855 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.45040872 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.969196164 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.579932411 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.822484497 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.980122044 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.650686873 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.366706964 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.043504568 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.891325945 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.892176038 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.822836783 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.570792129 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.01723241 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.035498529 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.910060177 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539046286 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196238123 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.986288726 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.979675529 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185919692 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.623923569 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.936178687 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119686424 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.841050828 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824438814 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.745966813 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.825108793 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.164818145 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930214322 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.517921721 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934060658 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.228427109 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.903569804 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.912972821 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.899733852 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.115488029 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.773787438 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892007325 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.681604011 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.182135705 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.914362703 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.228697923 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.827395646 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.895063559 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147912393 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.102936271 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.063619888 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.455491923 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.056594439 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.892930194 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.976607768 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.758200209 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.012890743 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.173459967 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.957445926 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.969931347 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026050838 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.848873461 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200760343 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922111138 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.066821263 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.914330143 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.165331251 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.211358493 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.147826657 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977253883 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.895892581 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.894440306 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.60593757 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.521282531 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.117793691 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.895159129 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327729552 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.015202357 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.895234149 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829170261 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.565426611 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.905508402 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.010607515 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.117447146 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.790897077 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.281421725 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.829083997 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.040739517 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.0096083 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.117429778 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.549896366 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.98060985 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.155430644 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.323241042 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.178190974 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.017763793 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915095411 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987660928 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917483382 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.281351194 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.260854519 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.898869567 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.898935516 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.655905245 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.962411916 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898317876 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.900596831 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.722874416 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.182764355 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.927781051 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.904654952 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.784997138 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.910315097 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963707092 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.902341754 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.906053448 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.400175826 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.649567514 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.907426657 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.647160826 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152325235 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906116681 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.66496159 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.093116649 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.979282424 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.175875921 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961182231 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.831152813 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.599290175 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.598930184 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896256658 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.831627606 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.896963853 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907056993 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907801419 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.094757915 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183646797 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.947733861 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.654613623 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.016067181 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.908079721 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.902407592 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898301109 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.390302312 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.994422475 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447942001 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018023948 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035286628 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.910856199 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832495481 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.901774476 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90253821 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897632394 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.86496796 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.95115354 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.588520498 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362669489 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157950544 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.546867541 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.917143946 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.687773032 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.03142162 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.921403592 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.690690568 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927073701 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.004543156 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.967919619 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.909622174 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.661276289 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.67281203 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.46337626 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.212706898 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.217879929 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.34755117 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.346318514 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.231568433 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238408716 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.136017816 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.429070893 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.961948975 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.243852037 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843846927 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985387093 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.557781939 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261266124 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.917227085 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128561795 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293573409 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.757447665 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.068658365 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11232776 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.935127984 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.76543346 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.939363934 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.14196488 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.054861666 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.670634793 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.138039832 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234575027 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.701063639 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.027975762 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.899522111 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.607149736 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987969636 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.612102739 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.263031764 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.358022977 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.035329078 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400207398 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911964154 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.347141414 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260903097 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.166463045 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.099348889 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838273122 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912511568 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.912620234 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.901919703 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.8893717 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.862221669 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.198590584 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.914110654 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.137871523 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.101081366 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.277751543 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.813292818 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.908521265 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902548466 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210234898 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.630941225 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15112276 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.305756239 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.510116405 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.92502101 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.837160865 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.837301455 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.605750229 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.906286894 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.877274637 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13077048 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.0153371 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.859771981 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329275605 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.221758038 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.156918553 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.917462169 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.182357548 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.184869507 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.639679175 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932825745 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.004468547 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.703209305 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.619765214 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.126792291 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.139825905 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.731204284 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.135787473 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.968939944 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.877342649 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.905288872 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.119045433 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.125959677 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.915005614 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.162972583 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.629463386 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.908356206 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.276044628 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.966638583 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.916886478 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.1239169 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.997414513 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914427719 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.985137846 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915823041 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.915603736 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.91579757 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952287203 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.932265857 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.049066154 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.918094793 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995917522 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.001996769 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.524917403 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.927825109 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.18818701 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.27391857 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242160013 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969661808 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.905479475 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.906094403 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.839605366 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.043458357 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.351108307 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180501461 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.034594289 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.047884373 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930524947 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.702136822 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.242030281 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224591789 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18063124 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.801874743 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905236496 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.01532083 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.131189487 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.916126668 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.116337392 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.13945779 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.231935325 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379027022 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.087230056 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.350319231 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180690339 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.275734849 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907688483 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498425901 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.914612941 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.67403749 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.954504666 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.96235957 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.198600955 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916861967 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296052396 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930372998 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.106981029 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.423758525 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.67283688 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.274687008 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.907197468 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.975916256 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189538373 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307880143 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227487426 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975859284 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919370061 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.607533992 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047643738 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.905118826 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.186201498 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909095406 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.120521844 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.621165411 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.918441517 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.192460294 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225064846 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.905730608 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.918345048 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976530014 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.919235976 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.133874287 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.177478278 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164580125 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918496582 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.911450014 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.724505171 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187133012 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.96951862 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.843840716 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.913550982 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008060966 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.160031307 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.92991247 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.427076166 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.612227647 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210461732 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.834955999 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.932342779 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.35564729 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.356026394 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240886777 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.449208433 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.148666756 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474442037 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.819279029 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290096007 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.91662407 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.351944546 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.29318537 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.914086245 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.45698216 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028781908 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.183610954 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236020178 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.925872847 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.634777552 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.957516846 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.134566312 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.506107268 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.853043956 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91425653 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.972875996 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.912256774 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.042496454 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.922494581 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.916355693 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841291286 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.755697115 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.403736486 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.916716318 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.900259114 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.683878071 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.517751602 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025661707 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06898129 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920694281 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.627483665 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.204209457 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.167713055 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.466278051 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.986555661 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.91658995 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.912773691 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.840858169 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.111498084 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.110657053 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213969805 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.323208808 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.029022252 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.91695468 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.129432874 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.12552744 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.881567292 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.073239208 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353585702 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031860921 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.833761747 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.627067203 seconds)
  done (took 1701.995591646 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.915409468 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.219624713 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.916096624 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.963062357 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.936157666 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.929534464 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.985211467 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.006058552 seconds)
  done (took 57.715272248 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.912662691 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.14275622 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.92259066 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.914655038 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.951546817 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.927170917 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.179580962 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.931098454 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.943812648 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.924804593 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.916318854 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.919201511 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.307550725 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.945125014 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.915150831 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.946971766 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.936757507 seconds)
  done (took 75.489234763 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.914012005 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.267976681 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.955913711 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.935398198 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.79942265 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.923396373 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.971048166 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.970631603 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.919108397 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.088909786 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.25548425 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.926397821 seconds)
  done (took 90.772086809 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.930612257 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.922572093 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.922700512 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.922531083 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.922383068 seconds)
  done (took 11.475146974 seconds)
done (took 2207.692407864 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.166348045 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.140811748 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.153932846 seconds)
  done (took 6.139169128 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.067491113 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.115517164 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.236035665 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.255475275 seconds)
  done (took 10.524712984 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.205663238 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.288921292 seconds)
  done (took 6.33987169 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.251307723 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.945434687 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.301062618 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.918253965 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.919210196 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.919441574 seconds)
  done (took 22.608374711 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.921480881 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.925248284 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.921796205 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.924849258 seconds)
  done (took 9.539632612 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.901418247 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.645272393 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.905184181 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.918709808 seconds)
  done (took 21.217951771 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.669398358 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.321890954 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.666103651 seconds)
  done (took 9.506048451 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.402398256 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.156581597 seconds)
  done (took 9.406229194 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.177371268 seconds)
  done (took 4.024236283 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.950576168 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.192886975 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.441843152 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.443654814 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.544322185 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.753205023 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.251109676 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.169080699 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.372747936 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.391925395 seconds)
  done (took 25.360252314 seconds)
done (took 140.174749174 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.340615383 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.946202019 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.120008988 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.276037627 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.157097706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.120110226 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.139875118 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.263726863 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.805569434 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.798541151 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.28209898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.153877084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.08456255 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.938159233 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.094120544 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.937741564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.153367137 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.362992831 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.005947547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.206993692 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.148834828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.928320257 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.118779562 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.942980075 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.155407117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.07577618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.474267958 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.943003042 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.155446574 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.509195864 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.086547901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.378120759 seconds)
  done (took 169.953778461 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.92193186 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.932721559 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.933265707 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.920819997 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.275500042 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.937955969 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.922180867 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.921723563 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.056667088 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.039396813 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.943584256 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.298241748 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944813693 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.922272094 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.946926318 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.922289574 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.214074204 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.944282014 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.94762275 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.948266518 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.949477767 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.132432794 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.940779609 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.156740528 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.155363348 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.94097194 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.922976181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.943187441 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946476559 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.945583906 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.947566586 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.922832309 seconds)
  done (took 209.662216359 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.923521995 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.925598983 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.929722991 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.924763349 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.929641424 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.938460277 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.923654864 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.924517519 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.4620031 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.447677357 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.942241309 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.93732636 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.93979073 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.924338619 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.941691058 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.925187066 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.942002765 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.942491444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.945584703 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.938887585 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.942264022 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.633865368 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.944613091 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.642630938 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.938003493 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.940281557 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.926691035 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.945260061 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.946640949 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.942480327 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.945871046 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.926058727 seconds)
  done (took 222.263757351 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.115878414 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.932376268 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.932115546 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.930355666 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.932343079 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.93233769 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.938102493 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.11423042 seconds)
  done (took 19.707085613 seconds)
done (took 623.442753485 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.410821632 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.253350209 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.109557594 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.959154454 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.208502406 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.991744493 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.954779233 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.02000215 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.67724549 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.024062389 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.598331708 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.978559427 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.687727265 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.984242049 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.078656126 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.01419404 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.499929495 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.589033946 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.134064486 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.017370163 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.124738568 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.894753021 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.040017062 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.719567128 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.709391947 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.949705502 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.127863259 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.505344198 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.965726023 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.11686844 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.720402726 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.354617935 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.970006612 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.952059281 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.009556311 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.987027982 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.290862377 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.968983599 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.073943132 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.692106296 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.033753556 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.559279173 seconds)
  done (took 105.813461402 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.924013213 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.920869518 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.920996938 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.923118335 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.922806258 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.921242448 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.921775308 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.921536057 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.921286489 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.9214897 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.920696757 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.922272497 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.920972086 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.922258439 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.921260634 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.921671974 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.922266918 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.922959247 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.921267847 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.923707471 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.921415872 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.922402294 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.936745237 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.922371206 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.922175369 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.922022047 seconds)
  done (took 51.853350939 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.936865237 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.088334313 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.176997385 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.957567712 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.935717365 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.939177959 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.954343489 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.941180782 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.937905644 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.937969078 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.044170502 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.942479369 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.95444253 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.177392544 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.955853357 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.936818827 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.937130743 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.937147605 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.093980265 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.954078566 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.956909284 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.942709183 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.955991038 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.951016827 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.938668309 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.93777151 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.941918689 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.441561286 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.947093293 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.044553946 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.982734722 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.963067847 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.360210992 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.185544091 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.996684236 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.947514946 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.938333756 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.047656832 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.944456416 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.939159576 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.956578433 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.943262414 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.175033987 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.427929541 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.953267391 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.938181053 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.452211076 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.059103008 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.979530225 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.949494476 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.178928073 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.957791887 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.939632195 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.938896007 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.97580862 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.944002286 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.939662912 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.288106955 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.950714002 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.956684002 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.944023011 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.939932535 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.101652269 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.949110572 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.088379942 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.949346408 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.946695824 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.939441267 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.176307985 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.958077034 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.422193451 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.953632585 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.938916898 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.046062097 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.094867414 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.478784237 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.951415533 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.104114399 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.379888046 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.964723551 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.948391122 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.430169427 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.968895661 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.947681333 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.941604618 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.941002363 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.939946314 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.985122958 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.956246043 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.36614649 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.430459886 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.308018119 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.96772636 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.954542296 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.939341774 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.28868082 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.94947277 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.941077876 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.173023879 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.438095742 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.955543452 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.947744278 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.416248909 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.957662363 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.95899753 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.948876166 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.179948339 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.958179312 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.985424893 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.941663038 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.947794658 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.942828681 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.959497421 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.949018154 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.941239992 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.406636852 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.068295586 seconds)
  done (took 240.47926605 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.935559817 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.961116941 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.934994571 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.939495212 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.935248037 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.94226325 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.934649693 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.935360431 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.940675951 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.934242035 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.935142788 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.937159942 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.938665755 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.939261425 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.047078097 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.942618138 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.544540967 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.934850663 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.936251472 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.943831035 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.684069537 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.942910031 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.936359142 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.944084997 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.939361393 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.935773415 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.93880638 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.033021334 seconds)
  done (took 169.714553713 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.943529124 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.060628228 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.963829191 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.971352187 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.951266067 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.940179929 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.965859398 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.957698128 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.948374703 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.941043071 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.94133699 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.006061302 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.954070647 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.042559238 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.97752541 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.974541634 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.048736469 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.953913823 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.941260769 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.941226181 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.971980706 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.93821892 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.005937056 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.072430464 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.963295149 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.06119495 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.950609735 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.945140738 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.943381129 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.064439228 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.960740361 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.006266505 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.971669346 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.961580307 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.069136912 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.065165971 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.053131991 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.974931849 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.94888648 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.941796049 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.942443211 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.93071476 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.064561466 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.963820192 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.943935346 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.052114777 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.968165874 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.945266064 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.952894552 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.942778889 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.958866599 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.962840896 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.013449015 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.08076817 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.980068843 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.970093261 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.968950841 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.234874546 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.953402551 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.045447347 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.939618787 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.064254826 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.967609361 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.932718477 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.944831257 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.950047469 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.974082162 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.9767464 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.050725139 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.954540964 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.045726162 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.982882568 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.951633855 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.943471909 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.947249623 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.06428518 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.067182056 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.9847095 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.984794666 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.977605259 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.942048228 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.945157683 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.934497942 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.964658668 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.949647452 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.064845732 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.066862903 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.956095491 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.948017262 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.948127208 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.94821274 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.972469611 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.075284123 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.983854342 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.042862518 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.017453792 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.023374878 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.961404785 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.959580159 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.94992132 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.011450398 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.962627502 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.958037121 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.283928573 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.017742014 seconds)
  done (took 210.632483691 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.395340946 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.004340781 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.006186199 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.265675056 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.365439833 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.809314592 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.993736536 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.996564256 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.019522943 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.186572786 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.069821901 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.014585312 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.983093178 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.970355174 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.995640445 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.019692155 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.007695452 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.310514506 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.122818408 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.144169054 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.980476992 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.300365788 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.318641937 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.380459657 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.032819914 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.353765042 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.683690715 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.164022781 seconds)
  done (took 63.771956718 seconds)
done (took 844.117901214 seconds)
SAVING RESULT...
DONE!
