cset: moving following pidspec: 14991
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.310509489 seconds)
loading group "string"... done (took 0.560535148 seconds)
loading group "linalg"... done (took 7.255435495 seconds)
loading group "parallel"... done (took 0.169384212 seconds)
loading group "find"... done (took 1.12855874 seconds)
loading group "tuple"... done (took 1.767866628 seconds)
loading group "dates"... done (took 1.217276146 seconds)
loading group "micro"... done (took 0.223935771 seconds)
loading group "io"... done (took 1.032170409 seconds)
loading group "scalar"... done (took 40.971513093 seconds)
loading group "sparse"... done (took 13.102884431 seconds)
loading group "broadcast"... done (took 1.018794048 seconds)
loading group "union"... done (took 14.03660112 seconds)
loading group "simd"... done (took 4.714233311 seconds)
loading group "random"... done (took 9.547028697 seconds)
loading group "problem"... done (took 2.004125999 seconds)
loading group "array"... done (took 22.400301125 seconds)
loading group "misc"... done (took 2.056512585 seconds)
loading group "sort"... done (took 3.42085884 seconds)
loading group "collection"... done (took 19.465437642 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.567835583 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156683625 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148624552 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.147571062 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.189042841 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156272431 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156896464 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09604045 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.029744744 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174721378 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15174068 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523881708 seconds)
done (took 5.332541852 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.270379004 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093606428 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103611863 seconds)
  done (took 0.977721839 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076316958 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.14397243 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.097462909 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077316379 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095693959 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076935897 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094723435 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076657047 seconds)
  done (took 1.445434745 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085352542 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096624799 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.080758799 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.097139051 seconds)
  done (took 1.142468671 seconds)
done (took 4.701637288 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.884321292 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276876497 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.205079869 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.460395171 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196923245 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.21427237 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.682258764 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.331164016 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.253580508 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099597248 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.133788658 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.392445661 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136902931 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.677115071 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089464189 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123672945 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.182350258 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.441712025 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081707953 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110546194 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116633773 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140309107 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.132188438 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093664478 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185456171 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08017336 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194648815 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107922969 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079598242 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.273187264 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.20116977 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681906987 seconds)
  done (took 11.081573867 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.108876472 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.132943329 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097668306 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.13673982 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136715986 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101501561 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.08366375 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097016103 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120961247 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175547262 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113272939 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135790894 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095250582 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081224767 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114769297 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243929859 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.104217112 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.118697567 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.101351184 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088985102 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.136731429 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112143015 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091700574 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.109487743 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164634314 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209691339 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.127602949 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128558414 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098148115 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.094729487 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144690471 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15669052 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096372705 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080272745 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.171848671 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123591172 seconds)
  done (took 5.235184273 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.128728904 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.18822706 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120594298 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168651176 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.079561479 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142316129 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.096036733 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112632284 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255609027 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.190153075 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.487761477 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.139392677 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097348044 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097659783 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081040549 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097003564 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.450766315 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155885982 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.132748558 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097948856 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104206826 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100081672 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363192668 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.079030783 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.094972509 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080897249 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08046637 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159614073 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080928882 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.20288965 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.099816234 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10208799 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133171368 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.19805291 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.123732674 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.132805328 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076944949 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095362137 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.173703932 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085307192 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10946612 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098517481 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119374937 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116741564 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134260143 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097426756 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097560965 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.192936078 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.0783799 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114242051 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.121795884 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.930736728 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180472238 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104186311 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095911222 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303589927 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097349126 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097043227 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075172998 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.278432771 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.200944482 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098115134 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.095095269 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078563049 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097547614 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.749726789 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.0813697 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.669153892 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083687812 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106458167 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.0810871 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096546035 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.102185226 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.085404246 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114431303 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078672078 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098188413 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.077373088 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.09674306 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.079359484 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.109164855 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.21330088 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098377445 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078391251 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.094188925 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.075663914 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116807085 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125473453 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.084772458 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095021858 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112759733 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09961661 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.096466024 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.114344083 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098241816 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107709621 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082166844 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143217412 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097919298 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138488573 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.09659859 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124366454 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099250316 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113104086 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111742677 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098791704 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.166874367 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.076956921 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095441767 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078069001 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.099268369 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079159376 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099273106 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.07593541 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109810551 seconds)
  done (took 23.036560337 seconds)
done (took 41.263327381 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.319169659 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103994722 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103774237 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10374796 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.083084365 seconds)
  done (took 1.568910779 seconds)
done (took 2.396549345 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.164785723 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113913707 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096022854 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.128248071 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075971341 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.134162075 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.13095094 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092268475 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.132490233 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094016691 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108597933 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094833445 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.074677093 seconds)
  done (took 2.302540413 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094370015 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115476364 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082199626 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112614806 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.074981234 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113108137 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09070654 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117472517 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109736339 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084174903 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093120538 seconds)
  done (took 1.918155549 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094906089 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11397905 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081517945 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111220972 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075686491 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110886681 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091555102 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117379147 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11145478 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08467053 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094140187 seconds)
  done (took 1.916246432 seconds)
done (took 6.964828134 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.090700696 seconds)
  done (took 0.914975629 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.93469348 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.080510187 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.096979638 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.172790517 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.310395268 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.170771258 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.501027231 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125150483 seconds)
  done (took 11.409666875 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.113634526 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101905308 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.101824449 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.096653358 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.10307408 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085643979 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103837251 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101958903 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084577724 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10320068 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.082210175 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100315466 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.0835201 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10149876 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10247599 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08229258 seconds)
  done (took 2.435979721 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116976708 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.116554645 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107428603 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109582245 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08568228 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106322802 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106315898 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087721335 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.103650658 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103920963 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089147805 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107021483 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103156894 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079166643 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107172607 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106447138 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.084463128 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107183108 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106232723 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090942253 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107877217 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.077218151 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105541636 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107184447 seconds)
  done (took 3.364166019 seconds)
done (took 18.953383895 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160005883 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108082746 seconds)
  done (took 1.100498172 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.095755505 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114039671 seconds)
  done (took 1.045844786 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097448368 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097909368 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121562575 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110064049 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079638676 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099421761 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.121481105 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080285382 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098341093 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079101497 seconds)
  done (took 1.824197934 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082940243 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110548705 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.10124364 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093583903 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106055688 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0955536 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088449808 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.099945737 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110736393 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076763014 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102836385 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115017936 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085395894 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118115834 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105642234 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.082324061 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104261902 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099196986 seconds)
  done (took 2.618462339 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080171761 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097999312 seconds)
  done (took 1.016685825 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081181778 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094388268 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080215574 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098190269 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093658519 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077657403 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095357763 seconds)
  done (took 1.458706796 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.435733953 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.117747906 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.28119337 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.083890656 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121920686 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300226279 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.099850465 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083445076 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105156746 seconds)
  done (took 2.52648348 seconds)
done (took 12.428290697 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094120942 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116372706 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110747137 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466058407 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.109730424 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.102265579 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149357042 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.250525045 seconds)
done (took 2.240068937 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.145942741 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.5776324 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.431730268 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.240403774 seconds)
  done (took 2.092981871 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.410195418 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.101523452 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.087121921 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083260265 seconds)
  done (took 1.530524253 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081184797 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100239688 seconds)
  done (took 1.029261045 seconds)
done (took 5.647457787 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081320218 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099711767 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.110569504 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.10052307 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.076250743 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.101206926 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076067675 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098139801 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.079118646 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.099062271 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078884705 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.100380656 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.079268372 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.0991567 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076869918 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097127498 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097514276 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078388515 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095226274 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.078636335 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094879448 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081151059 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094777768 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078735804 seconds)
  done (took 3.035828643 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100496809 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100143357 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.103341218 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086351691 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104140206 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084674178 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104636484 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097601061 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086490483 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100665779 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.082533583 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.103270817 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100344872 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084862735 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101418814 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.083370049 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.105576223 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098459894 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082041546 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103360725 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.08413016 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100033673 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101829843 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085076101 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103606648 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102495375 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082996763 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.098870359 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.085344676 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.103881747 seconds)
  done (took 3.713969242 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085430355 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095164647 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078248181 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102260131 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077842102 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.098182789 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077211737 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096788172 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07815412 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.097162518 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078973231 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09702519 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076461128 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098270147 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078050564 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.102947318 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.116382585 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081441176 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099140015 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080665408 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.101911343 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080217688 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.100236809 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.079578246 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098912637 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079479869 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097276578 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.07773544 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097107292 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076838762 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099515159 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081206927 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097133907 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084066292 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100997214 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07655644 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100982846 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.076696157 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.09754409 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.077170769 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096592291 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.076754359 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.097051132 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102124116 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.078467386 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098282681 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078983185 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097302693 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078828526 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099436059 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078247258 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096573224 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.07952209 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098548283 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081563053 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096785595 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077478422 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.09668209 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.078800931 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.097465355 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.076687724 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.096447134 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.079496312 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098657681 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111729134 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085654004 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095618461 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079736468 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097650824 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080276726 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098701449 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091267169 seconds)
  done (took 7.308273891 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.136824118 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12742534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079760803 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099408993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076621131 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098468199 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080970345 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097669658 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097862399 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08475485 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096781603 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079793449 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099360522 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093078942 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097530567 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.079617344 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.103260743 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095117002 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079028053 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101660416 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078553847 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100788982 seconds)
  done (took 2.940858233 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209986273 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104969725 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143906955 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107383706 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082869575 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107437108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10278732 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.085669206 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105209207 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083055462 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10252668 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102562653 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083710574 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102529281 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082145759 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.10286341 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102707354 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.083321278 seconds)
  done (took 2.753238683 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093147257 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100705342 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.214739135 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100811416 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099068952 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084215215 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106664857 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109291071 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085657534 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102894089 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091990743 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106156782 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.104072885 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08370155 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102075414 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081441106 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102355422 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080184586 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109002228 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104887824 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086030875 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10931646 seconds)
  done (took 3.120712538 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096064553 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10235118 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117663119 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084635534 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095544476 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078604107 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106848869 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080389071 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.107057078 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100747733 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081313863 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097785902 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085880506 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100417864 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084808661 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100875396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10079035 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080976083 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100993737 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076262317 seconds)
  done (took 2.741119128 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101503194 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102050695 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080986128 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109137757 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101932421 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.0814319 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11044846 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101072064 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081081088 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125267472 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101100249 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.080983894 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109428337 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106191584 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081227419 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110045737 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.109320126 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10830221 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082635954 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101315896 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124993004 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08244997 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109706765 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.10024762 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082498592 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10110254 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081597924 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.106598598 seconds)
  done (took 3.640861864 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081381901 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098578882 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078883521 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096217054 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07934173 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096616661 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079367894 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095919597 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081401738 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096793236 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081142812 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098844194 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081152525 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099113331 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080769225 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099032095 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080439886 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096558474 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078302834 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096287743 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079786196 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099762941 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080383763 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096922189 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078842837 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099494238 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078847061 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097590232 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08019235 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097993131 seconds)
  done (took 3.53089873 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089765985 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107395769 seconds)
  done (took 1.065066509 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079389729 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114938883 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077808953 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104021078 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084084646 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102220593 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107970351 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084542005 seconds)
  done (took 1.623776115 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096668627 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.110696174 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.081929709 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112930847 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110169965 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097044338 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.172240889 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.103004189 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087634806 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100219409 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114178694 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080880562 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106774545 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081970383 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106383632 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087285779 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099127737 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105221547 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084901181 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098118687 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082441818 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110287669 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082540242 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101108538 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101045932 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091659916 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114502448 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081845478 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105265534 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106751817 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087740486 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093916961 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081230805 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101329462 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079752517 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109912151 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116081437 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085456318 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110578406 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082799802 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112893841 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095392052 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.085766507 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107803727 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091059212 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.102016731 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100793815 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077399532 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100920774 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084916178 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095478057 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08097891 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095579638 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08792266 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104758059 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110491234 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081158192 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101091382 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085082612 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104135221 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08818941 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103203273 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083018181 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101272658 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106871422 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086823569 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111703097 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076715245 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096078211 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079049728 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.111898302 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124332287 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088134837 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103085054 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.081875147 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099555412 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103895489 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082903936 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107051561 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.087461191 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.102222089 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105502493 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089159264 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100807002 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084264869 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108680859 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.079360367 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103277319 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09819815 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098448307 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100847941 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078870728 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099495189 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110732521 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085841079 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.100066318 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079364402 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108186091 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.075434695 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101766373 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082202169 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103002364 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112147007 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086532597 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.1074352 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109282564 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088611393 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100740673 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.083900913 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098226192 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.082067059 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.10128801 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.0883848 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.096166386 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103149508 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082743989 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.1012692 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090295709 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099759453 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.080821196 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109620729 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.105862383 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080739686 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.097438416 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084515413 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101551193 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084603899 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110543873 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.099099884 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078252686 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095917695 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086172848 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.100957835 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.085361546 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107243094 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10312366 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.07750278 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.098914146 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087845263 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111358832 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.080833278 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10300532 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106684262 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083384802 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099568732 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088258924 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104560113 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.080380216 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.108467214 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.081249222 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.097080725 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104084254 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.084293747 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.099435359 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085296206 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106212108 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082843009 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103351849 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.09865792 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.088041261 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102051294 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.079993851 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101721613 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079316667 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112647291 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102626301 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.077257249 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097929821 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089891495 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098811798 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080923009 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100831608 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083255461 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102641655 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097903647 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082201397 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.10243094 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092726227 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107211699 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101749906 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088519934 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.113142923 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080798824 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104477219 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080351186 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102546265 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100841424 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.09146672 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106450764 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08547398 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105328533 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.076624324 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108036778 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108839539 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080951263 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099469976 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080421967 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104980413 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.086549624 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10624979 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101523545 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.07989758 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102618467 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084825476 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10470483 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080222777 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101063391 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105278457 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081278246 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108079692 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.081368738 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112939099 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104163514 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077733962 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105019643 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079544596 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108239995 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.075890442 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099809623 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.079754717 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.103444811 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.098978593 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0852231 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.094933153 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089368833 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1097601 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081227981 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101338438 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.080284156 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10859971 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101312995 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086523557 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105450713 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08793556 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.112794823 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080190987 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106420392 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111485725 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.081305814 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095137895 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086985894 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.101097044 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080028069 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.101515432 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.079277951 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105739663 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.111192538 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.08916238 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096638936 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.083742329 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.102115736 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.079945846 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098764128 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105750893 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.0849022 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.102776003 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.088759093 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.104080973 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.081544558 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106360082 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.101860377 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083844578 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.10330883 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085187674 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103862803 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.084026429 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.102039991 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103822242 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.08241393 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09895201 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084317225 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.101775809 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.08193284 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108620352 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.082223007 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103756697 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084159045 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104249074 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.102480283 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08357237 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101433307 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085930662 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103931305 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.082075336 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106030609 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076870149 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110370111 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.100798919 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09104623 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102067759 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.080762178 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110507235 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087036605 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108648924 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.102367556 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.084120731 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104196132 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08204253 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106006449 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088773874 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101514736 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112316172 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091295294 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103786587 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.08493193 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.104843878 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.083031212 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102835342 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.082005578 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104803077 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.101921348 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.083020961 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.10685794 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085271044 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.104420891 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083578163 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104369358 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081450884 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104956045 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096071907 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.082928674 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101334816 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08283011 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11451569 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.082060015 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103159413 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101373842 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.084805706 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.102073821 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079336104 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.111505098 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111066757 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.083357952 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110204391 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082025402 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.104906697 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092868474 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09771532 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09961942 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.081271313 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.099383187 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091339639 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104007982 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092654531 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.103393405 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082181686 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100680793 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082220306 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.101527919 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095981853 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.080866655 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.115997035 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.081795079 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101524062 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.082675831 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.106528524 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082660991 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.113654427 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.100736583 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082889265 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.103231269 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079468541 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.101925515 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.081855323 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.106678246 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083593715 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101781645 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078937335 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103539915 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102531398 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084345499 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102760046 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084313791 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1129758 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081224475 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106077731 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105451251 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.078515001 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105011702 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083545993 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102897519 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.081654204 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107157574 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085789067 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105595492 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110985743 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082529317 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103318917 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082135077 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101521904 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081414667 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103465022 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082025805 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103792412 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102950191 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092361933 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.100770226 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085239692 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103332584 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083781671 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111950303 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103277617 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087207129 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110885563 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082237635 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10540435 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089609966 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.106991839 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106084521 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083885149 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.104673843 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088753884 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.103476187 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108588249 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083990455 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.10406948 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084964173 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100884959 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082068265 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103719821 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081180004 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.110117367 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082898866 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.103129897 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101845979 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083415653 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103752722 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086342684 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111356667 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084705494 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107924065 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.076653095 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.101807512 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10392432 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081337896 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105120934 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.085996855 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109553166 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084849678 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104944254 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080261149 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.113660964 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109832573 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086428206 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.101829707 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.085752014 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105990542 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.084841806 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.105989469 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102376059 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085238327 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107406428 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084669391 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103079242 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088968401 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.108573092 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103708399 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085964871 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103442387 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083841732 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099130716 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.083091482 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10661557 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087633343 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106833952 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101836566 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094684927 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101082298 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082832526 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107904754 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081963003 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108787268 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098146396 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085807452 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104045898 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084339533 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099188984 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081777526 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101423008 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.085102616 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104381916 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078460456 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115153278 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112239127 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086271784 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102900542 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081083812 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099756368 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07756692 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104215198 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083691337 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.106674749 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113837509 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082880288 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103245061 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.078484496 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104853966 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086365209 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108060494 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080309327 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.10022718 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101903439 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087323963 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109357914 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082294295 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104497085 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.08658565 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.106862481 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080333996 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108493385 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099710051 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.087552809 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118956355 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.083294284 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105840829 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.109506544 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09180366 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.104889678 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078032111 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.10570962 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085548861 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.104470926 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103768471 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.085300882 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121193935 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085642602 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104318497 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.08076386 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106830124 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.102401656 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.093144093 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105507306 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084183189 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.109719339 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084513349 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112787117 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.106723589 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091618484 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10815527 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.106318494 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.08353672 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104380714 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.082268308 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.102369948 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.08460947 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104901339 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.087798319 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112472394 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102769269 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095030238 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114328949 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.084433369 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.102011923 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.082764382 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.104058939 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098259325 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084874789 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.102038883 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.081820285 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.102370276 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082427474 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.105067966 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088835742 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.105744083 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.082656388 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.105085171 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.097008455 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086744866 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.106316507 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08523607 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.100175693 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083229742 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106001382 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086692742 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108466898 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.07989682 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107113055 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105678894 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084911404 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099059917 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090688011 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103967729 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.085642149 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.105063714 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082585194 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106488917 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106477634 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089240513 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105665086 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.0852909 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.114169426 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105146084 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.082487937 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100479228 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.090434802 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.102550693 seconds)
  done (took 58.033083853 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147926161 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080903607 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100287402 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078473076 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113021429 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100042339 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080070598 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099775688 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.08062547 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103083064 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078265685 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10012094 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108825335 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.103988709 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114218499 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105606264 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077326241 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101405458 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.077726666 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101550137 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108994375 seconds)
  done (took 2.979278407 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.103678148 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.121298691 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115570957 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119132644 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089195139 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116566687 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114975543 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113986903 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.097864579 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111873875 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118841453 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113915288 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092269668 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.111889638 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111077318 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092968925 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119573979 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10948042 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.094914216 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.115927826 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113319966 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11501314 seconds)
  done (took 3.329657717 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.084419336 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103441305 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.08465301 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099434902 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.082970161 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09938592 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087540642 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.102393792 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085152768 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.1041148 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081104147 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103542865 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.083805076 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.099629479 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103023086 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082124172 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151816602 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108626226 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081932301 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106597874 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078554089 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10779812 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098972554 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080889345 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102515112 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088108448 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104914135 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081189224 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104117089 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082099699 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.104741039 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081133275 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106396494 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.082548875 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.104443448 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.081971672 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.104067443 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103578486 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079500058 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101698557 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084242432 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099876275 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084038529 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106486914 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081866401 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102254925 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083696443 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105470512 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.07732213 seconds)
  done (took 5.559082998 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.102770767 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161426903 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086293879 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143219513 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12098093 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112083168 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088320252 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143004191 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103591588 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084698434 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122664892 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121540914 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103367754 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089056783 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112167154 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082456884 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.106615663 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102890537 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086870343 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104783897 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107730645 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090205666 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120230531 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118685031 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086349356 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104463305 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104152684 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.087584136 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.117929433 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109427288 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.087571416 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110848474 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119797378 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109692628 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08385769 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10720005 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120580882 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084005707 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.107072766 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080134046 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108195485 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.108512733 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.090008875 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.123220241 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.104181492 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.088574879 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106178091 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.080131651 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118201304 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.107383973 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112454263 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.099314307 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110252543 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.104362792 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.08909361 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120762567 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104162736 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.081241082 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109311334 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117550912 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.081899817 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108491403 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119835242 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085836955 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112852799 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.120295782 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.08839434 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.11001682 seconds)
  done (took 8.212287536 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093533941 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111467904 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120561875 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121450293 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.090295712 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112432274 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111293559 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090025148 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112175299 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11761845 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110696417 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132378793 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.08691906 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11510896 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110585177 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091616304 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111914678 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110906358 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09122124 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112181783 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111710357 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120671435 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.090242325 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120593939 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142568342 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106353936 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090168046 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11214181 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120189372 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089809631 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123995987 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.112864134 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111475829 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120148656 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.102183879 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113358815 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104377732 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090072706 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112100316 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111356509 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084774979 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12056437 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.111616469 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.084492595 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112331654 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112092892 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120801447 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123739694 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.093924844 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117373762 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111775439 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120063109 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089486947 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113227989 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121338238 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146332154 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119239963 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119578874 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091060995 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120934219 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120462311 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128910399 seconds)
  done (took 7.775207544 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10585533 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11578007 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.117459271 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077737351 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.105119341 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10869859 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0823739 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103617672 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.092138994 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.11529367 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.117160272 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108562681 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090802772 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116891238 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109296455 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112125441 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088412095 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110752733 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11348697 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.087213066 seconds)
  done (took 3.010031471 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093494204 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124423647 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083578381 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.113344096 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108064863 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090570658 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10889888 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085762125 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108194049 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108460086 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095487028 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1167871 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106587647 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090012477 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116172216 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110925219 seconds)
  done (took 2.596153254 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097036203 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117629602 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.121848469 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.083720953 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105552503 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.079280534 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107588148 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101530975 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081251313 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121198561 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083437258 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.109421601 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105256544 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082837081 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102235683 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087509971 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103329657 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082078869 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106748902 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119051849 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095089621 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105095444 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.083612466 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109296124 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106649035 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089918379 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107164573 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080498023 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.105361848 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106465074 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084666537 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114204909 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080571779 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105462894 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104372737 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082725661 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105683498 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08494667 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109635613 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083225529 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105774562 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104629735 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084662956 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106072966 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080706233 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107190141 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080882214 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113518504 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.10277659 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085602637 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.105264651 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085745706 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.108533062 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.11505542 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.087904573 seconds)
  done (took 6.352461515 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098220159 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.110366481 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079105062 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105566966 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087449514 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108670586 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086403642 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.108606754 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106979845 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082011814 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108226142 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.085913841 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108536235 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.087235659 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.109535814 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108766869 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079948038 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108248075 seconds)
  done (took 2.710575689 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089976335 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106173564 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.091878707 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106946735 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083527475 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109838549 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079187415 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106156725 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081481937 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.107694479 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106174122 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087824046 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104349442 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087014992 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106744925 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083473097 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109391041 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081424601 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107385097 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.079513026 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109126355 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104692814 seconds)
  done (took 3.06873534 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.090864307 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.133316911 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.187252538 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106310954 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.124774227 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.120444463 seconds)
  done (took 1.702018398 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109095313 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12128838 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106440516 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107460892 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115846731 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085188433 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10865019 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107989924 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116586131 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09998604 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108594339 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117869976 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116898622 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096410282 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115751174 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114433136 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086308561 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109209044 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106779569 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126092639 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088071893 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118286108 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10813796 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086529816 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108717684 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116553416 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.094893306 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12323466 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109509507 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118254974 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091883835 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108973217 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118868767 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122290785 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088914114 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119332341 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10799417 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12798739 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092786649 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117676575 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.1090723 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092757782 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11902559 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11409087 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11743447 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086191992 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114853311 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108025585 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086385803 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135073708 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115837915 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117130798 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115241403 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097064616 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118355685 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134244693 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123922528 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117376869 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091290998 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123564754 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117611266 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115140403 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116315381 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122220571 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.093538951 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120746822 seconds)
  done (took 8.211835492 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10048045 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128001055 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109674255 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100658129 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118432642 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109214934 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108391869 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087242232 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109190713 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084952627 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152324271 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110738855 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118581858 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117988072 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086508514 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109666699 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10873003 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116625135 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087507883 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134265265 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109046876 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116808386 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095337107 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118259547 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123753687 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114963841 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08637117 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109648337 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108260235 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085593363 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115308362 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108588404 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116208221 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086559435 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117448317 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108631628 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087184738 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114986447 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108787802 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092795692 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118133433 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128343757 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108419678 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087446686 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122664999 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109622368 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08558788 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109637444 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108524955 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086337627 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122986709 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122881036 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123853111 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116842387 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087452292 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110219083 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108318743 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087473978 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109845957 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11512294 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.096116543 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109923345 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134542101 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110153717 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086197993 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11895424 seconds)
  done (took 8.098809374 seconds)
done (took 157.960011893 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.227965255 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.220540305 seconds)
  done (took 1.393991748 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087349408 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.137357438 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095971616 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170468133 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.084053566 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.141257314 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138915083 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097807805 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10712567 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085305639 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.108073084 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086752052 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172499731 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084800581 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107786822 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085203302 seconds)
  done (took 2.747103492 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.11310961 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.241256255 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.123990102 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.082368133 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113923563 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.109562733 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084456902 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.11233142 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089151508 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.106713869 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087681281 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.107803158 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.0833316 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.10839098 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087811031 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.111026805 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.083247257 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.110221582 seconds)
  done (took 2.913368855 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11289258 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.158036377 seconds)
  done (took 1.224971686 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.246525849 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164294925 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.231724897 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.48015155 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.285754171 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.36146238 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.206434475 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.216465239 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.167120609 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.201240767 seconds)
  done (took 3.513633063 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117933077 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181612539 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319490746 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155650115 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.104724178 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127503229 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157236251 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131117857 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123592145 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.100461894 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.1230426 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.11932724 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.136939316 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093193269 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.11656771 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116549417 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120292263 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114967925 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.091652572 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117413397 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138341357 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.083741832 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116771342 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.114345045 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.097206169 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.119730624 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107007054 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085862654 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117216145 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093555076 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.11470219 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124258896 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.09607811 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174494202 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.100526429 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176954107 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.096497752 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113112081 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114287753 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090638188 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119743273 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117609291 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.103260413 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119164806 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084074521 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119683273 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106460691 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085556736 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115100707 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096474323 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116493319 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113342773 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151629037 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119157521 seconds)
  done (took 7.470947335 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.788025681 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156381204 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089178316 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.883205581 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111671753 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127672014 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77457418 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111123277 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.252710667 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.755452999 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131599589 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095994308 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.227505488 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23424098 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.953720398 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312515406 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.64318192 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125939344 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149542148 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153376187 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095992406 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136818752 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131526405 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.45702026 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.1143913 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090758998 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118130803 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.094987876 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18120256 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101138644 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115338115 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173802786 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.270245276 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.180279699 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117067877 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087431732 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11235065 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166478234 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266318291 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215051697 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179741462 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086048005 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112122103 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.097305391 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132329629 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109632331 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.160476976 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.171904283 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.191687945 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092170748 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119735068 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119107433 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.098566056 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.184450589 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.097586887 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.320714631 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308272372 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111488293 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098607795 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12646841 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262570223 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099596189 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.224735671 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139468256 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211788324 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089375812 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.780330999 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166995585 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.112816507 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094239384 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.12052951 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11593983 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.096635699 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16432514 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.388991301 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12440492 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115024267 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.0881056 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.253238564 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100517776 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113079858 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.159933971 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116044153 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119962446 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100110815 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122054833 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.165719449 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254361308 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100470878 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120177889 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114806048 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102000173 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116342502 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.20892958 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218027183 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.159864724 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208205672 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122834929 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.1604486 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191683351 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095960998 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193986021 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.095668191 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124742879 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122445862 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212723487 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14405728 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.100551598 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115771088 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117335374 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.146904548 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.1037945 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119328084 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.169958512 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.506942267 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171811277 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108160421 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104700917 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121051759 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160836592 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118815637 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.254763674 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099597377 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189628989 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097349274 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109889703 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096547158 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.185168418 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09820214 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122639197 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122428808 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095017161 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.257278675 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.190193903 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122842712 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241976252 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.18209397 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.094477503 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192803318 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09730761 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187507731 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097326705 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.124217391 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114670753 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77125888 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123902488 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.119909944 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093020751 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.198901853 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112949316 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.09927609 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125340104 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.110790231 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.76441742 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127303333 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121700589 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123251313 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.096401791 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121502418 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11791612 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093464413 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.16001324 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227516504 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.120580932 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11979996 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100808366 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.183293602 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.094284293 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126231835 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125123646 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100605234 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.123104496 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11680672 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.101051751 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.191732742 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162160744 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.218361785 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.565106455 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.114013628 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123216686 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201289447 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11307373 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287513929 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118890103 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.201778101 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184259022 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098614125 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306242265 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162928577 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.1990961 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128837935 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172600011 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110822144 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117920115 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164039808 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.088177295 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119239507 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.160552247 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126047162 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123071465 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958528471 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090278714 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223546557 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110556276 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.169251006 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116690661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095264088 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.29477273 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114351876 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127838831 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163784713 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092330599 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125617576 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.722114867 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.10098696 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.12255669 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118987506 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.21745038 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162817794 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119439791 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097458516 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120643297 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.160347602 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206739512 seconds)
  done (took 43.857847939 seconds)
done (took 64.073566702 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.279933262 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217622899 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.269749219 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171431072 seconds)
  done (took 1.994000554 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.172288247 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.150482195 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121296208 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109309247 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151830728 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.083439421 seconds)
  done (took 1.770132513 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364635695 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278388864 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245400626 seconds)
  done (took 1.876229373 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289115057 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246751221 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476605313 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.32670287 seconds)
  done (took 2.449853803 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208584244 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134381442 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.11191652 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103007135 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.198910109 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245002566 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142999077 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201008832 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098153145 seconds)
  done (took 2.475502592 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198268515 seconds)
done (took 11.750380108 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.13029322 seconds)
    (2/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.318020253 seconds)
    (3/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.266489579 seconds)
    (4/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.244685466 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.163451133 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.224508742 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.219433649 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.202266216 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.222960731 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.150057369 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.15176271 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091648822 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.134070067 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.098138786 seconds)
    (15/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121075227 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119025396 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092744999 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.115711137 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.097825144 seconds)
    (20/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.252198304 seconds)
    (21/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.128509052 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.212581648 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.091077742 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.215037077 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.143261362 seconds)
    (26/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.157982481 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.207174716 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.168460275 seconds)
    (29/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.138943005 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.204450455 seconds)
    (31/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.099172957 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.227244016 seconds)
    (33/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.138799796 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.204317586 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.094043086 seconds)
    (36/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137682848 seconds)
    (37/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.096479307 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.206208987 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.066247176 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118925949 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.179388723 seconds)
    (42/309) benchmarking ("sort", Int8, false)...
    done (took 0.188194651 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.090769283 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11742913 seconds)
    (45/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.177626922 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.165315731 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111238062 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.255575555 seconds)
    (49/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.234275549 seconds)
    (50/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120545237 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.095036525 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109529162 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11058447 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.177676352 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.228245381 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225167477 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.15850587 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.09619294 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.140042285 seconds)
    (60/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138788544 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087224275 seconds)
    (62/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118834353 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.110873199 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.174022653 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.145277789 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122391283 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.110555878 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.138919083 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085532785 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.215138479 seconds)
    (71/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.149072569 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103101888 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.138601906 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.172461477 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119403762 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.182638268 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.065885979 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.210340208 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.138650558 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.084706549 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.217812116 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.157541138 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 0.085432871 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.115706106 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.206396128 seconds)
    (86/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.22214484 seconds)
    (87/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.066895044 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.090588457 seconds)
    (89/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.097610998 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179944255 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066523811 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.178633606 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.12083967 seconds)
    (94/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.131445837 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115802918 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.126724733 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.183643792 seconds)
    (98/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.147592085 seconds)
    (99/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.148735384 seconds)
    (100/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11604599 seconds)
    (101/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.075802772 seconds)
    (102/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117222834 seconds)
    (103/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.096314096 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.139113036 seconds)
    (105/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083880496 seconds)
    (106/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.11933766 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092676891 seconds)
    (108/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.123971616 seconds)
    (109/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.140490919 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113572975 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.11951888 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.066948612 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.109968814 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068188453 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194152509 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.178922985 seconds)
    (117/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.115635655 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119077978 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.084645124 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196697985 seconds)
    (121/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.065917639 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.111246177 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.094641391 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 0.434225203 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.095207059 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116316689 seconds)
    (127/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.095230242 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.231120094 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.117555656 seconds)
    (130/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093890527 seconds)
    (131/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.065128962 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.116692228 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.07576404 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.134738952 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.130412778 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085112406 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.135762567 seconds)
    (138/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091927013 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116820571 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.115891624 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086609424 seconds)
    (142/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142897374 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.163243564 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.094668526 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.085053574 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118810748 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.065418182 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.16784738 seconds)
    (149/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118718259 seconds)
    (150/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067308181 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.085520375 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.093282331 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085041486 seconds)
    (154/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.091200865 seconds)
    (155/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.115328841 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.109587181 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.093930645 seconds)
    (158/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.091151968 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.152458681 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.173680352 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109131031 seconds)
    (162/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.099928289 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.118293472 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.115230668 seconds)
    (165/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.197292965 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.216856871 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066045423 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.135913482 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111814913 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.10828193 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.181311214 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065622341 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.125446853 seconds)
    (174/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076340067 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.149590121 seconds)
    (176/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.146727581 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.134632675 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.117060995 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.086168284 seconds)
    (180/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.189282768 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.065776331 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110775753 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.190725966 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.15339677 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067289408 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.092472111 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09489972 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.095604596 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.12270598 seconds)
    (190/309) benchmarking ("sort", BigInt, false)...
    done (took 0.2184148 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.116097968 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.087788221 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120079379 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.092557434 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.09869864 seconds)
    (196/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.070151775 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.089433361 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145658536 seconds)
    (199/309) benchmarking ("sort", Float32, false)...
    done (took 0.173689099 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128171738 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078570099 seconds)
    (202/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.089203769 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.095136574 seconds)
    (204/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133845051 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085262454 seconds)
    (206/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.075488211 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.138031917 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118019224 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.08451811 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.065423992 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.09174011 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.084514428 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092581182 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.093267784 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119928146 seconds)
    (216/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066952313 seconds)
    (217/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110896373 seconds)
    (218/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067871939 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066521782 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.112241358 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066051866 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.121365513 seconds)
    (223/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.076075441 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111239613 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.067517417 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.085165831 seconds)
    (227/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.093874307 seconds)
    (228/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.084507621 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.092642537 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092328434 seconds)
    (231/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.092954022 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.110024749 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11121429 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.089764168 seconds)
    (235/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114287928 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.086101833 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.110019177 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.082662331 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.112866263 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.085643303 seconds)
    (241/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.15191682 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097039195 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.188423465 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.10820491 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087220748 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.072131422 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.09342646 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066703561 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067117171 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.12269334 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.17947581 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.11411957 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223564514 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.115142599 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.084897282 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.143229231 seconds)
    (257/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.118923864 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093342561 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.19707179 seconds)
    (260/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.087229402 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.093376343 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088096721 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.111635827 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.150895961 seconds)
    (265/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137123018 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121103762 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.082600487 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.065784822 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.164715819 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066287097 seconds)
    (271/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113827444 seconds)
    (272/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.150924792 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.079201033 seconds)
    (274/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.088731916 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.097324137 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.085912449 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.094529026 seconds)
    (278/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068918573 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136444528 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093131178 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.112034724 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.098017356 seconds)
    (283/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.126260384 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.108503601 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.068100395 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.092578975 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113713961 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.06619208 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.11084768 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.215235946 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092265764 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.114387881 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.09126643 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.132633802 seconds)
    (295/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066861487 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.134180996 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.067818929 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.067214448 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.10426081 seconds)
    (300/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067718199 seconds)
    (301/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067694699 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.141130862 seconds)
    (303/309) benchmarking ("sort", Float64, false)...
    done (took 0.174143701 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.090925597 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.113924613 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.085920259 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.15610235 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.184742777 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.111654172 seconds)
  done (took 40.0519906 seconds)
done (took 41.041877738 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100316668 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.136519998 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.095357308 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.137286761 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124134176 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091420982 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11969803 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096834839 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.126148606 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126151668 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099512892 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068952359 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.122791109 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121049563 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.096285418 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.136164546 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123559486 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094118135 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119621457 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085834732 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120442858 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086012334 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114307829 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070208246 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121885564 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093105753 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117936705 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.095651837 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.112828365 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.0856284 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.117306392 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.09261247 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.113089661 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124879889 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094437443 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11953772 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.0969059 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122045236 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088455255 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112360459 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.094607825 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.112185312 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.092610565 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.120356319 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09244333 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.118592045 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118560771 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099877754 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.13727112 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088261414 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.121912373 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.095959425 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.121943185 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118672193 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091268802 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.123047577 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092051012 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139692575 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094304545 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117465686 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118703531 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095933931 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117375155 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.09530462 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120146535 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.096419363 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12382374 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091096808 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123517404 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116397231 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087546126 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.120523462 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090031228 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111045113 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096411232 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12233934 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085216067 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118717066 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092984125 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117966827 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085287697 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115142941 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.087948483 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.119589382 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087930104 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.095990464 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090461465 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.11822906 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085186692 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121547797 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.092348901 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.119368385 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.08744662 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124502293 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.085315737 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118382071 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.085904231 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.113862638 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113073699 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091498469 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110529985 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089760567 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121089697 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088957493 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117484655 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.099913807 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.112042498 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.093637263 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.111515692 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.086177988 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126874661 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.096122596 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.113141452 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088051223 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.112727967 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118292637 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086960103 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.110918851 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087867176 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11093971 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.093504874 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.111379617 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089887144 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.11905955 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100643817 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111824687 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.090098535 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114435875 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.086799308 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.118025537 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.086003092 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.113380934 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088157715 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.103696491 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089391046 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.112928407 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.094059493 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115373805 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.094796933 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.115175522 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094525056 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.118003007 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.091532213 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.118627927 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.084683989 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.101089647 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08827315 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115074836 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088446465 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112820428 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.08799552 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.113202585 seconds)
done (took 17.091397249 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088347407 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184751016 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150987193 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142959653 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106334049 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113965789 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122235344 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.11870689 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115366863 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143247048 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109869242 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133736249 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148177625 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086585964 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112643526 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091313295 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114320621 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101929544 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148144365 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133577576 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164851532 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085978012 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.148448164 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136498607 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.09555808 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.130667259 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113054701 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.09190638 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115472237 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111749752 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134636356 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089569674 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114715536 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134051663 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.104883538 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120953691 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086809863 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.12018709 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086490186 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.114061824 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14140448 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108467469 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119523221 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116985134 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092280063 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114313982 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089106015 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121366149 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098451472 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117257889 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100370179 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156268815 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117422272 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122369585 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086292794 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123972793 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.0951911 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.116818141 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089917056 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116359275 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.086024713 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.118445251 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127190902 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141799488 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092586578 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.1216766 seconds)
  done (took 8.744327124 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104713588 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140919028 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103382493 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132511036 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112694734 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088296754 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113659353 seconds)
  done (took 1.85542656 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088727099 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134180648 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111139698 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137661531 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132511359 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.127980106 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124169144 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.087886329 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132706658 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088063012 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136181787 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153581777 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088613684 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122284632 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137861992 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088537635 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138373114 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088354691 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117614281 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110887734 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118491509 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134610158 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089835355 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114279881 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101972658 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115188106 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162739606 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.0937758 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116111269 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091614776 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112942762 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165529917 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101450538 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126270198 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.08702397 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130349228 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127644503 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087254307 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130292909 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092719893 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129722819 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087947897 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116470498 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086606614 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120314853 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.09816844 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116425213 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114034521 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092285241 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133619395 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089693834 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128197498 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088645565 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118870284 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089126348 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121321681 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097217887 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116555525 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133522307 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090688215 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132171494 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104329641 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.129533579 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130874981 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092109153 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129970579 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102568069 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11815711 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089640943 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11908459 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.1038716 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114149905 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.088141916 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126694513 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115898896 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.111902561 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139096387 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089755108 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126411573 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.086991081 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.116617102 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.087281092 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.138402252 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118513194 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088409111 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119892443 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091613622 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113191872 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087196671 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11860513 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086995615 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116469646 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090694499 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115894512 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090957459 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132594002 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11512897 seconds)
  done (took 11.961802295 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091018395 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.1155119 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092399095 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114956147 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090227623 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116056339 seconds)
  done (took 1.688067028 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114001935 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.11909916 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102722679 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.122473279 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157987915 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101736583 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131211329 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124220705 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.1057257 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129502092 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.128417905 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.10410097 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136549769 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121377488 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103763402 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121494366 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.102962884 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126415632 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127099901 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095827294 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138721287 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120719703 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097691579 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132541316 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.09237405 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122503879 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124800314 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102282616 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128979385 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121828252 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097169181 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.11824771 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095474231 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123955717 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130010801 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095629079 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121805913 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.09253817 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126976856 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118218006 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104293578 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123430868 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126015493 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.095304822 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123983856 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.095530995 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120708776 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124712137 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103705214 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121794829 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.092613126 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.121903533 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.11762658 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.094196615 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122177471 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097080032 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120685718 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129842902 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.095166167 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122866492 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.091341334 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120146477 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122956814 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092520632 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.130167831 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117974222 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095877845 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122510902 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096331301 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.121755499 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.091833249 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119641957 seconds)
  done (took 9.32724413 seconds)
done (took 34.626993368 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.708386701 seconds)
  done (took 1.776620103 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.739597925 seconds)
  done (took 1.808242501 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.621921836 seconds)
  done (took 19.693696709 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.517786038 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.606187995 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.821588763 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182140652 seconds)
  done (took 3.197693249 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.99314015 seconds)
  done (took 2.078419027 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.245478118 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230782153 seconds)
  done (took 1.547536893 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.809465911 seconds)
  done (took 1.888589674 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.370446062 seconds)
  done (took 2.445971012 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.332241038 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185500755 seconds)
  done (took 1.599906379 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.556596857 seconds)
  done (took 1.638395066 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.131515846 seconds)
  done (took 8.218039407 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.261151694 seconds)
  done (took 1.35696955 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.299752558 seconds)
  done (took 1.385182578 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.794505878 seconds)
  done (took 4.882192737 seconds)
done (took 54.596930472 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098704348 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127838928 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102197291 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124969632 seconds)
  done (took 1.534358768 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101639219 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12223053 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099800587 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122144779 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.098998214 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.122456926 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124409686 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100344145 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122259521 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096665368 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123147553 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.094083687 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.126037249 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123095549 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093429391 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124314641 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098145837 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122684205 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124357044 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096673684 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119500221 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097929889 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125212532 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093088229 seconds)
  done (took 3.761416523 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100455444 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119339488 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096524348 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118821925 seconds)
  done (took 1.527494586 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099858514 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143260823 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138676332 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100182945 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142887679 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136672425 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.091934932 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117592509 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094848212 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126004819 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090630173 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150024806 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138109336 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099371799 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.129378919 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087241456 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119094941 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137594942 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099732901 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127687483 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093053276 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127001735 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089423193 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140731836 seconds)
  done (took 3.908537693 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.103354842 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.152557889 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.107383227 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140645755 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142502892 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.087177573 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.129671043 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.140837222 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.177103346 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.088875473 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118100083 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.089120817 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.121122615 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.088662092 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.128200967 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.132209339 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.16363659 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.11735836 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.11832298 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.116245229 seconds)
  done (took 3.556213016 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098097939 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119161883 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088404948 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116803897 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099572502 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121534658 seconds)
  done (took 1.738808087 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.092100529 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114757268 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090432501 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114730719 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094542761 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115886416 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089507623 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115658219 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09105047 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115993144 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090149271 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114219165 seconds)
  done (took 2.333562117 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.49259114 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121245936 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.094712526 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115094737 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122883349 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089375304 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129868472 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.092541315 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143236085 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088709996 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.11720834 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089923321 seconds)
  done (took 2.790569058 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23632209 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127184761 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.292586747 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190201983 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159097069 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171521209 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152597247 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16582479 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.198278083 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158672733 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234183456 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194350484 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151995358 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19025825 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140236932 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145317768 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197420136 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246216506 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155761355 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205033418 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227063238 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165550547 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179489423 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151941308 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1125961 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169111099 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122816723 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129897186 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206757162 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204955307 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189371664 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16481428 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147922331 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240651436 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24904907 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198408967 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188767018 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136843736 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.142309052 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.168301057 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270655031 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14008875 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206674565 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159816131 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133489946 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191784992 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196313804 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.175561612 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150611797 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111968817 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22744463 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212232932 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.221905777 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13868806 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13457856 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188898685 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.167412041 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124973296 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252637203 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226676844 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181832632 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092734085 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14822328 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192141813 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211034194 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.167549573 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181165273 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147400977 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190986168 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187335624 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19412753 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190760856 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184076437 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141386711 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170349125 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173401444 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170287811 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256666945 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178080289 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.12390766 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168692661 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150019965 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130824416 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.16818557 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126559015 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213274641 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150090103 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.13652237 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164446234 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160222531 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16075971 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197794128 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217934676 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120949668 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112029566 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155453131 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127291596 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2169105 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139925788 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159416799 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159467338 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102149959 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176283057 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126012706 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175948294 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118620926 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176903272 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181829521 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.128954267 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158110013 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.124164583 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152588569 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174982649 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22768651 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1397732 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107114033 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232902366 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177061366 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150212402 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1804261 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19955218 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1443511 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150108882 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197217547 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245027353 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139526985 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204640195 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155544138 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.135745617 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106388315 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205571418 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128626605 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161114879 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133992586 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.179510746 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237237795 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097668027 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139715866 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187569019 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133801874 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131330982 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160300508 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146951204 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.110474471 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147120964 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.151771046 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178913999 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177797987 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153096256 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165771621 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150644001 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252429755 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141845758 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.150854242 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147239945 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.093269813 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218923881 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198702802 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130405315 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204346953 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.171347538 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156870702 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170633554 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134781695 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17711391 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102373696 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122260387 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190077268 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164881921 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161444497 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222124729 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126155958 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.209705356 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181167958 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171916743 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173294469 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165355157 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15881596 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139416975 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159150563 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165451817 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.094750114 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142448964 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135263402 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157077355 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143253065 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105592195 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227135227 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167887322 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148613714 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157680801 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12023125 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208944459 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.100985484 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174489226 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.205273289 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117622734 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.226019452 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191591238 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184134358 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143630932 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235107892 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.09241193 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126676917 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142849642 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170944815 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104831923 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136886617 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166033567 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180270439 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210155842 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176874999 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162575016 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175822063 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189850195 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094144491 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170230635 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183853261 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202167751 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.160970018 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14316907 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152908649 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176482432 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157209636 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25550419 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165904623 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176617219 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235752224 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.121328057 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133650748 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151660331 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184404643 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154099606 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17675863 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147640886 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143481083 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161164318 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.10302902 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187570616 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183424484 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162719045 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18835612 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152883104 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212990671 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100885513 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165479034 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158796954 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164676129 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109136903 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174397835 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203046385 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148642873 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170222623 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218125794 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103825959 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.177597525 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237585839 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193695936 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138859548 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157599059 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158260334 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164233708 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173543809 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177768105 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159569611 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188424336 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157455674 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.107188784 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140615488 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150476061 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152012592 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132066229 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.119150787 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.203038458 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111089467 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216702042 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161162261 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157614502 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172281034 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121683509 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144996347 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15103149 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213545506 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201404662 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21104779 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150685305 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.179182514 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231152107 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.0983312 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133016209 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132448981 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177390398 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10844148 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21569271 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.119561191 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157102829 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179626115 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220782888 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109792204 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122608885 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157219179 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173179041 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164132024 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152277553 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158806837 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20412939 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.143345639 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10266827 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.171343995 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158425334 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148262598 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193472524 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.110366111 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148114265 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101571034 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134560659 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164151686 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204817033 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136556132 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.186937002 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174961928 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167068778 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165208043 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150013644 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120634747 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165906814 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22804486 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183077585 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133619917 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155785478 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175306795 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194525883 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160896603 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141170352 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201422273 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221091344 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.199032401 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142437509 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167546388 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167749747 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15561763 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186087066 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136642073 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204519863 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135846629 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223399847 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124065165 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143268709 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172505566 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.148872361 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142100357 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186341988 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172827524 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137110091 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134251323 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167771785 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175651986 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156522831 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128047377 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180055661 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.096022897 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220263601 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257184009 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106231855 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155497036 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150242353 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134959768 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157178986 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158042909 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110609886 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.169351566 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20482027 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135697897 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216203755 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203392429 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168118632 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172276288 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144614454 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692633008 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.132146413 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193456924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155020669 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231727247 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121915144 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169742666 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161184115 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167903261 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225225665 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160237592 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.233112273 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192602314 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176515623 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13479884 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15844888 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161171795 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144222134 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152532014 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16661407 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159962683 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151757772 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.176803834 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169798075 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133784803 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111782084 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22577773 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125424471 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215831595 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179697744 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109596865 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199948369 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185728804 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133857282 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.178961165 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234105397 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113641502 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152443205 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134227148 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154915411 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258557372 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097266003 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22583976 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175295979 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157894312 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166876261 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146227654 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191094925 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157112733 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175561378 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147824376 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158676661 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156046348 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137218367 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102381665 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155330135 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166524661 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150339051 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158664298 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.140658489 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217991348 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095560476 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146644962 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157875643 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187016959 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244234728 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107339814 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138251272 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162113723 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152141095 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174499228 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175634039 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137414564 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13510879 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.106792091 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.162339691 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113299508 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155918791 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157722233 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165122506 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235307088 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108131288 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.281464982 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141527971 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154148596 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.089869378 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132889166 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150385703 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116778205 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157680352 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152087915 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262068256 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146481443 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10487796 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148974909 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127174158 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106735829 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166822846 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164126174 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203463057 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116769602 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111632301 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159059995 seconds)
  done (took 80.731610644 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175112999 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.156755046 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.163300865 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.230837401 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.20011164 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286165661 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.236831295 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.271804974 seconds)
  done (took 2.897100427 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094034119 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148221705 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153426383 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134942875 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092273718 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119592561 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.336356907 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132018707 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092153701 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.141535655 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.14779622 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.121735148 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.518684672 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.089000109 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.122787669 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.112924014 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.121682762 seconds)
  done (took 3.85714743 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.467762902 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.76173987 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.484235133 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.136071434 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.230377633 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.138992973 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.953504644 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.222243348 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095462694 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.503662015 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772849888 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.19644755 seconds)
  done (took 19.139102853 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099618487 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.122403914 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108777591 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136682034 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095428936 seconds)
  done (took 1.739797836 seconds)
done (took 130.598312951 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105894736 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.395142936 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072288899 seconds)
  done (took 1.682317508 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.10789329 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.13830237 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10913134 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138137213 seconds)
  done (took 1.684209912 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098751971 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127870961 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108987885 seconds)
  done (took 1.519899103 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.327850185 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.192470472 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.145576674 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106793448 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130740998 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103276013 seconds)
  done (took 1.52658824 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097457108 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128057403 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097920854 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131504204 seconds)
  done (took 1.643999433 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096047629 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070786517 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.102582427 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076066143 seconds)
  done (took 1.530268518 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.115065641 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133651965 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103296321 seconds)
  done (took 1.542218746 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130005029 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.140598285 seconds)
  done (took 1.462713833 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105572111 seconds)
  done (took 1.289677706 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117649412 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.171212919 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191563448 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16678306 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.230810993 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165499892 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141653941 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113227113 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132293218 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144663462 seconds)
  done (took 2.765574238 seconds)
done (took 18.605698724 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103326699 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.425830984 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384572089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.147231413 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.724348976 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379764993 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.053118268 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147902108 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166193413 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094080762 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140918174 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672257622 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.044053745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.378633021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999515035 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.472716275 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676797466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123430234 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119239912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094923837 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.03541965 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092447333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123041709 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092516638 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705593918 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426697132 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095941907 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.466100618 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09287681 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126848084 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382792739 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124421793 seconds)
  done (took 17.29316058 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096398009 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.175162601 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097705955 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139449406 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124484828 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094198748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.12639247 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092944744 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180271065 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123357214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109943991 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122901534 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126318311 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095661671 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142931705 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09156367 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12717822 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0925881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123421241 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.092636254 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141763792 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121842114 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094590536 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123015877 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093699829 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136684593 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09354401 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.124007052 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120701634 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100278217 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.129380979 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094669221 seconds)
  done (took 4.940396197 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141372356 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183683376 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.130023155 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126370746 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170780753 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125333544 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199918749 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117941489 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.185236597 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124803885 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140299913 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093333326 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158399599 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094179035 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144966155 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122053597 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09723955 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123649406 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092494691 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124594304 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14050458 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09461648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123525322 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094406665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123765017 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107717798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.125622461 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092274131 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123505138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128025139 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100124736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125655033 seconds)
  done (took 5.272645738 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097523503 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128244063 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109947984 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139497433 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094270874 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127341109 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097197327 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126688081 seconds)
  done (took 2.113975481 seconds)
done (took 30.805888085 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.103727149 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.123127496 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.098736233 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.136049781 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.096768944 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133713758 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090937326 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.129847466 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.098061377 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.12833783 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.128237651 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092521296 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124210471 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092912993 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.127953301 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093338774 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133849872 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.095864381 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134188706 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102862467 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.126255587 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.09836789 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.13014084 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132324229 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104226556 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133762431 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.104323174 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.129280405 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.092801346 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.126068158 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.094648418 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.133784181 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.092304144 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.134526415 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.121819745 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.094499807 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121053285 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.093530324 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132490434 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.100026845 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.125871631 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.098508695 seconds)
  done (took 5.972059696 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108099486 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139803112 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105569288 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080538203 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.119142491 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.08067956 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139051358 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078875869 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11203498 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108417756 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.076970976 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108582897 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078357144 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072239859 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.108038361 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075781912 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109331612 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076786415 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076616993 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.10710968 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0811567 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072543871 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.110173924 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07864575 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074672981 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11235061 seconds)
  done (took 3.69790236 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101192175 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136628405 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112726972 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184787254 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161672427 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099337039 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133839135 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109311593 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.140301249 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120228187 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096937928 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150949733 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110156423 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130466222 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091120223 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139121277 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.1352967 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095926985 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.129158043 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113537203 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.13944335 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102011475 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144430583 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.103608194 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.123511841 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09327308 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.127835285 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.134954482 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097924909 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132468819 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095513115 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126424127 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.093303836 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.135154032 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126206957 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094751229 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14244641 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102259654 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132543062 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092242249 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127821396 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.092010382 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144542674 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.168243883 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091629743 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130912565 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099442315 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133317953 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.090776066 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.142395751 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131612478 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.093503883 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125587504 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09221918 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.121662356 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106691758 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124786535 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094686262 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132762227 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.094456379 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136192932 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.095392349 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139523704 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122534087 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100949315 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121605704 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093190688 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122102448 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114585207 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12504955 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163508578 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094465586 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123537112 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.10248652 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.130826275 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097725764 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.124167688 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107319756 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134378349 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.124896661 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.10288393 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125970573 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.096065466 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141663094 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095593988 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125213342 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093876928 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.130302539 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.095020277 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.125394949 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.105103974 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.124067217 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.124750426 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111872637 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122247333 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.094356452 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129642506 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.096353645 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.132528084 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135575871 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099051168 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.12360727 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101839456 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123905073 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095803906 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133765873 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.096493941 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.123390268 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.096242517 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.131388084 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12286441 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.095335306 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125967537 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095084373 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13232267 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099417947 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.127995862 seconds)
  done (took 14.988987959 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228022154 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218607754 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.125232693 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.210081313 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105153293 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.136191013 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213464726 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154616887 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09455299 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.123762203 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.095445547 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.162996196 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156582174 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.137403638 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.136690325 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122858548 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112292043 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165766579 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214490022 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.207244738 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145110847 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101256844 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.127720986 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.09400878 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.12749747 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.101786776 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.141920778 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.136883704 seconds)
  done (took 5.313294263 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107864774 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.157482252 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09721014 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146825604 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.1491878 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091774238 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.130389793 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093525507 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137618705 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13655915 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092947147 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.131277011 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099180998 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134773824 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.092735732 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.134762317 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132861232 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095115613 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126311946 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097169933 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.130870135 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101144011 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128902196 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091325661 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133012663 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12094908 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086996849 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142992082 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092321414 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146487295 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121219047 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101088938 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13339248 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094277122 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123408441 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095649079 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.127109947 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09524804 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.126376463 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091653471 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122721868 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078619704 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122869472 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106064876 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130881718 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079477034 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131619105 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097290729 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.130529542 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.090098013 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.127315791 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.095813556 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.128905163 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129322264 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.100107192 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12784075 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097234367 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.085222051 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.132380702 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125008226 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.086749314 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090863442 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129643348 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.086412942 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133477076 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.128340445 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093381265 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125682333 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098678358 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129706065 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095447216 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126531632 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091357433 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126305275 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098093789 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.128980006 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095763268 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123354633 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09197808 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125368716 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076808972 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123938775 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075094161 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126533343 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.09284914 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122620054 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096255059 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129936534 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.106535778 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126715487 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.128921631 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096780989 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122537214 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098364478 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.082263297 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.128185834 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.138657075 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.110769099 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126254714 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.090708035 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.139119282 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127620527 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094350868 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076190095 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.132749683 seconds)
  done (took 13.109108171 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.117908556 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150295358 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095093469 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.140195188 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.149709488 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.117925445 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.132261919 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.100410544 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.126472043 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109485234 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126336058 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.101128347 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.129811279 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.101286107 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.149255754 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131559476 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095768988 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.134006214 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.10164976 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16100654 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.10584259 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.139980115 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134192117 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094863294 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128774211 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.106399446 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.15201619 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103192131 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.134923177 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.106201132 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.135723287 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.151110849 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109610945 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130334556 seconds)
  done (took 5.432618633 seconds)
done (took 49.70757417 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.340621887 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.537554665 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.299431944 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.328358931 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.327680435 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.324560831 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.312506856 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.309910372 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.61480847 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.299220262 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.558430235 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.181690201 seconds)
done (took 60.660197458 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.306522315 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.427627542 seconds)
    (2/2) benchmarking "String"...
    done (took 1.559142136 seconds)
  done (took 4.216242772 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.661274237 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.372740588 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.58806717 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.292666358 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.293251927 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.740394654 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.120775255 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.757640147 seconds)
  done (took 29.38562107 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.293482457 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.727940499 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.357317782 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.360197215 seconds)
  done (took 19.961033452 seconds)
done (took 63.752544288 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.321829135 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.331731401 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.330555438 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.275539096 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.443889104 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.322535913 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.532771364 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.356042212 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.314894778 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.299715087 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.334494436 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.295820377 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.317709883 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.540428794 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.29884349 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.295501144 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.347672931 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.928230285 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.741720895 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.306981276 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.315237105 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.365754654 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.303142444 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.298427232 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.332403005 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.297011034 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.29533657 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.331810169 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.161589924 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.297682437 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.325115023 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.705376826 seconds)
  done (took 194.187476573 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.297101355 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.389708798 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.516760256 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.361696441 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.850361843 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.497921094 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.436370591 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.939086587 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.327030135 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.327596715 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.543133633 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.303681296 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.626205891 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.293532535 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.313196919 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.299489669 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.638142472 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.66509842 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.336306477 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.562969861 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.313099348 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.519400522 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.427709991 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.52395313 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.338700248 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.44854977 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.350119488 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.340026262 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.487158537 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.547247723 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.316747731 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.371452711 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.989828252 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.160954952 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.311551315 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.338707506 seconds)
  done (took 154.534090319 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.623933704 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.298043278 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.298882074 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.298912464 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.334253272 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.29826095 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.9114694 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.939624665 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.850705809 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.801141682 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.366766408 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.610514759 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.298867981 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397411334 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.311681654 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.300417421 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.313485547 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.346463532 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.300236027 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.300258081 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.93718049 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.317539205 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.359966351 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.31122358 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.30024608 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.334771684 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.693537633 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.299956768 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.334624624 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.632889037 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.35522643 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.299395412 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.6736459 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.020163188 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.413485584 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.300490665 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.335258669 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.301781171 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.577037755 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.300154312 seconds)
    (40/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.300680101 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.301337207 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.304689725 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.94947405 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.301837582 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.914749621 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.301822037 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.277719875 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.300865757 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.300707284 seconds)
    (50/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.301615313 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.167594798 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.905919132 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.321784788 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.300624231 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.303655896 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.301293508 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.302157047 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.336857677 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.066597066 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.407740458 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.322452765 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.305284986 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.337152452 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.302620015 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.703194669 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.30245172 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.529915416 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.385063089 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.526727978 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.94275973 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.309978204 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.400661224 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.426260073 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.303689297 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.303647481 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.303495946 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.302767705 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.41410336 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.305216607 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.770025577 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.31001472 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.305344746 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.366342719 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.303751755 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.402411952 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.30330208 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.715745715 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.310224699 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.304130433 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.087434623 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.401311199 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.304532143 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.304697451 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.304590034 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.766457529 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.949763837 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.597043859 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.31005628 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.031943015 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.310251631 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.78627819 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.916724544 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.960298496 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.305842133 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.416857126 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.308464948 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.307377296 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.30458067 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.333265819 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.324900609 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.363737237 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.305389126 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.30534936 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.705898089 seconds)
  done (took 360.709844739 seconds)
done (took 712.277275867 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.010174877 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.956816645 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.099417518 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.97360039 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.951637048 seconds)
  done (took 11.223158382 seconds)
done (took 12.454290253 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.518136945 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.5235495 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.381641309 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.524614224 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.34332139 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.546987534 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.504896843 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.332587568 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.417031894 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.405569666 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.423860011 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.369584219 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.343938336 seconds)
  done (took 19.868166046 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.641242247 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.693644003 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.374441544 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.640674178 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349772031 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.647058511 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.521197502 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.538634233 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.539574064 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.351339822 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.320383622 seconds)
  done (took 17.851911076 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.653676681 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.650156221 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.37794938 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.647960689 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.353142229 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.64752088 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.525153423 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.542463531 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.544651731 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.353239821 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.319261866 seconds)
  done (took 17.847995604 seconds)
done (took 56.800345507 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.316192256 seconds)
  done (took 2.549907477 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.355061477 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.525920928 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.343718955 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.320228331 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.316320674 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.317133182 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.321160927 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.317195384 seconds)
  done (took 12.051326655 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.31386448 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.313152689 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.312019462 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.316585649 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.3127763 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.314911483 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.316990587 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.315334026 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.315839406 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.316050643 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.313687358 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.312729961 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.315843367 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.313672636 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.317362248 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.313701296 seconds)
  done (took 22.269473276 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.31574756 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.314496626 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.313464352 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.314370043 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.312598043 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.31450524 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.315243882 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.313288574 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.31360185 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.314383242 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.31444283 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.314149161 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.315696161 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.313533131 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.315014611 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.315156256 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.31441426 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.315274005 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.319296602 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.313905068 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.315139569 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.315651297 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.315775105 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.316470585 seconds)
  done (took 32.792448494 seconds)
done (took 70.897169142 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.70126177 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.240850583 seconds)
  done (took 10.177124354 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.317505648 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.318823495 seconds)
  done (took 3.873908315 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.3184591 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.31848219 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.318505414 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.318985344 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.318248494 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.318518085 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.319286328 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.318324127 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.319429731 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.31914175 seconds)
  done (took 14.425036718 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.319289896 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.319488222 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.317121901 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.320085238 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.31799356 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.316490327 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.319643083 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.317824237 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.319772374 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.316462858 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.320177763 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.318320961 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.319645994 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.318274831 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.319352361 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.317685204 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.317728694 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.317862662 seconds)
  done (took 24.971282465 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.320055982 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.320074684 seconds)
  done (took 3.877579779 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.317342291 seconds)
    (2/7) benchmarking "second"...
    done (took 1.317262168 seconds)
    (3/7) benchmarking "month"...
    done (took 1.316514316 seconds)
    (4/7) benchmarking "year"...
    done (took 1.316547597 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.317949866 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.316979901 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.316976601 seconds)
  done (took 10.45899163 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.321573218 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.494052772 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.577807698 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.925950942 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.321842682 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.323997308 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.167483425 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.323802502 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.327459741 seconds)
  done (took 15.023220231 seconds)
done (took 84.042613827 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.379138893 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.336254114 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.628766042 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.337785335 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.338914178 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.617287704 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.334302323 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.450328538 seconds)
done (took 38.663163226 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.328869427 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.108047306 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.118956293 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.336221726 seconds)
  done (took 11.803518397 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.30272085 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.381054786 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.319406078 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.449572973 seconds)
  done (took 18.695627553 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.460179661 seconds)
    (2/2) benchmarking "read"...
    done (took 1.665575519 seconds)
  done (took 5.368455912 seconds)
done (took 43.435882931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.323767311 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.322966471 seconds)
    (3/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.321572057 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.323381658 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.320808265 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.323352962 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.320522246 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.320009574 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.323979126 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.323404392 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.32296237 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.323937707 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.32392547 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.323731367 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.322064014 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.321222043 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.323283264 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.321361525 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321154722 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.321049832 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.321264284 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.325513718 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.322052682 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.32171891 seconds)
  done (took 32.981680176 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.324819174 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.321737234 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.324696876 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.324834324 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.322402646 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.325583273 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.325241216 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.321881716 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.323801349 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.325249468 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322763214 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.322170501 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.325114467 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.321998783 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.32482759 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.323570212 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.325700396 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323036365 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.326066715 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.324414753 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.325195829 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.321786757 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.323075398 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326135888 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.32436628 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.3234846 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.327116964 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.323955268 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.325911137 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.324541642 seconds)
  done (took 40.969612714 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.332262779 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.335236362 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.32651361 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.326535995 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.325484327 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.326905137 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.326738988 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.32655802 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.326939052 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.32667539 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.325788657 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.326146777 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.327416054 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.32731537 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.327425867 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.328259411 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.327962987 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.327785553 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.32769384 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.32709855 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.326878113 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.328413261 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.32743441 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.327935648 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.326802294 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.327792567 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.326505823 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.328745805 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.328093868 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.327811094 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.327697083 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.328025526 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.328229326 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.328446001 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.328898428 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.328943469 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.333422594 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.33651087 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.327742348 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.328575061 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.329732695 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.329492129 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.327948266 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.328000125 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.328284831 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.328338713 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.329865071 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.328375679 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.328581072 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.328287451 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.328767914 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.330054185 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.330118136 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.328626913 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.329135154 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.329478602 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.329165387 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.329748231 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.329824406 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.329823811 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.329957423 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.33097447 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.330336394 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.330087311 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.331433202 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.329903748 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.330392831 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.330533084 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.330529855 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.330901101 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.331335679 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.330821235 seconds)
  done (took 96.921583451 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.329874223 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.329095625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.328927812 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.326193573 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327549286 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.331073755 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.329555481 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331617927 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.327439671 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.331123537 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331359561 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.329367839 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328626198 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.332851398 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33158216 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.328636763 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.330202183 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.328009927 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.331382847 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.332434235 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.331464184 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.328958714 seconds)
  done (took 30.506690431 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.332402569 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.331420059 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.329301159 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.332812836 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.3283889 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.339568355 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.334265041 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.332410785 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.333723047 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.329526926 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329674368 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.333294253 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.329782929 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329462155 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.329790679 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.330023284 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.332848983 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.329909978 seconds)
  done (took 25.219714444 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.329967365 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.331681808 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.332459442 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.331258454 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.331421434 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.333216898 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.330317643 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.334144634 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.332773358 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.331248361 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.333430592 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334020525 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.334472343 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.331406898 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.332443945 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.331022207 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.333578819 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.331699715 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33380991 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.331992333 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.331830773 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.334537038 seconds)
  done (took 30.565068209 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335110492 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334803447 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.332131535 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.332433332 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.332060736 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.335068794 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.33440939 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.331848663 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.334912386 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.335520867 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33225608 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.335660067 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.332351146 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.332876857 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.333574171 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.332899089 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.33520075 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.333582807 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.335843927 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.333607981 seconds)
  done (took 27.928884319 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.335803147 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337779474 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.337831468 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338054206 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337111571 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.338005033 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.337282816 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.337876969 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337686076 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.336860995 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.337583553 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.337760304 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.33693808 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.337276812 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.338571974 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337837239 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.338267268 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.337809867 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.337985864 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.338140203 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.339196498 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.338356999 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.337439337 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.339691448 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.338332129 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.338742929 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339001727 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.339133061 seconds)
  done (took 38.716337256 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.337851583 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.338182892 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.33518534 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.336211863 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.336638178 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.334338794 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.335729207 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.336332802 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.338148017 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335377483 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.338656637 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.338841278 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.339100539 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.338361141 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.338701699 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.339620167 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339026533 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.336596792 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.33584892 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.335775202 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.339684914 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339513677 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.340568647 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.336388766 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336956797 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.340203183 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337458625 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.337099904 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.34010502 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.337485934 seconds)
  done (took 41.385610938 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.358970131 seconds)
    (2/2) benchmarking "in"...
    done (took 1.357207691 seconds)
  done (took 3.973555317 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.336620499 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.33998561 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.340005916 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.338081466 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.338084804 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.339715509 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.34125909 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.337306242 seconds)
  done (took 11.968823373 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.341873645 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.339590543 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.341638579 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.341518504 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.34148255 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.342050508 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.346566502 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.363935631 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.341422927 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.342141523 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.349249495 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.349503737 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.344042185 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34124302 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.340844959 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342967868 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.340724088 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.342790346 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.342924603 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.341146902 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.341850924 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.344337386 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.343946529 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.339180887 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.343865771 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.352323128 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.367424318 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.34239406 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.341314925 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.346649257 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.341887503 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.340064828 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.343369763 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.342900474 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.342844519 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.344214413 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351331977 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.365305967 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.348606764 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365085544 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.34283454 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.339944399 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.344827155 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.343199679 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344570564 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.343818543 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.346051909 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.341055843 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.344495024 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.347517379 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.3496634 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344382631 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.342742528 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.347853754 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.345543988 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.351045726 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.366352503 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.348348136 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.35543386 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.35561737 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.379510191 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.372719735 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.346675006 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.345935709 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.356517486 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.370460301 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.351630283 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.36548875 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.342390385 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.34552748 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.353131905 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.379256005 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.373077244 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.344944536 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.344938655 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.345545474 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.34642071 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.345948456 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.353166634 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.371123387 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.345847505 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.346233149 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.358077345 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.371064827 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.345596052 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.347278878 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.347280386 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.347106248 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.347941458 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.357409826 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.369170187 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.34731003 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.344918952 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.346903513 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.347964312 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.347363533 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.346630397 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.348371711 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.343195805 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.346834395 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.347260631 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.352527235 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.357427683 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.347118478 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.347017437 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.353898915 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.368329611 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.3463913 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.355051886 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.348029212 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.348421953 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.349980897 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.35487949 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.345797964 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.352150248 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.358645996 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.349317689 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.350254889 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.347852977 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.349244679 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.360356789 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.376892911 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.348448848 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.347818187 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.354727514 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.362262758 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.350072988 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.353102651 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.349701413 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.345995226 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.346491011 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.351316884 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.349309422 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.349324966 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349669844 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.349861404 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.346614849 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.349660081 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.350761326 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.351470068 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.351458645 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.350892605 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.351200111 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.35101677 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.350462878 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.352156967 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.355912436 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.371723488 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.351882224 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.350474501 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.347742813 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.350887335 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.351196604 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.350567351 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.352561346 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.350879443 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.350289645 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.350152674 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.350663622 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.351467155 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.350921731 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.352571442 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.355328723 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.352263263 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.355172946 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.350473098 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.348664209 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.351631609 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.351905235 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.3514553 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.351742608 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.350151718 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.355942164 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.360395224 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.351136186 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.351026929 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.354673219 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.352993555 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.352636253 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.35297644 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.356391695 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.361269564 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.35143611 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.359378919 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.374179225 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.353302188 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.353103712 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.352957478 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.35281271 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353109238 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.358182528 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.362015757 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365686758 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382420271 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.355421568 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.357179596 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.355198117 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.357823351 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.357637757 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.353609136 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.354525573 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35460225 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.352959783 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.354175089 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.35555844 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.354526081 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.353906176 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.354299438 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.353853185 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.354540166 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.354678593 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.355387345 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.354532219 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.350884578 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.354104825 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.355537006 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.355415006 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.353483716 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.353849864 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.353983031 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.354438834 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.355221755 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.360862022 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.352138483 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356715412 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.355611845 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.354848118 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.354619724 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.354996786 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.357832982 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.355587506 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.36293044 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.378021452 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.356474455 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361857649 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.377719472 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.354680884 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.358590108 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.355651967 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.353962806 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.359131133 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.365146817 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.356140998 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.35735594 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.355652749 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.356896951 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.355695524 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.361669698 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.375609558 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.357372357 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.356957119 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.358722261 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.35608065 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.357447739 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.35731449 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.357883203 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.359270733 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.356166544 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.356292137 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.35858577 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.357238266 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.357392805 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.35830215 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.361025444 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.36611525 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.363803731 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.357398979 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.360114359 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.360128505 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.362371506 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.357772691 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.357393762 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.357668313 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.369360786 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.387066302 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.366133187 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.381217367 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.358678131 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.363019486 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.381309764 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.362719095 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.358521747 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.358883789 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.359603609 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.358045772 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.35662416 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.360614149 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.35819025 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361249583 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.367243923 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.363853366 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.358836125 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.359188921 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.359517854 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.359747197 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.359647473 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.358800065 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.359885573 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.361643041 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.361014887 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.359645048 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.360419576 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.367644236 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.383221386 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.360440113 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.360692813 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.360240979 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.36022289 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.362112211 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.360767362 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.364818084 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.369425818 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.365378371 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.370267566 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.362389648 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.369724473 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.360747405 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.365380206 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.370536775 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.359157612 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.360572406 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.362788921 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.363482964 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.368498658 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.384108345 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.363050489 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.366203494 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.362412581 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.363437144 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.3619015 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.362275329 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.36215426 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.36168082 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.369434606 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.385855066 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.367490854 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.364111205 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.35990252 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.363071449 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.362846601 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.361819551 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.366940368 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.362852413 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.364027977 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.362956676 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.362944624 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.362992946 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.362750894 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.363059692 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.360661765 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.363105747 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.369807703 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.388152269 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369366191 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.364158227 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.37024471 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.385836801 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36971216 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.386954665 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.364508433 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.365430839 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.363772245 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.364941905 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.364065208 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.365756723 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.364627916 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.366063796 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.370290329 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.364691668 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.367624688 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.365988861 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.364938356 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.366291463 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.377110999 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.39131192 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.367164588 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.369517984 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.362690894 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.367985104 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.370305802 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.365741459 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.365426686 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.369389548 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.377683555 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375391881 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.366250617 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.365815952 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.366590514 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.365157502 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.365978329 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.365213138 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.365954373 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.366015292 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.366853548 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.366163742 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369175229 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.365483068 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.367083178 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.367221211 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.367731955 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.376958846 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.38880681 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.367021172 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.36800239 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.366702208 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.366738152 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.36654345 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.366767631 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.367827806 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.367286939 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.368822623 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.375912986 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.374641663 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.369573727 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.366417275 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.367497476 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.368637994 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.367488445 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.368297976 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.367583528 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.369262823 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.368821981 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.368577872 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.369479775 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.367065339 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.368567222 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.369268201 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.367365457 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.371834327 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.377403495 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.369692485 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.366240931 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.368435069 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.368868881 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.368430992 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.369023124 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.376314781 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.394527254 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.381835255 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.380066933 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.373655673 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.369884771 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.372542881 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.377721539 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.366794156 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.370252649 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.370782691 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.370834598 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.371511397 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.374481013 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.370047301 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.377371248 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.391517793 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.368948016 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.377109963 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.393308992 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.36960571 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.371632899 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.374046747 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.370598007 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.368063908 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.370574017 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.370255595 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.375467453 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.394407873 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.370127882 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.372694298 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.369854425 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.373371369 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.37509626 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.370522755 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.371566227 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.368886736 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.370842249 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.371561537 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.370703206 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.36924572 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.371199966 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.371697388 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.37558157 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.379128528 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.369571961 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.372930636 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.371760542 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.371742404 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.372524251 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.372127532 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.369438623 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.368709033 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.371322981 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.372475748 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.372617429 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.373929014 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.373412917 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.374861126 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.374148729 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.373353128 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.3769475 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.384352817 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.381227848 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.370511611 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.372243251 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.374373213 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.3755786 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.373659722 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.373389323 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.373703438 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.374886011 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.37409859 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.37383777 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.37348834 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.377185727 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.390256447 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.395531797 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.374415119 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.375233197 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.377313474 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.372581153 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.37131584 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.374865068 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.376839548 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.378137369 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.383393333 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.375698063 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.381260361 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.396180566 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.376026774 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.378705312 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.377592629 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.38399292 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.377063178 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.375013307 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.374888836 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.379562005 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.391607025 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.374118136 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.386528262 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.406772199 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.399618118 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.376526099 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.375756323 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375837053 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.376609746 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.377455682 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.375347905 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.375619046 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.376552121 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.374859269 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.376569876 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382209183 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.378150746 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.374523515 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.376188625 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.375471443 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.377759297 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.374116984 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.377115593 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.376386287 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.376552272 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.37701193 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.377439266 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.377533749 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.389678932 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.40704145 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.376360355 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.377699026 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.374162899 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.380428257 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.381419264 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.38957067 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.387261793 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.377567824 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.37880638 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.38030029 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.378369536 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.376445706 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.378277131 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.377952392 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.37873591 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.375642522 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.390393172 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.406634268 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.383516508 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.378549844 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.380123531 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.378765818 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.379802359 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.379598019 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.37970639 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.38104376 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.379847894 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.385655794 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.379586506 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.378474413 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.383242348 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.388332405 seconds)
  done (took 813.839791722 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.378441169 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.375804009 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.37722469 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.376316354 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.376009042 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.376435979 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.376323528 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.377139608 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.377181061 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.377013716 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.3768803 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.376976009 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.377018214 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.377844038 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.378081105 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.377207176 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.37865707 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.378596374 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.377740845 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.377356087 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.377212399 seconds)
  done (took 30.21492418 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.3806885 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.37737491 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.378237806 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.380235163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.37790375 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.380853411 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.378434698 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379391837 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.381546624 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378848066 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.383044301 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.380394623 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.378147205 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.379050414 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378200687 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.380707111 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.381158414 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.379282213 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.381414631 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.378795892 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.381821447 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.378389756 seconds)
  done (took 31.650100328 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.383041434 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.383003874 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.381442895 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.379904655 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.382578298 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.379708471 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.382204179 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.381902676 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.383295266 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.382147439 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.382332944 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.38477779 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.392340455 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.388649255 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.384925993 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.383720526 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.527846002 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.382061134 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.383991347 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.383447639 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.379876377 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.388790302 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.403678883 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.379760826 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.381831914 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.383023818 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.383905418 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.383021153 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.383613078 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.385699939 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.388150242 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.383877476 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.382939143 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.384062541 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.382885377 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.385693309 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.388533763 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.383568671 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.380946812 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.383655665 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.395243229 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.406952777 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.384269418 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.389250924 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.406906874 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.383649208 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.388248461 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.393726773 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.381934503 seconds)
  done (took 69.338674596 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.385234861 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.385568352 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.382800518 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.384877604 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.385299358 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.385554638 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.383503983 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.385623095 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.381822411 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.382748802 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.386007623 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.382825755 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.383310232 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.384970637 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.385795323 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.382468832 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.382588744 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.383185521 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.383249802 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.383091825 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.382804976 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.385092464 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.38573109 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.384764463 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.385723059 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.384093516 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.382968989 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.386793786 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.38455908 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.383335329 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.386709222 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.387023582 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.386972604 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.384715378 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.383671203 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.387976301 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.387224123 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.3845203 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.387671383 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.384244075 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.38792673 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.38658391 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.38721359 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.386707751 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.385766858 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.384742748 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.385109824 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.384362305 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.384127527 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.387140712 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.386615772 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.384944828 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.387833462 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.385388166 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.387775832 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.388195679 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.385029006 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.385104872 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.387803728 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.385552622 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.385253191 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.38856296 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.385836952 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.388495081 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.386711 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.385435148 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.386572381 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.388921563 seconds)
  done (took 95.508884678 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.38950986 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.388782375 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.38924999 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.387878981 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.39045584 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.388213018 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.388738916 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.389546335 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.39040021 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.391611345 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.390221313 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.389677279 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.389325386 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.389372171 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.388568213 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.391241356 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.389932762 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.390770665 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.388811128 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.390895033 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.390903513 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.391471433 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.389964567 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.390648273 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.391874706 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.390756733 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.390752741 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.391102753 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.391500656 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.391086618 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.392001854 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.392685544 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.39169132 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.391120512 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.392456455 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.392427813 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.39241481 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.390631121 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.390997396 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.391592611 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.391444326 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.390662483 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.393081089 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.390962136 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.390480633 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.390699698 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.39133265 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.391982086 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.390778854 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.391562725 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.393073395 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.39075487 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.391766327 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.392208807 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.392642332 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.391584104 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.391887128 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.392596922 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.393229233 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.392591988 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.393286837 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.393166903 seconds)
  done (took 87.54869142 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.393788741 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.391761633 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.39098633 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.390779797 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.39234291 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.389953217 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.393252471 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.39269217 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.39218159 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.394026494 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.393912634 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.389225324 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390979046 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.392798567 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.390546042 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.390864579 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.390742784 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.391580149 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.392693123 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.391828786 seconds)
  done (took 29.144151104 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.392267543 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.394687797 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.391744663 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.392244061 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.392897339 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.391616787 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.393460505 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.394392557 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.390324209 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.39443995 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.394459559 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.395342676 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.391175261 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.391781188 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.395788102 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.391887564 seconds)
  done (took 23.597004671 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.394142862 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.395199707 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.396188512 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.39539379 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.393177811 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.393285726 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.395916387 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.392782675 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.393625139 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.395948907 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.395046157 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.394913796 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.39554481 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.39612315 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.393681329 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.395863738 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.39347296 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.395894767 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.397108444 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.397771222 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.394965896 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.394411745 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.397278949 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.397569984 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.394695431 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.394226749 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.393758372 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.394932726 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.394428067 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.397391953 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.394535097 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.394518245 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.394888457 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.394674867 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.397574719 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.393506715 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.397848764 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.398049626 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.398515088 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.397274032 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.398226205 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.395661878 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.399051178 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.397313841 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.395379106 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.398546679 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.394744759 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.396181042 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.396234054 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.394181756 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.398492452 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.397802641 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.398863561 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.397523173 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.399939873 seconds)
  done (took 78.085107239 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.399464909 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.397903156 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.395044585 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.398369804 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.398876979 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.396613497 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.39912023 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.396467799 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.39592851 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.398683462 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.396870398 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.398545889 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.396767425 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.399108122 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.396561417 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.39938946 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.396115057 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.39716478 seconds)
  done (took 26.468961528 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.398213532 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.397829364 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.400106291 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.39791681 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.397890113 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.400991529 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.398126234 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.400065408 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.400086151 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.398534807 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.397697957 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.401829921 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400816001 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.401612315 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.398840388 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.398629428 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.402377527 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.400618079 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.399093511 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.39770027 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.400718033 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.39989367 seconds)
  done (took 32.103131898 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.400119028 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.400846394 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.417213413 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.446612996 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.449297605 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.400167727 seconds)
  done (took 9.828634108 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400125634 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.401411078 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.399476978 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402524427 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401652669 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.397770289 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399668326 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.399991734 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401674022 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400954067 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399426822 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.402268891 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402516989 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.398792483 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.401858468 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.401735534 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.399200621 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.39964846 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401119467 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403173265 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399736333 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402160412 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.400403944 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.400020689 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.400477412 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.399884708 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403097488 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.400652496 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401050948 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403671478 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404193071 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.400607506 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403008183 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.399992379 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.405093769 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402543105 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.4011158 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.40378257 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403874096 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.401705658 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.40275634 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402280325 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403418089 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401274088 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403629088 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401537283 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.401998988 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402468958 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403100127 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405759438 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406012922 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401531576 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407006306 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405776239 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404943149 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406297983 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404028594 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.402698997 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403654385 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.404072725 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.401663645 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406374604 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.402809944 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404256565 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406040759 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403401311 seconds)
  done (took 93.867805822 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404285844 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.403223395 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.402029529 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405122354 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.403860847 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403240371 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.404096887 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.40386779 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402897128 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404045264 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406791151 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403389169 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.402773806 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403772049 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.405341002 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403615838 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.403369658 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404065683 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.403346517 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40707898 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.40363788 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.403740611 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.403148277 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404145471 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.40559152 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.406204981 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.403330966 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.403767355 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.404871762 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.404514035 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.403454376 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.405266807 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.404248052 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.403495512 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.404969575 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404819286 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405455301 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.405276885 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.40601391 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408207506 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404842848 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.408269414 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.406288469 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.404104097 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.405524678 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.406607004 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.405839225 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406962813 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.407368515 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406543435 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.406568621 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.406333855 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406573298 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.408459058 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.407514605 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.406245562 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.406815658 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.405968162 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406747509 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.408951009 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.408945773 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.406836778 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.410060327 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.407083817 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.408353545 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.407867554 seconds)
  done (took 94.076861368 seconds)
done (took 1897.661522449 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.391601667 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.469775496 seconds)
  done (took 14.18397709 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.572732438 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.523313165 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.408296746 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.412094327 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.409148008 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.421977761 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.429635034 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.409882822 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.410139614 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.409837339 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.408424905 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.59680213 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.423612721 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.408973948 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.408145185 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.503222258 seconds)
  done (took 44.485163891 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.438867925 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.415907683 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.544942418 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.434286714 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.438914246 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.631267664 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.480166037 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.41569317 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.622313726 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.468307451 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.224427805 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.439766904 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.414658759 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.704420729 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.435514298 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.632150547 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.708847031 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.239241404 seconds)
  done (took 33.013583797 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.964918398 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.43936309 seconds)
  done (took 9.728873144 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.41129837 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.440953044 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.433686018 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.41962116 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.449417652 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.509880942 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.417512088 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.42412557 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.451897523 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.503880364 seconds)
  done (took 65.795282474 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.439201901 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.414516055 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.416389774 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.413494833 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.407335341 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.40756208 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.414649516 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.425032527 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.756241458 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.566576541 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.444485155 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.420173113 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.436505862 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.417115039 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.41225495 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.454814864 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.554167797 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.43473126 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.412131974 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.419651271 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.414954673 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.537369073 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.46395033 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.412931254 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.564750808 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.863194913 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.42625627 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.421767951 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.532494991 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.434346781 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.414051909 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.415440704 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.416623366 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.024057397 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.969203979 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.450509876 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.442936696 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.424013816 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.412489396 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.563511356 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.43786863 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.421669668 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.409225468 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.940774293 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.59317712 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.550157898 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.851418984 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.419379547 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.417318328 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.48429169 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.418814177 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.417780149 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.44920943 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.257396089 seconds)
  done (took 118.069157121 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.436349583 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.899675881 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.58513447 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.435749659 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.337535167 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.142642075 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.437327709 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.763264971 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.459180115 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.411150003 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.725352438 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.00260316 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.440337324 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.483269403 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.962462266 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.482919897 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.41319541 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.23182121 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.437209363 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.414687932 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.854606393 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.443048566 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.43886054 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.462836307 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.453811361 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.941600739 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.267363524 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 4.03127501 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.440501723 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.410936617 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.952391073 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.440010685 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.451201403 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.411717899 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.712577878 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.828344213 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.818387483 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.439008915 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.442496677 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.41566857 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.431687771 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.92968973 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.831997309 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.433533176 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.413893047 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.935332238 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.433158002 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.413584387 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.416758972 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.630454484 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.361562147 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.428480341 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.181116569 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.418787002 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.717024339 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.499160922 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.459879012 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.960205542 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.434062217 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.612638763 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.440277149 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.415761565 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.417805191 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.416416517 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.420319276 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.828771964 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818494937 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.420912886 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.837540839 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.973664876 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.44168031 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.031448096 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.423455222 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.427022335 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.47526401 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.418393738 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.048670385 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.003698517 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.448203562 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.41436874 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.804050738 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.437101401 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.722222788 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.439578843 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.415937183 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.864625211 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.45321199 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.443912111 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.415065854 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.426980717 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.152212079 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.423811516 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.709241543 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.453848272 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.415551001 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.415204996 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.427512609 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.416643121 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.416455776 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.415486708 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.012405771 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.446288157 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.597155567 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.450723796 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.426934336 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.424708268 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.420354384 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.417368724 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.648667665 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.971188241 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.431044431 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.418147092 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.4186397 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.4237182 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.701465315 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.426692522 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.796988939 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.444011626 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.432928639 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.427312381 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.160806995 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.4756472 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.417463015 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.426541419 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.296517176 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.656637545 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.43921389 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.418978028 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.417619184 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.439617965 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.116159081 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.425801986 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.507318179 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.420358755 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.195958875 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.468984697 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.447986186 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.008071245 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.432781082 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.433957467 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.428758754 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.421068588 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750934828 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.728243961 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.772006872 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.428689218 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.435620287 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.176349598 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.486643313 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.573233035 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.443444716 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.415164334 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.623103832 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.743252757 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.420599618 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.987181739 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.420679471 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.646163647 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.439820281 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.761870379 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.991922802 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.448058903 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.427706743 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.198824165 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.113920989 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.056683608 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.424512767 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.724444689 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.43952489 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.866413446 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.420331595 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.424186992 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.885061341 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.428201536 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.432019826 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.421045284 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.421562518 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.477707804 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.601897349 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.099381026 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.428659025 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.961100556 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.504768542 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.438497887 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.429975311 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.422602977 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.771667366 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.48311037 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.42786609 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.460473133 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.423240228 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.427944259 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.974274087 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.47398775 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.43140553 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.581643324 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.131676996 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.45030029 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.421161941 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.166211726 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.64079882 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.009329516 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.493071241 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.809686406 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.451540843 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.466564231 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.285859402 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.511243959 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.972408906 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.455899742 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.444541176 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.091842194 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.451635375 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.475380793 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.424450749 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.423086096 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.053633956 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.452622831 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.423508496 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.119241648 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.432874573 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.689164178 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.425549968 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.474116644 seconds)
  done (took 1137.269600963 seconds)
done (took 1423.869312118 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.425769433 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.425362668 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.417307818 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.425706248 seconds)
  done (took 27.034926036 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.43541574 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.432046937 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.432435576 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.431550067 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.433011679 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.432069659 seconds)
  done (took 9.939304596 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.424866233 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.425984233 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.433384113 seconds)
  done (took 20.626553416 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.689725591 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.939151417 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.883940253 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 4.073326902 seconds)
  done (took 11.92910747 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.433060593 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.434615439 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.433776612 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.434545035 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.436527537 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.438578826 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.435534004 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.434537313 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.438553688 seconds)
  done (took 14.261785652 seconds)
  (6/6) benchmarking "26942"...
  done (took 6.093680748 seconds)
done (took 91.227138567 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.427482639 seconds)
    (2/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.071317716 seconds)
    (3/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.344281354 seconds)
    (4/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.755272188 seconds)
    (5/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 3.018577897 seconds)
    (6/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.435135267 seconds)
    (7/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.563992315 seconds)
    (8/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.427670679 seconds)
    (9/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.416187201 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.170861408 seconds)
    (11/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.333395222 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.705109487 seconds)
    (13/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.466428709 seconds)
    (14/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.467892725 seconds)
    (15/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.475938457 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.453487106 seconds)
    (17/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.422660511 seconds)
    (18/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.462378047 seconds)
    (19/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.440209456 seconds)
    (20/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.975558607 seconds)
    (21/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.582787193 seconds)
    (22/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.372412049 seconds)
    (23/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.98785928 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.437082666 seconds)
    (25/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.305433111 seconds)
    (26/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.951202079 seconds)
    (27/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 3.040961959 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.44398536 seconds)
    (29/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.187602314 seconds)
    (30/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.457817182 seconds)
    (31/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.525474055 seconds)
    (32/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.217596434 seconds)
    (33/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.395693851 seconds)
    (34/309) benchmarking ("map", identity, BigInt, true)...
    done (took 3.18237022 seconds)
    (35/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.560802627 seconds)
    (36/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.455144064 seconds)
    (37/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.437651881 seconds)
    (38/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.453708415 seconds)
    (39/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.460463897 seconds)
    (40/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.463288287 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.427930325 seconds)
    (42/309) benchmarking ("sort", Int8, false)...
    done (took 4.483969146 seconds)
    (43/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.455828314 seconds)
    (44/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 3.073299103 seconds)
    (45/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 3.069138323 seconds)
    (46/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.797831396 seconds)
    (47/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.4589374 seconds)
    (48/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.723217804 seconds)
    (49/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.900817193 seconds)
    (50/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.518874727 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.539737357 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.330235716 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.709523044 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.449239413 seconds)
    (55/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.477693884 seconds)
    (56/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.438791706 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.510665649 seconds)
    (58/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.430722397 seconds)
    (59/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.452995724 seconds)
    (60/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.444695736 seconds)
    (61/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.496740531 seconds)
    (62/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.4395944 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.163528784 seconds)
    (64/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.541246821 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.956164071 seconds)
    (66/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.485402774 seconds)
    (67/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.961074798 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.48474566 seconds)
    (69/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.165118346 seconds)
    (70/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.57183335 seconds)
    (71/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.867423535 seconds)
    (72/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.314880147 seconds)
    (73/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.484069929 seconds)
    (74/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.657214045 seconds)
    (75/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.507947263 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 3.055658819 seconds)
    (77/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.89183395 seconds)
    (78/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.627399392 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.576672735 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.105711428 seconds)
    (81/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.434472133 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.894272935 seconds)
    (83/309) benchmarking ("sort", Int64, false)...
    done (took 5.790319521 seconds)
    (84/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.495413886 seconds)
    (85/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.427075388 seconds)
    (86/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.126659526 seconds)
    (87/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.422268141 seconds)
    (88/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.159241687 seconds)
    (89/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.52479076 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.154490971 seconds)
    (91/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.835297488 seconds)
    (92/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.432809206 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.463344966 seconds)
    (94/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.421491163 seconds)
    (95/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.716372842 seconds)
    (96/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.354255195 seconds)
    (97/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.876611898 seconds)
    (98/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.659268363 seconds)
    (99/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.446301637 seconds)
    (100/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.518584325 seconds)
    (101/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.84558508 seconds)
    (102/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.457551845 seconds)
    (103/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.448709851 seconds)
    (104/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.338366008 seconds)
    (105/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.664344887 seconds)
    (106/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.522026359 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.631315567 seconds)
    (108/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.446830212 seconds)
    (109/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.195105233 seconds)
    (110/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.518941789 seconds)
    (111/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.468048767 seconds)
    (112/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.176257737 seconds)
    (113/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.309655863 seconds)
    (114/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.662953656 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.441702581 seconds)
    (116/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.423557064 seconds)
    (117/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.180749376 seconds)
    (118/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.46689707 seconds)
    (119/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.388449965 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.461278273 seconds)
    (121/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.895156182 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.536761155 seconds)
    (123/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.827722203 seconds)
    (124/309) benchmarking ("sort", Bool, false)...
    done (took 1.983245148 seconds)
    (125/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.476685675 seconds)
    (126/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.545517539 seconds)
    (127/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.539998546 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.98248993 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.701848684 seconds)
    (130/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.460785946 seconds)
    (131/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.160657923 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.382614533 seconds)
    (133/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.214103607 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.721782586 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.947917525 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.577604725 seconds)
    (137/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.454718183 seconds)
    (138/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.56924438 seconds)
    (139/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.453359917 seconds)
    (140/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.536877795 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.875211562 seconds)
    (142/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.4448862 seconds)
    (143/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.45724169 seconds)
    (144/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.415766127 seconds)
    (145/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.405101539 seconds)
    (146/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.470517419 seconds)
    (147/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.474380148 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.427912266 seconds)
    (149/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.535093837 seconds)
    (150/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.720080332 seconds)
    (151/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.569334279 seconds)
    (152/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.07236074 seconds)
    (153/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.546595772 seconds)
    (154/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.643142948 seconds)
    (155/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.659961487 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.695561281 seconds)
    (157/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.480881021 seconds)
    (158/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.192944481 seconds)
    (159/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.458311902 seconds)
    (160/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.439230303 seconds)
    (161/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.553840773 seconds)
    (162/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.533076707 seconds)
    (163/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.463199328 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.474185019 seconds)
    (165/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.114153519 seconds)
    (166/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.466067509 seconds)
    (167/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 3.152269097 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 5.029713837 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.445821111 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.46879305 seconds)
    (171/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.619029649 seconds)
    (172/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.914127558 seconds)
    (173/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 4.222469758 seconds)
    (174/309) benchmarking ("map", abs, Float64, true)...
    done (took 3.077284986 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.425881912 seconds)
    (176/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.884046348 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.562832736 seconds)
    (178/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.462739366 seconds)
    (179/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.437699891 seconds)
    (180/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.653290995 seconds)
    (181/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.258493549 seconds)
    (182/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.305667686 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.547131688 seconds)
    (184/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.436466361 seconds)
    (185/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.871075881 seconds)
    (186/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.44786672 seconds)
    (187/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.498270759 seconds)
    (188/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.441986913 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.539298889 seconds)
    (190/309) benchmarking ("sort", BigInt, false)...
    done (took 6.437929426 seconds)
    (191/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.344165394 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.550129158 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.48026735 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.463124506 seconds)
    (195/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.419886328 seconds)
    (196/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.694364513 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.355030015 seconds)
    (198/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.781527739 seconds)
    (199/309) benchmarking ("sort", Float32, false)...
    done (took 5.499443775 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.264430251 seconds)
    (201/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.424453527 seconds)
    (202/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.576201885 seconds)
    (203/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.430060759 seconds)
    (204/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.457944849 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.496678796 seconds)
    (206/309) benchmarking ("map", identity, Int64, true)...
    done (took 3.030025439 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.301783528 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.457926769 seconds)
    (209/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.524924829 seconds)
    (210/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 3.063644817 seconds)
    (211/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.796198034 seconds)
    (212/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.56304502 seconds)
    (213/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.743490771 seconds)
    (214/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.677847261 seconds)
    (215/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.072606207 seconds)
    (216/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.157826066 seconds)
    (217/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.544793064 seconds)
    (218/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.639833581 seconds)
    (219/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.433142855 seconds)
    (220/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.454773842 seconds)
    (221/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.820644249 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.896250116 seconds)
    (223/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.89153932 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.533759043 seconds)
    (225/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.350273251 seconds)
    (226/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.440285617 seconds)
    (227/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.76937409 seconds)
    (228/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 3.125502696 seconds)
    (229/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.448879453 seconds)
    (230/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.485646003 seconds)
    (231/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.289279944 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.879024918 seconds)
    (233/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.912138448 seconds)
    (234/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.545975926 seconds)
    (235/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.505198908 seconds)
    (236/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.874506087 seconds)
    (237/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.503124264 seconds)
    (238/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.460877007 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.443867189 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.362022534 seconds)
    (241/309) benchmarking ("map", abs, Int64, true)...
    done (took 3.011206691 seconds)
    (242/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.442550912 seconds)
    (243/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.450044818 seconds)
    (244/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.42576579 seconds)
    (245/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.391270138 seconds)
    (246/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.500324096 seconds)
    (247/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.796984548 seconds)
    (248/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 3.083689416 seconds)
    (249/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.287011912 seconds)
    (250/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.540233982 seconds)
    (251/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.591541772 seconds)
    (252/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.347931723 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.454487089 seconds)
    (254/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.468027134 seconds)
    (255/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.717724315 seconds)
    (256/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.448710556 seconds)
    (257/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.614300136 seconds)
    (258/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.46896367 seconds)
    (259/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.443098532 seconds)
    (260/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.527482861 seconds)
    (261/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.977516842 seconds)
    (262/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.573103528 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.826468866 seconds)
    (264/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.429142681 seconds)
    (265/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.530290891 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.8276083 seconds)
    (267/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.087323247 seconds)
    (268/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.801207305 seconds)
    (269/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.445865735 seconds)
    (270/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.770338199 seconds)
    (271/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.474016496 seconds)
    (272/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.396477899 seconds)
    (273/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.431785798 seconds)
    (274/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.508431215 seconds)
    (275/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.866482259 seconds)
    (276/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.462252848 seconds)
    (277/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.436139324 seconds)
    (278/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.430267734 seconds)
    (279/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.520670378 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.529057403 seconds)
    (281/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.527848603 seconds)
    (282/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.207620698 seconds)
    (283/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.232440548 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.569844534 seconds)
    (285/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.082329798 seconds)
    (286/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.290108775 seconds)
    (287/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.503207543 seconds)
    (288/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 3.069376134 seconds)
    (289/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.023039252 seconds)
    (290/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.453646669 seconds)
    (291/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.47165868 seconds)
    (292/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.508880609 seconds)
    (293/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.485858596 seconds)
    (294/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.502868308 seconds)
    (295/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 3.242361027 seconds)
    (296/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.511812281 seconds)
    (297/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.217329732 seconds)
    (298/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.455483575 seconds)
    (299/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.598694351 seconds)
    (300/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.902974628 seconds)
    (301/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.033219745 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.457217122 seconds)
    (303/309) benchmarking ("sort", Float64, false)...
    done (took 5.858299706 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.469452013 seconds)
    (305/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.445783202 seconds)
    (306/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.451453847 seconds)
    (307/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.560628328 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.464781613 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.354261412 seconds)
  done (took 986.599560798 seconds)
done (took 987.942833994 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.481633992 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.47555548 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.459428323 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.481272276 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.571027884 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.486410918 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.470839588 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.462472672 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.508074261 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.510007844 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.45974264 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.487160929 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.461042865 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.458928866 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.459949461 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.473270249 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.672511975 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.46087469 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.475856792 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.470063559 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.476347903 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.457928789 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.5104254 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.48806955 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.464790972 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.46368102 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.464208226 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.480583992 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.572729347 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.462741743 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.46478352 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.472235298 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.675721217 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.459887287 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.456574911 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.480911059 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.473873359 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.470192013 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.465160065 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.493523584 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.155254272 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.480789364 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.462311389 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.462603311 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.462624448 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.467023906 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.463345211 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.468585935 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.473169867 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.476498098 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.144012522 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.498341671 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.465017017 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.465325181 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.474198443 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.462408514 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.468061343 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.478266242 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.482574341 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.478369109 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.666292442 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.470466878 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.464364287 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.478986642 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.471170035 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.184801311 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.480574582 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.468923864 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.157650848 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.489837465 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.185449372 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.49292815 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.465519131 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.478480344 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.49710506 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.679535281 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.460025521 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.463373513 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.472005212 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.462087449 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.476620805 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.479031129 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.469988445 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.46595879 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.477484611 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.491188453 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.475806044 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.466156345 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.474731233 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.484170462 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.472007572 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.475939743 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.467501041 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.460236291 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.475025857 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.469643902 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.468043862 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.468272005 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.471363396 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.476496638 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.158282228 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.502777453 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.462040329 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.462286722 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.465209064 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.480577197 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.159296099 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.487356645 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.488467637 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.51396635 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.467176548 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.669151113 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.470928612 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.482226541 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.476432431 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.471130989 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.462586411 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.671810033 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.153332923 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.501838175 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.469434163 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.465671507 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.483159313 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.470492296 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.464576395 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.683474686 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.470018075 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.480743483 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.5876094 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.478557689 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.498573217 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.467051203 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.472071051 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.490625829 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.482749386 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.500240622 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.471712113 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.483210973 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.482649852 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.464254542 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.477011882 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.480164849 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.468681453 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.475191477 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.463000504 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.491299983 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.481396893 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.480731051 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.488336873 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.587575309 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.466330404 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.67191291 seconds)
done (took 249.061640937 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.525275915 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.458436552 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.556036077 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.461545345 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.567720073 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.568828965 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.460732991 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.460157289 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.460107417 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.837650862 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.460580751 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.460893496 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.462322281 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.461760631 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.546081575 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.464206999 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.460991578 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.802354683 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.464431411 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.534514897 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.464549332 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.46217459 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.464004752 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.843170819 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.455978414 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.465830514 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.534264029 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.465045987 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.861979689 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.458135863 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.459912409 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.860653835 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.556839571 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.481773088 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.473971256 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.471468472 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.570072691 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.488254661 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.547384701 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.545430604 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.557260829 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.505260518 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.466851952 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.465344857 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.465874558 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.466691157 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.463120641 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.492202241 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.462777597 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.463640763 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.804170422 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.475339089 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.474044919 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.463578884 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.463363906 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.486655932 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.464349743 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.467541205 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.558977501 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.467593089 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.528583189 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.845990763 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.842155831 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.466623397 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.464774456 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.463208506 seconds)
  done (took 157.324025067 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.534920072 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.541272249 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.591850388 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.488155466 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.519945681 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.595391607 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.489617853 seconds)
  done (took 12.134847229 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.473700604 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.467440338 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.517356855 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.516964041 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.467625699 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.615732168 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.467603544 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.478878668 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.465161644 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.521208682 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.468290144 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.467651485 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.474684723 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.467733729 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.515951388 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.480533016 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.58403854 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.469917515 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.468783869 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.62475246 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.465809228 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.475593953 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.520493158 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.480780514 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.470349666 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.474264753 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.033046276 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.470436329 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.466136468 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.46845182 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.467824663 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.507008495 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.469688802 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.46611264 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.466157791 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.585853204 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.470090913 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.466995369 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.469168027 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.463661695 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.470128811 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.469818747 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.469839528 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.468342875 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.470811481 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.492986308 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.470838429 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.470435417 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.470477255 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.472277412 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.522300994 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.47105688 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.468693868 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.467247617 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.528232559 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.478732451 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.472461196 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.469792702 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.470470847 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.468728932 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.628164518 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.532113554 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.470623408 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.519144936 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.474252993 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.473305672 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.472490855 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.471942066 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.527043396 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.473170405 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.521265058 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.470144704 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.627111843 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.495028516 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.474464432 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.476327854 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.475140982 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.474041925 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.468436661 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.478732099 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.469060034 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.472307061 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.477916781 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.471125489 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.470798127 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.574520586 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.582157027 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.470631021 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.486122439 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.480137664 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.47006728 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.526359013 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.474090783 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.469702234 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.526704476 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.588154693 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.528208687 seconds)
  done (took 166.636238302 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.478762325 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.483046269 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.475632609 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.490935342 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.476863121 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.474652869 seconds)
  done (took 10.260866647 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.478549024 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.476078884 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.473732369 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.474624865 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.474814769 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.476058839 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.475329996 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.479411378 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.480890296 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.475684712 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.476393038 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.477254162 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.476717145 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.475848415 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.47641751 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.475649509 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.47540372 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.472891862 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.475057848 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.475858241 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.570378293 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.4756357 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.475755474 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.47813001 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.482397863 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.476879598 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.484514687 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.477073111 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.476101208 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.484242146 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.500666653 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.477823432 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.478558071 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.484332219 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.481346352 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.479482934 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.482157187 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.477888453 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.474071771 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.47650847 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.476811451 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.477885559 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.477144694 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.478163339 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.480515275 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.484164557 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.483787386 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.48695072 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.478265206 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.478812452 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.478177061 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.476571417 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.478002192 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.47938728 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.479378922 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.505124352 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.484992245 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.478815838 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.479005495 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.48070952 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.480819003 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.478483998 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.481904773 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.483933283 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.485241551 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.479905082 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.480583868 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.483538236 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.4797254 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.477551335 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.47929453 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.476731576 seconds)
  done (took 108.991150702 seconds)
done (took 456.718670662 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.816029012 seconds)
  done (took 8.202339814 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.786805786 seconds)
  done (took 8.175906981 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.542154334 seconds)
  done (took 25.931138033 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.517241719 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.570961422 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.477509165 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.498503419 seconds)
  done (took 27.449038439 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.766681136 seconds)
  done (took 8.150657684 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.474400149 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.480472697 seconds)
  done (took 14.33942759 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.934055473 seconds)
  done (took 8.31749118 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.527403502 seconds)
  done (took 7.917408067 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.474111096 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.508302513 seconds)
  done (took 14.377636518 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.453283198 seconds)
  done (took 7.837936679 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.989047196 seconds)
  done (took 9.374148887 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.475585819 seconds)
  done (took 7.860590131 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.493965946 seconds)
  done (took 7.879234073 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 10.364866951 seconds)
  done (took 11.748996454 seconds)
done (took 168.948546776 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.470456412 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.477595389 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.479700323 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.480149413 seconds)
  done (took 27.292924879 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.511944421 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.510565493 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.51289216 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.521756002 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.514617492 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.511120619 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.503430393 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.503469714 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.523144543 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.514047053 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.518004164 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.514816038 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.512122278 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.50429264 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.513714726 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.514293211 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.523974957 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.513758464 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.505436112 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.515803021 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.479377999 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.523763431 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.514991421 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.47949696 seconds)
  done (took 37.649170545 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.008030896 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.553923511 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.633737572 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.534157919 seconds)
  done (took 8.115308982 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.530748424 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.53294376 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.544338935 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.583834506 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.612022971 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.542697435 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.504652991 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.502586873 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.488353955 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.533396359 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.610058361 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.550369396 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.62585551 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.480081062 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.661403273 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.480387942 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.480765808 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.532228608 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.585368925 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.601179091 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.480656173 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.532731062 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.540321746 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.550737619 seconds)
  done (took 38.474472942 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.479716325 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.489125564 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.486901499 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.481990436 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.480424957 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.481112504 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.487559846 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.481839299 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.501724536 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.481986691 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.480961836 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.480688854 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.479614352 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.481172288 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.481815592 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.493400927 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.496083575 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.481030518 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.485512203 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.487653283 seconds)
  done (took 31.089315082 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.476391137 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.332150564 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.827673706 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.732155318 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.476495023 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.477631835 seconds)
  done (took 28.712490954 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.569552668 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.745994885 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.483960738 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.941967482 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.049719706 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.511699929 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.48344506 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.771234284 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.198356518 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.196770947 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.562433616 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.565972426 seconds)
  done (took 22.471820206 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.479526609 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.485809489 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.491151496 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.501002919 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.551905202 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.510038935 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.490941396 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.47751719 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.559412268 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.578220542 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.510560043 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.55236382 seconds)
  done (took 39.579923715 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563962121 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.533231261 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.666421624 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.422563143 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.204625068 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.690050857 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.476521892 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.968485107 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.48239826 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.752806232 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.492318623 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567782471 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.735818581 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.484997394 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.488189201 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.629062983 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.72778427 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.064321842 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481399373 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.261978829 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512332173 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.496945794 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.402920193 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.524217564 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.693364203 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.464100822 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.740125064 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.254989206 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826253594 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490325731 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490802536 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479875372 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.754482053 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242975568 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607729212 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490022427 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.444000234 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.027594293 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.470883036 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.335539894 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.495326881 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.483272028 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.491994843 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.48137113 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.415126817 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.487756959 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.985436714 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.486765234 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.192641218 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.481369121 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.491862552 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.576009767 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.484971432 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.470046407 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.669408542 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.489192865 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.48097426 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489222371 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055622849 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.616532222 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.492502671 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.424912238 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.060822286 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.207419402 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.230269765 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.607620905 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.486508507 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.487330118 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.41724929 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.259395924 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507950487 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.621108103 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.508062071 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145981693 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323804338 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.507973681 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.437347871 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.126632532 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482685239 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.444608252 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.713168895 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.264077266 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.424395723 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.429761321 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.419333611 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.311707965 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489905285 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.990792101 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49133655 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.973702222 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.494146769 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50123436 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507627565 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.708823015 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.365435572 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4848574 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.500662382 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60025216 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.506255145 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.972692309 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.418074165 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.487789338 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.743617397 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.698048028 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.493013597 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.622135407 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757158213 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502699759 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.512628852 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.496276299 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.502601602 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.18161538 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.520436355 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.8840168 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511061218 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.261736235 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.347040273 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488305591 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.585620401 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.493750935 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769243774 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.370435024 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.368046465 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.554414314 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.489945283 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.487428449 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.374930963 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.345456572 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.368487983 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.483935271 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.505201083 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.496821682 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.487183648 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.44736811 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.489166031 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502973213 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.264627339 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.711767575 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.489907676 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.763631862 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421843399 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.62553847 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.504325009 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.712356787 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.872220033 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.508791512 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.748893858 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.50601077 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.490007956 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.498526062 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.507380268 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.585641156 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.510019532 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.49347903 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.747363936 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.491979655 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.491933843 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.388824339 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.278231841 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491915795 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.494444977 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.486495569 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191447998 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.484093925 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.49881649 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382614912 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.503955025 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.556968735 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.49564307 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.499587809 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.744131615 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.582662067 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.493680392 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.503318418 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.713690403 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.501268913 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.304764113 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576896526 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.733691807 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.194837129 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.52590562 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.423416768 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.202055255 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.183286646 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.490290819 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.6903012 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.490569034 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500493017 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502496143 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.237529781 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.19288441 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.514784316 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.286191283 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.504273463 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.502649217 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.498872628 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.491581492 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.667868071 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.643053424 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.495012897 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526464772 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.636789728 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.507160056 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.426077135 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.008324376 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.496678113 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.492816863 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.268859968 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526798438 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.224083024 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.017037917 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.75399005 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.42794591 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.503268639 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.480029169 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.538029557 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.492179775 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.504546054 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.512495062 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.50118135 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508681958 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.503840229 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.395045332 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.949947029 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062484366 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349302465 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.178110109 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.587704636 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.513956456 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.389903384 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.990340042 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.428898872 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.153184863 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.719221461 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.011955461 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.449796936 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.745802129 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.877779227 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.423556888 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.505285776 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723662508 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.643201195 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.509689097 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.505330941 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.707069766 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.529627848 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.493690186 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.425017948 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.244797098 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.801147987 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.507367213 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.572203969 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.990939098 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.504579676 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.272896387 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.49477365 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.9776216 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.723823029 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.043268108 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.891132503 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.500399796 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.511857222 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.02024943 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.506152136 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.026618326 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.236784187 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.535305673 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.745103615 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435182017 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.507574102 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506975161 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.492968321 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.170086723 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.505108063 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.752961943 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.507383318 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432157905 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.51687003 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.144265989 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.375289893 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.503285546 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.49675043 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375413272 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.507896692 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85077475 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.516717832 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.656733785 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.502686406 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.431358864 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.432103123 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.191286039 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.500644813 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468963617 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.100107004 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.021764017 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.662723475 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.532426653 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.345501328 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.756558327 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.512180385 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.20969892 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.749120945 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.545029683 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520445238 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.597780943 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.498175351 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.482813555 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.381199865 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.735449067 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497373756 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.723430179 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.701491028 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.407259595 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.497555401 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.710986844 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.383419359 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.501029301 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802940366 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.239850776 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.523144148 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.367109231 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54806939 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.512562183 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.518337714 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.077522117 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50713281 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.570410905 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.510419513 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.512247631 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.512166587 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.704541525 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.509540092 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.503777793 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.51371145 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593376224 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.953181572 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.674596106 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.275780721 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217772868 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389154957 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.238911491 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.536766626 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.501387514 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.500894323 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.435756913 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.649586686 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.030428158 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775806411 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.623243448 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.165300775 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.523426914 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.504030002 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.520631744 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.714378738 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.776745751 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.376898571 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515395152 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.175171068 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.383417793 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.51244155 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.713413517 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104612033 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167956838 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.627838856 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.516839548 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.994179546 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.775739361 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.594266129 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.502539384 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.093674391 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.511352002 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.022145061 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.530809526 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.518153979 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650565976 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.513984584 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.259057758 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.544247555 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.663456571 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.276861204 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.414916937 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.769822308 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.116889393 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.514653949 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.220008464 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.381259614 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.769471587 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574088367 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.515110451 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.621963816 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.650140412 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.500961666 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.403922671 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.503999904 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.356691471 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.21995447 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515086739 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222510149 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.794538397 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.505318239 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.512157143 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.528535305 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.515102696 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.7287432 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.339890507 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.729893283 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.516207046 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.508508095 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.078242642 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.223315829 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.541661484 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439912428 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.509305827 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.809487827 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.773317499 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.530621273 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.959493632 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.217565535 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.157277088 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.480857644 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527407917 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.51329871 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.360866556 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222310904 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.706053667 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.092950056 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.165334314 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.525014872 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.780157109 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.511745509 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.507398744 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.8052968 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.511160743 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.520196818 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.518989643 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.248658743 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.458121309 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.537311469 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.378891379 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.452173344 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.74460163 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304812925 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.443739872 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.518637231 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.72256093 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.508784999 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.627522081 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.519258416 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.523197434 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.508029231 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.284411924 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.7935462 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.514749547 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.492555833 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.488493907 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.551369418 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51692598 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.817433094 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.515140316 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.182611141 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.865427474 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.768665568 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.525014264 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.497735641 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.513634257 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.510347905 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.234817772 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.487303198 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.27603705 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.178127323 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.523208075 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.528982201 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.513165163 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.726740518 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.722337797 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.523416517 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.524214621 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.512350055 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.532305464 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.410921993 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.283307384 seconds)
  done (took 1692.673348059 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.518494904 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.544061482 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.548535063 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.566174701 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.580760243 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.594240322 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.606981176 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.572174266 seconds)
  done (took 53.952850444 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.512681229 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.676689847 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.54594795 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.529156349 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.529972227 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.516876285 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.06027562 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.514214108 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.523791626 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.521431187 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.514398641 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.521378243 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.283485517 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.520834984 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.52705211 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.519197447 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.521357747 seconds)
  done (took 68.767432534 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.510713617 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.730514526 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.601248408 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.523746596 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.534920153 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.544552423 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.433327931 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.565131609 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.530734995 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.809591397 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.1716341 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.576623126 seconds)
  done (took 83.95588633 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.521871715 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.520579658 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.520735518 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.520942814 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.521029304 seconds)
  done (took 9.02891065 seconds)
done (took 2143.149600392 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.810705353 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.410786756 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.302155943 seconds)
  done (took 6.137230434 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.66606448 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.716790225 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.871325448 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.860483852 seconds)
  done (took 8.544736054 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.795061778 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.906053053 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.703369863 seconds)
  done (took 6.832630571 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.248555409 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.523644743 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.652676261 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.518298558 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.528570664 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.524486505 seconds)
  done (took 21.000952496 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.5234489 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.525382722 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.523700795 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.524649207 seconds)
  done (took 7.528062479 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.498476157 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.24283251 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.507366208 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.521983386 seconds)
  done (took 19.198971603 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.269757923 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.281471157 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.265641861 seconds)
  done (took 8.247108986 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.538272156 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.373114101 seconds)
  done (took 10.340785322 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.849133943 seconds)
  done (took 3.278434423 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.653386574 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.85467724 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.812774299 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.694003474 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.827978423 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.262493709 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.549935854 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 3.035585957 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.656317093 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.357525874 seconds)
  done (took 33.136482454 seconds)
done (took 138.905000908 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.054266793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.543266125 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.725598252 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.074711901 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.754113505 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.726592316 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.913862833 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.036404834 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.86951282 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.537311162 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.036186646 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.751724376 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.858084376 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.539620032 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.858784449 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.922296035 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.753739452 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.1045846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.537785567 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.538312308 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.914355692 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.672155286 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.860132541 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.043266295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.76233872 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.676642065 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.252116633 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.923053074 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.522308067 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.273658618 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.678076366 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.538222507 seconds)
  done (took 207.683730108 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.521166349 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.543370608 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.522155085 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.541942917 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.543413169 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.523263682 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.545088116 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.528656947 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.522503428 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.523053189 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.558371594 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.521546714 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.523130143 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.5417616 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.523081173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.52311671 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.544818583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.523066184 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.526408928 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.522572373 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.545923007 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.524113064 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.525152107 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.528566298 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.525961979 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.523970764 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.560125883 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.53557814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.524344066 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.545896655 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.543915329 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.524297256 seconds)
  done (took 210.46321835 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.525883517 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.530595693 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.524611596 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.526977737 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.529162046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.524713469 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.526530997 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.524492118 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.540909744 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.532464721 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.523847419 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.528286635 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.532760081 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.528270876 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.524915742 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.544624893 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.5477763 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.544374171 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.525914836 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.525347854 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.526574825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.524386987 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.524027948 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.525185737 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.525828699 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.543892923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.542420399 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.538204284 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.539074477 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.525862727 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.547542244 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.549757347 seconds)
  done (took 210.460769493 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.723236035 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.532266406 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.533114747 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.475994787 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.534155674 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.532172022 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.529445173 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.732956344 seconds)
  done (took 16.03027035 seconds)
done (took 646.068567901 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.054382733 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.74242378 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.746131486 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.554220562 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.517010941 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.586818695 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.55428281 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.74959181 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.572530196 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.770256852 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.939154469 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.574053618 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.094977173 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.553194538 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.837508457 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.662017491 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.50432197 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.630841319 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.918341968 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.277954092 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.853839001 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.239474303 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.779426516 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.572486566 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.121722989 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.179910001 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.50287981 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.499114946 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.575193891 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.916714496 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.566316384 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.806151688 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.635875189 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.629348342 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.68396184 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.664415414 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.752977552 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.636040595 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.774390882 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 3.014696225 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.281356019 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.383394962 seconds)
  done (took 104.348540978 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.520368556 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.518548871 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.51921177 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.520290952 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.520683471 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.519529669 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.520314412 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.520127859 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.520083617 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.521010936 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.521248619 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.521391925 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.520409661 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.52089431 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.520549072 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.519317045 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.521718133 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.523215303 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.52119644 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.520596406 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.52111316 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.520801332 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.522273649 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.519973525 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.521552491 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.521337007 seconds)
  done (took 40.979024832 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.538831482 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.811665709 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.009507327 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.544741886 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.538201815 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.543191181 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.639065088 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.547990851 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.542310922 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.541481347 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.726029958 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.543285296 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.576585647 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.038955583 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.541199011 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.539822322 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.540262828 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.540903764 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.818865691 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.548990905 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.661579854 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.541988802 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.638580022 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.556348407 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.565334093 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.540764669 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.543625926 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.082143888 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.564804677 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.728262192 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.573910357 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.641825554 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.028066988 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.039915361 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.572861691 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.551810157 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.540644952 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.732327403 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.544440825 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.541179913 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.63827815 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.544100276 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.03136788 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.211156711 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.574278426 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.541659667 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.10822797 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.75673995 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.858848211 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.555461296 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.046783685 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.545744732 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.544686698 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.544550649 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.847996291 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.551245705 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.542175519 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.117766429 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.572562129 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.637238584 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.543460527 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.543299319 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.829906955 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.544232849 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.820472231 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.546208744 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.551950781 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.567653243 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.03881252 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.555046871 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.237838676 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.574821756 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.54210751 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.727841497 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.815775708 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.142610539 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.570275389 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.830726307 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.041547097 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.658509984 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.547608775 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.06879246 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.662531165 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.547782333 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.544307569 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.545953706 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.543935241 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.594116617 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.636918557 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.158092653 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.239998002 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.141519955 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.665597502 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.558107823 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.545366374 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.120382232 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.570201154 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.544268538 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.022379854 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.219894839 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.569521695 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.553209886 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.230287222 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.570950305 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.642412064 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.551145967 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.035338897 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.550984049 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.59562687 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.54513031 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.552808048 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.571886892 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.641026056 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.548252808 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.546190151 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.191969899 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.763151363 seconds)
  done (took 202.898693887 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.548946554 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.539183061 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.546490563 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.540955823 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.53882038 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.545396121 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.539517571 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.538956791 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.545875603 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.539095476 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.540028766 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.542222599 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.54288307 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.545439096 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.54872628 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.547401683 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.157699771 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.539561613 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.540564524 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.540922343 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.392421677 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.550654071 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.541097502 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.562561743 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.542513183 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.54287562 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.548205835 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.54315184 seconds)
  done (took 158.141332314 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.547541308 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.23646136 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.571925701 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.709415797 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.572712426 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.546989929 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.707692817 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.620004654 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.5715274 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.545651989 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.54623549 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.936631126 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.554787485 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.179904944 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.795267059 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.747432067 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.186733435 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.570916748 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.545844873 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.546647773 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.716288366 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.565495688 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.938725415 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.290204784 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.581305147 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.288051276 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.541316785 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.549211812 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.548149172 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.293273653 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.578401628 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.943016836 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.657329104 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.632925216 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.318906442 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.21217625 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.204387666 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.742851058 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.556393349 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.548153164 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.548551677 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.534147476 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.287892486 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.581732428 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.551555122 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.279255074 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.582393557 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.550588569 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.559533755 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.548112711 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.623575216 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.64898704 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.966186299 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.251819058 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.6701826 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.580717742 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.721253308 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.985933141 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.561380298 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.183285609 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.534239785 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.299753624 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.582556892 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.535845314 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.551090383 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.555715416 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.745459609 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.728687768 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.191966843 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.574428521 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.184369507 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.768445975 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.559185621 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.551396587 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.554236109 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.248306219 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.208137163 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.768145428 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.733251666 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.811537621 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.545873538 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.553164129 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.538577471 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.651400491 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.560457757 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.303729123 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.216142159 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.576059623 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.553138017 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.553133399 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.553597668 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.780450075 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.336268043 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.682695051 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.184677667 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.979085165 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.964944487 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.563858397 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.627974848 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.582978567 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.955307279 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.563276649 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.628077428 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.061271842 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.966649503 seconds)
  done (took 187.78752979 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.847931582 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 3.002990337 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.670679461 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.719569462 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.262209892 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.202196626 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.967362389 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.718547285 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.682790763 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.857455298 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.992676542 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.651880954 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.766132832 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.650309336 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.397705311 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.667346661 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.689313966 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.723489641 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.69264242 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.721359859 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.313684622 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.889506917 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.773639285 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.76022234 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.667029539 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.458289091 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.198147687 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.13672746 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.761990584 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.12498905 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.156965667 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.836260197 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.705212934 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.398976275 seconds)
  done (took 75.523482849 seconds)
done (took 771.115872075 seconds)
SAVING RESULT...
DONE!
