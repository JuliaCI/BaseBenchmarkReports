cset: moving following pidspec: 22746
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.246239611 seconds)
loading group "string"... done (took 0.559753715 seconds)
loading group "linalg"... done (took 7.402729804 seconds)
loading group "parallel"... done (took 0.165090149 seconds)
loading group "find"... done (took 1.124155926 seconds)
loading group "tuple"... done (took 2.003658035 seconds)
loading group "dates"... done (took 1.275036953 seconds)
loading group "micro"... done (took 0.234942455 seconds)
loading group "io"... done (took 0.977507871 seconds)
loading group "scalar"... done (took 39.350943397 seconds)
loading group "sparse"... done (took 12.644400359 seconds)
loading group "broadcast"... done (took 1.005760164 seconds)
loading group "union"... done (took 13.692864251 seconds)
loading group "simd"... done (took 4.640018995 seconds)
loading group "random"... done (took 9.425650077 seconds)
loading group "problem"... done (took 1.970234883 seconds)
loading group "array"... done (took 22.227022962 seconds)
loading group "misc"... done (took 2.018720419 seconds)
loading group "sort"... done (took 3.39142681 seconds)
loading group "collection"... done (took 19.283984002 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.563254157 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.154973341 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14604166 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.145810577 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.185935454 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.152981159 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.155487676 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097023581 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.955746485 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171796967 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.150524509 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.67346552 seconds)
done (took 5.290480093 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.21520008 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093080619 seconds)
    (2/2) benchmarking "String"...
    done (took 0.102289324 seconds)
  done (took 0.873782539 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.076370479 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.144733779 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095961605 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.076921889 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094190266 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.076027674 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.09344479 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.076554817 seconds)
  done (took 1.342110663 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.085661451 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.095804502 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.079503126 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.094813011 seconds)
  done (took 1.044702984 seconds)
done (took 4.246803742 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.901383205 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272996083 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.211396436 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.514111621 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.173185754 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.211608207 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.679765137 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.348616565 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.251398948 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100308016 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.131697893 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390217242 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13568456 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681895561 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091387835 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.121961844 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177537329 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.454879304 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081971364 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108312828 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.115810943 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140310937 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128928077 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092693235 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184756918 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.08227551 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.191422343 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.106468991 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.079322011 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.27153795 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.199642137 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.694651785 seconds)
  done (took 11.053840277 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.109068322 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.13148332 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.095523829 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136345163 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.132433434 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097935257 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083324526 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09585295 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.119782116 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.172347027 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113789568 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.134455302 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092898458 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081221023 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.113083476 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.242186159 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103378928 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.114071263 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.098432568 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.08646115 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135530471 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.109935372 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.091159341 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.107578573 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164799387 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.207269035 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.123714522 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123824064 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.094549316 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095031533 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143614511 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.157448518 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093248895 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.07989006 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.170229767 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121880884 seconds)
  done (took 5.077927625 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.548900792 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.208386096 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.1202901 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.186810158 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.097339281 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.160694075 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.092275698 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.096880485 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.255627778 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.189806387 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.485999179 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142654289 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116191607 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080225253 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098642856 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.079240645 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.477639386 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.154204566 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.123058285 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116263593 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101578739 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.097747736 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.357082992 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.100076731 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.076792686 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098170545 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063571229 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.191238251 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080104691 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.21123638 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.119427586 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.079771679 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133832439 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.206936363 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.153578344 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.074550757 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124913144 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134276543 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.077036713 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096144974 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.190403382 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.10252635 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077714724 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119141772 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131724797 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131567964 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096186155 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.079484026 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.194851387 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094960076 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.094351445 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.067818728 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.177939883 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103898297 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095598673 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.307046144 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.104314545 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096079997 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.075641806 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.311790946 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.205959562 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.096613648 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078289127 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.095376694 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079564845 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.378370193 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095199224 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.736225495 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082080421 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.105778008 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.080966627 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.095148351 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.075310957 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103518522 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10144577 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.104349863 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096862589 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079728184 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096550492 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.076502725 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.098304694 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106432368 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.214070613 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.07849898 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096615879 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.076502278 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.122891983 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.124452704 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.097152373 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.079025028 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128359944 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097416951 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080189579 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.131208541 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.078884916 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.108903789 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.097724198 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141694502 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.079773415 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.157584859 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.078820851 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122971689 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.097355804 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111680863 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109656514 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096891497 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.165605156 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077589059 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.093348394 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.078343713 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09879346 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.078767595 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098032532 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.075343219 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10858053 seconds)
  done (took 22.91068484 seconds)
done (took 41.278010738 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.31519286 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.101096661 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.100676188 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099774362 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082780339 seconds)
  done (took 1.468128403 seconds)
done (took 2.212137217 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.162695096 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11370685 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09347054 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.125480042 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076119746 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.131784948 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12887837 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093356955 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12963118 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.092562534 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.108907479 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091826623 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075150936 seconds)
  done (took 2.193438232 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093185926 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111813234 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081564418 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109029607 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.07472218 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109298831 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.090912841 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.114457433 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107034877 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083995315 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090586319 seconds)
  done (took 1.805004836 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09318986 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.110381576 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081628579 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.107080632 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075643757 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.108059953 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091073984 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.113861256 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.107124617 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084021256 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.091003347 seconds)
  done (took 1.798697384 seconds)
done (took 6.533978442 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.08917606 seconds)
  done (took 0.820489427 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.899394342 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.672903684 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.092599708 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.165872856 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.305668927 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.168341441 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.488102421 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.121558546 seconds)
  done (took 10.833400748 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.111167722 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.110756426 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100345515 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.084147134 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.097816456 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.081593101 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.096514112 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.098750377 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.080704194 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098732407 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.082618131 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.099770548 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.0799698 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.097295493 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.098801748 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.081471856 seconds)
  done (took 2.299114933 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.116583696 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.114470022 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.103768871 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.104472621 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.083898735 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.102351261 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.102521453 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.086921184 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.099199112 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.099774407 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.087351202 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.102434769 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.099456606 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078364808 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.103010032 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.104277228 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083175409 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.10368088 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.102496626 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.087832113 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.104048182 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.077199099 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.100686642 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.103076083 seconds)
  done (took 3.197655771 seconds)
done (took 17.886267648 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.154066856 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.105434932 seconds)
  done (took 1.002218315 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.093557165 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109954695 seconds)
  done (took 0.951045285 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.094557477 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.093706736 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.117188357 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.106629944 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.077792913 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.093951843 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.116594404 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07842258 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094075458 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.078720864 seconds)
  done (took 1.70266419 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.081516785 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.106894206 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.098264456 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.092819059 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.102066554 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093085997 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.086202838 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09713032 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.106035511 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.074945211 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.099904923 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.110938262 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.083384553 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.112746639 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.102321368 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08071653 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.098854128 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.095741247 seconds)
  done (took 2.472989029 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.077819407 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.094634571 seconds)
  done (took 0.922641803 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.079442154 seconds)
    (2/7) benchmarking "second"...
    done (took 0.091550892 seconds)
    (3/7) benchmarking "month"...
    done (took 0.079164901 seconds)
    (4/7) benchmarking "year"...
    done (took 0.095122973 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.091176282 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.075166524 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.091620286 seconds)
  done (took 1.352195627 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.42308035 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.116891821 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.272311792 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.082279504 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.115797633 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.291288805 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.095830845 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.08220073 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.100477912 seconds)
  done (took 2.386491633 seconds)
done (took 11.537674251 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.091623397 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.112511028 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.109917488 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.466025028 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.104549117 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096693598 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.157029476 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.24355253 seconds)
done (took 2.135306207 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142760122 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.556425874 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.41542558 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.244035923 seconds)
  done (took 1.970595975 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.394426074 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.096910264 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081117504 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.078980044 seconds)
  done (took 1.410322187 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.078337498 seconds)
    (2/2) benchmarking "read"...
    done (took 0.097489601 seconds)
  done (took 0.933989395 seconds)
done (took 5.214972477 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.07899301 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097257603 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.075813166 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.095172128 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.076227619 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.092451375 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.109315644 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.09578519 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.078014313 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.095923855 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.077918084 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095828263 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.078213938 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092574465 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076249185 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095566437 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.075805109 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093085064 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09183966 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076325944 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.094920098 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.076194986 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.092295186 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.078933604 seconds)
  done (took 2.882353231 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.097104725 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.096045075 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.100605683 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.083789102 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.10039171 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.083887727 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.099833836 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.094791272 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.083713108 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097972064 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08274483 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.098490768 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.097044301 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.082918605 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098030497 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.082715166 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.100856491 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095056412 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081603976 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.099089117 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.084258563 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095436289 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.098596983 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084582652 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099727609 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099166068 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08083549 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096377462 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083914389 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.09954669 seconds)
  done (took 3.540438427 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085099242 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.092199016 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077267538 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100088313 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.076966663 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.095091002 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076625884 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094789588 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.0770586 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.093900214 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.077628697 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.093557066 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076784897 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.094713778 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.07754668 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098192055 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110526887 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077112484 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09323597 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.077748786 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.096861706 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077583086 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.093492782 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.076750291 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093824306 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.075962194 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093747893 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.076352129 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094334252 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.076277112 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.097053261 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080207314 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094045707 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.082748896 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.09804701 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.076245198 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.097326064 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.07607143 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.093910642 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.07541209 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.093360044 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.077440611 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.093592773 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.099669287 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.076680041 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.095462156 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077267354 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094731259 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.07821481 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097270188 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.076523173 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094106411 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079186202 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.094991246 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082188644 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.094222425 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.077766778 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.09286564 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.07754372 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09470428 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.07612472 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.093347704 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.078558279 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.094871806 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.108420419 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.083594044 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.093619613 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.07914173 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095743063 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.07935969 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.095668282 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.090890059 seconds)
  done (took 7.052636351 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.131863786 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.122459953 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.077697237 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096019732 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074210491 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094447777 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.080273155 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094780388 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096040098 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082754247 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093805802 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.078445731 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095876119 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.092112442 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.094415564 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.078917204 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.208709201 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091823112 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.07726444 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097544055 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076713053 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.097617379 seconds)
  done (took 2.903002924 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.202556612 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101680907 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138981628 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103548627 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.080881902 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103686257 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100681023 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084251282 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100809736 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081087153 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098612943 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100498734 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081421173 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098685236 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081285438 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098555814 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100671323 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082285681 seconds)
  done (took 2.61003922 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.090748575 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09753652 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.101047468 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.096119094 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.096128019 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081940933 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101501343 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105271893 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.081327661 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.096666264 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.088459244 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098918296 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.098766006 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079351194 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098419961 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.079572288 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.098967011 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079216053 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.105792121 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102321281 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085043058 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105620506 seconds)
  done (took 2.84053947 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093796982 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098932139 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.11475131 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.082163225 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.093281596 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.078556413 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.103695173 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080170919 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.103551489 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099000834 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080055385 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.095811616 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.085467285 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.097611373 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.084738095 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096922099 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098367099 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.079680258 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098315807 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.075102175 seconds)
  done (took 2.611108311 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.099953909 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.098508551 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081690783 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106605534 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099239488 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081378147 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106247673 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098668333 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080455916 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12261689 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098684724 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081079252 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106238439 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.103891683 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.08041183 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.106788548 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.10777762 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10580165 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.08112286 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09830009 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.121411199 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081405726 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106032371 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.097656158 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08029426 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098607293 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080756004 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.103813125 seconds)
  done (took 3.491312306 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080046396 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096674659 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.076934997 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.094000171 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.077021443 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094645813 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.077293996 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.093682052 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079224106 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.094415947 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.079367219 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096294492 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079965691 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.095948205 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080027312 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.097054326 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08014054 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.094330405 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0773089 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.093881175 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.079139485 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096494519 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.079570494 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094670869 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077446603 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.096949579 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077374604 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09497846 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079374318 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098295514 seconds)
  done (took 3.387311068 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.088840014 seconds)
    (2/2) benchmarking "in"...
    done (took 0.104404708 seconds)
  done (took 0.969085377 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.077469788 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112507004 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.077221781 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10121224 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.084793562 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098515107 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.104794162 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084173363 seconds)
  done (took 1.516752535 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.094238266 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.108387773 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.080910673 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.109922105 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.106393923 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.096280208 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.167789751 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.099412375 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.08735289 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09688919 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.110703996 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.07918965 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103611047 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.079660739 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.103092801 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086381278 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095085984 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103668423 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.082691946 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.096535064 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08136127 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107562684 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082342009 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.094373043 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.099625061 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089055903 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109772218 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081170137 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102302823 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.104032087 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.085364254 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092169319 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080502413 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.098134664 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.078941721 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.106787899 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113578509 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.083195911 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.107582703 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082092156 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107936414 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092855991 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.08523864 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.103929809 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090318077 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.099428586 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.09843771 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076157784 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098479614 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083432156 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093336775 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08076678 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09313249 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087963172 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.101127623 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108351682 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.078667494 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.099234101 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.082984076 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.101168017 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.086612713 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.100122418 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.082798397 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.097868385 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104464713 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.084672377 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108640275 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07601663 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091861901 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079464164 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.107990695 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.121049861 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.085951848 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.099550158 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.08148543 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.095553113 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.100573176 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082842013 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104094264 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.086677017 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.098705736 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.103523545 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087815831 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.098598843 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.082660392 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.105755192 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.078377148 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101297351 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.095597859 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097786638 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.097065179 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.078579016 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.095951184 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108513588 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.083810015 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.097627333 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.078414381 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106109684 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.074312903 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.099576307 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.082219319 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099237931 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109241088 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086035233 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104640154 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.10827481 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088357587 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099468515 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.084490394 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.09537285 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.081747375 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.098553102 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088075852 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093175821 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101238577 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.081701199 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.099681529 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.090282381 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.09718835 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.080977272 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107423628 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10354265 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.078980936 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.094944983 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.083977487 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.098207424 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.083868921 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107087439 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.096927033 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.075504679 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.093373724 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084362746 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.098310523 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.083917377 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103415326 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.100848536 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.075043829 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.096695475 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.085191057 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10774423 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081183463 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.098780471 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104145761 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.081951262 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.097323569 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088072446 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100683826 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.079805486 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.103839037 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.080743219 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094070925 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101430334 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.083729773 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097167547 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.084350076 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102155185 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.082877845 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.099306031 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.096792372 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.085976517 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099569436 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07990583 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.098514851 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.079139254 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.109358673 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.100439276 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.075832606 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.096162598 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.087522487 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.096685523 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.080096435 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.097764229 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.082453634 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.099976499 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.096598754 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080332764 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.100773416 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.091585018 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104151336 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099844616 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.086485268 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110744328 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.080701856 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.101137667 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.080048297 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099777079 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.099729684 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089631238 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.103956312 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085865412 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.101758539 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.077575869 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105387159 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107201242 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08024576 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.0963882 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.079511979 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.102505254 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.085667123 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.102114079 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.099815805 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.079201969 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.099239076 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084959192 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.101520119 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.080479547 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.09801309 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.103500064 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080629707 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106667826 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.082292818 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.109443894 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102109738 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.076867325 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102948958 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.078827399 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.104841104 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.076610774 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.09686609 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.080457163 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.100268068 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.097458347 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.083839328 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.092871403 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088144443 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107228802 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.081287173 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.098809048 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.081711163 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.107138799 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100334368 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085294908 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.102288955 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.087665089 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110255219 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.080455505 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.103136014 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109834745 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082399022 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093399975 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.086122005 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099066147 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.080899911 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.097634955 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.078869685 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.102849837 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107092049 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087902116 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093702973 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.085378621 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097168127 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.080062585 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.095199465 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.103531012 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.084052946 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.100066541 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.087864035 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100382705 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.081570123 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103656274 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.098833763 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.082103988 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.100364518 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084022748 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.099999396 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.083612929 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.098911824 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102584448 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.080580748 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09710317 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.082547204 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.099553966 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.081072611 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104692176 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08109567 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099800891 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.084378787 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.099849183 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100151779 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082067346 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.098170005 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.084496315 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100177005 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.081312189 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.102244544 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076429563 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107049607 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.098559733 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089018322 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.099378018 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.077443219 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.104755419 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08338361 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.103993638 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100897891 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.082637114 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.100468451 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.08077821 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.102120404 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.087785515 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097841183 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109758846 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089165279 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099766624 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.084099651 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099626754 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.082433795 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099166143 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.081488142 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.100671932 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.09955618 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.081236507 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.104127895 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.083507631 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.099828762 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082745046 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100364401 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.081378834 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.100225956 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.093477148 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.080907165 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.098562359 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.082877644 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110430654 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.081248831 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.098855229 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.09882763 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083461913 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098047998 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078239079 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.107773705 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108754629 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082317926 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107673726 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081195878 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.100999203 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092456829 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09458145 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.097359395 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.079167953 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.096980124 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089605202 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099882646 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.099838715 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.099855963 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.080407972 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09714329 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082170136 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.099212301 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.09451502 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079386836 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103474923 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.080532201 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099040251 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.081830575 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.102528355 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082784032 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110773336 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098934328 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.082265019 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100391937 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.078642498 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.098586842 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.080980979 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.102783566 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.081565772 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.09789467 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.078918807 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.09990414 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.099856231 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082534035 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098750329 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.082740478 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109371652 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081874361 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.102590385 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10342382 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.075929499 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.102519332 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.081680622 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099711578 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.080897729 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.103844362 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.084595412 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101254719 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.10814417 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.081484224 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.099945374 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.081906389 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.097685683 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.081311787 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100371928 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.080630124 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.100755893 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100914622 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090533512 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.097725222 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.084349409 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100309013 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082616922 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108812009 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101005155 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.085432664 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107657539 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.082244307 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.102352352 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089552971 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.105358433 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10303853 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084111392 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.101963599 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.08738629 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.099897346 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.106348531 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.081982981 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101335741 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.083664238 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09828059 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081613993 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.100292066 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081166164 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.106334261 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.082534354 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.100526483 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.099268385 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.07995856 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.100765499 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08554226 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.107572072 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084231583 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.103530419 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095773146 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079470876 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101105195 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.079743416 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.101378272 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.084963847 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105767874 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.083645995 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.101555699 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.080767557 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110019548 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.106009501 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.085111069 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.098891607 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.085702161 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101768393 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.083992301 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101413943 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.100237927 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08378008 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.104562064 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.08339136 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.100410212 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088935583 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104202271 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100776594 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.083345728 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.100382666 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.082374941 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.094913963 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.082812871 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.10245951 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087260003 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.102913422 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.101107718 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092926002 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.097894583 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082430373 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104648086 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081305907 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.104971459 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.095492158 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.083567868 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101594247 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083938976 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.095669767 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081176838 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.098675341 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.084963907 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.100407519 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.077873981 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111381614 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.10980787 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.085366495 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10039984 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081050499 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096505064 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.07725159 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100561042 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.083101084 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.10323502 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.110553024 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081353909 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100058228 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.077136977 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100567883 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08446684 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.10379514 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.079688654 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096320938 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.099114639 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.085620336 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.106288426 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080713248 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100809001 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084360204 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103229239 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080092003 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104938866 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096986503 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.085456246 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114601569 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.082395141 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102576278 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.106789902 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090360322 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100709353 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.077374702 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.102038521 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.084694577 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101824274 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.101549751 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.083323966 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116800713 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084838756 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.100372583 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.080961105 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.103672134 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.099689294 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.090003319 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101797833 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.083543774 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106323646 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.084697182 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109530379 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103771282 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090083237 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.10440474 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.103214978 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.081479888 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100730526 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081256821 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.099352702 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.084125033 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102311812 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.086185485 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109434024 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.09958017 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092941051 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110442228 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.083281077 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.097499289 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.081496118 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.101258493 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.09595061 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084194204 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.099211423 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.080667132 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.099013429 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.081229419 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.101920539 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.087953516 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.102484981 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.08273759 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.10237946 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.094372675 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.084839711 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.103191215 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082928337 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.097520014 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.083297789 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101342587 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.086077681 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104901567 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.079837648 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.103149934 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.102190938 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083421277 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097414838 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.088324066 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100207471 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.084625951 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.100976768 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083174331 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103602493 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.104551403 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.088329815 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102374502 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.084377575 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.110659765 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104082722 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.080025675 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099768387 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.088161652 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.09909467 seconds)
  done (took 56.661970513 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143267981 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079296302 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09690493 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07776587 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.109380695 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097963191 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078766897 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098093351 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.07945132 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100015333 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.077500249 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.096895961 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105777539 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.101195685 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111299181 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.101497988 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077120492 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099237251 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.076547005 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097916781 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10621516 seconds)
  done (took 2.840694454 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102544057 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.117809742 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112724825 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.115418667 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087832207 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11202838 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.111716005 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111977714 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096112616 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10921552 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.115444154 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.112665541 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.089717058 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108510113 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107475858 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091390242 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.115616627 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105971623 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.093174094 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111828514 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.109855582 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.111876034 seconds)
  done (took 3.179273819 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.082503476 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100832723 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084080572 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.096566119 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.081829653 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.096889167 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086684618 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.099232547 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.085223425 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.099958061 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.080417318 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101033008 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.082678262 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.096857866 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.10064114 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.080463205 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.150605281 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.105354653 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081531946 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.102208667 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077361869 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.103761456 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.096196959 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.078109578 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.100036536 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.085922275 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10232857 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.079967272 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.100834224 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081106869 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.101129086 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.079307367 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.102878532 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.082597639 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.101645625 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.080663505 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101578223 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100897407 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.078678691 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.09924194 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083204471 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.096865913 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083078831 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.102767022 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.080238574 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.098884653 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.083260142 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101182621 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077530713 seconds)
  done (took 5.36767654 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.100629875 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.157177248 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.084169393 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.140287986 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.118295451 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.109895632 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.085652022 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.138784969 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099940429 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083481311 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.120297316 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.117911145 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101042317 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.087465473 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.104848935 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.082898161 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103669877 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099990222 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.086536005 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101171946 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.105223773 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089378767 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.117638422 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.115542733 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.086406928 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101622694 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.100517131 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.087634857 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.115205045 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.107185174 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.086970636 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.107610645 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.117552417 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.084285638 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.102052634 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.10470231 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.099536847 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103274635 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103507464 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.080455484 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.103561132 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.086158132 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.108928781 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.119332477 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.10166041 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.087974347 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101800494 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.079607815 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.115754975 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.103999793 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.090610669 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.117929632 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.10574138 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102217749 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.087543109 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.117338468 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101097316 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.080948255 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104954015 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.114476594 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.079948343 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105595886 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.115342092 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.085172791 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.109179114 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.116488815 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.08755748 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105477247 seconds)
  done (took 7.9519807 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.091728987 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.109151179 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.118763755 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117002314 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.089123083 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.10872194 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108306293 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.088686708 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108345328 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112927571 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108239825 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.130068544 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.083648194 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111733941 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109144001 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.089200769 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.108229098 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108017225 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.089416086 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.108951271 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10973254 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116470959 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.089565743 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.11683268 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.138672738 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102814505 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.088327452 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.108108496 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117876158 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.089241545 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.120863879 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.108534902 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.108646217 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.117064839 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.101718179 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.108697962 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.100437158 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.089212801 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.109016735 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.108213037 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084279382 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.117044573 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.109062117 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.083650702 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109775661 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.107599905 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.117015611 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.120284348 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.091829573 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114113441 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.108334504 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.117317737 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.089379679 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.109774785 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.117109974 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141829542 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116665849 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.116715544 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08988928 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.117790221 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.116823274 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.12542649 seconds)
  done (took 7.511208328 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.103203414 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111562939 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.114064702 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.077746493 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.102413178 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.10579654 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081206365 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.100171329 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.091705531 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.112287118 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113020031 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105306946 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090033111 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114243315 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.105918041 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109370991 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08679144 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.106370196 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111168478 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086380915 seconds)
  done (took 2.872066443 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.092090521 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120530252 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.083537432 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.11006243 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106736579 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089673964 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.105019595 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085796046 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104637005 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105866597 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.093502181 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.113043627 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103149855 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.089440007 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.114842972 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108735791 seconds)
  done (took 2.473870314 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.095566625 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.114851924 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.11792118 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.082943594 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102095554 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.07970094 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.104970409 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.099028278 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080575358 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.118208259 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083272779 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106777339 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.103504576 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.081239401 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.099471315 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086550209 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099347812 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.081195913 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103092057 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.117272415 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094319031 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102161457 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.084707682 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106142525 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.103315532 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090356202 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.103354709 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.080652323 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.102565979 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103607699 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084167126 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.111176584 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.080354734 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.102602817 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100727255 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082300254 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102854586 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.083907028 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.106250174 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.083292005 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102917945 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.103052244 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084142589 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104550423 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.079785527 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.10401799 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.079166793 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.109750995 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.101063888 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.083946177 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.103362729 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.085920949 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.103716199 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.113350245 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.086984261 seconds)
  done (took 6.159529451 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097318814 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106922266 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079297876 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101371605 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.086659745 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.105248088 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.086225057 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105198588 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.104491906 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.081702387 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105666126 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.086374569 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104746935 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.086784134 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.106725848 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10768571 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079904493 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104326876 seconds)
  done (took 2.590071136 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.089367409 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.1034777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.090792639 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104326998 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.082970635 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.106167459 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079500986 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102154248 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081870232 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104619256 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103122702 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.086721509 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102107381 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086203344 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103457826 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083303481 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.106316033 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0811692 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103963638 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.078746549 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106607331 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101964462 seconds)
  done (took 2.939146522 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.08921113 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.131355778 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.184958629 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.106192757 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.122849215 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.11692266 seconds)
  done (took 1.602461007 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108494104 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118128661 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103919274 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.105192615 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112879299 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.084799335 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10595629 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104907997 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114870539 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098872533 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105933982 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114285001 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114520205 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095073083 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113031959 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111467508 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086475651 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107159405 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103740863 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125108058 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087035328 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115147153 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105699091 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086013066 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105136723 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114401741 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095513217 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11941314 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105727454 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11564168 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.091353714 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106190038 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115041271 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120447741 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087674405 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115200826 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105236172 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124875022 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092355379 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114778804 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.106636177 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092608523 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115097377 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112129015 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114850123 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085973897 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11141465 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105224597 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086000052 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13113691 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112203844 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114309215 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112263994 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095100261 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115171504 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132098045 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119879343 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114084809 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.091713439 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11946082 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114681041 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11152711 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114654517 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119513964 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092878332 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117354847 seconds)
  done (took 7.970963264 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099322532 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124812685 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10600743 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.099186047 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115849462 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106397224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105856507 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086081369 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106981476 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084877868 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.148762062 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106545776 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1141458 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114601835 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086804982 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107181439 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106082747 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114446564 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08552512 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132229042 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105907988 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115211475 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094930071 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115810613 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120518378 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112243405 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085408046 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10600235 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105370407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086893595 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111920796 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105823413 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114906239 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08527804 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115060516 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106572813 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.085394639 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.112213484 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106147451 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092253496 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115379946 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125393131 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106746807 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086395101 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121115187 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106084586 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08555814 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106858639 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106714071 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08578568 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120391722 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120463188 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120223179 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114261473 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086807899 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107494373 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106443506 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.085784707 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107003587 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112330258 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.093899905 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107206689 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132360293 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10629336 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085538495 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114864252 seconds)
  done (took 7.864928805 seconds)
done (took 152.545224129 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.213459684 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.198053109 seconds)
  done (took 1.269487496 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.085745528 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13410911 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095035737 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.166686105 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.08432703 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.138163086 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137436464 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.096125181 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105559875 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084608756 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.10605871 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.0863196 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170334991 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084400702 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105122826 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.085504329 seconds)
  done (took 2.629193797 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.112008494 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.238199719 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.12070908 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.08193875 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.109976211 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108274515 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.082584648 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.10930881 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.088525756 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.102975549 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.086434369 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.10493302 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.082587012 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.104586218 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.087737323 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108507948 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.082442544 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.107313112 seconds)
  done (took 2.787772974 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.111455206 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145012492 seconds)
  done (took 1.123497534 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.239275719 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160713191 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.223201595 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.465554351 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.2689805 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.354353142 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.19684797 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.207242392 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.161582411 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.193168243 seconds)
  done (took 3.334195169 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117566458 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.178489125 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.312882882 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.152963887 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.104165435 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.124418134 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15400609 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127236468 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.120205034 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.098175631 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.120580569 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.115565863 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.135691332 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.092332285 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113903136 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.114848198 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.118764062 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.112042716 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.092634743 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.11479881 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136099784 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.084270268 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.113452173 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.111486995 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.096102891 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.11737802 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.103653066 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.083656801 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.113368434 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.092252355 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.110742686 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.122898504 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.095354622 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.170713216 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.099638822 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.171117404 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.095723129 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.110385281 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112745181 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089662945 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.115461646 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.114817412 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.101419554 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.115222691 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083294512 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.116956803 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103962083 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.083463302 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.111596782 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.095817659 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.112362141 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.110925681 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.150291218 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.116927551 seconds)
  done (took 7.251722598 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.778083778 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.153608642 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.088490999 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.870375522 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109996484 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.12490944 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.772253744 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110122717 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24980048 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750156078 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131364849 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.096383339 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226679745 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.234650868 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.952872195 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311550524 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.639370291 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125587883 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.149576485 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.151715262 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.096096819 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136479452 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129577591 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.453273472 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.113772266 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089640182 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11639998 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.095712467 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.179138204 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.101294892 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113582679 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17413304 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.26952588 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.181083439 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.114814449 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.087720803 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112101085 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.166463185 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265646527 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214170573 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.179274254 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08626791 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110519488 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.120625558 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.108895589 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.108294379 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161101432 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.1708925 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189818497 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091627153 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118132132 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.118867314 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.09680569 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.183337042 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098230516 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318948775 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.312182608 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.110643598 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098006448 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.1251215 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261586114 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.098888298 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.221855794 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138330653 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210143289 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088790684 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774545472 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.166479742 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110828337 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.094309769 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118661096 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114574343 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.097151186 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167816832 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.389270071 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122873751 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.113682038 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.088105112 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.253072201 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.100835092 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111257425 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158319648 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.114873388 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118715967 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.100781977 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121453382 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.166193165 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.254133675 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.100235948 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118068201 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.11376827 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102976051 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.114590112 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.209273833 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217135566 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.160865784 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.205527063 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122329057 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160941134 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191018526 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09607714 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193147064 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.096302066 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122800439 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120916541 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.212596633 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.143266547 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099819778 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114578801 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117771153 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150189536 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10295102 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117443696 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.167692432 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.500363056 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.166307993 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.106940711 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104107114 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118794953 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159673361 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.116369022 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.254699642 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098267627 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.186939361 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096082302 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.107446694 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.096713658 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.183400447 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.09864177 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12173813 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121240693 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.095261325 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.256520567 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.191052412 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.120412176 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240799651 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182235758 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.095248067 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191847405 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.097617776 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185841859 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097178451 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12258344 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114430692 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.771803445 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122543001 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118336933 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.092479924 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.196874843 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110482875 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.100107373 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12343756 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108208727 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.774157198 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125561046 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120299756 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.123122609 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.094763538 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.118923305 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.116879415 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.09285811 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.157942539 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226522871 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118662287 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117412713 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101084041 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.181159843 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.092358765 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124436878 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123177456 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100339053 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12105886 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114093964 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1006187 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190100521 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.161688252 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.217186356 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.571582612 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111204281 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.122485396 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201544229 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111297645 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.286215034 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117892263 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.199698985 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.181778597 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096657105 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308514511 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.162043383 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.195294891 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126207011 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.170477157 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.10961942 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.117257388 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.162801884 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.087850937 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.117075909 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.159941058 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123607974 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.121743507 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959969234 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089660932 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.222337055 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108450114 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.167896919 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.114676602 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095988744 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292994519 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111030874 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127446661 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.162234359 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090633975 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124207004 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.718956414 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101566344 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121078943 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117171853 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.217413455 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.161949385 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117627625 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.095990588 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118977431 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.159549712 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.203528994 seconds)
  done (took 43.528877477 seconds)
done (took 62.787968684 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.322722417 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.271518053 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.311381906 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.218509651 seconds)
  done (took 2.088633163 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.168604549 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.16834602 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.14187347 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.083478367 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.148461607 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.105827888 seconds)
  done (took 1.711981952 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.495217189 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.413049108 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.29774412 seconds)
  done (took 2.102075359 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.287015264 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.242770242 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.468692143 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.320759774 seconds)
  done (took 2.347695432 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.204758725 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131592086 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109364463 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.101992026 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.192962822 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.239847165 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.139978073 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.19737835 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.097821352 seconds)
  done (took 2.35986599 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.193003567 seconds)
done (took 11.701840661 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.248677899 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.165204758 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.164763623 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.118258491 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.243032512 seconds)
    (6/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096400851 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.122519862 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.215780885 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.123808802 seconds)
    (10/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.229153084 seconds)
    (11/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.084501065 seconds)
    (12/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.205943935 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.201851832 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.203177219 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.096574584 seconds)
    (16/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.204700638 seconds)
    (17/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.113857801 seconds)
    (18/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.090524534 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.115883574 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.171942214 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.091866142 seconds)
    (22/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116838803 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.235549013 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.083544055 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.132138447 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.201597119 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122271649 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.093596089 seconds)
    (29/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.204306716 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.232997743 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.20607209 seconds)
    (32/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121133114 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.092339935 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.110042193 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.179673747 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.149128776 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.227602743 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.171130589 seconds)
    (39/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.191163444 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.136478184 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.089580918 seconds)
    (42/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.12446702 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.184534564 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.166919262 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.094035264 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.194319783 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.213035946 seconds)
    (48/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.186579006 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.113659707 seconds)
    (50/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.200608031 seconds)
    (51/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.114557957 seconds)
    (52/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.091223751 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.088268566 seconds)
    (54/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.087998448 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.137472988 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.089531425 seconds)
    (57/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.111253557 seconds)
    (58/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.122885171 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.095469565 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.113904434 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.084554527 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.116676301 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092176222 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.114514351 seconds)
    (65/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.128091052 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.133694981 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.168715241 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.134167405 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112850927 seconds)
    (70/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.136617105 seconds)
    (71/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.147448773 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.215642157 seconds)
    (73/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.170337665 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110080022 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.212097953 seconds)
    (76/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.10268173 seconds)
    (77/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.113178303 seconds)
    (78/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.072150412 seconds)
    (79/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.091256517 seconds)
    (80/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.090661172 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.178929573 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.205717302 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.21358261 seconds)
    (84/309) benchmarking ("sort", Float32, false)...
    done (took 0.147411368 seconds)
    (85/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116681537 seconds)
    (86/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.09572137 seconds)
    (87/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.179326574 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.135668583 seconds)
    (89/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.18679582 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066493967 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.177422108 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.092119063 seconds)
    (93/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.133042117 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.327043501 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.0946763 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 0.108949766 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093164721 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.088539974 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066060889 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.134968544 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.2073066 seconds)
    (102/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.138181936 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130102935 seconds)
    (104/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.08916606 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.14835534 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.140742279 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.092199046 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.094630723 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090082874 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.193158547 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.215573314 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.135158226 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.11047429 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.10761756 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.107888023 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.118973503 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.181397892 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.084297867 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.115160862 seconds)
    (120/309) benchmarking ("sort", Float64, false)...
    done (took 0.145184181 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.190222219 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.179492031 seconds)
    (123/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.189358304 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.065283228 seconds)
    (125/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.090414694 seconds)
    (126/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.093053436 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.177639754 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.116113506 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11961764 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.132119157 seconds)
    (131/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.16936179 seconds)
    (132/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.087111843 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.207060597 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.175507301 seconds)
    (135/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093675928 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.175987119 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.163127062 seconds)
    (138/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.120070455 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.09039114 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.130908743 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154755106 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.091929984 seconds)
    (143/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.138283783 seconds)
    (144/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065826618 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122415925 seconds)
    (146/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095977858 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.130290947 seconds)
    (148/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.06601546 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.115113106 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.065850084 seconds)
    (151/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.133225038 seconds)
    (152/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.111612999 seconds)
    (153/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.091382147 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.157778442 seconds)
    (155/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.12036798 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.106900436 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.091875268 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.133690145 seconds)
    (159/309) benchmarking ("sort", Int8, false)...
    done (took 0.184878113 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.065688873 seconds)
    (161/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.146743588 seconds)
    (162/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.121477967 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.117082251 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.098552996 seconds)
    (165/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.089825914 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.095194181 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.107877104 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.175673909 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.107313482 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.136756676 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.153174389 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.108637361 seconds)
    (173/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.08999756 seconds)
    (174/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.066192657 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065793727 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.107923022 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.086064245 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.089972097 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.202496003 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.090702932 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.076075245 seconds)
    (182/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.19591382 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115059224 seconds)
    (184/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.083172155 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.214073585 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.110277824 seconds)
    (187/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.076221904 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.066588685 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.137004329 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.187981808 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.084914342 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111573837 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.093805941 seconds)
    (194/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.089644229 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.118954806 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.215677022 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.119433531 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.091845991 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.109974259 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.107542779 seconds)
    (201/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093796749 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.163618109 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.08727561 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.107113412 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085615005 seconds)
    (206/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.148589023 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.086914438 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089270586 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.19059643 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.084753316 seconds)
    (211/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.065809908 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.108632068 seconds)
    (213/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.067264304 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100043987 seconds)
    (215/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068031688 seconds)
    (216/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.090300962 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.116433484 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.118015408 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.083131194 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.076527627 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.132734488 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.084666783 seconds)
    (223/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116114443 seconds)
    (224/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.091495586 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.114683367 seconds)
    (226/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109063624 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06745558 seconds)
    (228/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.075557361 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.107742239 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.106494104 seconds)
    (231/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.090877408 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066518828 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.186687035 seconds)
    (234/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.07541534 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.108960281 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.06601343 seconds)
    (237/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11205255 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.108463167 seconds)
    (239/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.094708589 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085629733 seconds)
    (241/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.089175156 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093963615 seconds)
    (243/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.197939395 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.085449269 seconds)
    (245/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.124591456 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.136831705 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086338084 seconds)
    (248/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111700386 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068341551 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.112028151 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.066958851 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066089251 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091844269 seconds)
    (254/309) benchmarking ("sort", BigInt, false)...
    done (took 0.218102547 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.084558624 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.220413497 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116979622 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065865803 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.171215452 seconds)
    (260/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.086024968 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.221072577 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.110951202 seconds)
    (263/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124856532 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.093983625 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075173976 seconds)
    (266/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.110754001 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068317649 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.090151214 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08552263 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089372025 seconds)
    (271/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.067190524 seconds)
    (272/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.116498504 seconds)
    (273/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067179332 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.106455232 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.091525656 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066117971 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.135058654 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.084711981 seconds)
    (279/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.089703201 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093090858 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.091165242 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.083987446 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.109829776 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.083599481 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091849973 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.168646392 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.178122246 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134502414 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067579417 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.11702359 seconds)
    (291/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067655346 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.109153623 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.088849159 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.134423238 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.099547138 seconds)
    (296/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.090897552 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.092472386 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.114555719 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067820013 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085338829 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.110108399 seconds)
    (302/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.116757787 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066628436 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.134313859 seconds)
    (305/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.088184576 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.11415924 seconds)
    (307/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066603646 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067182882 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.089708941 seconds)
  done (took 39.328268633 seconds)
done (took 40.231570479 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.098147376 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.134115389 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094338863 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.1335324 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.121641151 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090764153 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.116989539 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096645098 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.122422147 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.123118874 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.096608472 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092550454 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.095079925 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.118614497 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095857657 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133629839 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.122549993 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.092730753 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119216629 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084580376 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.117975908 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085219339 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111583412 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069015044 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.119842023 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.092264847 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.115658187 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.094211474 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.109383463 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.085053841 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.113064892 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.092188982 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.109989465 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.122641585 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.091887361 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.117840478 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.095754725 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.11948514 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087922371 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.109619298 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.09312148 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.109965327 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.092969364 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.116903171 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.092250954 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.11491275 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.117109764 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097379744 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.133224488 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088558223 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.118761309 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.095752354 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.118961499 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116184399 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089280698 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.117588958 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090148845 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.133779479 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.094777077 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112307573 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.093153976 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.117302687 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.114575899 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.093472794 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.117456781 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.096124575 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.1207697 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.091673625 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120358553 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.091343764 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.109413931 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.117128086 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089473184 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.109288786 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.094606175 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.120017375 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085143583 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.115740349 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092938923 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113905649 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085392773 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111095013 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.087612662 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.115698185 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.087844823 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.093089466 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089976528 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.114771901 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.08479259 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118084055 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.09262658 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.116174679 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.087619283 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.120697617 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.085571901 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115156919 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.085626458 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.109792028 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.087380222 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113640272 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.084789817 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111963634 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.117469082 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088113084 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.115442123 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.097908684 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.109305444 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.092047816 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.109130082 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.085884352 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124061504 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.095107952 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.110184633 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088026298 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109703364 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.09363186 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109959301 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.084940503 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110444667 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.085236859 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.116988979 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.108845529 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0879663 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.116220305 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.099750467 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.109845746 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.088996336 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111906569 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.085936388 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.115286458 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.085419812 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.110027241 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.088050545 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.100704486 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.087653176 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109664403 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.093074529 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111801504 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.09502274 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.110756474 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.094363585 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.114787202 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092057441 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.115336931 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085157804 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.097830026 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.088145551 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112621517 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.087672109 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.109967945 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088238756 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110071052 seconds)
done (took 16.706640952 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.086443057 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.182294943 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.149602908 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.140630425 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.106461519 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.110262718 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.119371335 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.117931106 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112923521 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140801074 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109093364 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.130464192 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145703195 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.085025119 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.110792338 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.090196371 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111434749 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101870291 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145026142 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131452534 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.162131182 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085280793 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14463251 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.13443074 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.095096243 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.127928191 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11011521 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090415676 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.113397653 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.111074619 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131459874 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089604608 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111080719 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.131900154 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103562571 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.118121972 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086279619 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.117196165 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.08574317 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.111330666 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139036855 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.108260774 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.117110332 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.116034255 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090311236 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.111924838 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088383168 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119244901 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097022077 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.114723108 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.100788073 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.153320126 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114771848 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120094421 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.08608032 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121625276 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.095874434 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.113968932 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.088992888 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.112811968 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.086038948 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.114135601 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.124613404 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.13876959 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.090541776 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12039503 seconds)
  done (took 8.529258048 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.102905354 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.137799838 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103344763 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.12972898 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.127971618 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087113816 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111892063 seconds)
  done (took 1.769386413 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.087304886 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132237989 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.109552142 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134315951 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130203802 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.107966424 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.122081426 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.08653567 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.129914231 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088274297 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132911003 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150618769 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.088394951 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120118391 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.135809873 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.086969674 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.135804633 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088087856 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116694832 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110406504 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.115171044 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.1322059 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.089888709 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112371609 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101186624 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.112435293 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161706649 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09308573 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114217189 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.090241328 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.110721028 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.162495084 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.100873503 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.123670991 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087045737 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128303431 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127361342 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.085177648 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.127651844 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093449206 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.126824781 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.088404943 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.114396985 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085541329 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117842523 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.097124901 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.113683721 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.088412096 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.115388669 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131719359 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088550995 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126398703 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.087059122 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.116707901 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.090198405 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119252196 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.097184823 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.113403686 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132312128 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089006666 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129186302 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10389835 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127304936 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.10298282 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115056258 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.125606225 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.101516245 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.11631092 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.088728452 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.116893067 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.104068354 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11115388 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.089576969 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.124238887 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.088709837 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.135704461 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.136512479 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089264485 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124094543 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.087507729 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.11364679 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.088360458 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.136984328 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116582048 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088110193 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117293559 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090937378 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111159164 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087281454 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117126523 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086515714 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114824902 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.090750368 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.113853248 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.090734116 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12963763 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.088614328 seconds)
  done (took 11.675771092 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089120609 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113251392 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.090875262 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113706252 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.088616937 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115134202 seconds)
  done (took 1.596500828 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.112267965 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116873105 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102575901 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118888525 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.154894434 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.101475122 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.128902906 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121653897 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107228082 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126929539 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127660656 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103573728 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.134895327 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.119960538 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.102112268 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.119542636 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103218056 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124343188 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126146049 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.094312197 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136095045 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119742413 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.094735095 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.131271774 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.091514296 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119945136 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.123767401 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101758858 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.126894237 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121373476 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.094755111 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116101885 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094695851 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.122168735 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.128295561 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.094657511 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.119718922 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.091940729 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125093955 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116340206 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103120383 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.121416057 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.124981621 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093040962 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.12159747 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.094369358 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.118383664 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124364143 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102912386 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.118751111 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.091518516 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.119746412 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.116272125 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092303018 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120096403 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096573563 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118751819 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.12846478 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09520049 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.120813335 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.091423432 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118050993 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122161548 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.091811054 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.128470242 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.117130604 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094459052 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121007091 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095288726 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.120371692 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.091891455 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117075392 seconds)
  done (took 9.133907076 seconds)
done (took 33.665539127 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.68802363 seconds)
  done (took 1.666409974 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.733483154 seconds)
  done (took 1.714565702 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.192119062 seconds)
  done (took 18.173126821 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.605495658 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.739480835 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.880411995 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.176689555 seconds)
  done (took 3.384352251 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.941569799 seconds)
  done (took 1.945459663 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.271455789 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.251562977 seconds)
  done (took 1.511563985 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.767427764 seconds)
  done (took 1.765895367 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.344342894 seconds)
  done (took 2.331004537 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.42670549 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.190052091 seconds)
  done (took 1.613641791 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.547189071 seconds)
  done (took 1.542982033 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.795220582 seconds)
  done (took 7.797678162 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.255106365 seconds)
  done (took 1.264559 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.294876495 seconds)
  done (took 1.292641994 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.684838067 seconds)
  done (took 4.68787744 seconds)
done (took 51.682543061 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.097389677 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125501216 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.100899285 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122596614 seconds)
  done (took 1.442374525 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099216721 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119585431 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.099385115 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.119918143 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.098972048 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.120200521 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121617817 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.099274047 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.119318775 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.094774503 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120776771 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.093667636 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.122353399 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12031528 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.091971124 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.122432308 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098077627 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120438798 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.122304576 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.094951213 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117989183 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096251526 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123371701 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093164216 seconds)
  done (took 3.636126823 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.098722555 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.116965749 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.094657264 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.116914887 seconds)
  done (took 1.438369091 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099310498 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.14058899 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.137421909 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.098623483 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.141480857 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.133907299 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.090863152 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.115949859 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.092645115 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.123020716 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089222919 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.147070262 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.135961751 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098499289 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.126534101 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.086991937 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116134932 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.135199716 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.098331358 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.124478217 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091136532 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.124597044 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.088673246 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.137888128 seconds)
  done (took 3.780086235 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.102104251 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.148780715 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.106605702 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.137806346 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139833483 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.086121074 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.12713596 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.138010814 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.148222503 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.113589387 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116158286 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.086987185 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.119199917 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.087292303 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.126650123 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.131618224 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.161344852 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.115906073 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.117314811 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.113811742 seconds)
  done (took 3.434695437 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.096269264 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115864131 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.086879964 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115531259 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.098314498 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120219925 seconds)
  done (took 1.644300939 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090837805 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.113654102 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.088812393 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113166491 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.092555246 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113750904 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.087156352 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114050468 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.088813997 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.1128338 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.087449608 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.112130742 seconds)
  done (took 2.226500213 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.492295204 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.115562734 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.11559406 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08721789 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120849955 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.087455102 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.127435079 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.090320443 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.13987049 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087385445 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.114141796 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.089702151 seconds)
  done (took 2.678733703 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232238168 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125445913 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287689361 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188630285 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156987323 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169733406 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151189768 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163887223 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.195620655 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156215358 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231438908 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192805772 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149306219 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186708649 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13654474 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.142741259 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194896238 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242567166 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152727959 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201983302 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223132465 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.162606575 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173860905 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148980118 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110495723 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167421137 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120184658 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128175112 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204686701 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201297472 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186992228 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161635722 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145137142 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234452496 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244877351 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194423024 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186672629 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134394105 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.144564662 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.16186401 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263884845 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136434126 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204600211 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155209135 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129891067 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189420549 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191395552 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.171585851 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.147718888 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11066964 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223047612 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209741012 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.21684225 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136276357 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132441847 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184629272 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.165074654 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123399381 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247893559 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222658493 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178870064 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.092803395 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14573656 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188694805 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20623779 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16505352 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.179709687 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145531056 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188354478 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185733802 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188290869 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189095675 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180664775 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13608393 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168105492 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172114737 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168897262 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253055345 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175168419 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.120558722 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165901651 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148478367 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129081287 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.165966368 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124049703 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210960826 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148747885 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.135331713 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160873511 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158562475 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15851224 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195434007 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216571276 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.119184949 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.110249308 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154082744 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.127047991 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213785491 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138422981 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157191546 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157642082 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.102017365 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174059351 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.123299925 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173482697 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116444269 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174765713 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180091369 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125273529 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156921137 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.123989131 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150045352 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173644822 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225276729 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139255081 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10567228 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230798089 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174028707 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.146725498 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.17802906 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.198247923 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.142070967 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147168999 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19559227 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241128689 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137883885 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201404062 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152979359 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133232956 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105638575 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175941817 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15359017 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.15934338 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132441204 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.178212892 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235307312 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.097337874 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138495119 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184155491 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132309916 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129474785 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158388715 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146129188 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.109833114 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144886427 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149980628 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177264778 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175724248 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150636651 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163075213 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148963108 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.247472818 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139384601 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.14852611 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145682634 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.092687544 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.216305133 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195568727 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128857022 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200560271 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.168905977 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154351492 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169006483 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133121696 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175519746 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10155579 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11984975 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18931069 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163007513 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159647223 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.219368751 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126984017 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.205493749 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.179054727 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170848588 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171024256 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.163628889 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156390054 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.13735364 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157522697 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162819233 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.094526691 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141245055 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133148423 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154988273 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141625157 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104790916 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224432635 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166219053 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147364803 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157153323 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120549186 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204715744 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.099689148 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173453325 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.200924213 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1169806 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.222563521 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190376317 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18342757 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142138167 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229487851 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.092174146 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12527333 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.140179007 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168753624 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104845971 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134889174 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163034575 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178945445 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207617173 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172634339 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161030374 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174514064 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187822154 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.093424861 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.167626073 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181530647 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198010271 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.158962256 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137225935 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.15018565 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174269298 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154374241 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253463305 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165675839 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175238029 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232294043 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.120613802 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131447511 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150062641 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18282909 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152786508 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174307217 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147154193 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141507393 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158797419 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.103352128 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.183823322 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182309767 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161788856 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18680544 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149490417 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181918987 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126732799 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163235679 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157700909 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162393216 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.080928222 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198678055 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200549702 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146255899 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167308836 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189052152 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129804238 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.175229849 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235833459 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192231927 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136617246 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157976988 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158592878 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161174194 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169557494 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176534325 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158663886 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187047249 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1571595 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.107479679 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138487427 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.148835845 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150667593 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.103758596 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.14658529 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.198972942 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.110670274 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212584824 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159465165 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156440315 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169501853 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.120729018 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144166221 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149890702 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212304048 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200487083 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210600975 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.148468244 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.177280071 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229772505 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098044102 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131358304 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.13154298 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175820825 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107039224 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214396156 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.117330526 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156603949 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177799898 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218634877 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110433553 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119996426 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155153476 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171648671 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162978585 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150805121 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.156524981 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203659853 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.142060054 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102334855 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170780401 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155897122 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147136466 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193644413 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.108380983 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118782555 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12763667 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13181646 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16265199 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203559004 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135491718 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182142154 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169155585 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167048904 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164342135 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148605661 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120042185 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163574084 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228628568 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182706312 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131724504 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155157961 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174560547 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192282986 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159133054 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140221375 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199746285 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218373605 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195486232 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.141566652 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16695816 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16655526 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155739322 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18477609 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134440553 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203282534 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134582491 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19418411 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150596653 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140539503 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171626807 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.147334643 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140722688 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184496495 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170536455 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135239082 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131709156 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166036679 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174062078 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153307824 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126160044 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179434297 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.095215296 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216334782 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25516782 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104373546 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153048898 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147121332 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134033457 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155175533 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157010277 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11023146 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.163587422 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200940122 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.133613363 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18717223 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228006318 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166041209 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171188866 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14275862 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692275591 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130374297 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190972502 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15296809 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229716487 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121712879 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169391175 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158549259 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166076277 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223019041 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157355133 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.228340212 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189296988 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.173759625 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132313915 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157260734 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159114123 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143721806 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150888057 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166096552 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157756879 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.149991849 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.174606728 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167673516 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.131994626 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111142898 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223358587 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124601028 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211315154 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178187236 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109323237 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19833989 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183851282 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132554917 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179529972 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232273067 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112428238 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150101629 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13306855 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.153402322 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256583463 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096301274 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224835975 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172778246 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156718372 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164428378 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144609892 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187914593 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156579825 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1756765 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.144741405 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158151875 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15388909 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136123368 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.100390709 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153508171 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165048832 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.147938149 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157062795 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139263831 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213509496 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095099883 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144457923 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15572963 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186778403 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240422618 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107844837 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135566878 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160257971 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14958544 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.172477021 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175509976 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134809769 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133833284 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.106954099 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.157191398 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.111544151 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153929579 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155003462 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161981518 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23043253 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.108457408 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277650886 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137654625 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151204807 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08920981 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.130040395 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147276413 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116492325 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154218334 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14883628 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256228799 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.143671912 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.1036712 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146169864 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124929844 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106832189 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164496294 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161844911 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198280883 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115753815 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108055897 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156487437 seconds)
  done (took 79.656544122 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159796542 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130554205 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146303123 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202758876 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.174328376 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267128207 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208247194 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.251912753 seconds)
  done (took 2.630489287 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.092775073 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144263667 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.150399125 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132511922 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090241991 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117038492 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.329650733 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.130229575 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.089641439 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139593576 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.144456393 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.117063693 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.50850451 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.088274155 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119170118 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.10785588 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.116016535 seconds)
  done (took 3.702214002 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.501805037 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.718731128 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.559853539 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.127285954 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.258157822 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.132752268 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.785023048 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.209239862 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.0931127 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.480084145 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.763650311 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.178780224 seconds)
  done (took 18.90218869 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.097935689 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.119019429 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.106884586 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.133235975 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.094287583 seconds)
  done (took 1.647202225 seconds)
done (took 127.823527768 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.10262201 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.385901348 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07192161 seconds)
  done (took 1.590181926 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.106534574 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135552668 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.107915051 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.134026446 seconds)
  done (took 1.591737087 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.096230232 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125020111 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.107490131 seconds)
  done (took 1.430494567 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.320563549 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.188292899 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.140258961 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.105540736 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.128195696 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.101595139 seconds)
  done (took 1.435613499 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.09662786 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.125505401 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.096765426 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129158137 seconds)
  done (took 1.552225474 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094086193 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070196001 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100159491 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074479742 seconds)
  done (took 1.438110684 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.111842214 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.12987339 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.102218201 seconds)
  done (took 1.44929985 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.127642758 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.137714191 seconds)
  done (took 1.370568569 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.103892713 seconds)
  done (took 1.205370957 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.115616128 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.167778483 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.186280842 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.162000059 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.225098259 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.163696082 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.139137814 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11152481 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.130614649 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.142673608 seconds)
  done (took 2.651372167 seconds)
done (took 17.567846884 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10251276 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.421486735 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.383751013 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144144677 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721633847 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.379056544 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.034739321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.144500419 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.164017028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.092605099 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137558953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671193859 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.061307452 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.371604524 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.020196747 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.37652354 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676648598 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120761694 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118621767 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09288218 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.019454188 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091195228 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120936232 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091677907 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703152049 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.424625699 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094124768 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376740376 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092400494 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125003649 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382278573 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122127796 seconds)
  done (took 16.974082779 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094525612 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172504031 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097558869 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136513982 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.122261873 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093834534 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.123769677 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093164374 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.178567118 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122568876 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110240471 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121110425 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.124797024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093679998 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140714126 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.091267894 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125013403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.09233272 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120779777 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.09236206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.139633471 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.119434307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093379326 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120774198 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09297725 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.134760024 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093200984 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121314661 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120547806 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098125384 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127150129 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094450659 seconds)
  done (took 4.8085934 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139777237 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182284694 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.127440172 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126354417 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167518784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123807593 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.19758438 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117178103 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181198734 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122814161 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138376566 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092628197 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15594723 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093746574 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142249652 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120128423 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096013775 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121039382 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091032574 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121861112 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.138934662 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091967887 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121650627 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092940956 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12168802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107466008 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123665141 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.091972103 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120725688 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125809241 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099638028 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122915438 seconds)
  done (took 5.132471098 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.095851371 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126918815 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.107700766 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138035035 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094467675 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124802117 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097200781 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123630616 seconds)
  done (took 2.020066943 seconds)
done (took 30.03857357 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.102031018 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.121569014 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.097607999 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.133676419 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.096640713 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131476535 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090643067 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.128245808 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.09863629 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.126801513 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.127213017 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091784765 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.122858299 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092625986 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.126461954 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.092635879 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132163559 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.095176363 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.132506874 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.102547792 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.123138658 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.098177178 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.127025787 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.131761297 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.102628372 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.131221974 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.104004471 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.12664992 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.093761161 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.123391028 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.093701005 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.13191 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.092073275 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.131647382 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.120850087 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092410884 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.119951348 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092581688 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.13188295 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.098616864 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.123877203 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.097834214 seconds)
  done (took 5.83569816 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.105723473 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138501808 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.103264203 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080671167 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116009014 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080651117 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.136068758 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078765961 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.1104701 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.106836393 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077105682 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106105529 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.077891045 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.072850391 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.105733674 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.074778501 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108966581 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075206417 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075687392 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105428842 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079404987 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072353097 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.107778058 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078586323 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074495523 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11016665 seconds)
  done (took 3.582666826 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.098597594 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134187783 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.111055665 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181801268 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.15924373 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.098589682 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.131910534 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109683373 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137551297 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119542672 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.104016088 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148140882 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109779301 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.127279055 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091394785 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.135940759 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.134557727 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.092697175 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127203343 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112741949 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138092581 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102272951 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142048312 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132563507 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.090831375 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.121676873 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.095168969 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.133811003 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.096458103 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.130289544 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.095370444 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.124705316 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122301176 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.103226774 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.124212113 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093279262 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.140819998 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.101716099 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129452617 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091663026 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.124659553 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.120938589 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113333392 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166582674 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.09102806 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128243537 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09913437 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.1308363 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120470281 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109736336 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128861577 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.090997261 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.124020234 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.090604368 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.120877896 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10544171 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.123009954 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.093717344 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13134253 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.093979963 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.133549926 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123791409 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.106991919 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.12012458 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.09820805 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.120109485 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091583813 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.119299111 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113936296 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122481094 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.161670461 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.092523186 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.122096665 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100556448 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.129482666 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097285163 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.121627351 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135501445 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101690183 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.123848291 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.100037386 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.124510559 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094717416 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.13929439 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093763657 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.123073278 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092561675 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.127892767 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.094945572 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.122385164 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13394135 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.09244193 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123422905 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.109803024 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.121388573 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093094453 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.12825626 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.097268061 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121555238 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.133617375 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.097251251 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.122031777 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102238709 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.121600211 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095311189 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132115203 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.096655881 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120629267 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.096012251 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.127540778 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.121370831 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093567144 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.122874776 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094009894 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130787953 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098313332 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125965387 seconds)
  done (took 14.712988304 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.224322215 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215917908 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.124065352 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.207141898 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.103685172 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.132944395 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210601347 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.154353609 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.092233001 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.123157321 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.093097948 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.161490477 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.155263943 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.134532244 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.130985843 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121718579 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.110659693 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163331418 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.212049959 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.204565388 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143069442 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100493637 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.125045534 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.092467486 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.124610117 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.102077633 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.138340823 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.131726858 seconds)
  done (took 5.163846465 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.105572542 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155849051 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098170973 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.143816708 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.147624667 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.091908035 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127009673 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093613607 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.134615269 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.134353339 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.091549416 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128706612 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099101496 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.132107692 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.09254061 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.131152454 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.130925212 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.093574764 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.124594137 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096293614 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128328054 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100587765 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.126726639 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091235936 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.128994691 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.120398468 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.085688593 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.140549276 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091997069 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.14541638 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.119559937 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099151791 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.131243978 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09285741 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.122333713 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094701513 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.124500312 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094235908 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124284596 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091354658 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121314284 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078245808 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.12156709 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.105240006 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.128893566 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.07893887 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.129079716 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097090487 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12867982 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.089989468 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.125689252 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.09478904 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12589482 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.129661035 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097249166 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12732059 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.095938572 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.084717616 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.129364077 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.124051838 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084016699 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090644896 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.127545258 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.086557718 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.13094359 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.127098719 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.090978012 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123944087 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096434415 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127881337 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094350382 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.125104471 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090535453 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.124541373 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09798342 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.127463708 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095385345 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.121455917 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.09209075 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.122936073 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075778714 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.122260665 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.073933803 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.125404809 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.091354501 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.120831652 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.094194642 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.129089314 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.107005537 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.1245173 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.128831102 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.093795114 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121070023 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096285896 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.082865927 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.12585256 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137015825 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.109277561 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.123236851 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.090237295 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.136245304 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127506992 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092107863 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.075441475 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129888491 seconds)
  done (took 12.869316265 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.115301759 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.147355453 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093586754 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.136837133 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.148493361 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.115645631 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.129956611 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.098428461 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125425442 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.109573846 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123914615 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.100560165 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.128048172 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.101083911 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.145395502 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.130764446 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.094553055 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.131645092 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.10075829 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.158458795 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.105759242 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.136937134 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.133431983 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.093758915 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.127210643 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.104185363 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.149229171 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.103612211 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.133094927 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.106120195 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.133037792 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.148731387 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109239583 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.127184273 seconds)
  done (took 5.293763082 seconds)
done (took 48.568686634 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.21000042 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.43633822 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.207937296 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.09354846 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.247120978 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.252831602 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.219333638 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.211154675 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.76833974 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.209051621 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.445889762 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.877519295 seconds)
done (took 60.319666969 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.297648757 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347605234 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474025719 seconds)
  done (took 3.959533821 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.568695968 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.254713207 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.495337069 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.210398926 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.231013396 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.650916995 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.86393741 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.590340064 seconds)
  done (took 28.434151328 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.216967069 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.606160753 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.954723809 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.950377909 seconds)
  done (took 18.868155738 seconds)
done (took 61.268673704 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.220581466 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.282299613 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.229592507 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.192113459 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.344936866 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.253890188 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.484566152 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.419835483 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.211543119 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.194835646 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.233441511 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.224309739 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.227330663 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.509726341 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.22728224 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.215042396 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.266084697 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.652683884 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.631858855 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.217720551 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.225048534 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.245600535 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.236035033 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.216167161 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.264573344 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.216914309 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.21232914 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.234042403 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.8107194 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.215835335 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.220632053 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.658476626 seconds)
  done (took 192.136240067 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.212717775 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.267182894 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.372604343 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.242688329 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.636394764 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.418967924 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.370246521 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.719387222 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.235520482 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.238877632 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.447924932 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.217514722 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.531948143 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.22781631 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.22321234 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.306978149 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.419739879 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.52895008 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.237509148 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.483814308 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.212626478 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.483647875 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.383829005 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.412944572 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.271389305 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.258843295 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.23330191 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.253561828 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.414904096 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.35976693 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.23235285 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.253169612 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.846677394 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.076495686 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.225877174 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.218268357 seconds)
  done (took 150.618820111 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.512192267 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.214219045 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.214448797 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.214859615 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.247328017 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.214294893 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.78809239 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.803448717 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.719024828 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.338557562 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.275555066 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.476329952 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.213623848 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310508309 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.226862378 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.215800269 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.230145301 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.260600468 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.215352548 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.216624416 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.805479519 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.230809953 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.294183076 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.223505697 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.217316309 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.249708507 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.60747765 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217166125 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248863575 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.540311465 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.266172641 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.216026537 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.565299943 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.440136464 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.217141343 seconds)
    (35/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.216846741 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.326634017 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.219873038 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.248900231 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.216919918 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48935162 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.21599223 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.216532099 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.219831607 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.835065072 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.218680256 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.797186668 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.219631756 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.140664743 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.216947425 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.217421272 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.294826884 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.767189172 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.236133301 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.218164723 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.219635349 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.217063255 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.216669857 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.250819037 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.280305387 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.319796163 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235216496 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.221114671 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.251356544 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.217481339 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.269570906 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.219018344 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.416777134 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.292762538 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.433765622 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.809528147 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.222095635 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.21926441 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313707469 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338990646 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.219152416 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.21886761 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.218213595 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.217759669 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.328242435 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.22029005 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.646472919 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.224666337 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.219123583 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.280244335 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.314783255 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.218696477 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.568418372 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.22336205 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.21922035 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956017335 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.314190451 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.220359096 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.221118365 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.220065268 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.648690828 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.812702732 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.454473024 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.223701754 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.263962175 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.22256448 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.66262057 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.785859346 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.87794647 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.2233381 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.329305158 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.223104248 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.221621645 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.220858077 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.248377277 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.237811359 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.27897707 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.219882059 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.220814215 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.61899307 seconds)
  done (took 346.647341458 seconds)
done (took 692.057460207 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.920209051 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.857652975 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.998847371 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.877786431 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.859397898 seconds)
  done (took 10.662403945 seconds)
done (took 11.81171374 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.410956928 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.41201817 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.282857109 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.413112239 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.250755418 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.430359606 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.393602174 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.244494985 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.325361976 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.304824171 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.325107839 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.276827475 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.249815344 seconds)
  done (took 18.468517112 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534786945 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.5292735 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.286450956 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.546663742 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.2619162 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.540235963 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.430422946 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.4413533 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434228478 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.25606517 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236519695 seconds)
  done (took 16.647937207 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.555250243 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.539987707 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290063152 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538046635 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263734479 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.542969722 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.427314167 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.449196262 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.437316682 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255572821 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.238361315 seconds)
  done (took 16.688835984 seconds)
done (took 52.955542148 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.232391679 seconds)
  done (took 2.383389798 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.268012353 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.43110205 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.252323566 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.236602111 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.232745324 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.234461329 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.238584497 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.23319472 seconds)
  done (took 11.280074927 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.230011426 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.23326638 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.231506344 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.233299175 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.230501393 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.229221208 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.230063719 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.232024578 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.230407979 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.234006145 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.231760763 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.231703478 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.230720569 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.231325683 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.232826817 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.230666363 seconds)
  done (took 20.856184162 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.23197989 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.23062285 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.23006461 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.232825883 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.231871221 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.231426139 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.232395969 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.231649949 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.232127157 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.231738549 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.233216304 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.23162346 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.232738779 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.232072313 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.229421462 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.232548208 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.231983358 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.2322063 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.23597816 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.231978463 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.23224563 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.232559604 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.23261047 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.233963865 seconds)
  done (took 30.728042325 seconds)
done (took 66.400094024 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.436034805 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.947873662 seconds)
  done (took 9.535165101 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.234187363 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.234307507 seconds)
  done (took 3.623216775 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.235009675 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.234414563 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.235498603 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.234741878 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.234764336 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.235330219 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.234987809 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.234801852 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.235349025 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.235764002 seconds)
  done (took 13.503477836 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.235663875 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.23595431 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.233194678 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.235991377 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.235436679 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.233030755 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.234704351 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.234657363 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.234917227 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.233044154 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.237272984 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.233236749 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.236718882 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.23331263 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.236064655 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.233690584 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.234265686 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.233161227 seconds)
  done (took 23.379002257 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.236390946 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.235076158 seconds)
  done (took 3.627046853 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.233689846 seconds)
    (2/7) benchmarking "second"...
    done (took 1.233871402 seconds)
    (3/7) benchmarking "month"...
    done (took 1.234576368 seconds)
    (4/7) benchmarking "year"...
    done (took 1.235056738 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.233987933 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.236028066 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.234667584 seconds)
  done (took 9.797335027 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.238456996 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.411433803 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.492806234 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.86126487 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.237442543 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.239666232 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.092424971 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.240167121 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.24270945 seconds)
  done (took 14.212818883 seconds)
done (took 78.832836953 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.265442154 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.247908537 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.448668119 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.253262942 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.24971068 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.530900009 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.282527192 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.363173676 seconds)
done (took 37.800799358 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.246118269 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.003212022 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.995060624 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.230402665 seconds)
  done (took 11.385723749 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.219488187 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.202892649 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.223797308 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.276723149 seconds)
  done (took 18.080975998 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.295668158 seconds)
    (2/2) benchmarking "read"...
    done (took 1.568114923 seconds)
  done (took 5.020507172 seconds)
done (took 41.891743925 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239390044 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.239778162 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.237132996 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.23974027 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.235757116 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.235981361 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.236804942 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.23869029 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.239348119 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.239632101 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.240067891 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239752088 seconds)
    (13/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.23944184 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.237467427 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237083699 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241134159 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.237426997 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239139565 seconds)
    (19/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237830058 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.237866663 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.240849163 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.238271685 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.238766262 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.239660044 seconds)
  done (took 30.885186765 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.242168886 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.238595061 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.241394998 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.240737413 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.239154481 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.240665046 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.240729834 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.238508468 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.241299478 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.240469849 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.238927901 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.237761644 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.240899452 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.238100997 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241539875 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.238066281 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.241705845 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.237988065 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241067133 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.238730518 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.242740482 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239723365 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.238818452 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241245036 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.238726173 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.23911437 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.241497383 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.239419629 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241451872 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.239526689 seconds)
  done (took 38.361868167 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.248784567 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.2496346 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.241604255 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.241806627 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.241678423 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.24286089 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.242269838 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.242266077 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.248578797 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.241640249 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.242932951 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.242623373 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.242841818 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.243179647 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.243380126 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.243135946 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.243146927 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.243002473 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.243979523 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.24450319 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.244472909 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.243459363 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.243241803 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.243772674 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.243575496 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.243736499 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.241669156 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.243556113 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.243017169 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.242532232 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.243409584 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.24310739 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.243044903 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.244412419 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.244189492 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.24580184 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.247266527 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.250946779 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.245404987 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.245652121 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.245117158 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.246234678 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.244844029 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.245252307 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.245246428 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.247119304 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.247135059 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.246218376 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.245567375 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.246377223 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.24588031 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.244989172 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.245543793 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.246119391 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.244813933 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.244959334 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.245869433 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.2456901 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.245327126 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.245937878 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.245552957 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.246214538 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.246178417 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.245858825 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.246901843 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.247191623 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.246798695 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.24572487 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.247203753 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.245997561 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.247917611 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.246583136 seconds)
  done (took 90.796121366 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.246164671 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.244316952 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.244030626 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.243851499 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.245222452 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.247732268 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.244780851 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246317292 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.243577771 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.247045137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.247011595 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.245063339 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.244843742 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.248261225 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.247657936 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.244214935 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.247077487 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246505505 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.248118301 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.248816977 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248300248 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.244660638 seconds)
  done (took 28.578921518 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.249423397 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.249362726 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.244152675 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248083928 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246666263 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.248237948 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.248570299 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.247894296 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248179414 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.246037197 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.24662223 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248787334 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.244804026 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246104472 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.24569247 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.246857475 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.249904018 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247198627 seconds)
  done (took 23.619504466 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.246624166 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.246662094 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.249339913 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.24675139 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.245864331 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250509827 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246893163 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.250871076 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.249683733 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.246807517 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.249890841 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.249896785 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.25149269 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246772588 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.249842411 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.247447033 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.249962801 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248258107 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250065667 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246800308 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.24771046 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.250899256 seconds)
  done (took 28.637057185 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.251349396 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.249670099 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.248877087 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.249083366 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.248363612 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.251032919 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.250572502 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.247154598 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.249987424 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.250612302 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247566395 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.250456413 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.247909914 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.249113687 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.248373774 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247374009 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248852693 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.249144317 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.251512228 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.249331946 seconds)
  done (took 26.155043423 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.252015728 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.25189275 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.251297213 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.250859663 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250930547 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.253346654 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25124064 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.252127553 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.251916894 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.25214315 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.253305415 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.25253305 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.253350064 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.25190116 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.25261615 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.252866979 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.253983574 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.253364203 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.253220006 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.254265315 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.253950199 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.253097087 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.253230982 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.2525757 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.253548695 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.254791021 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.252934784 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254584959 seconds)
  done (took 36.248395761 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254670404 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254445315 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.250152416 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.251922745 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.251459668 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.251327494 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.250807602 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.251484428 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254826702 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.25061967 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.254353759 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.254928508 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.255119777 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.255031979 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.254603107 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.255550151 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25511296 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.253002981 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.253598347 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.251630522 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.254933292 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255988173 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.256032495 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.252464414 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253007474 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.256552783 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253791946 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.253988335 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255497925 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.254086998 seconds)
  done (took 38.784418238 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.273971511 seconds)
    (2/2) benchmarking "in"...
    done (took 1.275125385 seconds)
  done (took 3.722807021 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.253852152 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.257234304 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.256232247 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254541702 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.251822629 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256644566 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.25628711 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253480583 seconds)
  done (took 11.213491893 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.25582337 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.257160501 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256582594 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.257020804 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.255925255 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.256526779 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262759027 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.275914895 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.256772146 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.256938499 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.263789421 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.265446183 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.258590761 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257216784 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.256482826 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.259319051 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.257569272 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.25632129 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.257751347 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.258118383 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.257981757 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.259811538 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26099342 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.255548785 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.262565706 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.270925144 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.284559012 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.258210751 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.257935832 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.261251271 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.255827586 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.257452537 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.257706831 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.258493717 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.258162564 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.258647062 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267104307 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.279105644 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.265133173 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.278885022 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25967535 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.256458729 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.259993246 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.260127591 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259172299 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.259722258 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.260172847 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.257752869 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.257663719 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.26303554 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.264358662 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258450515 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.25722627 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263609413 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.260962448 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.26661162 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.279146596 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.264030965 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.268555808 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.270108707 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.292630604 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.284776469 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263851093 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.260687481 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.268877781 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.282632285 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266885784 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.277780645 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.257721885 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.260829486 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.267358518 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.29324544 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.286033784 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.262283594 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2613608 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.261073639 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.261678877 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261861153 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.268239296 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.283853958 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.262426543 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261120277 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27067396 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.283899866 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.262392044 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.261450781 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.262117956 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.262844851 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.262278429 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273195018 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.280752681 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.262096596 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.261998896 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.262756176 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.26272476 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.262757078 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.260265193 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.262208686 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.259987164 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.263294858 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26278021 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.267429734 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.271870036 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.262599259 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262571135 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.269305707 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.284451801 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.262521945 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.269299115 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.262395484 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263450356 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.264081915 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.270218209 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.260917908 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.2670123 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.271876687 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.263609977 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.264742057 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.263910335 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.265180099 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.273437416 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.289544413 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.263743622 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.264556479 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.270100461 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.27639327 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264557064 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.268943216 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.264939342 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.262895603 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.262943859 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.265790065 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.264856416 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.265195383 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26558351 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.266641025 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.26336846 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.264997674 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.265862956 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.266110714 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.266057578 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.265722956 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.267411493 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.267524708 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.266815315 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.267215764 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.270421978 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.285402369 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.268465623 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.267435044 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.263517193 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267514076 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.267348333 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.266023478 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.2653778 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.266796969 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.265204032 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.266889757 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266790683 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.267073197 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265928068 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.266626718 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.269663202 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.268166916 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.270842561 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.265418249 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.264216756 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.266090234 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.267081099 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.266528942 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.267674227 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.266532141 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.270234949 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.275112619 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.267106205 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.267883257 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.269796407 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267024959 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.268488957 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.267044119 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.269791401 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.276675821 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.269548751 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.274218554 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.288245436 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268625346 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.267360039 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.267965129 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.268251186 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.26839026 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.271926761 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.275728895 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280606156 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.293712205 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.269943046 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.272384579 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.270440331 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.271160373 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.271227198 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.268230177 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.269815128 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.269280728 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268590928 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.26870319 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.273124581 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.269037127 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.269573305 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.270629595 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.268749518 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.269581917 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.271051345 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.270248279 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271039569 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.268272837 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.270240886 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.270291892 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.269295608 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.269357665 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.268722628 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.270670543 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.270814214 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.26974139 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.276952922 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.26909728 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271916129 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.272548243 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.272078692 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.270613277 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270890348 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273420002 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.271153669 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277965524 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.290888262 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.272402013 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.278247058 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.290523949 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.271427808 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.274183879 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.271793048 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.269492603 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.274782724 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.279941033 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.272160742 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.271696898 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.272379063 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.272496912 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273033099 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.277829345 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.291307907 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.271694769 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.27350936 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.273816604 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.269218167 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.273096637 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.2731219 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.273886242 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.273013165 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.27207381 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.272692411 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273197759 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.271880785 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.271525092 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.27087755 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.275048447 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.278838092 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.276590696 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.272298948 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.274401066 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.270141194 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.27156898 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.269034005 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268754198 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268589729 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.281284934 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295545431 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274198117 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.290075161 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.269000562 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274181908 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.289529895 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.273264919 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.268973226 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270113712 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.269236139 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.269051034 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.266380006 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269017665 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270589127 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269924519 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.27170992 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.27507998 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.270024681 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.268688131 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.271203545 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.269121879 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269405073 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.268166391 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271524015 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.272032367 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.271126444 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.269174091 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.269434296 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27597902 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.289434889 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.269855904 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.267557542 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.269669215 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.269106145 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.270193649 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.269616993 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.271658092 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.276964315 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.272461875 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.277747339 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.272024181 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.277857564 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.26824596 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.272335457 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.276550114 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.268546309 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.26908971 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.269883728 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.269721502 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.276323245 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28835662 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.271929592 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.273033326 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.269881655 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.269876266 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.270929926 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.268889416 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270137099 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.269279294 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.277379197 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.289255153 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.273607859 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.271978611 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.267900219 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.271337672 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.271764875 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.270219094 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273918558 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.270696153 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.270972905 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.269929542 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.273273381 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.27165142 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.271634867 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.271091433 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.268183085 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.271050272 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277892426 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.290869635 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275069398 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.272863132 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.278833883 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292301827 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27715883 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.290412741 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.272955138 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.271471084 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.272440896 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.273157795 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.271977371 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.273595043 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.272570433 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.273481591 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.275758999 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.272102302 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.274912926 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.27276667 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.272836721 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.273245843 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.28376537 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.295355029 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.275509075 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.278116655 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.27167535 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.274027181 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.27717646 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.274210881 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.272977331 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.276783958 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.283238819 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.283542748 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.275683001 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.275262193 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274631203 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273416755 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.274579584 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.27280167 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.272972316 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.274978696 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.273835507 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.274287647 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277226925 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.274436914 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.275659968 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27499147 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.274404125 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.283479631 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.294720742 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.276122028 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.273603846 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.273334123 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.274827386 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.27537002 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.275508049 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277342843 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.274616331 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.275623315 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28118131 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.28109222 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.276650821 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.273374541 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.273905986 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.275894267 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.274944012 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275191794 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.275054151 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276768049 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.276667817 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.277536502 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.274909224 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.275115729 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.275647146 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.275483393 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.276055475 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.278278801 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.282280603 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.275242536 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.274022688 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.276783288 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.276265148 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.274954836 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.275532743 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.283417792 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.298864714 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.285151323 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.285099196 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.279916243 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.277813101 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.279040981 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.284373588 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.278115718 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.279084766 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.27533166 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.280448602 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.276988214 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.279009487 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.276992498 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.282544009 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.296363735 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.27700515 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.284868386 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.297624002 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.276195279 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.277832601 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.279343121 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.275951805 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.27499841 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.276305294 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.276912275 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.28622031 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.295903534 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.277379009 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279994542 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.27507924 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.278183881 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.28124974 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.278653884 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.276828509 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.274325947 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.277787448 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276977164 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277067127 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.274904508 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.276179318 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.277994521 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.279600769 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.282420057 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.274191015 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.279824511 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.276903294 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.278785855 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.277501943 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.277847195 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.275470082 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.274767931 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.277059678 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.276386418 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.276284045 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.278866861 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.276864113 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.278997576 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278454199 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278400692 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.280997566 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.286619077 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.284748965 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.276396315 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.277286225 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.279298992 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.280487326 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278054324 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.27773187 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.278320019 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.280025099 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.278458852 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.28005824 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.279435626 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.281947148 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.294817943 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.297394116 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.277530837 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.280302809 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.283672004 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.27970114 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.275646653 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.280162641 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.280443315 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.282384971 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.286439652 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.28023508 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285763819 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.2982013 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.279955571 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282386663 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.283613593 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.28668836 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.283001853 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.280575949 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.279732645 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.283585932 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.293746154 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.280975612 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.290521113 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.308335025 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.298445345 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.280523933 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.280342019 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.277416963 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.280380749 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.281725903 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.279738317 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.280264468 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.280261119 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.279771155 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.281847205 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.287114727 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.28190461 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.28069928 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.280974644 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.280429566 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.281293147 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.277713386 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.282048536 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.282039592 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280752465 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.281081596 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.280731052 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.280602292 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.293162995 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.306005935 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.280743247 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.280212462 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.278377355 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.282840244 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.284001448 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.29160743 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.288162259 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.281056899 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.282256305 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.283166546 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.281090178 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.279125896 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.280955987 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.280847667 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.280965071 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.27935543 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.292372257 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.306585778 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.285960712 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.28185635 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.281352969 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.281640871 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.282881189 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.282939341 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.28124236 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.281701999 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.279899612 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.285957381 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.280630465 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.280406196 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.282577452 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.289413553 seconds)
  done (took 760.270246265 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278618171 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278956928 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278619103 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279335687 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.278432162 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279857958 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280638121 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.279219447 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.280013426 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.278940464 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.278680352 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279203076 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.280385268 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279223734 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.279806797 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278210795 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278693214 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27833271 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.278992518 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278922424 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279653718 seconds)
  done (took 28.058679592 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.28197139 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.279896855 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.280587505 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282022959 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.27879983 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.281860696 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278888351 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.281523242 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.296335747 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.279311184 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282355194 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281401077 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.279863711 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.278492508 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.279385654 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281744553 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.282938263 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278833665 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.281343215 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278041876 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282278253 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.278823151 seconds)
  done (took 29.38272615 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.282465231 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.282327673 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.2818251 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.278657162 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.282812121 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.279897656 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.282133716 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.282272575 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.282056833 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.28301996 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.282307271 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.281838955 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.288061294 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.287405764 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.284295844 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.283042606 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.426884175 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.282210969 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.283407441 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.283419012 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.279464774 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.28701939 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.300043118 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.281014004 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.281888191 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.284108599 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.281876959 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.283356995 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.283096716 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.284255874 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.287297272 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.282754056 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.282416218 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28553928 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.282680167 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.285479691 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.286353447 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.28472498 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.281674206 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.283191169 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.292849007 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.304615036 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.284636637 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.290348576 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.305556591 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.285341881 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.288124285 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.291684981 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.281981896 seconds)
  done (took 64.312607155 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.284509919 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.284890555 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.28192736 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.285951216 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.284509466 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.286074438 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.285778489 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.284690114 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281438156 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.282942092 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.285554305 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.283510034 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.282712219 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.284457573 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.284688995 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282375723 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.283085829 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.281035065 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.283077504 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.282876073 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.283786117 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.285543023 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.285931169 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.283607422 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.284689203 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282782323 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.283666332 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.286779892 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.284004721 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.284582033 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.286234413 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.285052236 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.285964746 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.283585168 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.282883177 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286378876 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.286956338 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.283186338 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.286525326 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.2829568 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.286238702 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285463213 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.285288081 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.284923845 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.281802562 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.282955323 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.282494635 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.282678634 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.283145074 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.285379423 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.286596082 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.284707468 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285332555 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.282503552 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.285898557 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.28584539 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.282553295 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.283875873 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.287052899 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.283374918 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.284006567 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.286282775 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.283698196 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.285565582 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.28706269 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.283351738 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.28294791 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.285790671 seconds)
  done (took 88.539480879 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.284486315 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.285400741 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.284718671 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28661384 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.287307115 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.286470526 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.286916782 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.28491315 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.285797292 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.285610627 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.286420838 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.287084158 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.287321944 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.287944654 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287995077 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.287094309 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.286613067 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286968968 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.285347224 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.286032019 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.286999757 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288015241 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.287254249 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286482135 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.286887884 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.288604034 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.287431771 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.28691404 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287271596 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.286620679 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.287017811 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.287179566 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286594596 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.287661116 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.288309782 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.28770398 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.287432643 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.287695363 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.287410863 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.285324703 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.285818463 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.286707826 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.287532367 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.288341939 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.286722005 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.288667771 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.286562802 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.286991141 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.288088307 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.287973481 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.287464248 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.287819343 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.28768261 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.285779143 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.286740337 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.288716793 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.286176794 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.287063097 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.287889462 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.286696409 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.286961247 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.289511336 seconds)
  done (took 80.996677555 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.286961694 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.285786776 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.284895628 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.283734087 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.287146991 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.28302238 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.28654236 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28661299 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.288114947 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.287749129 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.286858466 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.284900024 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284236231 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289455719 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.28552421 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285213288 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.285306837 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.286534483 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.288613678 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.285503895 seconds)
  done (took 26.924173578 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.285929684 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288675256 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.284683891 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.285437518 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.286609448 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.284274619 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.288292412 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.287466545 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.284244326 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28854781 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.287329086 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.28779417 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.285431493 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.285953825 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.288748522 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.28483334 seconds)
  done (took 21.786566141 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.284614977 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.286598665 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.287201606 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.287375046 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.285459142 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.285107925 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.291686383 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.285615618 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.285028246 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.287164158 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.28644213 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.288049687 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.288106786 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.286068972 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.286248764 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.287618258 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.285591775 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.285116806 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.288450445 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.289211294 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.285744225 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.285537932 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.288698309 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.287316463 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.285400707 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.286912847 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.285224073 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.286512762 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.286261669 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.28889388 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.284796277 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.286144897 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.284911145 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.285238346 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.288299954 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.287934719 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.289054627 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.289610889 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.289195038 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.288492679 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.288206275 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.286531322 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.288551087 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.289190534 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.286176974 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.289426394 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.285885526 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.286140821 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.286053448 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.287848809 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.288024982 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.289088317 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.289773221 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.290381153 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.289760534 seconds)
  done (took 72.001692938 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.289806072 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.289642974 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.286465516 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288898796 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.290385638 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.286650233 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.289823876 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.28714546 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.287320219 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.288932938 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.287192545 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.289366125 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.287693628 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289571483 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288889698 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28995137 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285854996 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.288360535 seconds)
  done (took 24.396125076 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.286490594 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287050095 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.290463842 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.288890321 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.287407876 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.291636809 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.288998821 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.290441419 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290508741 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.289237028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.288214732 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.28997034 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.291021389 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.291267546 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288102735 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.28884061 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.291028427 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.290673315 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.287672925 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.28825755 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2919528 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.291653426 seconds)
  done (took 29.57298554 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.290120217 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.289959006 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.30535679 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.328475202 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.330329981 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.289963456 seconds)
  done (took 9.03849525 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291317452 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292360238 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.289382157 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2924585 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292101526 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290271218 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29019391 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289482133 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292115123 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290652978 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291180737 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292196 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291378778 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289957992 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292412194 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294268428 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290354249 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29095624 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291180974 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292614251 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289698085 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292644716 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289281733 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290509562 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291129914 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290699547 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294464206 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29083449 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290300432 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292923611 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294318944 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290811133 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293765358 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29337607 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292822179 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294098729 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292544401 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29530037 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294901112 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291294962 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294751721 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295677811 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295389864 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291152403 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295857234 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293237721 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293379558 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292566475 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293882192 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29659045 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295785604 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.292661297 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296808475 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295783786 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296252789 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296499878 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293370329 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293713961 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295486818 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294101168 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293836839 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295484601 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292906643 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294607654 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296119019 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291673807 seconds)
  done (took 86.538870005 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293705999 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.293182399 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292307608 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294552641 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294582898 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293222942 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294573906 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.293199381 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294899994 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293825335 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29625344 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293307458 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29489247 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295742457 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294078411 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294621804 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295497268 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293402717 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.29536397 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297337276 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295227879 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294960998 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295234826 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295140632 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296087866 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297595807 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294662785 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296073718 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294840368 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.295213882 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295830605 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296208333 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295274744 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.295401055 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295872524 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294564507 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.296252725 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295899074 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296360973 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297379381 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296485687 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.299369022 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.295283146 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297265385 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297072729 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295950222 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296617983 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.297886888 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.296359064 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296623579 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296563286 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29763257 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.297455644 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297365292 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297587046 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297101346 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.29672498 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.297979981 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29736691 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.297860086 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.297152786 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296765399 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299846944 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.298062003 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.297339656 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.298599825 seconds)
  done (took 86.744384529 seconds)
done (took 1766.72685399 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.321679578 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.396515213 seconds)
  done (took 13.932095742 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.460149226 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.413843343 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.296978789 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.323826934 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.298441992 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.316493315 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.317051825 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.298505835 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.298011419 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29683926 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.298360678 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484743115 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.292170429 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.299180101 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.298053966 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.393977251 seconds)
  done (took 42.602175952 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.326153545 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.305456619 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.409870764 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.321831495 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326634028 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.481240394 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.353029997 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.304315826 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.462402299 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.343265479 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.760264226 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.327126217 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.303658694 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.341082694 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.320991254 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.478291418 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.538104438 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.76591155 seconds)
  done (took 29.683773778 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.719164729 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.316239326 seconds)
  done (took 9.251546597 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.328474715 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.301571125 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.304436851 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.331782353 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.317346347 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.334027781 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.359441765 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.357110411 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.317363729 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.336661228 seconds)
  done (took 64.504169856 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.321974779 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.305247385 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.30579864 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.304741817 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.295897888 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.315049845 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.303929503 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.303755078 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.685772239 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.426051654 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.322058325 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.313522392 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.32244423 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.304701469 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.303123158 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.339877207 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.439192957 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.321933754 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.301221888 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.310323866 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.306540357 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.436134272 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.344142291 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.304601375 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.422402549 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.697851105 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.311301899 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.311929737 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.422303694 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.321944433 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.304611867 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.305997506 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.306731717 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.867937073 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.784136759 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.317516787 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.328535602 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.31418957 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.304094232 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.48784021 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.325466756 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.312601251 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.298835931 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.758350112 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.45792688 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.412098556 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.443933936 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.308819693 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.308765066 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.366643198 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.306639371 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.306915948 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.33350355 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.045538021 seconds)
  done (took 109.252419347 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.314719293 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.786093621 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.468940534 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320417975 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.143653587 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.931133542 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.31539489 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.569601457 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.31864469 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.30149642 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.585743784 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.792191949 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.325507197 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.356667149 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.839850414 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.371079969 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299488087 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.198752576 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.314558573 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.302108537 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.712688351 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.320627792 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.318294731 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.603525236 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.339824263 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.744358288 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.680606619 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.809082515 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.316888695 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.300791638 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.754750973 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.322729086 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.339595939 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.301522988 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.565092741 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.638600543 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.630677218 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.323487342 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.304691765 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.305199788 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.320956986 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.743158476 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.643164973 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.317734202 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30260571 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.761637064 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319100868 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.308004625 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.306179557 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.508690017 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.195557094 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.302878762 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.680225823 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.308161539 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.646106834 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.359446232 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.340034355 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.773586086 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.318905137 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.46312373 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.322844746 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.303476883 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.30237868 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.310041828 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.306883518 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.633237506 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.685275608 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307765297 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.634426864 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.764945595 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.327345547 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.819108873 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.175972766 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.31212595 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.358347105 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.30531195 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.018629263 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.789407954 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.368313266 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.304994232 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.618425041 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323113769 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.571394709 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.319133096 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.306886987 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.728002768 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.327652498 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.376545707 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.304401108 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.304784598 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.092415883 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.317179274 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.562570018 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.327803263 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.304902842 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.305883366 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.339252842 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.304891486 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.310489862 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.311766142 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.817370257 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.325576011 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.606681267 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.325912638 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.304743421 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.311443358 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.30976486 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.307609717 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52571767 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.918647556 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.321990583 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.307243392 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.305974434 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.312950088 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.593330698 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.312587971 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.595736362 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324392689 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.306991396 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.313076179 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.043249887 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.330943772 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.307571557 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.312545711 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.131896202 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.530368603 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.323515171 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323629444 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.308140077 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.315738356 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.55994625 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.290524173 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.305230072 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.285339313 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.962712406 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306080009 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.283617197 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.828473358 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.277448934 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.147719919 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.289162058 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.268820557 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.560521578 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.539844042 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.563993134 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.274982779 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.286119077 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.983534766 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.298505389 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.401346879 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284721827 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.242939458 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.462614947 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.54548049 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.266582581 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.840286899 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.266060464 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.478698632 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.263635263 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.585731024 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.740545105 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.280085553 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.264070319 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952448236 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.951373565 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.870903965 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.261818544 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.528991623 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.224055563 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.709198339 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.255417952 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.25541286 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.850236583 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.257408995 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.264414006 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.254480864 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.256619653 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.420890586 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.428580509 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.897699028 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.261401654 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.697377332 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.333051563 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.269873431 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.270604406 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.260133594 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.608218779 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.340914371 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.256093823 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.292190627 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.255304545 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.2647953 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.714241622 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.200523189 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.261171582 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.408762853 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.874331766 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.277447505 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.25674483 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.006221977 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.607642155 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.74572417 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.297066686 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.548999053 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.276242397 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.296383596 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.035344815 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342829794 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.708972122 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.274505599 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.258321495 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.850650066 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.273492961 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.324145371 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.256514924 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.252671954 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.771514714 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.263930283 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.249006162 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.542664521 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.248274888 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.499791437 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.243981227 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.284716855 seconds)
  done (took 1102.159934363 seconds)
done (took 1372.600309227 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.245593936 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.249383737 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.230346563 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.248330253 seconds)
  done (took 26.139074671 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.252651636 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.249259234 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.249575932 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.248510255 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.251198334 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.248943231 seconds)
  done (took 8.667513397 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.321163567 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.24235638 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.249313683 seconds)
  done (took 18.978867213 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.456884722 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.472889545 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.600321216 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.383709626 seconds)
  done (took 10.079666923 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.251046158 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.249709906 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.249859378 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.252004109 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.252905179 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.255261878 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.252448858 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.252267877 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.254479639 seconds)
  done (took 12.435504002 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.988675273 seconds)
done (took 82.454701026 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.577940202 seconds)
    (2/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.2696368 seconds)
    (3/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.261393207 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.364079369 seconds)
    (5/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.857398087 seconds)
    (6/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.305367164 seconds)
    (7/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.303629565 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.24365237 seconds)
    (9/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.500677755 seconds)
    (10/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.443099578 seconds)
    (11/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.584157534 seconds)
    (12/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.592514369 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.800130456 seconds)
    (14/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.565141643 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.293469972 seconds)
    (16/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.318300501 seconds)
    (17/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.603936568 seconds)
    (18/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.310367537 seconds)
    (19/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.272582544 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.64963123 seconds)
    (21/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.279024638 seconds)
    (22/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.332393734 seconds)
    (23/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.072265229 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.874237747 seconds)
    (25/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.560160953 seconds)
    (26/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.877606776 seconds)
    (27/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.387191174 seconds)
    (28/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.258085839 seconds)
    (29/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.498421175 seconds)
    (30/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.247966324 seconds)
    (31/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.65313706 seconds)
    (32/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.383784196 seconds)
    (33/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.248406663 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.869748885 seconds)
    (35/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.480010987 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.058099665 seconds)
    (37/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.244872874 seconds)
    (38/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.251940488 seconds)
    (39/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.835184728 seconds)
    (40/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.253126221 seconds)
    (41/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.998009862 seconds)
    (42/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.256857305 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.323008086 seconds)
    (44/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.229351715 seconds)
    (45/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.361166046 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.764688378 seconds)
    (47/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.8695725 seconds)
    (48/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.53052275 seconds)
    (49/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.538383566 seconds)
    (50/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.060270646 seconds)
    (51/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.350403947 seconds)
    (52/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.275006386 seconds)
    (53/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.646816541 seconds)
    (54/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.329166851 seconds)
    (55/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.84628401 seconds)
    (56/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.265203594 seconds)
    (57/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.312321167 seconds)
    (58/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.941250523 seconds)
    (59/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.355963812 seconds)
    (60/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.044335158 seconds)
    (61/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.588947297 seconds)
    (62/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.249599131 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.417160996 seconds)
    (64/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.96333102 seconds)
    (65/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.291187729 seconds)
    (66/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.531247025 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.348172197 seconds)
    (68/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.265826962 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.687543614 seconds)
    (70/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.040989561 seconds)
    (71/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.454875123 seconds)
    (72/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.664053119 seconds)
    (73/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.491589886 seconds)
    (74/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.307537522 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.371082397 seconds)
    (76/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.06593112 seconds)
    (77/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.374220092 seconds)
    (78/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.712278403 seconds)
    (79/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.25005228 seconds)
    (80/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.358176539 seconds)
    (81/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.979354804 seconds)
    (82/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.952091508 seconds)
    (83/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.265974905 seconds)
    (84/309) benchmarking ("sort", Float32, false)...
    done (took 5.25816844 seconds)
    (85/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.293452845 seconds)
    (86/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.265266186 seconds)
    (87/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.459032214 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.141880506 seconds)
    (89/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.022982139 seconds)
    (90/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.561862111 seconds)
    (91/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.240364037 seconds)
    (92/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.277724987 seconds)
    (93/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.277567177 seconds)
    (94/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.268524939 seconds)
    (95/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.360620331 seconds)
    (96/309) benchmarking ("sort", Int64, false)...
    done (took 5.429137962 seconds)
    (97/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.357422862 seconds)
    (98/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.992206997 seconds)
    (99/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.572840437 seconds)
    (100/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.64768281 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.423788225 seconds)
    (102/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.270055551 seconds)
    (103/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.572638574 seconds)
    (104/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.339123044 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.253133079 seconds)
    (106/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.255586927 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.295953494 seconds)
    (108/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.605317165 seconds)
    (109/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.738765781 seconds)
    (110/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.947674974 seconds)
    (111/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.265562913 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.292051027 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.083566476 seconds)
    (114/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.024402131 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.651479195 seconds)
    (116/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.66309878 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.285880833 seconds)
    (118/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.647327922 seconds)
    (119/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.488897993 seconds)
    (120/309) benchmarking ("sort", Float64, false)...
    done (took 5.532576132 seconds)
    (121/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.253442877 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.355324088 seconds)
    (123/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.788862411 seconds)
    (124/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.668402026 seconds)
    (125/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.561608864 seconds)
    (126/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.294922994 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.760361394 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.295388121 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.320672081 seconds)
    (130/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.531175468 seconds)
    (131/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.243848908 seconds)
    (132/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.335026013 seconds)
    (133/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.446229329 seconds)
    (134/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.62339212 seconds)
    (135/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.358459755 seconds)
    (136/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.25530115 seconds)
    (137/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.323776833 seconds)
    (138/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.265967271 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.982093127 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.611796394 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.26465668 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.538141591 seconds)
    (143/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.834609156 seconds)
    (144/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.248702597 seconds)
    (145/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.361452717 seconds)
    (146/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.264367029 seconds)
    (147/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.301315173 seconds)
    (148/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.879723064 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.36147833 seconds)
    (150/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.550174638 seconds)
    (151/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.25705491 seconds)
    (152/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.455008472 seconds)
    (153/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.806258352 seconds)
    (154/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.241488429 seconds)
    (155/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.280380048 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.979666783 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.280724383 seconds)
    (158/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.336706966 seconds)
    (159/309) benchmarking ("sort", Int8, false)...
    done (took 4.307743969 seconds)
    (160/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.503464321 seconds)
    (161/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.984636526 seconds)
    (162/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.631325576 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.283769508 seconds)
    (164/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.950679009 seconds)
    (165/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.450182635 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.168626554 seconds)
    (167/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.14103671 seconds)
    (168/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.362222748 seconds)
    (169/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.126583212 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.202799915 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.244723446 seconds)
    (172/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.677282896 seconds)
    (173/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.460752889 seconds)
    (174/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.612161812 seconds)
    (175/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.97472054 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.157230789 seconds)
    (177/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.264535181 seconds)
    (178/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.35482783 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.749502407 seconds)
    (180/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.530431189 seconds)
    (181/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.504147618 seconds)
    (182/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.780566226 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.288735677 seconds)
    (184/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.338541678 seconds)
    (185/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.255734258 seconds)
    (186/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.257405526 seconds)
    (187/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.5342019 seconds)
    (188/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.244444412 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.318314271 seconds)
    (190/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.256947029 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.095079605 seconds)
    (192/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.342037867 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.298512734 seconds)
    (194/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.799048533 seconds)
    (195/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.45738018 seconds)
    (196/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.256883275 seconds)
    (197/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.282140832 seconds)
    (198/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.3703373 seconds)
    (199/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.256947878 seconds)
    (200/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.34701382 seconds)
    (201/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.265916867 seconds)
    (202/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.277985964 seconds)
    (203/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.342167521 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.314136456 seconds)
    (205/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.798033276 seconds)
    (206/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.482277286 seconds)
    (207/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.348765683 seconds)
    (208/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.385888067 seconds)
    (209/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.824467105 seconds)
    (210/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.989313163 seconds)
    (211/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.4517039 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.47929108 seconds)
    (213/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.779509835 seconds)
    (214/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.998688765 seconds)
    (215/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.238634347 seconds)
    (216/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.370704417 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.472855094 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.884123817 seconds)
    (219/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.239883853 seconds)
    (220/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.068212311 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.741985282 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.603197725 seconds)
    (223/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.30039993 seconds)
    (224/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.284920645 seconds)
    (225/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.281033073 seconds)
    (226/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.259525229 seconds)
    (227/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.269841053 seconds)
    (228/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.638722759 seconds)
    (229/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.316611328 seconds)
    (230/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.650333677 seconds)
    (231/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.786972442 seconds)
    (232/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.57253536 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.259477049 seconds)
    (234/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.608010079 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.050583119 seconds)
    (236/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.542556647 seconds)
    (237/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.334800296 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.166303717 seconds)
    (239/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.146013842 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.892036614 seconds)
    (241/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.569413905 seconds)
    (242/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.284907739 seconds)
    (243/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.279866528 seconds)
    (244/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.693132425 seconds)
    (245/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.575236952 seconds)
    (246/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.260348258 seconds)
    (247/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.267265651 seconds)
    (248/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.398253262 seconds)
    (249/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.241909551 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.501672065 seconds)
    (251/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.262729539 seconds)
    (252/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.482761299 seconds)
    (253/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.599086677 seconds)
    (254/309) benchmarking ("sort", BigInt, false)...
    done (took 6.283054587 seconds)
    (255/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.621387807 seconds)
    (256/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.275471928 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.286713447 seconds)
    (258/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.731275211 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.36406168 seconds)
    (260/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.309869361 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.261536886 seconds)
    (262/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.267350885 seconds)
    (263/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.432317351 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.653501086 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.646556843 seconds)
    (266/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.413330603 seconds)
    (267/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.241916386 seconds)
    (268/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.865816638 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.274475263 seconds)
    (270/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.65156797 seconds)
    (271/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.62121019 seconds)
    (272/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.316306229 seconds)
    (273/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.287597221 seconds)
    (274/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.62319017 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.25925192 seconds)
    (276/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.815260505 seconds)
    (277/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.097157186 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.691025797 seconds)
    (279/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.119994507 seconds)
    (280/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.353435813 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.243268093 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.43668265 seconds)
    (283/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.264883739 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.387906288 seconds)
    (285/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.969538763 seconds)
    (286/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.277163367 seconds)
    (287/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.276775126 seconds)
    (288/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.277872796 seconds)
    (289/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.678007971 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.105835514 seconds)
    (291/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.548982428 seconds)
    (292/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.288115479 seconds)
    (293/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.288509539 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.30940625 seconds)
    (295/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.4103761 seconds)
    (296/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.780145217 seconds)
    (297/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.289622768 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.305788961 seconds)
    (299/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.85436857 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.113837413 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.27149952 seconds)
    (302/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.274651845 seconds)
    (303/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.818667666 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.553768599 seconds)
    (305/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.393794056 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.287898297 seconds)
    (307/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.092751639 seconds)
    (308/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.117348027 seconds)
    (309/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.559935369 seconds)
  done (took 893.285973456 seconds)
done (took 894.456531105 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.298725146 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.291265495 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.274499703 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.296285498 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.386848131 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.298645919 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.286328447 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.275893144 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.32355747 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.325637554 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.27335091 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.298484783 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.276707516 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.274888487 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.275398674 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.2893917 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.275461335 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.282818234 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.293125887 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.286022711 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.292042157 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.275536668 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.326632306 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.29949848 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.280896825 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.280020405 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.279832644 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.297558113 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.388306189 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.279467082 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.280680939 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.288188912 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.278726072 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.281936052 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.270683506 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.296203294 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.287467586 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.287076925 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.281279107 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.30819217 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.653163651 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.292460542 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.279615714 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.278977612 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.278445879 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.283305325 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.279048695 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.284762143 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.29035108 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292089489 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.64075346 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.308980256 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.280986425 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.27818499 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.288907757 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.277399494 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.28191405 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293880487 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.298105531 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.293642801 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.269894456 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.289347421 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.28134137 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.294388049 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.286713894 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.679669039 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.29151589 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.281890529 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.656445603 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.300881652 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.680609919 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.304037207 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.280316246 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.293334181 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.311024452 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.279768169 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.281569469 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.279769489 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.286784957 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.27750233 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.289434881 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.293033611 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.285373166 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.280809035 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.294419721 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.303789691 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.290574954 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.281673204 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.290197688 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.299170961 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.286710929 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.290437445 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.283658326 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.277122911 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.290458542 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.285544884 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.283768726 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.284160925 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.287600016 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.291491596 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.656299254 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312622652 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.278911939 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.27819059 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.281640753 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.295704628 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.654988703 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.298841939 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.304197661 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.329106139 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.283557259 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.273902226 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.290477313 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296947481 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.292002847 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.285349979 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.278878594 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.273730845 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.655215299 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.31389796 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.28410859 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.280240131 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.297958464 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.285958762 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.279584319 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.287089566 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.291444942 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.296940443 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.402916953 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.294162365 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.314569697 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.282035796 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.286096595 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.311344465 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.298182451 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.313992724 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.286853303 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.298604328 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.299612011 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.281253504 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.29435901 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.294728197 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.285143563 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.290381345 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.278906122 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.307492688 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.296063718 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.29682524 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.305915666 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.405287156 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.281945949 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.271260098 seconds)
done (took 216.582388157 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.341856222 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.281082895 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.371465125 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.281158016 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.378904728 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.37982898 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.279270311 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.278816202 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.278067091 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.660267331 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.279672611 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.279291438 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.283224251 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.279390455 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.361986715 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.282597232 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.279049407 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.672676915 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.282609767 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.351673195 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.276865473 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.277505514 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.281482066 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.662099833 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.28087908 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.283677242 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.353161356 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.283445935 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.627751683 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.281578263 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.282136017 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.629084997 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.371443803 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.300273584 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.291561887 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.290648894 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.382534734 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.300913628 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.364001907 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.363184254 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.373486562 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.323079395 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.275777293 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.282576485 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.284381497 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.284358855 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.282348657 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.31055642 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.281025012 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.281172392 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.675860209 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.293560578 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.284038316 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.283260634 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.281454753 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.313538919 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.281687816 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.285433606 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.373277375 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.285897198 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.347311861 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.665812389 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.663945084 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.286333499 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.281173718 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.283995952 seconds)
  done (took 145.128458834 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.352551373 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.359193079 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.394434502 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.301690189 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.335017343 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.39818297 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.301428529 seconds)
  done (took 10.639973271 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.290661412 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.285832325 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.334928317 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.335460819 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.284704588 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.432086232 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.286434805 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.296368316 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.282843531 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.337838423 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.286884224 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.286670414 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.292927075 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.285923209 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.345343355 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.297614187 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.401108121 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.286188466 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.287635478 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.442506552 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.284390576 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.293621409 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.338082352 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.297488569 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.287482872 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.292608466 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.851889283 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.286027113 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284541718 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.287572591 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.28479666 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.323788921 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.287746833 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.280881697 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.285465003 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.402518033 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.288214893 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.284973808 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.288011116 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.281377079 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.288770315 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.288452894 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.288877805 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.286505853 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.28818351 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.310921562 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.288006134 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.288363163 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.288954957 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.288882352 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.339628908 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.289108095 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.286419924 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.286588724 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.343032671 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.295685593 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.289617109 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.285828533 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.288620454 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287101124 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.444769342 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.33524188 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.28918257 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.336437796 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.289890785 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.289189129 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.710063028 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.290391193 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.344477284 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.28856434 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.337770661 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.286470457 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.443696935 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.311648943 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.290352885 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.291746996 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.292482098 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289827436 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.291431198 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.295404191 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.286801684 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.291152129 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.295884922 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288723173 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287439282 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.391807434 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.397970236 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.28848101 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.30183271 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.296517934 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.286676638 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.343011465 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.290709121 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.287777789 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.342717711 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.404844028 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.345064952 seconds)
  done (took 149.167019932 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.295567601 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.299335442 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.291248277 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.307124832 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.292829921 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.292147877 seconds)
  done (took 8.9814981 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.293976165 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.292497402 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.292673942 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.292648184 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.292249802 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.293118779 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.291377074 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.292800863 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.295022498 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.29284507 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.291769607 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.294189709 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.292925575 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.292089292 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.293563657 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.293839038 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.293375871 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.290995154 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.29300642 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291862625 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.39741862 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.293161433 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.293150781 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.293999843 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.297232453 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.29347133 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.300185065 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.293604529 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.293143841 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.300184499 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.312634463 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.294422586 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.294513994 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.298699701 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.296944802 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.29486901 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.296896276 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.294326485 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.292749614 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.295387592 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.295661828 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.293524667 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.2959523 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.296562631 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.29646403 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.298719805 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.300581276 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.301885687 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.296289437 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.29724563 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.29586975 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.295764376 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.295736416 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.297202462 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.297059733 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.314573027 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.299418326 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.297005511 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.295770949 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.296047784 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.296833874 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.295765888 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.296480354 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.299369536 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.293943274 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.297990031 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.297428818 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.30067541 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.29612838 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.296425927 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.297696688 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.294272248 seconds)
  done (took 95.612726821 seconds)
done (took 410.724841451 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.624175754 seconds)
  done (took 7.832644875 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.359953786 seconds)
  done (took 7.570916415 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.104257118 seconds)
  done (took 21.318665995 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.30465614 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.363167036 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.303009728 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.311179557 seconds)
  done (took 26.491975505 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.630040133 seconds)
  done (took 7.840493495 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.293280237 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.289564359 seconds)
  done (took 13.794778256 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.656952993 seconds)
  done (took 7.86692462 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.539432337 seconds)
  done (took 7.750644479 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.3068539 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.308220297 seconds)
  done (took 14.080610576 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.273071011 seconds)
  done (took 7.484371521 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.344868078 seconds)
  done (took 8.559057962 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.303008522 seconds)
  done (took 7.517105656 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.34432693 seconds)
  done (took 7.555914959 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.08893824 seconds)
  done (took 9.300329288 seconds)
done (took 156.173127163 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.292016872 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.292105887 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.298893867 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.299174343 seconds)
  done (took 26.393459071 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.333771872 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.333147305 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.334019146 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.34430867 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.335758202 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.333810359 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.325572712 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.327120104 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.344473666 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.336399702 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.335900139 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.336408288 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.334216098 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.330271757 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.336944522 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.335396478 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.344301142 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.33657003 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.326619736 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.337760614 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.302273687 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.344074479 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.337356945 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.30244941 seconds)
  done (took 33.204598174 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.820719035 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.372294621 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.454960976 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.35291592 seconds)
  done (took 7.213263215 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.353609422 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.354776768 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.365391553 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.40514427 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.430415889 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.364980218 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.328592599 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.32340844 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.309369506 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.355240836 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.43045759 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.371827655 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.438911707 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.300955033 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.48686945 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.302844064 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.301958004 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.3533723 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.406109559 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.4266301 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.301753959 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.354002123 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.358874324 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.371412657 seconds)
  done (took 34.011540594 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.3018518 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.310462678 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.308249563 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.303348575 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.302555925 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.303273018 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.30784169 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.303391753 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.324380919 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.304315491 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.302103027 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.302996541 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.302720993 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.302797515 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.303430814 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.314458544 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.316811833 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.302575547 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.305912907 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.309231189 seconds)
  done (took 27.347612762 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.296892174 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.150997557 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.648712409 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.55207875 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.295754648 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.296813483 seconds)
  done (took 27.457251376 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.371411945 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.519395649 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.304782117 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.652709283 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.74249501 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.319741384 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.305585193 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.537445394 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.846768433 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.843120155 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.359977426 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.369798809 seconds)
  done (took 19.390453888 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.303260271 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.305000077 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.306832266 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.319670598 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.356697915 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.323799938 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.311572298 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.29839822 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.364041907 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.37848687 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.325332927 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.359131107 seconds)
  done (took 37.169779894 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387762952 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.345078089 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.24426778 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.02868467 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.022127458 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.511580331 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.045026008 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.726515962 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.312355427 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.57446872 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.309153694 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395963731 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.556248073 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306118217 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.305427863 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.264170526 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.546958193 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785607002 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306121368 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.172450361 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330893939 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.315194562 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.266665326 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.337010876 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512917894 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.27987153 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.561670259 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.076785462 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.581976724 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.31678569 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312471392 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301734166 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.576357974 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963965413 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420761884 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312502388 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.988584533 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.854654628 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.286878878 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.180413628 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.076859155 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.308670494 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31491768 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.30269486 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.236740322 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306136974 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.733917813 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.312374119 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.01449891 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303139798 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.313856012 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.397974512 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.307450602 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.873291497 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323198351 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.309351879 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.302099391 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.310122548 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.871401342 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.638875286 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.311755554 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.240968445 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.669944469 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.180853983 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.937002168 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.429477714 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.307519354 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.307588777 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.237670983 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.238078637 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.326769451 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.451211266 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.331066874 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.954822629 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996950466 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.330526052 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.256240518 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.850536566 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.30776831 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.243043283 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.532097239 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.080032427 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.241396941 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.250395349 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.240031636 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018621541 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318396368 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.698327733 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.315102734 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.726459774 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.321296175 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325473746 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329312977 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.528971912 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.184214956 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305863489 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.140981726 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459361739 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327169766 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.727993849 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245568962 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.309744112 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561883951 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.517749353 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313129893 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.282356607 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.523682387 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.310733871 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.347792989 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.306493317 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.323737533 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.868805391 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339049206 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.64522424 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328650939 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.083001035 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.049176698 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324891685 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.415243927 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.310470442 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555216247 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.07131318 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.194864983 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.375218733 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.312299654 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.30827475 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.270618357 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164050372 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.190777139 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.304060946 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.311262862 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.323722802 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.307821156 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255311808 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.30630535 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316644296 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.089413468 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.532022466 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.31323325 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58701152 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242103872 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.457207537 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.318184597 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.530797307 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.488332001 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.325616489 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567800809 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313448273 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325240609 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.32411158 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328101718 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405940644 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330426094 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.317224181 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.568573876 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.313250018 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.313969843 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.2856737 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.093349275 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311977901 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.315472579 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.143309221 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.879410543 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310027627 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313484296 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.198885628 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.324107608 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.377596801 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.317874531 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.320936093 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.112764784 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.122592502 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.319079975 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.31365438 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.538766131 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.321096351 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.231192647 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392742102 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.500879318 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.886074541 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343517007 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.245953482 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.022478841 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.004160768 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.311031797 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.512949529 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.311473706 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321086528 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322778177 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.812049356 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.890037453 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.337001336 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.209367377 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.324751167 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.323807535 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.317862242 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313560746 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.063620716 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.684032368 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.335769411 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.33074351 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455607706 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.32607539 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.24587679 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.829323976 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318808374 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.313403089 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.090599959 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349313311 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.208390807 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.790422889 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.574719595 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.041585189 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.33188259 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.383724218 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.349218862 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.315492785 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.196502761 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343840559 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.322220356 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338013421 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.324226617 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.330729954 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.752403021 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879113258 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.018755112 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867934743 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.261464234 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.330497451 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.216716176 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.742217525 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253867482 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.970587445 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.501121116 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.761294755 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.263157057 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509665828 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.501289664 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082886269 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332476996 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542566708 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.23159468 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.212644011 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.345217437 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.525903875 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349712017 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.329402371 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.249213968 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.596296792 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543439556 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.176714031 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.395158682 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.74152477 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.209312868 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.116283048 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.315257568 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.673049828 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504017678 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.89043752 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.704209956 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321011929 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.336599194 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.786584148 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321158619 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.842347892 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928662104 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.33703012 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.517711019 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257503927 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.328872192 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.328482146 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.313286917 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.589843386 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.32523524 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.574376158 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.327973149 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251115516 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.32690263 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84320796 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.192131953 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.324023671 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318452715 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07314614 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323252893 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.608051357 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.320216894 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.070981859 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.325542152 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.254377445 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.2534061 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.011460917 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.329255765 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293651648 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.82315202 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.67258578 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.32487261 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.344227427 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168357364 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57480715 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.333258604 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.894034847 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.56219605 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.109099842 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349134456 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.42025177 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.242498076 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.321067028 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.202393987 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.554780151 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.15194691 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.545400489 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.294955059 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.224873011 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.317971083 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.536894276 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.202196581 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.326714276 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.561563472 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.052450256 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.330104714 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.029322289 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.366573068 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.322518485 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.333346465 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.690890973 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.332093102 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391373523 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.331076536 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.33214686 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.332853687 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.488388526 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32602627 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339630558 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.335464674 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414154207 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.700671173 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.09151262 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.094209218 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.899956194 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085622396 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.917585614 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35425109 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.321326121 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322833611 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257835777 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471054434 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.847109499 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595478538 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.453089248 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.762659332 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357724461 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.272008159 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345391211 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540303802 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.597513201 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.194538944 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332399934 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.98721314 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.213906278 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.33484682 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.534669228 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.827354582 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.890770101 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442606006 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.327365744 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.753002119 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602669863 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.414289423 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324007922 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.915241925 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.342287708 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.674237724 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.349436212 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326473492 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472653003 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.334357712 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.982588377 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.357713396 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.483809323 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.097655262 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.354647032 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580866902 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.780368907 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.336121897 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906559414 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.03752154 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588807968 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395066676 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336486528 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.429136482 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472291716 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.335667334 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.223748376 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.327332875 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169938329 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.034200771 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.335234865 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.911010128 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.605329339 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.322514035 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.322740315 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349239282 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.335456378 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.548454133 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041401512 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.550539402 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.336093428 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.335483329 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.896874219 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.903453637 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35511665 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262073368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.331235018 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.564537233 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.584145972 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.35183228 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.780593386 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.038256321 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.880428668 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.299855867 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349481341 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.328067772 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.023575606 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.903524404 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.116210487 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817494249 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.986751785 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.332856832 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.60829675 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.334026032 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339103959 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607803758 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.331068158 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.328770042 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343036566 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.906564163 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.109622439 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.344008632 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.30434123 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.265560722 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.554733393 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.95758692 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.270076297 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.329315448 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.503004893 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.337138027 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.460021756 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.3411243 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.328143789 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331253554 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.0754283 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.657320956 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.335541522 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.316886626 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.329039311 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.345199445 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340735638 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562991915 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33489142 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.006902422 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.679332364 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.585183418 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.333091679 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.313678746 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.333792337 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331045963 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.048809903 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.301712179 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.850406143 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904993549 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.334327817 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.344327511 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.335948647 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.5482788 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543963594 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.33925967 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.344335385 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331827688 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.36653296 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.232531955 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.099213793 seconds)
  done (took 1573.233079436 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.353505126 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.336153043 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.34680139 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.338090463 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.338340992 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.374377521 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.375244137 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.353056796 seconds)
  done (took 52.06179598 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.333764514 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.482742881 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.363769528 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.340910819 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.341624989 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.338338695 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.78591166 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.345621408 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.342395082 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.342311218 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.339464398 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.344682837 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.975047116 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.344222259 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.333250329 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.315087358 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.340270198 seconds)
  done (took 65.258492172 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.342213989 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.871122773 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.434659625 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.33782028 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.243695896 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.357038733 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.019749321 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.386232761 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.339133619 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.585389974 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.000667273 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.340967201 seconds)
  done (took 84.508274929 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.34107304 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.341582747 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.341573797 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.343228915 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.342010535 seconds)
  done (took 7.959079551 seconds)
done (took 1996.422661066 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.581933595 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.014359912 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.965252566 seconds)
  done (took 5.229653924 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.479082918 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.527190501 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.649411667 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.653526901 seconds)
  done (took 7.556297084 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.609710636 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.71943345 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.519188711 seconds)
  done (took 6.095379 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.724476504 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.334390872 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.46939914 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.331762105 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.33432225 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.336459999 seconds)
  done (took 20.251525961 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.336154467 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.33927774 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.335791455 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.338561911 seconds)
  done (took 6.598585371 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.314204347 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.019919325 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.312782307 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.333907426 seconds)
  done (took 18.228102302 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.082884483 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.103204268 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.079441756 seconds)
  done (took 7.512692898 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.341584035 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.176056372 seconds)
  done (took 9.766407078 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.635946772 seconds)
  done (took 2.883957881 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.468265744 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.66388354 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.359819376 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.303756165 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.382382125 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.120598752 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.948349221 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.539245719 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.276964254 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.47329806 seconds)
  done (took 27.786050911 seconds)
done (took 125.268921261 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.10732816 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.333218388 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.536343609 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.078536778 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.556570483 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.537489685 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.54349421 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.046441187 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.592946544 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.581552305 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.081074659 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.559497692 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.698835235 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.33414112 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.699904475 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.337335793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.559184251 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.154912731 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.761363414 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.997780736 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.53803107 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.715615637 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.908122108 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.731979587 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.560024739 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.487592564 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.292070644 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.337565702 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.929879818 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.310523932 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.487473224 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.165875258 seconds)
  done (took 188.812171061 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.334980131 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.341694835 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.334975562 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.336003175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.33456966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.336686209 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.337716943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.35448821 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.366056355 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.336223699 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.336014989 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.335662264 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.352321913 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.334657826 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.335750885 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.335573575 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.334872129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.349254578 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.337297132 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.350271576 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.335000726 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.352336697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.335453693 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.349767624 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.335824573 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.337608636 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.339613989 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.335459092 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.351090813 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.335853466 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.350294922 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.336130523 seconds)
  done (took 204.161186321 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.336313912 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.335130369 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.336959799 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.336008272 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.342020601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.336400619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.338224197 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.336276295 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.353021797 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.336472209 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.349645058 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.336593292 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.336093314 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.35462294 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.335870515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.352804865 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.336654227 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.336265169 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.352996481 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.337250547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.354462675 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.336916484 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.354301691 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.337079168 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.337562044 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.337984281 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.347861537 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.337695264 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.336800877 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.352384319 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.338379243 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.351925907 seconds)
  done (took 204.191743121 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.53351013 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.344633884 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.345337693 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.282268968 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.348023363 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.345258068 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.340624085 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.541627606 seconds)
  done (took 14.335414116 seconds)
done (took 612.749853419 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.557809059 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.279836439 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.541721612 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.365652639 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.089024338 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.383104261 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.36513336 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.530607662 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.246457405 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.532628992 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.585804009 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.379652914 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.727544486 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.369044957 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.612478532 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.465029497 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.207641321 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.326485042 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.672411832 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.865112581 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.621850522 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.813701814 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.549492889 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.243899123 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.732984046 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.801015723 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.034981963 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.198583806 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.383282002 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.673818752 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.908535801 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.283270063 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.423214414 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.41874207 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.474805791 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.455616636 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.251533735 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.417624288 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.560641725 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.577766868 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.859084947 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.071745799 seconds)
  done (took 91.115243414 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.332905493 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.33104205 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.329386262 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.331084905 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.332223604 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.329637596 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.330320297 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.329913961 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.330933819 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.329873331 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.331152001 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.33277033 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.330879906 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.332084003 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.331004043 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.331782874 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.332210634 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.332383021 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.331401293 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.331242505 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.332726742 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.331545077 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.334777464 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.332154305 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.331630246 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.332630722 seconds)
  done (took 35.877057791 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.350849466 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.59514092 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.748147023 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.36049948 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.349682322 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.353652735 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.426230349 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.351684587 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.353189528 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.353321827 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.5223289 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.353502552 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.386778655 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.776002816 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.353718594 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.35116394 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.352318009 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.350530596 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.603152316 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.360811546 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.446250472 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.352595876 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.427019916 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.361235819 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.372391405 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.352395737 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.357496318 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.869252804 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.370473245 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.518937032 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.129490423 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.431986834 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.825780046 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.777987371 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.130669391 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.359706149 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.354076961 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.52264097 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.35429634 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.352394905 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.426535613 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.352579678 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.759677133 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.966619996 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.370237165 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.354044869 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.887289423 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.541168493 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.589591443 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.365600263 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.786177184 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.359841952 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.356376961 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.353685662 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.590313632 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.362747382 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.35205916 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.891553163 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.377407569 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.428736966 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.354756961 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.353956855 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.609216769 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.354631104 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.599638015 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.354869433 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.362591626 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.372352381 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.763679503 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.361112346 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.994447922 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.378001767 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.354548268 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.520430001 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.600666196 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.930535356 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.376372839 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.613901002 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.834486855 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.44615385 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.358520593 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.867211679 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.449404461 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.359092508 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.357964818 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.357181051 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.355650219 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.405217227 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.428277896 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.917065633 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.994496402 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.909493407 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.450452438 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.367900369 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.357264978 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.892608901 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.37552804 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.357083106 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.758463018 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.987288748 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.376076774 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.364299696 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.997882799 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.382565443 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.431592577 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.361521852 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.771313113 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.365078631 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.408697577 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.35713713 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.364640992 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.380162777 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.432870565 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.360207525 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.358079048 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.965875415 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.546112104 seconds)
  done (took 178.120246454 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.349508245 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.368761694 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.349693145 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.368129917 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.351193404 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.357703641 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.350700277 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.35138351 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.355707117 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.351450609 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.349840934 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.352765981 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.354376587 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.371766442 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.361487986 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.357893997 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.962768452 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.353033622 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.352200752 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.351783728 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.139269394 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.359932685 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.351689151 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.352982563 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.353886701 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.353184188 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.356412864 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.373256595 seconds)
  done (took 152.629672073 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.358682338 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.901850406 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.376432297 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.485148891 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.382596351 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.358421746 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.484748111 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.422194653 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.37659133 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.359152409 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.357702106 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.651167378 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.360254228 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.859434349 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.5455595 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.505026412 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.862422167 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.378649485 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.358530654 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.35778131 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.488061909 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.367430906 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.652585635 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.907236583 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.377703173 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.906986657 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.344650362 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.360979008 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.359602346 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.908689913 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.376312686 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.654627561 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.435353478 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.418039543 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.92645005 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.879428241 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.877418049 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.504396984 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.35956889 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.358721991 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.360599201 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.345996614 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.911766913 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.379969717 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.361176997 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.901891925 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.378193241 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.362273184 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.370717362 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.360522108 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.418247255 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.43488027 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.674808785 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.919055715 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.453244615 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.383355319 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.489926679 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.748915629 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.365365883 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.866560481 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.3500816 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.92169037 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.389506877 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.34776935 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.362996811 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.367775948 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.507688197 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.490760187 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.869258108 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.388834223 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.865135352 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.525019733 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.361376863 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.361783997 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.363792082 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.919302119 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.891388773 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.525245403 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.493512568 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.549504998 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.353733773 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.362140381 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.348201965 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.43779277 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.363534037 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.92307203 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.886474486 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.381900787 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.364182039 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.364936931 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.364752846 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.533020053 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.945329483 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.459987827 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.860217018 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.680675283 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.667390524 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.372235342 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.421469862 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.380478479 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.663946349 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.372566219 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.418987945 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.81506485 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.665453149 seconds)
  done (took 162.226153731 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.59769631 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.51348566 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.45935157 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.49116839 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.947132642 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.909291989 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.564287063 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.503366085 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.471949515 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.613606003 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.506380503 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.458474917 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.532772572 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.437978645 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.068041845 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.447050417 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.47167164 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.503114677 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.47616065 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.360604997 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.001524577 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.654491827 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.531378008 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.21468678 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.46172169 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.107658635 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.923847193 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.915186161 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.538728887 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.629166392 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.89124661 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.463922095 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.312638948 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.032920805 seconds)
  done (took 65.286346287 seconds)
done (took 686.508716382 seconds)
SAVING RESULT...
DONE!
