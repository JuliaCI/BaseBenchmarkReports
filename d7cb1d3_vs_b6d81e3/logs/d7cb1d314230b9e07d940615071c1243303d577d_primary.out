cset: moving following pidspec: 18837
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.391028463 seconds)
loading group "string"... done (took 0.492722783 seconds)
loading group "linalg"... done (took 8.288777698 seconds)
loading group "parallel"... done (took 0.169967839 seconds)
loading group "find"... done (took 2.971869301 seconds)
loading group "tuple"... done (took 1.822042963 seconds)
loading group "dates"... done (took 1.524236043 seconds)
loading group "micro"... done (took 0.192027331 seconds)
loading group "io"... done (took 0.519180361 seconds)
loading group "scalar"... done (took 48.700137 seconds)
loading group "sparse"... done (took 13.346023927 seconds)
loading group "broadcast"... done (took 1.150470945 seconds)
loading group "union"... done (took 9.069347778 seconds)
loading group "simd"... done (took 2.95617894 seconds)
loading group "random"... done (took 11.06422418 seconds)
loading group "problem"... done (took 2.169701292 seconds)
loading group "array"... done (took 24.468037823 seconds)
loading group "misc"... done (took 1.087911271 seconds)
loading group "sort"... done (took 3.657503615 seconds)
loading group "collection"... done (took 18.819574447 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.594069792 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.125037875 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.201283977 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.278176918 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.229376538 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165064521 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141024817 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.236249258 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.5005129 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.201237696 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.137746307 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.415920879 seconds)
done (took 5.951317691 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.248929789 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.238578497 seconds)
    (2/2) benchmarking "String"...
    done (took 0.162658311 seconds)
  done (took 1.070590742 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076590801 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156566999 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108731178 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094220705 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.091938081 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.108167269 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.093597042 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.108326552 seconds)
  done (took 1.434730704 seconds)
done (took 3.502859261 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.489838772 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.858508765 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.500984292 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142483727 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.307007009 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.291163397 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.267950387 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.198730074 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091150581 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088672557 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.172532287 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.411132203 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.378186769 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.977384673 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088479398 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093214234 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.128655276 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.772521261 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.080289929 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.121289217 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.488522342 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.18737655 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.100315332 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.120846212 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185317308 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.133430234 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.159849422 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.10137414 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.664828545 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.135364099 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.176304229 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097345858 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157338473 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.183451507 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.191435546 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.110131305 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.677789354 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202119018 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099656753 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100080112 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.670587489 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.12072728 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.182537986 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103062135 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.089101069 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.177171545 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.098690137 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093348673 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.095967537 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.084760222 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16761939 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.448279368 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.105689062 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.167753881 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.093366365 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.695760862 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.100456233 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.272770861 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126985429 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.097346227 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090426491 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086916181 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.159481833 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.09332148 seconds)
  done (took 19.863411068 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.144157413 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.162949469 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.07739392 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.155614957 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.121020263 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079295531 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.102495839 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.078343699 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.12505239 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176757518 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136878124 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151921525 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092139663 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090252002 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.126402393 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24639191 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.10705168 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121114774 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.089382546 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088464909 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13905102 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.097143353 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106638575 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092604287 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169031689 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20419548 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.109397406 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122157784 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090163924 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095116746 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14248721 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144719073 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091755151 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.089790075 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.185108288 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109321098 seconds)
  done (took 5.149207442 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.216789623 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.10411908 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.222004715 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.195060404 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.133041866 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.181091699 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150310881 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.267285402 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.199543049 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.177525442 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114908691 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.11250186 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080189181 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.080962666 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.078835566 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.45031488 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.148435039 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.187470154 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.16067055 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110029233 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08335374 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.360879212 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102864268 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.083574649 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108397837 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063407089 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.197174045 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093335928 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.115229597 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.083127478 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119070175 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130897519 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.194630163 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125147536 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138340667 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092051019 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.100508892 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.207423493 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.116654143 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.077942471 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.131748637 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116777728 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.131393753 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.105365194 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.106899389 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220539125 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086568877 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125796893 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.000540813 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.19575544 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.165768349 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083524027 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291810259 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.126675902 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098155364 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.108697458 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.771309564 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128495956 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.086222464 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079791493 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096499887 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.093415545 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.095052972 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.430393296 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104496152 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.02194695 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.085103618 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.155479707 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09482221 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.116312844 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085711458 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10256446 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.109812365 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082087096 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.101170736 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079667086 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.084649092 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.095145545 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.088714457 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112034117 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.100797673 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080413967 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158938401 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097881599 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.106561969 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125813856 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.087982752 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.101380068 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112467989 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.152079483 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079416826 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.105300724 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.143065502 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114175702 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.112409697 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.101165559 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.108941928 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129044029 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.10313536 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.211725946 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.084316394 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122995765 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100528275 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126833611 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101390018 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080178255 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100963743 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079790247 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080417713 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159481044 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087351125 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079894337 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.10301892 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093734911 seconds)
  done (took 27.917473433 seconds)
done (took 53.600779745 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.427748906 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078912021 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079382562 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.096936952 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.080589374 seconds)
  done (took 1.506808772 seconds)
done (took 2.227999019 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.314013028 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.186563641 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102698334 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.18418803 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.087951113 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.189981353 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.176546607 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.094887921 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201756823 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08367294 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.181723218 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083102023 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.102337992 seconds)
  done (took 2.734136663 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.100007097 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.107668952 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100630487 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116398974 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082718097 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100534371 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11486049 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109091567 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098282327 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.109368772 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084121757 seconds)
  done (took 1.843891572 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097126658 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103872947 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096633901 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115633372 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083222121 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098345432 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.114312884 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107318306 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096493638 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10997432 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084184469 seconds)
  done (took 1.829595596 seconds)
done (took 7.125069576 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.075039573 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.181726884 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.165221473 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.206449429 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.34530869 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.232809752 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.551076201 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.152364586 seconds)
  done (took 13.773960536 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.164752421 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.111140035 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094633324 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.093600975 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093973575 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.107987172 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093582679 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091518027 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.107795214 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.090992158 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.090797915 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.106531106 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.095254585 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.09106103 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.105462608 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.094137736 seconds)
  done (took 2.418660021 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142475761 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.138185439 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.096557026 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098934075 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.1119714 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.099181106 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100173748 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113188862 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.094152707 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094682979 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.116096589 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.098261562 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096459218 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.108318431 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.097865233 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.115823863 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.109488566 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098464586 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116100285 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112425688 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.097871463 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096242972 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111527006 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.099155733 seconds)
  done (took 3.370712901 seconds)
done (took 20.284818382 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.144518575 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099618783 seconds)
  done (took 0.973024494 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139220095 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.153618502 seconds)
  done (took 1.025589535 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110297176 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.089184059 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.134814108 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101185226 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.08978806 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.1062964 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114047904 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.106617702 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091309746 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091016122 seconds)
  done (took 1.771396864 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094086063 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094478126 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.119471816 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.133998471 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114060945 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093186912 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094002646 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092419885 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.1117634 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.091232244 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.095272379 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122734613 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.095268598 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.124360821 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094975346 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.096250439 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114322564 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094645558 seconds)
  done (took 2.614329622 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090049512 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.091521617 seconds)
  done (took 0.920338758 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.09260424 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089558668 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091659933 seconds)
    (4/7) benchmarking "year"...
    done (took 0.108272433 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.090295375 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089855571 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.104996094 seconds)
  done (took 1.40742223 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.479401957 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.375409354 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.353444956 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.107330164 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.14311039 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.344674241 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143510146 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.102510966 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102150094 seconds)
  done (took 2.924796071 seconds)
done (took 12.371337246 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.090603502 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.218718649 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.597338155 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112928446 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089823045 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.157487695 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.280468819 seconds)
done (took 2.292280955 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.336713528 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.139580108 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080409218 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.089026121 seconds)
  done (took 1.383837154 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08188827 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099841809 seconds)
  done (took 0.928698753 seconds)
done (took 3.057374012 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.089666194 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.120525342 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.104521146 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.088053202 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.087411169 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.087330692 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.105812248 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089664547 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.088337676 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.105462594 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.088514884 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.089137829 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087876601 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.105016546 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087893148 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088531764 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.103346075 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.088943692 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088346761 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.087077921 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104701447 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.088482989 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.087847897 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.103272115 seconds)
  done (took 3.045270596 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.106132829 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090840398 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.108272209 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.09415504 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.093859373 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.108653868 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.09433519 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091007951 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.108595834 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.091467684 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.09344773 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.108083296 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.092727017 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093620389 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089763583 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.110643265 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093386037 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090763477 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106356769 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094639901 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.093285339 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106957771 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093613685 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093149079 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.109670569 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09472344 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.089986192 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.107084507 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094351239 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093408326 seconds)
  done (took 3.684900753 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098864151 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086657003 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088527527 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.114180147 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086895304 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.090175213 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.101822669 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08782025 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09067203 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.089459565 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.108018345 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.090379189 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.086625531 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107402406 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.091680077 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091777394 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.11383521 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.088106137 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.086877341 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.090024672 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109235209 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086550719 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.089430497 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.105845391 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08995389 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086694466 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.090071724 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.105053712 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090132099 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.090005261 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.108234599 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.093443674 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089618818 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.113823078 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.092684098 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.089332935 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094409869 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.102830431 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091991196 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086108522 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.103322845 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.090561518 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.086565423 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094114576 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.105588683 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.089875307 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086235352 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.106179948 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.090522914 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.092568298 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.102304266 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.087007549 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09163893 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089746978 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.107827567 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.08780194 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089481043 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.101344503 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.09041325 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088955987 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.085894891 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.10245156 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.094838301 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.089968142 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.119257357 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.094806769 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086036265 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.107006472 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.090425968 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094314845 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.107020025 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09931971 seconds)
  done (took 7.603212861 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.101892262 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098557585 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.090025555 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.107603985 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090606467 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.089142845 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.110234827 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091404088 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09074312 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.111639934 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091859535 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.091622539 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107138149 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.091854913 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089887008 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090430857 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111579699 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.090344005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08944478 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106524119 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090904237 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093983774 seconds)
  done (took 2.881527284 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.229442209 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096596812 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.135086126 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118805084 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108547898 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118624857 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094666814 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095303683 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10988446 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100127412 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098272983 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111028015 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.106624949 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116924977 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100599443 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100194197 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.109584805 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100388517 seconds)
  done (took 2.806486924 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103311466 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.092134432 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.12741133 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091763569 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091861125 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.094041138 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.114691155 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109653662 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.10791092 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.094051008 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097456416 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10814923 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.093560876 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092005173 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.093494351 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109166472 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.093152497 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091467867 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115380326 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.096693161 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.096413737 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115710222 seconds)
  done (took 2.98590602 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104417965 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.092317533 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124905286 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095890515 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.09059157 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10767818 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.09783762 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091839005 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.113914833 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.092256926 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093422913 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090790703 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.121661088 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092011651 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.097872583 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107763856 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.09241596 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091974948 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108197163 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092332725 seconds)
  done (took 2.759502987 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.167079498 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121859565 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107400355 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113409388 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123026867 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.10687504 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113647108 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.124348096 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10790151 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133133701 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10790831 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107116994 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131205793 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11210148 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.123574353 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115921843 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114087526 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131490619 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108825337 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123320621 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119809377 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106107653 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13091515 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108695805 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106011365 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124455495 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106656659 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128199946 seconds)
  done (took 4.086131778 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091525763 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.091102761 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.089621949 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107245534 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.09110412 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.090057883 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089870676 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.106760574 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090305148 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.09024761 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.107102789 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090755938 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.091469804 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.090022935 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.107146052 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.092122694 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089409389 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.106501314 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091147206 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089596292 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.090844036 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106862054 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091013277 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089592631 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107549148 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09203818 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09090252 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090617231 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10699428 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092000897 seconds)
  done (took 3.611543607 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103256036 seconds)
    (2/2) benchmarking "in"...
    done (took 0.102411052 seconds)
  done (took 0.970263857 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098611863 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104619648 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.091097646 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108245395 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097780922 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091878055 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.115641825 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098454517 seconds)
  done (took 1.572423118 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.138981552 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.157659174 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096367514 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.10268185 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.159178443 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.149637512 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132226938 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.096496596 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.106284249 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.08472448 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152122472 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08442003 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091907271 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088790185 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109948523 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097065627 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090398123 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.119536157 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097439865 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092449346 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11338641 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097183032 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093358269 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.119998727 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.086940361 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093618003 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.112662668 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.103642768 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.10374875 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.093651206 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.0898255 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091081726 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.112079045 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095761599 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091402189 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.158768947 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.0990807 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104956703 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092173979 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.095307348 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.141111203 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.092097348 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092298207 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106478818 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.095003017 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094701366 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.112631491 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094427962 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084455727 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103359334 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093256341 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086839213 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.090895431 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109164035 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092937307 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113906667 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.095116641 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.088927428 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.088647753 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104839953 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.091388925 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087499211 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.111899693 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.095840531 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092323039 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.110318864 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092144824 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091940383 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.111912626 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093247399 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.090988203 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123960043 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.094472116 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.096244631 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114126832 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.093592823 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088731831 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.114489541 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092216223 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.092949279 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.114702815 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.121507533 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093976841 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.106663683 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.089523386 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099353504 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.110701166 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.096693719 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.085961749 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118284356 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.095929553 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093451866 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.085136657 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109775898 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.088866375 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.094927435 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.103466263 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093802229 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092219307 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.1153973 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099666074 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.09003979 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.111049563 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098980985 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097029429 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109067028 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.136524449 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106607223 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.089050304 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094645458 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.096301721 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105196842 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092142784 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090198212 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107070358 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.089492362 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096475871 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109254405 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095189783 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096145163 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111651852 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.095322112 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.093851816 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.108810614 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.09016271 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.09606332 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.116883395 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095958797 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.094299796 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.093135279 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.111621258 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.09310272 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.095842315 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109181997 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098828749 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08957643 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.111538919 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.095610305 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.097420479 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111102694 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089416945 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.09192377 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.112098399 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.094092862 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.096309225 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.112579137 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08910836 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.085387577 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.111203464 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.089701998 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.093466773 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117827862 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.090329018 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095589465 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.088536002 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11960582 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.089641589 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097611676 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114572767 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.098601431 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098162748 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.103488105 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.091130237 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.095469269 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.112449383 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091474929 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095429306 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.109558858 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.101281282 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.085773519 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.094662242 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.103933323 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.090204192 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.09634568 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.112498371 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.096920631 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087819672 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.150596899 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.107913471 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.097220699 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.111146571 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093351676 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.095448176 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.110400919 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.097049485 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098485045 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.11630254 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.092048896 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091900634 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.115869183 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.09053445 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095476269 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109031579 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.095407695 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.085903623 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093855762 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103896246 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.098084857 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.094161464 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.115296114 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.098527207 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095513845 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11103309 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101914598 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089912167 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.114922357 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087281107 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.097611138 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.12085977 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.1010898 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.099407672 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112045457 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092584704 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09531989 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.117808682 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095700644 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.093828766 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.094367169 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.106267138 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.087884649 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.099717268 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.114826684 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.09028776 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09377839 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113340435 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09701547 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100136439 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104031456 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.098455736 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096688285 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106654134 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095802775 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090173131 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108584437 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.103030817 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086056568 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107787702 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.096599242 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.098296058 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093913452 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112072928 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.096313512 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.098759399 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.115284831 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.096854945 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09179518 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.11944549 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.092772087 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093191228 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.107535544 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.097104776 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098110384 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.094798124 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.112280765 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.090688905 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08978365 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.115912475 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099124417 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.098480364 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112263977 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.0984757 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.099385421 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.117139661 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092413179 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.098945994 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10851301 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08738335 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.089486801 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.104158668 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09573877 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.08963901 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.097750975 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.110978121 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09177547 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.097049482 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114812935 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.091094391 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.098248646 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122690465 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.088291478 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104633318 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093979887 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09294132 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107318081 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091222106 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095083538 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094787707 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.116311114 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09649886 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090503279 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.112737453 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100141963 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090266944 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.117808473 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.100651451 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.100604006 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109100998 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098695775 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.090175876 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115023402 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.08934425 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093365672 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110847971 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.095391258 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090691368 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.109510695 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.091529332 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.087319322 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.090105128 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.117972163 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092406091 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.097259131 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111652958 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092672959 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089673895 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108513398 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100569835 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092945423 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.118752988 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096127844 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087264373 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.106272618 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.100263816 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093638632 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.118554612 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091456447 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.098291052 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099396025 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.116956048 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095737041 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102409176 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.121489497 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.099861038 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099424334 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.106277863 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.093325488 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099202934 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.112685271 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.09898227 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.096736206 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.107752905 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.098810044 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100343015 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.114225524 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.094752578 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.087760639 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095000854 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.118626423 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.098281397 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097503783 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.114879042 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097500259 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088985851 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.116226449 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.100309588 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094104632 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.11868131 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.096298928 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.098248505 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.089869068 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11893068 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095883537 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088467553 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.10653624 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.092545819 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099945614 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.107356187 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.100671151 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.09913923 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.109203705 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093492473 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098900723 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.109624185 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.098042622 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098735408 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091222518 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124415562 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096169387 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092059383 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.118011499 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.099661125 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08763526 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.112258071 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095345788 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101054108 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.112059983 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.100487835 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094154317 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118061396 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099001719 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.099084761 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.099551187 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.119279338 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.08986706 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100000759 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117337502 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098793394 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.092124191 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.112340217 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090320555 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092497412 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.118523764 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.093286676 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102455039 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.117922382 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.094436102 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.091539243 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.119084419 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09464176 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100923461 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.109376201 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097845369 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.088866294 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.09606522 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.114673539 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.101764123 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091228453 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.108662931 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100857332 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.098700092 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.117420929 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.098372815 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101168765 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.10846021 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.090330586 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.097053212 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110900128 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104779188 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096563304 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.110769463 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094905151 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095647627 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.094923542 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119707132 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090072107 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.090258458 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.114039614 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097344258 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.091896812 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.108792416 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.098890163 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093074233 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114222637 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093999876 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.08869109 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.112774746 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.101922114 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.092950859 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.109073634 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093361102 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10207825 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112132616 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092876248 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089598456 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118926079 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.098336496 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10094877 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.109730636 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097418606 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.092032785 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.096837484 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.123626356 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093457217 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093863331 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.112653519 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100157591 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098834808 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108013621 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.093303356 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104267367 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11846021 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097969192 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.096554356 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112856306 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103094455 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101279126 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.115145179 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.090107862 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089826051 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112820832 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.09133083 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097202144 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098476556 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112992369 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.093195557 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098600267 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119973719 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.097576645 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097667538 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.10759041 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10339394 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093299974 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115695467 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.090924458 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.088769088 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096989815 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.120295704 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.095985051 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.093814266 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.115993336 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098255674 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.09005648 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.113681981 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099237972 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.098422965 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118539543 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095445197 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094253257 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.115612115 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105847472 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097297181 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.093360096 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.122003551 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.101586517 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113624564 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.096467212 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.098542747 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.09980425 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117554188 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.101851318 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.092208495 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.113391547 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.102251043 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.101140631 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.123481143 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094452252 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088599092 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.119790583 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.093526282 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.089296993 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117738857 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10308196 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.100596798 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113826765 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.093433234 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103904183 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.119467809 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096971292 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.092608872 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.111015307 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100846956 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092875732 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.097452756 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.113218757 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.10199823 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102314738 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.121380818 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.104067678 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.089474428 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119925507 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.09819252 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101838568 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.116490823 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.091785519 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.090390278 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.116983499 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104734769 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101176697 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.098255509 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.118673253 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.100916931 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095748991 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11474125 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.093797997 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.101470276 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.120739759 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.098669853 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.097477764 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.114003639 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.098563633 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.096907205 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.119775429 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104627412 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.09629919 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.124376784 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103354769 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095802849 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.091835355 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.116112305 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097973432 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095561943 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.119733391 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093793233 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088800781 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.120169042 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.102663017 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09525538 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12130728 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103427716 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094001085 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.11764835 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105660821 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101445543 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.096998625 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115924125 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099456729 seconds)
  done (took 61.409294157 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143895155 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103884958 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.117334949 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.098669464 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113135718 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11883851 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098063183 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098588857 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119531797 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107288995 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.09753519 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116211981 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113990632 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135576695 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116348822 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106373773 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118546556 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1003077 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097831688 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119090603 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112524688 seconds)
  done (took 3.170590255 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114153048 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110486908 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128506929 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111871061 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103622368 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128520598 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108742371 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128806623 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111340577 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106062387 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132408506 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108510382 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.126341506 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.107999372 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105530923 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.126398823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111985841 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104257416 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.130347189 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.110294255 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125383262 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.110055062 seconds)
  done (took 3.369995203 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128693744 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.100348126 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095335529 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117448801 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101296972 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.097499731 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120710173 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.09949456 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106334217 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092418138 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.109472063 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094363266 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095860015 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.11768241 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.094422906 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098320145 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.124034642 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101719244 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101647306 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.096881415 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.109549331 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099508206 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097872034 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10843952 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105988992 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103608341 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.119044069 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.10254934 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089287959 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.120558233 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.099400547 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.091627811 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08833626 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.10930626 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.09073645 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.101170567 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.119959946 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.09982784 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098892927 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088397096 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.11970084 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.102113282 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.088625315 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.117299079 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.099522735 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092012544 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.100402956 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.120052497 seconds)
  done (took 5.79985992 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.126724046 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.1631552 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.102150936 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.13480634 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133679042 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107777787 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.124317291 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.13560968 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099933785 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123046597 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.112824498 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.133421685 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10484633 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104696712 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.121479935 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104754321 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.104364454 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.341501587 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.128085074 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.10221663 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.125370074 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.10521547 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.109482554 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.131474488 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104581164 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100769836 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12236779 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105574554 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109800075 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127914132 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.10493001 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.125753196 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.11253398 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.104357024 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.1224855 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.102924523 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.111796177 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.122916916 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.103494064 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100534079 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.122377184 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105856554 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103654458 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.134284147 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103352363 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102445759 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.122763124 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100631711 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.109721734 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.123643969 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.10730754 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.131943986 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.105032792 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10235353 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12504221 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.112542435 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104593968 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.121681266 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.104756934 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.108358295 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.120528339 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105375583 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.130268487 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.104029366 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.106775337 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.131976615 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.10446847 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.102959104 seconds)
  done (took 8.959572729 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.132091235 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.10456268 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132708531 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11260115 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104381527 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.126597368 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105342881 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.125555816 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105927722 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110596507 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12482943 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.194457845 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122677695 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109483985 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.103379329 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.125767795 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.104912809 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10555673 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.127230917 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106511753 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.10417914 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.132470491 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105342702 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133000977 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.115164614 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102340777 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127391716 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105956258 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.132154157 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10605655 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.114177981 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.1255254 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.106272281 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111703824 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.13618434 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105875024 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.121776196 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.107190532 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105543148 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.126805359 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103749977 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112673754 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.126765959 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103561758 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104919697 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126702471 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113691809 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.136789634 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.110918774 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109845778 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.127527435 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114871367 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105093782 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.128059692 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114399836 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141366825 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114486567 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132648495 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.106155271 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112997682 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133537783 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.11826337 seconds)
  done (took 8.144128305 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100568524 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098199483 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098382349 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119280357 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.09897613 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098572383 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098054523 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.119327334 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099667006 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097848013 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119360976 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099480851 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098546836 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098542647 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120281409 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099684918 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.098256059 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119749633 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100085123 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.099055601 seconds)
  done (took 2.918108645 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.109338935 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115047021 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.121902491 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107288397 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101679282 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.126528001 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101723805 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101529561 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101085366 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.124039907 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108790722 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129279433 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102429165 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106331802 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.1311794 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108317684 seconds)
  done (took 2.634699993 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119077548 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117498111 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.185084956 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103306007 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122282652 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.108572883 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.101435098 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125808278 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101795661 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106640103 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104747608 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126539192 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101462273 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.102028733 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123645045 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.104935062 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099308798 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.125848337 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.102364557 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.184411391 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106221578 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102816211 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.124373559 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106892329 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102562961 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.127848828 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108540413 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.100825296 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124376649 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103686817 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.104549155 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.129655237 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101982266 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106517145 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102242396 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.125674227 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.101871557 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101057562 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.125449449 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102287166 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102144662 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123978788 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.103263779 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103135121 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.120963514 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.102946219 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100866225 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.127909106 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104982568 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103016194 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.1008472 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.129411823 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10652401 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.129744762 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.110376179 seconds)
  done (took 7.088065995 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11285826 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103797249 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.133513547 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101645837 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.102262328 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102536991 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.124142208 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.103413612 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102049082 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.12223079 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103937849 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.101968935 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123351582 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103600812 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102250476 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.123412032 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.101266809 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.103597431 seconds)
  done (took 2.818162687 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107137889 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101114614 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105851493 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123553212 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.101882973 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101860228 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121327706 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101781874 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100607171 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.122288046 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103749796 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.100964012 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100059526 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123722203 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103421084 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10188905 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.12219792 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102054482 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101554443 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121635023 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102545301 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101503827 seconds)
  done (took 3.218948768 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.112054305 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.181448069 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107033765 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.189623827 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.098601741 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.096525584 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128833563 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099598689 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.113070374 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11938896 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098224763 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095930747 seconds)
  done (took 2.288567832 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129122099 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136461212 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125721246 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.104360331 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109585414 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127708675 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106642921 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105880043 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135816716 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117008429 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127475748 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114342759 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112412879 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.135443851 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110957247 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131662231 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108079181 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107023861 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124192638 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121565062 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106219851 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135976424 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106959899 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127635035 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108268766 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11461063 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134620856 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117132023 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106267471 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136064133 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109777207 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128212404 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113799697 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117385725 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125208313 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113273093 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127374766 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121398183 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110226156 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135876404 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10326581 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130856953 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115417062 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11046238 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13487282 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107394181 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11145532 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128478106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107161327 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146501691 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111367898 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113490201 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133383401 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113699868 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135799 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126816838 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13861512 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115304593 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110185118 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139886843 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113826612 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132775195 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115285525 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138590541 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112918806 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113414 seconds)
  done (took 8.801477742 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.143335569 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103002923 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128651316 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118868856 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136057986 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109010386 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107179932 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128835172 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109018994 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.103813556 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.171082684 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10679526 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135754037 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117450618 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106289198 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128141281 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107872546 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113613224 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126890047 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128086847 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128633422 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117093605 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114180958 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138174368 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117419809 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133348931 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108266563 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10671423 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131411858 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107947186 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112315022 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13038603 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116412591 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.124937897 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116514201 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106543617 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128635149 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113150617 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106847154 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132327266 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115041551 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141624751 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109090589 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107086557 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140569743 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107398692 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106880361 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126895155 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108197695 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104193906 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141297487 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117869622 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140009616 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115403757 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129168985 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108162747 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108480559 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128290501 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10859014 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111999337 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136798607 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107288297 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.149145265 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108366078 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107658065 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138323689 seconds)
  done (took 8.802119454 seconds)
done (took 166.177791532 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.147101127 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.182913622 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.143857622 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176559041 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.095061455 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.127860016 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.147929459 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146848781 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.092743647 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115911628 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094208727 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.096028128 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182983418 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.095470283 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.094300891 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118162215 seconds)
  done (took 2.906799052 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191640209 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.30446251 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108480741 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119863802 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.100363396 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097931821 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120755947 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100111008 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.098546895 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126513623 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098987222 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.094060109 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.12635921 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096165798 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098537971 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119420527 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.105340761 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097838519 seconds)
  done (took 3.062892934 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11894237 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.141821225 seconds)
  done (took 1.124563076 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.128600184 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.209155446 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.27902631 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.16723738 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119189276 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.138087192 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.146080411 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131948683 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.186054711 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.131791139 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.110195682 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.09666948 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147081392 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103596204 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.1352255 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.098393887 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125290237 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134750168 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.112971462 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.100114095 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14218258 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.101803847 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.103408318 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135154714 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.176804546 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.133391519 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102537367 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100789877 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.124081702 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113381147 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.126053902 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.115873877 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109703205 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.176605809 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101924717 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174436549 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126552528 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.100066747 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.113296113 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120145193 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.103325377 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101622115 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134465634 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097124714 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.100957735 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.128475863 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.102694067 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.101124573 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128278986 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.106278841 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128683715 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106827121 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.170871225 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107013974 seconds)
  done (took 7.778012704 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.848042422 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139610283 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098681485 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.99116455 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148370227 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113564778 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.840667533 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145253721 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.250185694 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.847517501 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115824674 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111538737 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.255431047 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257421782 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.282254451 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.35293707 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.714852973 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114242749 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127658461 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.161551548 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107355443 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.146612934 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119021942 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.514899554 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.100469769 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.121751184 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.108659561 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.112121849 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175990975 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100255432 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126647967 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193135124 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.268078112 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204544761 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.122343988 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.100265645 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.09867818 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183359722 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262924898 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213689021 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.195550947 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097029699 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.103363755 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.130873309 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11804969 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117458503 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156588192 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.18764189 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.189201103 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103614302 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.135944083 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.11002159 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.128281758 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.155092392 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120250645 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355209606 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.355839656 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.098956702 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132187723 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11593513 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260185897 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123390471 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228642861 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127027745 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.209031374 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120925418 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.820224282 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.159594497 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120300949 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.107393362 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106492999 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12927053 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.107876609 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1878706 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.472425569 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134315207 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104432345 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099199248 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228606067 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.122876865 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100083325 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.179754814 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101199727 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128078289 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.11656093 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.112063889 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.186185727 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.268278334 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112924886 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132129825 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.105877701 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133917248 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.101625731 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.228250918 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223869953 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.170365658 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206020248 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.131260002 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17769672 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160271083 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128233591 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.164495247 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.130238334 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.115948558 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129734026 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219727834 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.133381797 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126735833 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.107506513 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107766361 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159334469 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103537808 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.13159432 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.161480171 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.55122183 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182719314 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.097015153 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127120551 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110523791 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177971157 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108552401 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.257216605 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131054687 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.160819092 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130242307 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098184583 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107873208 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.178679249 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132482702 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.109737523 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107363761 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13343243 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.275222931 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.216297295 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114497506 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.249296578 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.198763069 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109234719 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.192240409 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.108162955 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.185528609 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109427552 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131870359 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10199498 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.814555248 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136637561 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.109217085 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.104651004 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.20486254 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099428165 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.12533737 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.102427754 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097745569 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801624596 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.103181593 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.12171626 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103639483 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.107074163 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.132722308 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10765468 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128085274 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.154070105 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.259829219 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.115267827 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.105979611 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123131747 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.152031764 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.124997105 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.10070844 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10034607 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124022743 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109572056 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104340717 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127008015 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.187689611 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.150999549 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.244746989 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.64744147 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.102693829 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101519712 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.235964389 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123437319 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321825166 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108484886 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228067149 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.182708325 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097545315 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.377803362 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.160923524 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205945765 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103720318 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18876049 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097661594 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131764422 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.153030265 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.124239746 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.108266973 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.174800024 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.115056094 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.136588437 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.274191698 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.101005883 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249263204 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.097293843 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.187200472 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.101612233 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131813594 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322231091 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.100430213 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140678362 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.175180326 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.107430251 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101074662 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.61667347 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.101172562 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136254167 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.108471929 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.226301249 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.181366752 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131844758 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111692477 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112554081 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.178273188 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.227706029 seconds)
  done (took 47.276916949 seconds)
done (took 63.004139367 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.26312084 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.173962852 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.277527718 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174643119 seconds)
  done (took 1.845082018 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.238481968 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.155622533 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.198916514 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.120238839 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.203122162 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.120715019 seconds)
  done (took 1.927047186 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.173292191 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166970838 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.144396093 seconds)
  done (took 1.369986051 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.197654633 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.212653205 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.323065886 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.23029942 seconds)
  done (took 1.936779804 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.257760108 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.115831408 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124968946 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.204392737 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.216379889 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.197720463 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.122227137 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.168828498 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.128340029 seconds)
  done (took 2.470763184 seconds)
done (took 10.435829467 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.242695002 seconds)
    (2/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.214081963 seconds)
    (3/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.308978437 seconds)
    (4/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.136679862 seconds)
    (5/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.307050626 seconds)
    (6/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.275179155 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.191216444 seconds)
    (8/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.128225394 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.133275876 seconds)
    (10/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.11233352 seconds)
    (11/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.10959009 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.191733082 seconds)
    (13/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.110549385 seconds)
    (14/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.32758793 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.317283748 seconds)
    (16/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.188083854 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.207716365 seconds)
    (18/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.245909261 seconds)
    (19/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.265103037 seconds)
    (20/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.193977073 seconds)
    (21/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.286025109 seconds)
    (22/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.181919292 seconds)
    (23/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.131578309 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.128183355 seconds)
    (25/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.078034809 seconds)
    (26/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.146678417 seconds)
    (27/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.286007787 seconds)
    (28/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.18869369 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.11938785 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.165766625 seconds)
    (31/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.075279639 seconds)
    (32/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.161606563 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.121145945 seconds)
    (34/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.10787428 seconds)
    (35/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.1021304 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.130090588 seconds)
    (37/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.168671592 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.209358933 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100148223 seconds)
    (40/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.210856328 seconds)
    (41/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.144749458 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075156023 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.133666955 seconds)
    (44/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.123545623 seconds)
    (45/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.256524544 seconds)
    (46/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.191239529 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.11289857 seconds)
    (48/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.149656251 seconds)
    (49/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.256993428 seconds)
    (50/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.106270807 seconds)
    (51/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.17789651 seconds)
    (52/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113812234 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.126442238 seconds)
    (54/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.345440841 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.082509806 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.075042211 seconds)
    (57/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.106575616 seconds)
    (58/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.163586483 seconds)
    (59/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.082486921 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.117761758 seconds)
    (61/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.212169807 seconds)
    (62/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.189494487 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.268706026 seconds)
    (64/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.108237602 seconds)
    (65/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.140449926 seconds)
    (66/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.130265524 seconds)
    (67/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.079623984 seconds)
    (68/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.123151067 seconds)
    (69/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.206232171 seconds)
    (70/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.105203385 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.100805435 seconds)
    (72/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.132713249 seconds)
    (73/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.162740346 seconds)
    (74/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.128328244 seconds)
    (75/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.189284692 seconds)
    (76/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.114549926 seconds)
    (77/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.096575131 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.142759033 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106299692 seconds)
    (80/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.075711012 seconds)
    (81/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.215693352 seconds)
    (82/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.171678368 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.081585305 seconds)
    (84/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.131228401 seconds)
    (85/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.155597973 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.125089091 seconds)
    (87/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.140064885 seconds)
    (88/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.128388783 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.134732009 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103217746 seconds)
    (91/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.128124889 seconds)
    (92/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.078923014 seconds)
    (93/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.106308574 seconds)
    (94/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122181258 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.10134942 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.128221573 seconds)
    (97/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.079399731 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.12303044 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.10035875 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.125046818 seconds)
    (101/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083685334 seconds)
    (102/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.135118358 seconds)
    (103/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.081157213 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.102366077 seconds)
    (105/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.109601851 seconds)
    (106/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.152336221 seconds)
    (107/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.101952194 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.10105775 seconds)
    (109/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.109955503 seconds)
    (110/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.078828409 seconds)
    (111/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.099950329 seconds)
    (112/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133892966 seconds)
    (113/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.082886123 seconds)
    (114/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.082808781 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.126694011 seconds)
    (116/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.126987035 seconds)
    (117/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.099557952 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.082979615 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.127487709 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.077795696 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.079063864 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.078975533 seconds)
    (123/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.10478191 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.162532293 seconds)
    (125/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110366318 seconds)
    (126/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.078975515 seconds)
    (127/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.101733841 seconds)
    (128/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110000185 seconds)
    (129/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076822668 seconds)
    (130/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.125698976 seconds)
    (131/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.108188838 seconds)
    (132/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077208452 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077616926 seconds)
    (134/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.076128564 seconds)
    (135/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.123165866 seconds)
    (136/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.109983373 seconds)
    (137/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.080250409 seconds)
    (138/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.171098092 seconds)
    (139/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.133250307 seconds)
    (140/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11250184 seconds)
    (141/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.076071546 seconds)
    (142/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.076244186 seconds)
    (143/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.128297678 seconds)
    (144/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.078228141 seconds)
    (145/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.136598361 seconds)
    (146/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.145105021 seconds)
    (147/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.125915503 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.102256054 seconds)
    (149/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.075975665 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.12716102 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100692747 seconds)
    (152/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.083338501 seconds)
    (153/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.082332133 seconds)
    (154/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.13497602 seconds)
    (155/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.08412365 seconds)
    (156/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.122400419 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.105566094 seconds)
    (158/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.189998869 seconds)
    (159/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.08194764 seconds)
    (160/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.150332714 seconds)
    (161/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.113350768 seconds)
    (162/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.081889121 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100757782 seconds)
    (164/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.108341056 seconds)
    (165/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.078117968 seconds)
    (166/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.076878115 seconds)
    (167/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099252678 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.102037674 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101223917 seconds)
    (170/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076676631 seconds)
    (171/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102347198 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.131675585 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.123946351 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.102149102 seconds)
    (175/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.076589736 seconds)
    (176/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.106199838 seconds)
    (177/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083430421 seconds)
    (178/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.077213871 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.101945847 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.144397609 seconds)
    (181/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.078165098 seconds)
    (182/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.10162213 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.125328445 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.079966307 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.084644083 seconds)
    (186/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.108594147 seconds)
    (187/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.105247134 seconds)
    (188/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.080348973 seconds)
    (189/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.080936628 seconds)
    (190/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077546183 seconds)
    (191/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.076304595 seconds)
    (192/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.122348945 seconds)
  done (took 26.177814746 seconds)
done (took 27.07290562 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.202760863 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.124524379 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.110443842 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108249557 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.199335906 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116198977 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123799652 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.135122133 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119528773 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.108443639 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125797632 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121803043 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.109716545 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201201242 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110359139 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.12734959 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100449559 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11895806 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148528297 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.126671185 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.200556526 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104207948 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.119021856 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.125080585 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.174832864 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127042272 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110439069 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.111554933 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.144889239 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.111277674 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109844595 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.124009026 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.125674321 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123747906 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.124536958 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112196154 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100795133 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.083114408 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.134084268 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111597077 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122037033 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.134370832 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111575159 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101229513 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.1353565 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112104963 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101371046 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13749331 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101892985 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111007396 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126681668 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127214719 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109605279 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099491706 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.124487442 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102412876 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.119140856 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126837341 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12378623 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100925414 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126712233 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102935894 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111754779 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12515097 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.112623482 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100998491 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.133485827 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117068688 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109378352 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.103883939 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.12621995 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.111260251 seconds)
done (took 9.75117749 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.107634934 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1450232 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.197713694 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.20849208 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129648602 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114522876 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.141791165 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124637059 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.137936987 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121100882 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.13748026 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157083253 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18015313 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.144171232 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.117487207 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112586629 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138827262 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110968423 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.205468688 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.126031454 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.149166666 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119776857 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.128443905 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142348329 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106565925 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.135883527 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134828938 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114154324 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.104408521 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138475658 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126829792 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.104484724 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134331171 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124669126 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121769911 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142685125 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116702607 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.138194831 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.10808344 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.106011675 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.136913017 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122496533 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.106161421 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.139618828 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.116288021 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120113119 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.137674913 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.119569514 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106635381 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.136280334 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10870683 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130869264 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14189446 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123168286 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117053769 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142742737 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120458987 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.11819662 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134831304 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.119659406 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.10612004 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130445196 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107993743 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.125756952 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.134506552 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120241857 seconds)
  done (took 9.506985662 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126820516 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.133867737 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.140520841 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117121061 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110889683 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.124477177 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.101598145 seconds)
  done (took 1.793577835 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102283395 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184045406 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.207950742 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208089446 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178000051 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217168172 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14955609 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.102706994 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135446869 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.137381332 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18433376 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.236853143 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112241242 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142068934 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.185156405 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126851063 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.186094145 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128207401 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11660594 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.212067228 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119582416 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158394011 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.11570344 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102143804 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.204947787 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102798906 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263071321 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.119328159 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.13608946 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116057158 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115440452 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.204635151 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.20527497 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116853392 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.109936939 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208313256 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.20323431 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116568372 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.218848194 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.107109261 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.204705163 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.116281375 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116255655 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.142496579 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117487254 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.193275806 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.120905775 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116663822 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139783333 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.188156564 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137101122 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.183242781 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.137855088 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117557415 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.112203668 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141996457 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124249574 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.116982572 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.215539528 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118506382 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.209290143 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209350116 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.181451755 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209296312 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12427732 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209429173 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.199730833 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115976797 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110295311 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.141224632 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.184813362 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.140478372 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114330079 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.198530375 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119705187 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210732447 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185327786 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141480948 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.115076472 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.104815101 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.140766408 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.103465627 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.200479046 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11758546 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.114458621 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.144576311 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116953046 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117149257 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.133063682 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125770182 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.115091709 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.13881544 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121398999 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115914059 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.143402456 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.212135648 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.113312711 seconds)
  done (took 15.605857542 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.105086049 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103749264 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.107057369 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130172377 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.105158422 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103783993 seconds)
  done (took 1.616394454 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.139611565 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.116730951 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.150178374 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.118633914 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160716646 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.214485028 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.218180119 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.110991127 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157657588 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126655881 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.214213977 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.191967292 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.217543922 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118664983 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.220113886 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.118204852 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.220042807 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.114964801 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151542449 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.114817613 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.115881385 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.146089802 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.115371731 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.207959905 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118421175 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117590507 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.138644802 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.125333826 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.148655026 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112331933 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.120247416 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.142468478 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.110837597 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.130964424 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.219688599 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.109562278 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139204431 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119938473 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.11943369 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144925045 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.192331577 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143199579 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.122763195 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.118404895 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13860952 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109984833 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144850858 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.11158502 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.220127705 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120764621 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119447663 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144550708 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119006105 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119241817 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136553948 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113070213 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.118659253 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.222648112 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.118925227 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.136765045 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117555943 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.1426274 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112547704 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.122475684 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.14297015 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120399616 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.109210092 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.143918837 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115323328 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.118224101 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145610063 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118712079 seconds)
  done (took 11.143791221 seconds)
done (took 40.600492382 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.652285226 seconds)
  done (took 2.608962208 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.876731446 seconds)
  done (took 1.833340287 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.775651011 seconds)
  done (took 18.762707107 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.419885137 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.464355917 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.115498405 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146559495 seconds)
  done (took 3.103837876 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.813731196 seconds)
  done (took 1.792788198 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.278453359 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.255377002 seconds)
  done (took 1.496389082 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.705877065 seconds)
  done (took 1.679386617 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.494694465 seconds)
  done (took 2.459411633 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.281105622 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.238012295 seconds)
  done (took 1.493526175 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.600435177 seconds)
  done (took 1.576824149 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.555696683 seconds)
  done (took 20.533380344 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.253153946 seconds)
  done (took 1.233019106 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285870986 seconds)
  done (took 1.265584674 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.505379998 seconds)
  done (took 4.486991603 seconds)
done (took 65.293642163 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.11432615 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.116049028 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115817092 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.13877419 seconds)
  done (took 1.454013355 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.123524754 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.11808525 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.145054111 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117922586 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.123226637 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.141403969 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.117690763 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.119012889 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.11571456 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.145041081 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.116898437 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.116297352 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.144531502 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.116910914 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.115188328 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144229228 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.1202946 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.117307202 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.144118505 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.118842933 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.117755623 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.143100525 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120924943 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119009434 seconds)
  done (took 4.005560569 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114941845 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.108076884 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.110075666 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.131975274 seconds)
  done (took 1.449775793 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.124877369 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129632206 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151215146 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125290854 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.127852363 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152472759 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11657631 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.114523052 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.141413366 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125480238 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131413259 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.153661755 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128102088 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117934837 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152762716 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110851166 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.11681448 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.15329199 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.122797795 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149516899 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.119182881 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123424916 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.146827648 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.125682625 seconds)
  done (took 4.142785879 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.18919882 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.128359636 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173959274 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159141156 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.176220429 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.1146894 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143935553 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.147868864 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.122600021 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.116720091 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.14730618 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.161031204 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149414822 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119197939 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116530677 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.149751856 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.128622712 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.122783807 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.186840517 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121094553 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151498072 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.128712703 seconds)
  done (took 4.142596254 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.119438836 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.107951654 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.128088671 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.10990264 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119444234 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.135111603 seconds)
  done (took 1.709780203 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.107406486 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.102693387 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.10224545 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.127281628 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.106508729 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101740215 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.125338869 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.10501098 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102809885 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.102006364 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12811938 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.102426471 seconds)
  done (took 2.298292241 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.324897606 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.108092806 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.134658617 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111516151 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.112850647 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.105101343 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144858631 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.107900644 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.262754914 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.103184267 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.131053352 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.192705038 seconds)
  done (took 2.831484972 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198704245 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144721851 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249921993 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367188801 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184068696 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157240938 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290991278 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185777682 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.174314524 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161976862 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180368846 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184891012 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15013938 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207900599 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137947365 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.181159033 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157932249 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227904368 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164970904 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207035455 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179631653 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170494084 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211180309 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170171201 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136747367 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181217136 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.118059777 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125980794 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188793087 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159011525 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194959234 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171522145 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140086231 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211986807 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220866752 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193884706 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269380426 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156957061 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167535745 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.211376329 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253458256 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139926279 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210508089 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148431371 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154748157 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180473008 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175013651 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.205799682 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132411269 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141519015 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202408314 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200900298 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.171213469 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160449372 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.302358496 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132612652 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.139311725 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190496513 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208766348 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194167184 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199672339 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.120233144 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201028448 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212528887 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232358601 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.139708922 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.185837099 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123661463 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187057377 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200483463 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202889601 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15533906 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223585674 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155703857 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167524437 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192588002 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150855437 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226338891 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192396038 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.118950742 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145667074 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158093378 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125650751 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.213289982 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120556239 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239181928 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129396355 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339540314 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208000806 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152201432 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1835681 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154839116 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186490965 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143738091 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.126133162 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141106519 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184425877 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155026678 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151684173 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152987941 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13690843 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.150630085 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149180172 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.147282385 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165654543 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.154725987 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161077775 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190389233 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.130622782 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198697228 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147351975 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.185408138 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163968967 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214385044 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12792806 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158018299 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21277051 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193970208 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.135642569 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1987112 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218856887 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.147105651 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158594391 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162466197 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216676853 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142211512 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221545829 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135005175 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158986275 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133909496 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195420063 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155393511 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.179298969 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125941871 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189705727 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185356105 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152821573 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138974317 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205965138 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131630699 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14862771 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135725903 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1326029 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.167215479 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146595362 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.162777481 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152134282 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188960351 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16260197 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179088986 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133300232 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193325037 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129448625 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.191750764 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146846715 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116924593 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197032805 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218799537 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127847202 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204926532 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.159575887 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209147761 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196804542 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12864215 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207011312 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126523144 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.11799008 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183527135 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166992379 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185947402 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.211525321 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205491287 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.161894292 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.186329483 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146842103 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190704276 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.179133603 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180709968 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.140697178 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195584324 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190834814 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12170659 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121322616 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.151858659 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136926575 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128223563 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162225413 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17261586 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187251979 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.20190984 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166575054 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162275895 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.187138652 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.150669162 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156877577 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.199976778 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136924271 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212311637 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185243535 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20336605 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163581239 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158134437 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118793576 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152169018 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.130785161 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186892082 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135828957 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132854226 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165651318 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213824756 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169290351 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171861307 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216589736 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161015513 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224226228 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.119580632 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.18374669 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165136861 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192837132 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.181671281 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131825115 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.182507935 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213415586 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139858003 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214882168 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164073472 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201901951 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218064364 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.162468315 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154901519 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147141943 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156904887 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163135554 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158763005 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171905547 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128696412 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176717833 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135956044 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163466928 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177563549 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168721175 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172961502 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.183397862 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191623703 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126292263 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138455909 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200067592 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141834234 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.128970969 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165663336 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216572577 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14662298 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181681568 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168846189 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156594243 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.313301804 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209776265 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199816973 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134656969 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134374238 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.195508293 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184377164 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159202211 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209317165 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13939176 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229664831 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165456251 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.169626578 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128593866 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172724913 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149449428 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.161753484 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149410716 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.18608985 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.141874101 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206862329 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134000706 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193766995 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17163357 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.170758263 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149276086 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136375086 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245426245 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192564728 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194191514 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162817867 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188437274 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183276782 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121592417 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15283247 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.130076543 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209350421 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128133552 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199921723 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.166607725 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211331346 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198177045 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158078452 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167712425 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.125135871 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192159573 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145204614 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212129131 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132690481 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.162749852 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211634032 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.126181273 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129912461 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185802374 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.27125813 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169778146 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192705139 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.104819521 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.265481867 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153547178 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1305746 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18675874 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165660459 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.158750893 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.180311692 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197925337 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139921024 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158246856 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160689481 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.206066653 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185165254 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190116036 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195464114 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.1433668 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185692004 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157364987 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199352099 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143680772 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.172154656 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157516083 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218527424 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.17639585 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.157639681 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166253961 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194199649 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167587097 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195467549 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136411575 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207701748 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126207908 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187792301 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135151697 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122491776 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185450455 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19245445 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128736101 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201067143 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167838941 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15711878 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126303209 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141341689 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19018118 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138157198 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.15560825 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204055784 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12809902 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175350554 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2292283 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126501993 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192365767 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143017069 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155897832 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135532823 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16826318 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130066214 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.171872527 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201952134 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.129264455 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201313788 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157864596 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187737365 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180557558 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141576534 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.326650348 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.154784077 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186302126 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176788244 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218711829 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147630415 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198836073 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166738743 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174308091 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159593586 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170748466 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.216618816 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187279548 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.165293417 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155484064 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141205853 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135871491 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.160428179 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150824966 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193361655 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139329181 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.162167186 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.165991274 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169950222 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.146379013 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139791661 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224309782 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148104788 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207466252 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212558519 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136022237 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200240615 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167869347 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157605431 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.16029971 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195335597 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140824311 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177586213 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13250198 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.162717937 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207678082 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.151748815 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157185286 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196610337 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16683129 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19600469 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.132937536 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202075998 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13902506 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201307715 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126276984 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.177123892 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17112004 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.131934972 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.153902506 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.167498189 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182280695 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.161876712 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167704543 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.172959078 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218559694 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122508965 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131738143 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298129033 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185393371 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19194348 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.161638782 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134749636 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142865723 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183959568 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.18787572 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168544873 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.127442797 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156492849 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.143435875 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.178636541 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.139341434 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.195127434 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169438641 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185692605 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181799548 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.159754392 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250670098 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168186271 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16877052 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.1132963 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.156029174 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139666258 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160985357 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139266127 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.207455204 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236107166 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.162844885 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.170794255 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134145715 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126422795 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155645022 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161974981 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173458445 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166315445 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171442557 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.101570625 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137292258 seconds)
  done (took 84.592777715 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.160667219 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.151427341 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.165987659 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.22081559 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192284309 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.286206596 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.227128694 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243979945 seconds)
  done (took 2.726125561 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118262255 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156865819 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.138760343 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.142517283 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109173517 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.435936147 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.129806896 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144143706 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159978932 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.149213653 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.133866774 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.521328503 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114620003 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142742201 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.119550789 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.132881195 seconds)
  done (took 3.91721865 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.618567588 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.538262395 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.93585823 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.289051301 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.254796281 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.198567558 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.738882338 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.193370481 seconds)
  done (took 11.84060273 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.152559248 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145479853 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.409753508 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.747314599 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.203355794 seconds)
  done (took 2.737109074 seconds)
done (took 128.816387299 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.121425252 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120629566 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.121162378 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15143225 seconds)
  done (took 1.582550524 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.173113846 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.088270523 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.090649034 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116143084 seconds)
  done (took 1.546243869 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.421510606 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.088767247 seconds)
  done (took 1.615367719 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.145310437 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.137933715 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.163420718 seconds)
  done (took 1.538971174 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136774581 seconds)
  done (took 1.21734825 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.121286097 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.114656553 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.2342754 seconds)
  done (took 1.556368457 seconds)
done (took 10.137118619 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117944932 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.924016643 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.429901443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130713568 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.708246407 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.42386165 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.419482785 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.171388956 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172363772 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.135896352 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130823502 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687697442 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.430568071 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.874315777 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.387781651 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.899722564 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.693916768 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109797696 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142626898 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109982351 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.400065165 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.135088094 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109744207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.109721573 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.72432075 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.418315602 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108150602 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.917853773 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107595618 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111570081 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.425623736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.108988776 seconds)
  done (took 20.853160991 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116692817 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164859389 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143471497 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111072661 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112133718 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137277846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.121469416 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.119739674 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.199797834 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.108957739 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.158529899 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.10893631 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.113558488 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136841861 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.134166585 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.10885577 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.139554348 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111862858 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117097251 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.137753881 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131852008 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107502565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138959902 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112610445 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109198741 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156987818 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10956706 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120742089 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137835889 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113273694 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113164695 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.13768115 seconds)
  done (took 5.18507771 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155652598 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.172311447 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145695403 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.146125123 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.18470978 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.11165668 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221128165 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14617562 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200268904 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.11282175 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130194611 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.137146204 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148900675 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109797428 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162506242 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109130911 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.112873582 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.138959327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.117621107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111087339 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158764825 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109006634 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.110053479 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139250135 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.109425171 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.158503733 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110181098 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121387597 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.135749222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114270131 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.115056806 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.137542195 seconds)
  done (took 5.484763211 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123651432 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123263925 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.131224073 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160760533 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.118716707 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.122688408 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153026475 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.119044612 seconds)
  done (took 2.143327443 seconds)
done (took 34.752985058 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.132507874 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126707228 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.127715072 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151012394 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.18603071 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.14476187 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.123978272 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114723727 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148933473 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129614047 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.108450234 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.114073812 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155501181 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118153203 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.217462782 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122871225 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.220998064 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.188906062 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.143128556 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.123707382 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116707744 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.222420875 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119163007 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.114875081 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.219020764 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.112384197 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.212064501 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117979172 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.145972266 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112527232 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.188327618 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.150962289 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115887315 seconds)
  done (took 5.931318325 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.205950042 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.119412409 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147729986 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.119712811 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.119584146 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146600536 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.209226546 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.146974469 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119030645 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117514246 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.117702964 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.220347466 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123830953 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.143044248 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122225893 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107311548 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.237012759 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.119077586 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109220212 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119720275 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.1143828 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117592758 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.24926576 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112994293 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.117279772 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.146472492 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122217217 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.122234871 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.148985215 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120717925 seconds)
  done (took 5.348151631 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.124080229 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130662355 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.162920981 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184820221 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.145849938 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.158661098 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137543039 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.132030719 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.167930612 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.11229804 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.127093272 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.176729447 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128647643 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.121178975 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.145630119 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130312012 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133058065 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.142575144 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120650367 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128460265 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.161716836 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.129319795 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134198336 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.149311281 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.111640884 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119141717 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.150621639 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.127293493 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.120299377 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154451703 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.115899513 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.116026675 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.142060213 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.147719318 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.113286781 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.154440698 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.136192927 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123945907 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.153633169 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.14443967 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.115383732 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.14393067 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138827775 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165521351 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.142903472 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.126344474 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124148893 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.156561276 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.112741682 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.130072204 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.182447106 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.113500373 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132851671 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.140017414 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.112681257 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.121004206 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.14176935 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117271297 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.126262603 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.142083612 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137866484 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.118900735 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.122056388 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.143714484 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.122869291 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.111092341 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.140050968 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.1161561 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.137442639 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.14857639 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.148601734 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.1116321 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.151429116 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125187688 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122101411 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152187152 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113130028 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122506157 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.150632542 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.121153958 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124772175 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114554036 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.144834628 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129342857 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.130986535 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.155470614 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124199628 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124794419 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.145447197 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115282756 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.129212452 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.142710442 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.118543473 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125102476 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.1418865 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.116986651 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.125457136 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.152653087 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111636806 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138500481 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.144714839 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.11410471 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.137828739 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.115051956 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.147360812 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.122754585 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.181785293 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114910605 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.123731239 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124449089 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.142349726 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120850372 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.11595715 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.141468767 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.13233275 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127916279 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.150696679 seconds)
  done (took 16.802261636 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.313762375 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.271299139 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211080879 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.242707316 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125283501 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.238529458 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.298455895 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.30241577 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.113413845 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181294288 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165127338 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.272307788 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.112945041 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.172192807 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.304628158 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.355562342 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.141303507 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.181753217 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176924966 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.12688628 seconds)
  done (took 5.42067464 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.134095408 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.146475422 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.164671483 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.13989541 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12342014 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158820678 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11356621 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13491843 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.155746088 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122966414 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.115061645 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156816251 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12662657 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.12885584 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.158094066 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.143626406 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.119253125 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146855143 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134990509 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.116187767 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.128655985 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.137562001 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121863119 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.163747502 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131492535 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.123198305 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.140674161 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.118251352 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11917117 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.151231882 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119015886 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130236144 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149461607 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.106440028 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.124115307 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.15676432 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.12041289 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.115172239 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.117710112 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146387635 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.12712838 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126140491 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.150783226 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09715947 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.131723349 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107228891 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.157134264 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.126602319 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105025997 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.161021325 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125841192 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126346646 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.14890681 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136425627 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.118892997 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.156713758 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.125854428 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.126948871 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.145733325 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113677033 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110975453 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.116023791 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.150564496 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127480244 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124117797 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162073496 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129023227 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112560537 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.147588024 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117528426 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.115813337 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.155610529 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.132813155 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121841082 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.149452659 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.125606465 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120782675 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.121224083 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123749584 seconds)
  done (took 11.574934066 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137722057 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.121272335 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131255477 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.176162173 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.124447281 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.119287373 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.1518994 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132695714 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12480406 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.159327834 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.125425388 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125658902 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.164314065 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.123149828 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.121306028 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158360347 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124848883 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.150646482 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.161666699 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.141193966 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.156207172 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.120375552 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.126167272 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123874963 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.170981116 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12543466 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.170114294 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.126066196 seconds)
  done (took 5.026246734 seconds)
done (took 51.199940783 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.270779292 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.449180171 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.225959094 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.224798223 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.241781568 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.244319368 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.227446996 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.242589007 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.616608283 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.195516231 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.222751151 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.235135705 seconds)
done (took 28.518548505 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.273683943 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.777610896 seconds)
    (2/2) benchmarking "String"...
    done (took 1.511566993 seconds)
  done (took 4.402993265 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.213448911 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.212377689 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.459672951 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.207526999 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.21467595 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.214926708 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.216582749 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.216944077 seconds)
  done (took 15.855442425 seconds)
done (took 25.857998184 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.251779907 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.398035966 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.467988289 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.217825674 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.227334317 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.214156685 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.214341825 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.232384323 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.213657522 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.220654742 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.604927021 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.45843667 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.212406559 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.578216717 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.207974562 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.230274514 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.202867258 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.431071688 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.211516825 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.234433418 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.182923073 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.184790993 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.232386616 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.210069174 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.212625387 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.214535248 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.251658416 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.207564271 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.407493027 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.223884017 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.235064845 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.20813535 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.249308076 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.210005419 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.219881262 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.227254437 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.395255807 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.211272646 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.19796804 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.235620015 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.395070284 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.217146803 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.207573467 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.215802626 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.210521243 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.246405791 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.193494295 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.330226017 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.228126953 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.215473933 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.271194476 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.582963764 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.219333794 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.206671958 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.210693313 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.427975013 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.222695 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.258280008 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.231003064 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.207932656 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.208992929 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.218262436 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.271388694 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.212587355 seconds)
  done (took 144.067132633 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.206915507 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.211712333 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.210674736 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.27309529 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.21149819 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.212552537 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.210673518 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.202511831 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.212456031 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.234814961 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.213463846 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.208557066 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.213999826 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.212576516 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.220350122 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.226581468 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.210593172 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.209635682 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.238500562 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.210243889 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.207709815 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.215474641 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.211722703 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.211780562 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.249033861 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.279780047 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.22971545 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.235610964 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.223353072 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.208340828 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.243130532 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.257122546 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.802400925 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.080388596 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.219521766 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.224073231 seconds)
  done (took 80.559950614 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.205768911 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.208185907 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.208580019 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.243658592 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.21055303 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.754869473 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.760563205 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.178968954 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.229179582 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.49587952 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.403615749 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.211377115 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301974221 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.224483789 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.209466757 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.224607432 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.239575972 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.212298563 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.208212087 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.759391437 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.2277173 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.316481713 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.381832512 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224881841 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243009245 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.604169297 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.210262846 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244779818 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.537705807 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.2575329 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.21270341 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.531937795 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.236221089 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321525203 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.213848961 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.244413714 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.212120888 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.491505242 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.214819398 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.213208764 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.213328499 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.827564821 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.217013212 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.756415059 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.216957487 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.134960018 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.210055996 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208291078 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.218335886 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.839714469 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.213978876 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207650058 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.211273234 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.207263416 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.209254416 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.239813757 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.199291353 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.30625029 seconds)
    (59/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.210359103 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.210043863 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.21316417 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.242691718 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.211381191 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.451093521 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.21304102 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.750922957 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266934736 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.303593922 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.734438758 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.214612744 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.301573328 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.323530683 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209836859 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.206458365 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.207925311 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.207075383 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.207074571 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.314065678 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.208163768 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.859505868 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.375430048 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.223008446 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.413105084 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.30535831 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.207511565 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.501469922 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21375613 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.205332934 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.87136959 seconds)
    (90/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.209059622 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.298651903 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.207779385 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.208879589 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208535265 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.865134436 seconds)
    (96/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.209849286 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.734148579 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.405195724 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.211424272 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.856142615 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.213494794 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.035813314 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.723185917 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.801851378 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.21552249 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313969302 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.378050614 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.222474933 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.207712388 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.40531094 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.215659222 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.268499292 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.210028015 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.607836824 seconds)
  done (took 373.001379277 seconds)
done (took 598.742244729 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.097414448 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.044549792 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.184066296 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.053385032 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.042589964 seconds)
  done (took 11.528304347 seconds)
done (took 12.637927285 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.39086528 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.398605962 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271326616 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.40094046 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.24467585 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.41127219 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377478704 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.233935247 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.314304646 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.290591627 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.330415958 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265934525 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244339213 seconds)
  done (took 18.283490468 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.490945251 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.229893218 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283448338 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.496270628 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.263302885 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.482855426 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.518376137 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.228291989 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.365781589 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235389767 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.233068945 seconds)
  done (took 17.940995022 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.485229755 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.229969113 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.285439805 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.479512951 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264879835 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.483152628 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.522663232 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.230139936 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.367460279 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235615146 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234967241 seconds)
  done (took 17.930940901 seconds)
done (took 55.264158815 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249195859 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.309247438 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.242510368 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.230099322 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.22735694 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.229936636 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.232240131 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.231792131 seconds)
  done (took 11.061830914 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227972408 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.228813785 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.228942809 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.225663831 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.227897012 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.228972946 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.226871726 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.229680793 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.228156991 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.225143194 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.22804936 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.231468747 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.225958522 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.228183937 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.224469463 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.225382882 seconds)
  done (took 20.753046106 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.231745356 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.229537981 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.229248144 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.226492902 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.225883727 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.224342777 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.229804167 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.227801702 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.226104373 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.228261745 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.226900346 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.223211092 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.228248476 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.226311961 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.227882142 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.227643729 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.230081676 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.225887176 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.238039577 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.229571238 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.226079988 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.231430822 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.230874707 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.225830222 seconds)
  done (took 30.587271455 seconds)
done (took 63.514484487 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.210434106 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.21937491 seconds)
  done (took 5.540680234 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.287341492 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.286899811 seconds)
  done (took 3.686537552 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.229487478 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.232334028 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.228126849 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.227961958 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.227525536 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.225405885 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.23138028 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.227580302 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228475564 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.229334698 seconds)
  done (took 13.396759162 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.232107983 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.226687981 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.227495507 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.228094312 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.229789757 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.22998684 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.229918323 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.232303428 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.228958805 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.229508496 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.229549394 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.228222472 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.229005705 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.227449602 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.229958255 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.231233162 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.228518933 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.227644698 seconds)
  done (took 23.239497264 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.2435957 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.24825064 seconds)
  done (took 3.605389769 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.360031381 seconds)
    (2/7) benchmarking "second"...
    done (took 1.271519095 seconds)
    (3/7) benchmarking "month"...
    done (took 1.335185759 seconds)
    (4/7) benchmarking "year"...
    done (took 1.324579768 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.27031478 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.251270199 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.272104684 seconds)
  done (took 10.19673969 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.227575979 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.439832106 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.55702632 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.839000706 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.232547298 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.233089762 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.114615016 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.235072818 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.236636072 seconds)
  done (took 14.230416135 seconds)
done (took 75.005482183 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.228005812 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.276665404 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.244345891 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.235341588 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.525528659 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.256896035 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.220102396 seconds)
done (took 16.101342415 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.201235131 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.200789022 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.212384726 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.222599984 seconds)
  done (took 9.944459092 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.190528379 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544710219 seconds)
  done (took 4.846078963 seconds)
done (took 15.905258713 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230316922 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.230243186 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.229908352 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.231326328 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228312167 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.232730469 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.229015726 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.232549461 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.23148256 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.230967692 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.230068655 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.231098387 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229293503 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231367547 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.229153736 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.229830087 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.230062434 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.231091645 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229300734 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.235456482 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23168425 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.228263703 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.229877836 seconds)
    (24/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.228710193 seconds)
  done (took 30.644415161 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.231165748 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.226210522 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.230446245 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.228239411 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.228614707 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.230658081 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.226668182 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227217023 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.22874428 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.22789887 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.227277446 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.230823358 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.230247922 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.229771969 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230164106 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.230300389 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.229415867 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228932237 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228372289 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.232061887 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.232343277 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230843223 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.228981992 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23388038 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.230574167 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229749562 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.232194072 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.231610419 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228779841 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.2320666 seconds)
  done (took 38.002341445 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.232492851 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.230866071 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.23099984 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.227700585 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.229978258 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.229899128 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.22925718 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.230464261 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.230736552 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.232663161 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.229750803 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.225896359 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.232050199 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.232486324 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.230742511 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.232406032 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.230506743 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.226306979 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.23436371 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.226868419 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.23051296 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.228358969 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.227967556 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.228334489 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.231044595 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.228078761 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.228534651 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.228594173 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.22904059 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.228675079 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.229516618 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.231836712 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.23091669 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228732576 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.228876483 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.228386385 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.229364298 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.23007259 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230020528 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.231788191 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.234858712 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.229011816 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.229325394 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.229678364 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.22748275 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.23121369 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.234547325 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.23067262 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.233413305 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.230099291 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.229422187 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.234706671 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.230475579 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.2328408 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.228251627 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.23155874 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.231065973 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.230952025 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.231656305 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.231053146 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.228554401 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.232917433 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.230975371 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.230815121 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.229997857 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.23341681 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.23670586 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.230855928 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.235418147 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231187865 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.232996879 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.230999156 seconds)
  done (took 89.714003187 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.230676521 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.233356958 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.22889067 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.231275024 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233425466 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230624202 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.230083781 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232992705 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231972562 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.23083956 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230077556 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.231446608 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233891836 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22976388 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232344191 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.235050135 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.232101394 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.231675492 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.232920177 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.231242153 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231115399 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232197834 seconds)
  done (took 28.207238023 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232088032 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.231952907 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.229286261 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234014715 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.23370524 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233232517 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.229284213 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233417719 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230457329 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.234109158 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231787302 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232362089 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234079946 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232548349 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237240839 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235781722 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232481292 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233093214 seconds)
  done (took 23.301175648 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.232427683 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.232497802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.231971006 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.232946713 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.230320448 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232406202 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233644468 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230525207 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.233335436 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231412512 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.232097602 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236044067 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.232886841 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231292808 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23161187 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23329064 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232680678 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232749041 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.230670241 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233035714 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.231369911 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.233402994 seconds)
  done (took 28.221539038 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230904632 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.230582787 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230580046 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.233296859 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229998249 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.23363466 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233197161 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.232599899 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.233275252 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.23272114 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.233130538 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.231035962 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.232934423 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.234850517 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.230697658 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233888609 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.235159927 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232778073 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.233469981 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.233850192 seconds)
  done (took 25.762498344 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235358506 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234755827 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.232567907 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235323912 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232625011 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.232328419 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.234043957 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.233926337 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.236821923 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23382398 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.233590668 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.236592615 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235286181 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23361564 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231686386 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.232282665 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235940656 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.233677565 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2339085 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.232345179 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.236855918 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.235208571 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234121241 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.234845143 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.241157132 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.236011964 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.236214314 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.233514389 seconds)
  done (took 35.680457816 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.237270076 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.238439283 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.232072066 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.239190513 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237401426 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.234053367 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.234509599 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.236181865 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.236146272 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.234227679 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235319078 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.235945925 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.233774823 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.233986604 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.236598727 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.233994999 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235847761 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.237881756 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23419857 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23478354 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.23553244 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23479899 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.234675685 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.234170926 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.235254977 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.234261387 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.236117948 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.235921263 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.238707864 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236057938 seconds)
  done (took 38.181849874 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.254781729 seconds)
    (2/2) benchmarking "in"...
    done (took 1.252599054 seconds)
  done (took 3.617436294 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.235640215 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234162987 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.236740266 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.236084878 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.23401894 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.2366533 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.23504292 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.234676114 seconds)
  done (took 10.995287629 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.230944362 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.237420385 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.240840185 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.234652711 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.235089093 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.229109806 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23873817 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24339272 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.231015881 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.229905502 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.228187747 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.228256053 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.232804467 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.228065241 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.227562678 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.23232174 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.235499905 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.235079071 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.237897388 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238698332 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239279742 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.233058213 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.238817456 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.241799208 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.23313275 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.236187718 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.237212221 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.246900395 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229057869 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238623994 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.23472336 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.240631654 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.238626571 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.240144437 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.243857254 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.241531256 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.243431423 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.236938149 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.239787152 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.243300488 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.237368731 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.236248547 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.235396837 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.237487278 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242134289 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.241900027 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.243006286 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.240300891 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.229368579 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.235049012 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24117528 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.231355452 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.240110366 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238210965 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.238500023 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.241755824 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246155664 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.233038972 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.2368517 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.237354265 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.250743632 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.241730756 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237490136 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.245359474 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.236452533 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.240218507 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246374307 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.246729687 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.241044639 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240875851 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.239082096 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.252263588 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.241383075 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.249639469 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248282472 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.238598812 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.232010971 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241307178 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.239938581 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.242996032 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.246177341 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241758617 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.241950198 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.23670852 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.235817038 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.245890639 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.245123999 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.245355841 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.232357689 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241535992 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.251307699 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.241349211 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.239267782 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.235130093 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.236767134 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.246378198 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.23321272 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.240215013 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.247182807 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.245227614 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241025035 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23837863 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.240840139 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24729194 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.244186614 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.243569074 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.247221873 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235288142 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.248020586 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.247422508 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245548246 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.236024903 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.239390588 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.244769572 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237801031 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.238266971 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.251322104 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.239037095 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.249015075 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243487537 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.242977678 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.248572365 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.251708336 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.244374781 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.238297687 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.246041088 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244174747 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.242261157 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.249335989 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.244413913 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.247155194 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.240515659 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.246329924 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.239496828 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247035637 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238556098 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.24610887 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.24189171 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.242627817 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.240610179 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245435219 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243812776 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.243114235 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.247265189 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.247921869 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.241653891 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.253587177 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.244624608 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.240842942 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.246567081 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.250310412 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245541318 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.238459443 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245650384 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.237168456 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247780552 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.239518394 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24806517 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250177375 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.245014991 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247086667 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.238108705 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.239442083 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.247239298 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.241989983 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.245947165 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.252074244 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.24465055 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.246292146 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.238934072 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.250033526 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.239070245 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.241818696 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.253516464 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245788285 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246706827 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243908872 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251468284 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.248226396 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247263864 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.240066565 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.244285673 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.253255367 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25007825 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.252489421 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.249566921 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.248638125 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240604452 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.241919978 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247754285 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.241003673 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255594961 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253306257 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253994731 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.243445082 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.252383037 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.242321309 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250699571 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.247574356 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.255730411 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.247430154 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248677337 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241204194 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251688785 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.241696001 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.250315198 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.240264476 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.252867754 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.249502951 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.253306573 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249354751 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.246751641 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246930557 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.251275326 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.2495417 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248189294 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.241942709 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251078659 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.242281855 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.245188672 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.253663458 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.251116236 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.249619889 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.255183012 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248667911 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.25403395 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248993139 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.242174081 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.253121926 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250426051 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.255867616 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.255887892 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.25219022 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.246745465 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255741483 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.251344042 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.244889816 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.255888208 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.257367674 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.250271512 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.243097203 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.251705829 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.25072195 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.250373384 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.252023133 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242892856 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.253313322 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250480302 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26040745 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.245009014 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.253861118 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.245502648 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.256005479 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.247731578 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.253641096 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.252615579 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257422505 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.262351721 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.250947515 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.244804279 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.256095596 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251262412 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.253800738 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.243665064 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.255946361 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.253636726 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.250085882 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.24807238 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.247901146 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.25205856 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245541308 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.253652213 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247160592 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260050286 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.265968088 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254232752 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.256579826 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.260773115 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258797726 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.256590027 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247188444 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247029018 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252236551 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.247703071 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.24586384 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.256789523 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.244408839 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.256219162 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.252745149 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.25449408 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.2546511 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.254123052 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252749863 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.255504229 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.255883168 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.253425326 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.249756505 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.254642369 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.252151219 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.255545501 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.254422447 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.253482887 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265286224 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.25836972 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.252702142 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.256300901 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.252415205 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.246007512 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.25265162 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.261538364 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.248539639 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.262158117 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.247895125 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.25315739 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.248938834 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260467589 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.26722657 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.248580461 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257950536 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.258454117 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.247098721 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.251723473 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.259171375 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260612297 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.264864527 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251082691 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.257845838 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.258596866 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.259280372 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.255603251 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.258582155 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.261484255 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.259134113 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260750482 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.261616993 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.256654493 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259712512 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.26574871 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.260507594 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.256524189 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.251642389 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256122883 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.2689741 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.255735501 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.26001905 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.256337872 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.260358381 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.258035772 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.261304885 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262007878 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.25732316 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.265030748 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.264793028 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259065576 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.259065199 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.263483917 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.267301456 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.263147012 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268398552 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.254238198 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.266063276 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.262590783 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.25450632 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.255546358 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253909378 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.264143708 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.251507225 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.264290477 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.260197564 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.257327285 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.26001601 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.267706427 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.258473472 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255157731 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268265944 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.253959251 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.25983839 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264502612 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25838981 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.259174672 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.264558649 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257347216 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.255489849 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.257521918 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.260833418 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.252990121 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.264045511 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257226733 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.260153832 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.261857685 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.259524901 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.260722877 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.262408555 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.251575477 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.265307499 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261349251 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.268413881 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.256004135 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.258465817 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.254497326 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.265094569 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.269703233 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.254437078 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.267130537 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.263397841 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.255518317 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.259706891 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.265234306 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.256244027 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.264477217 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.251731752 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.256737634 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.253300803 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.263993444 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.262467103 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.263619193 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.251123636 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.255292686 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.266210601 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.263051086 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266692223 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.258728612 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.267664085 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.255681419 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.256076599 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.267806599 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.260306078 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270178051 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259983184 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.263624011 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.264350202 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.269206597 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.26497285 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.268818871 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.242251851 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.244316637 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.253914427 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.252161678 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.250344623 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.248387327 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.25191585 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.249487495 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.245675386 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.245866737 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.244363775 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.245767406 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.24851632 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.242943633 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.244909031 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.24028121 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244153202 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.247376907 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.242436697 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.239385129 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251722282 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.251468016 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.249730286 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.237983946 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.236200319 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.236871743 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.245460086 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.242888908 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.235634645 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.24942606 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.250339448 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247420742 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.236020645 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.236498604 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.229062036 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.240254897 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232527785 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.232310951 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.243115107 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.232653001 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.239625923 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.232752319 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.235085773 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.223146779 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.225638623 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.225824456 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.227951236 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.232433367 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.229264348 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.227499298 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.229731479 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.236808177 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.231785327 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.228512495 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.228748071 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.222690232 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.234806315 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.224211811 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.229226883 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.229562957 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.224880501 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.229895684 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.228910284 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.224330602 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.228587858 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.232744177 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.22752896 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.224637182 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.226639051 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.235104657 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.241132984 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.23215552 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222651736 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.22417883 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.229818651 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.2301067 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.228135024 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.226706831 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.232760499 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.242275358 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.221330529 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.2189372 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.224106103 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.23734288 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.22564207 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.224394527 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.220779041 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.224461795 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.228351001 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.218236421 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.22810968 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.222000176 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.215590135 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.223223538 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.212346505 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.214928687 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.221349144 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.224693541 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.214352483 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.212379759 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.222963085 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.226259273 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.212384197 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.229616875 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.223058494 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.215773337 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.226515319 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.205456638 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.215871836 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.212198422 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.223363313 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.215442917 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.22256279 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.215334904 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.211231345 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.219334927 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.226009501 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.229207632 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.221713921 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.210497489 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.211529871 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.223937145 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.216316305 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.217986433 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.216412033 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.21675948 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.219148554 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.213779628 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.226448131 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.234332553 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.222357997 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.213677227 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.217690639 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.217524014 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.221040846 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.213517473 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.21642094 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.215888081 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.217284209 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.213962878 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.226120667 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.218257729 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.209645263 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.211727218 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.213808693 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.22126151 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.224771729 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.232543469 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.216973835 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.219375553 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.217080742 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.214171576 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.208954456 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.218400007 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.214679499 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.205784598 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.209177599 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.215935443 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.213024346 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.212122235 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.206714788 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.215366925 seconds)
  done (took 742.307227927 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.211817708 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.211942099 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.213041284 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.213979409 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.213240289 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213230453 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.211532959 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.214489379 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.212697424 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213187868 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.213423951 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21301705 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.213440729 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.21442241 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.214214371 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213564578 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.214622956 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.213774852 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.21336413 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.213163633 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.214509558 seconds)
  done (took 26.58208221 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.214033271 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.212966796 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.215076257 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.213391119 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.21431797 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.2146347 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.214512171 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.212977644 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.214666919 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.213292641 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.215194508 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215606068 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.213952488 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.214565793 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214926257 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214130678 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.216023925 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215234479 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.213237663 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.216074709 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.216005734 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215725461 seconds)
  done (took 27.821877708 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.217290702 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.215629798 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.208503459 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.219447895 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.215480191 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.215585801 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.216075454 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.216790603 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.216124214 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.209712859 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.210277127 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.210324538 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.210973634 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.21948463 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.211965764 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.219865062 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.218431427 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.216496403 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.216687463 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.215202156 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.220585404 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.229209756 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.216858683 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.208448619 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.220023203 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.215701523 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.217989839 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.217880076 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.208661062 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.220106402 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.218648729 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.209755892 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.220702657 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.218912566 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.21258114 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.220209931 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.218791711 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.218904922 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.2173052 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.216297163 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.22647946 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.218848877 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.222105067 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.230890588 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.218008043 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.21274602 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.221258119 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.218664903 seconds)
  done (took 59.520464608 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.218908331 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.220092048 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.217876558 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.217986118 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.219201679 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.218171567 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.218815498 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.219087025 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.219817486 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.21908299 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.219232326 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.218678188 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.219927243 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.218061166 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.219544773 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.218005706 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.218812431 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.219022762 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.220191901 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.217760146 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.220227175 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.218930024 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.219396347 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.21959371 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.219596622 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.219748244 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.220354625 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.220522667 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.220470567 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.219223163 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.220662634 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.220255985 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.220966193 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.220322537 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.220147837 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.220896906 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.221391866 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.22200089 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.221162219 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.221178123 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.22046343 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.221596699 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.222944083 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.220545353 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.219873616 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.220656973 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.220550053 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.219550896 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.221743241 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.221951008 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.221175584 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.222151571 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.222109486 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.222076331 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.220718813 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.221404626 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.220734985 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.22197295 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.221178432 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.22137647 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.223606553 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.221751839 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.221198293 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.218901854 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.217791672 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.218828219 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.219051151 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.218185387 seconds)
  done (took 84.077263486 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.218463003 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.218598314 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.216187831 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.216135316 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.215741729 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.215686932 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.215139561 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.215460029 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.215791677 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.217093894 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.211821434 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.212905353 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.213304296 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.213880812 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.213492979 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.213708969 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.213956363 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214389728 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.213724136 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211751275 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.211818192 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.213281287 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.211617722 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.213383673 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.213676895 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.213166025 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.213204519 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.212618713 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.212589648 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.212565317 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.214322735 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.212552578 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.212636238 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.212307453 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.213952895 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.212180831 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.213366794 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.213296181 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.213263596 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.214276521 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.213601025 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.214511346 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.213164942 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.213052518 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214453076 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.21354102 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.213146994 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.214963011 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.213957539 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.213113816 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.214812612 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.214674629 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.214224071 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.215016555 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.215263162 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.214834982 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.215511158 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.215132536 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.215745556 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.218327002 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.214017246 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.213871795 seconds)
  done (took 76.382752135 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21489129 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.213053232 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.214868171 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.215174585 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.215633235 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.214873585 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.213919587 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.214824861 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.215054486 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.21463687 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2156609 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.215801489 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215671054 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215417321 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215013188 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215823809 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.214792141 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.214744384 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.21505891 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214837531 seconds)
  done (took 25.401768349 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.216257316 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.215440057 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.216174855 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.215146164 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.216044871 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.217592776 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.21840776 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217030551 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216235344 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216004119 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217970285 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.215505418 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214908062 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216148315 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.217142172 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.216300628 seconds)
  done (took 20.564312592 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.216751061 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.217226145 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.21689777 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.217353311 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.217580102 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.218064238 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.216784148 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.216674191 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.217538753 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.217855038 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.216809541 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.218190193 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.21754236 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.217549032 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.216079812 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.218278894 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.218073402 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.216733656 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.217923435 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.217497068 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.218796405 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.218103613 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.218613821 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.218233879 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.218865645 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.218161377 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.21799354 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.217261108 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.218529831 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.219253173 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.219138832 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.217248588 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.218679277 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.218593489 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.218903123 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.218993292 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.218759102 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.217101155 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.220144036 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.218214994 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.218869561 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.219104258 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.217907319 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.218971788 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.220092096 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.219770688 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.219077056 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.220255113 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.218953487 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.218311017 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.220496951 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.219248627 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.219305191 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.220295751 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.219366015 seconds)
  done (took 68.112322474 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219847238 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.220114847 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.219672363 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.220145184 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.219539794 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.218143494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.220356054 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.221824221 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220137654 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.219914713 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.220540822 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.222855189 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220367295 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219808055 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.220436587 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.219803842 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.220634484 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.220917873 seconds)
  done (took 23.072249167 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.222313332 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.221633493 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.221084138 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.22137165 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.219894289 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.221859399 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220219241 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.221210052 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222159583 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.221743887 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221495212 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.221946019 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222238204 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.223647039 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.220540418 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221760537 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.221859617 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.221846199 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.221462504 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222110088 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.222544209 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.221835284 seconds)
  done (took 27.984617872 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.211924385 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.21259818 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.211786039 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.226688788 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.222574382 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.211793672 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.212152228 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.213409304 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.228382241 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.23597675 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.232984284 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.221491098 seconds)
  done (took 15.750482216 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22470355 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22503357 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.223837532 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224223644 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.222554601 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223479393 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224718345 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.221938364 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223318728 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224415623 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224315005 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.222868123 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22359012 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224555742 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.223647008 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225706036 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225451806 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22447034 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223638794 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224168701 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.223038862 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224314267 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.224023738 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2246172 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.223889505 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.222750419 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.225758244 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225076028 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.226000329 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.223718849 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.224538073 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224055747 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224636177 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224657618 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.224158798 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.227073158 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22632526 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.224926354 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225286338 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226684368 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.225086076 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.226495623 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227024247 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.224730936 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227024493 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225720985 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225729179 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.224812076 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226290274 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227142265 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.225315142 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.225541207 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.22661927 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.225932867 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228503865 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226301086 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.226201038 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.22655221 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22653793 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.228394533 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22700038 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.22666994 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.225804917 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.226874237 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.226712746 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227626885 seconds)
  done (took 81.974130156 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227950904 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.226588402 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.225684958 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226846202 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227152528 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228103656 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227121809 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.227117659 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227752773 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226642104 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.227838688 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227836516 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.227813928 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227438904 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227230926 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227867465 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22733081 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.226805098 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227341274 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.226880757 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228419682 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230040354 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228327667 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22794846 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.227155243 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.229443037 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.22843735 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.22827601 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229400194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228808359 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.227159389 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228984921 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.228640457 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.228221568 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.228870462 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229180428 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230254335 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.228865674 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.22973386 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.231055578 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230905785 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.228725844 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.231317441 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.229166291 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.229820783 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.22905325 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229941104 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230583471 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.230193862 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.23036517 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.229661516 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.230512444 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.23080767 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.231564957 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.232128242 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.230504124 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.229638597 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.230948321 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.229529444 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231361207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.23147571 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.230866446 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.231368587 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.230607059 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.231211813 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.231182566 seconds)
  done (took 82.231007552 seconds)
done (took 1715.227453528 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.385701497 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.341718114 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.222610487 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.23156663 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.222279567 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.226401131 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.234501695 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.22129181 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.222597833 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.222280512 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.221680527 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.412648774 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.258174072 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.223190078 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.221896984 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.317506452 seconds)
  done (took 25.303731095 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.245387563 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.236929299 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.336784649 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.23928148 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.257022129 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.40747245 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.292350749 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.237885529 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.386765874 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.25047994 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.228239887 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.255710776 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.236332091 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.227162389 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.25142935 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.407585182 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.482016578 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.232740241 seconds)
  done (took 27.32905161 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.636522324 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.228105499 seconds)
  done (took 4.990317964 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.25408914 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.235599341 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.236925971 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.235221717 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.226383744 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.229463323 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.23675869 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.235992988 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.239645361 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.353033132 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.241440993 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.250030688 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.236094146 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.23602421 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.2444262 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.279483723 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.400581719 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.244882564 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.242890484 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.242970758 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.235930545 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.327246495 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.276827597 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.250786911 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.349220811 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.234998978 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.241833538 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.245147736 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.353189492 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.246759202 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.236808616 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.236132903 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.238797531 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.132181478 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.768108945 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.231246976 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.25996812 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.245490545 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.245021728 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.383578922 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.239103645 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.24448869 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.231552458 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.75597952 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.335565366 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.353158599 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.235242013 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.24378816 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.240771888 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.299350059 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.239871936 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.238502487 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.294505657 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.02076813 seconds)
  done (took 79.941974177 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.276458494 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.229991911 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.413359037 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.25473562 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.232229019 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.236519109 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.236927585 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.491707504 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.2432401 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.233484254 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.543366718 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.830398523 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.238710255 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.298792844 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.272750317 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.296339987 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.234297492 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.232815291 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.23607314 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.232189773 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782785926 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.238681548 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.237067841 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.3188412 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.272866131 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.748864615 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.237014488 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.233427749 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.254052009 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.235551712 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.798562547 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.250499438 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.289603731 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.235036403 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.510453088 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.606810572 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.565673761 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.244408857 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.249754297 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.238464624 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.257171966 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.740314399 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.59026609 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.23816232 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.233657532 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.737963226 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.23917819 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.237745861 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.236906288 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.50161531 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.23345438 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.234579844 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.243006289 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.240136449 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.23425614 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.293882982 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.289086337 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.754217992 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239330119 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.234820431 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.281800523 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.235235918 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.245212447 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.242098075 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.236190939 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.588066912 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.465952294 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.242205678 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.585863657 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.794501736 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.246347982 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.869938484 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.24128846 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.247091474 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.265684665 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.236729358 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.253293693 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.752104489 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.281936118 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.237816707 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.564690888 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.243571471 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.532646551 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.257446243 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.237763527 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.803647097 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.253279631 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.281845738 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.237344065 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.246390115 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.242110195 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.241852026 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.51767417 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.276928256 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.237245602 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.237598997 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.260831508 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.237320973 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.257289557 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.238836003 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.867223119 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.243215718 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.251472536 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.240150474 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.238239535 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.243138462 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.238879231 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.240052152 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.51860163 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.241060974 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.260684481 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.240782611 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.239828147 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.244352062 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.315722714 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.246164931 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.523976339 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.24261284 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.238586294 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.243207061 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.250537721 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.24966572 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.240542946 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.254735372 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.233609545 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.539781531 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.258797279 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.255660165 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.241780111 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.240497905 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.244395505 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.245306904 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.295030373 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.243956776 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.020281015 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.283124975 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.24007443 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.240572325 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.251977799 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.251247228 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.24966869 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.241452606 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.53632411 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.522419556 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.465540148 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.246167199 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.240998811 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.032988553 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.28175823 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.423057097 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.25618353 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.241108992 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519207548 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.454830411 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.243725997 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.241701724 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.245214747 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.523632105 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.247889224 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.552362165 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.826128348 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.241957097 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.253611798 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.015215216 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.041709556 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.247090258 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.241956281 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.532170473 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.260299171 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.242700467 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.243065163 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.243719228 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.24214915 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.247957365 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.250759671 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.242602004 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.242408972 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.585608112 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436012315 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.258509362 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.24510456 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.754740632 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.266254567 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.244310284 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.251200919 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.245598006 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.243134185 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.294864052 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.24760842 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.274875331 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.244838767 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.248855013 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.780280166 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.24523669 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.245478332 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436713876 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.964200828 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.247854385 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.244940733 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.245653982 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.303388033 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.789281697 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.268067069 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.530343714 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.244739502 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.284355183 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.244861639 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.264861067 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786664578 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.251493274 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.244824632 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.978458348 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.24852956 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.678069382 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.248282914 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.248812246 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.882614479 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.250066407 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.248886441 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.24554178 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.247762369 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.564036317 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.246020612 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.299386207 seconds)
  done (took 477.347937824 seconds)
done (took 616.028813373 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.246066622 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.245026382 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.251611665 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.249927755 seconds)
  done (took 10.135246962 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.264728402 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.253257335 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.261937086 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.251806738 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.265704056 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.252179942 seconds)
  done (took 8.690471561 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.24577707 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.247477599 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.253025464 seconds)
  done (took 7.888922386 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.451109445 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.266343148 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.582904364 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.252981512 seconds)
  done (took 8.69530117 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.263265516 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.262761006 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.261576464 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.264001324 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.264775463 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.265121562 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.266066188 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.264129085 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.265168207 seconds)
  done (took 12.517571218 seconds)
done (took 49.070385744 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.399314379 seconds)
    (2/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.316206443 seconds)
    (3/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.348514802 seconds)
    (4/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.284502542 seconds)
    (5/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.465972139 seconds)
    (6/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.278145842 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.315341491 seconds)
    (8/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.313494718 seconds)
    (9/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.283674539 seconds)
    (10/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.277649864 seconds)
    (11/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.323452841 seconds)
    (12/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.362153629 seconds)
    (13/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.291830828 seconds)
    (14/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.37100425 seconds)
    (15/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.240867286 seconds)
    (16/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.651817994 seconds)
    (17/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.254048711 seconds)
    (18/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.235522657 seconds)
    (19/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.540380753 seconds)
    (20/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.365465949 seconds)
    (21/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.466732791 seconds)
    (22/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.419553123 seconds)
    (23/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.292710345 seconds)
    (24/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.329580056 seconds)
    (25/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.400568047 seconds)
    (26/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.585709027 seconds)
    (27/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.350540795 seconds)
    (28/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.236787607 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.346605354 seconds)
    (30/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.244751967 seconds)
    (31/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.228346879 seconds)
    (32/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.320951924 seconds)
    (33/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.252108604 seconds)
    (34/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.300142902 seconds)
    (35/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.425572188 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.340939116 seconds)
    (37/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.228227094 seconds)
    (38/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.395775184 seconds)
    (39/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.353852119 seconds)
    (40/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.406965682 seconds)
    (41/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.37080804 seconds)
    (42/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.230755681 seconds)
    (43/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.341826763 seconds)
    (44/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.369279492 seconds)
    (45/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.260415521 seconds)
    (46/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.230704736 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.378282801 seconds)
    (48/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.407991729 seconds)
    (49/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.485696653 seconds)
    (50/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.659151858 seconds)
    (51/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.459118999 seconds)
    (52/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.279484392 seconds)
    (53/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.357773673 seconds)
    (54/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.315921777 seconds)
    (55/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.434737959 seconds)
    (56/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.236465502 seconds)
    (57/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.291606318 seconds)
    (58/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.367704917 seconds)
    (59/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.475332466 seconds)
    (60/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.492983561 seconds)
    (61/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.513005667 seconds)
    (62/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.331397944 seconds)
    (63/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.491364211 seconds)
    (64/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.289735934 seconds)
    (65/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.45313835 seconds)
    (66/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.327151204 seconds)
    (67/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.588623259 seconds)
    (68/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.358632326 seconds)
    (69/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.479708149 seconds)
    (70/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.435080343 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.259105038 seconds)
    (72/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.297394354 seconds)
    (73/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.23232444 seconds)
    (74/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.249986161 seconds)
    (75/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.233320661 seconds)
    (76/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.27879974 seconds)
    (77/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.413039387 seconds)
    (78/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.406668004 seconds)
    (79/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.33919569 seconds)
    (80/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.249103433 seconds)
    (81/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.25954989 seconds)
    (82/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.23279793 seconds)
    (83/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.437481666 seconds)
    (84/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.35625433 seconds)
    (85/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.288806757 seconds)
    (86/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.498727155 seconds)
    (87/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.372701655 seconds)
    (88/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.349609519 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.382917881 seconds)
    (90/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.406904824 seconds)
    (91/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.490329073 seconds)
    (92/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.247833093 seconds)
    (93/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.371254952 seconds)
    (94/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.342520571 seconds)
    (95/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.39640018 seconds)
    (96/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.366558634 seconds)
    (97/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.3668941 seconds)
    (98/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.340696968 seconds)
    (99/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.356834001 seconds)
    (100/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.405311765 seconds)
    (101/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.253477106 seconds)
    (102/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.339844154 seconds)
    (103/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.422627576 seconds)
    (104/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.416730259 seconds)
    (105/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.301650271 seconds)
    (106/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.472190599 seconds)
    (107/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.341940536 seconds)
    (108/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.372344343 seconds)
    (109/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.294356294 seconds)
    (110/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.403332874 seconds)
    (111/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.344639952 seconds)
    (112/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.406205382 seconds)
    (113/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.494426169 seconds)
    (114/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.27437395 seconds)
    (115/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.289271956 seconds)
    (116/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.328843679 seconds)
    (117/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.317266436 seconds)
    (118/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.26392419 seconds)
    (119/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.374986516 seconds)
    (120/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.240074726 seconds)
    (121/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.492226657 seconds)
    (122/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.338498892 seconds)
    (123/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.46022634 seconds)
    (124/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.506624305 seconds)
    (125/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.338705148 seconds)
    (126/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.486681733 seconds)
    (127/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.23925584 seconds)
    (128/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.308610503 seconds)
    (129/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.385299629 seconds)
    (130/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.335348429 seconds)
    (131/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.471562949 seconds)
    (132/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.240539589 seconds)
    (133/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.237981113 seconds)
    (134/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.248449144 seconds)
    (135/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.364708457 seconds)
    (136/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.29890317 seconds)
    (137/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.235550178 seconds)
    (138/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.248459432 seconds)
    (139/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.292809715 seconds)
    (140/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.340285775 seconds)
    (141/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.237156854 seconds)
    (142/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.237558423 seconds)
    (143/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.383040086 seconds)
    (144/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.33572371 seconds)
    (145/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.263245918 seconds)
    (146/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.391362921 seconds)
    (147/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.34893328 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.394953023 seconds)
    (149/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.240169429 seconds)
    (150/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.261223454 seconds)
    (151/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.376633824 seconds)
    (152/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.428880848 seconds)
    (153/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.238143691 seconds)
    (154/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.328477663 seconds)
    (155/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.54207164 seconds)
    (156/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.495796533 seconds)
    (157/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.559453521 seconds)
    (158/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.420419128 seconds)
    (159/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.465683555 seconds)
    (160/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.368870668 seconds)
    (161/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.411499091 seconds)
    (162/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.55570098 seconds)
    (163/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.405288181 seconds)
    (164/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.241658869 seconds)
    (165/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.237903784 seconds)
    (166/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.255989741 seconds)
    (167/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.437413301 seconds)
    (168/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.416089195 seconds)
    (169/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.32388598 seconds)
    (170/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.238292921 seconds)
    (171/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.271270747 seconds)
    (172/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.305704908 seconds)
    (173/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.36867585 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.494198309 seconds)
    (175/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.355909243 seconds)
    (176/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.390572477 seconds)
    (177/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.414988388 seconds)
    (178/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.290867695 seconds)
    (179/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.293339179 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.465938014 seconds)
    (181/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.28554053 seconds)
    (182/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.288533508 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.368962071 seconds)
    (184/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.3263243 seconds)
    (185/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.261539242 seconds)
    (186/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.298711175 seconds)
    (187/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.548890991 seconds)
    (188/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.536094325 seconds)
    (189/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.420839933 seconds)
    (190/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.331825648 seconds)
    (191/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.243884074 seconds)
    (192/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.347862333 seconds)
  done (took 309.519902442 seconds)
done (took 310.664040995 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290476367 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.357749006 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.268780991 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.268775888 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.269554208 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.253286199 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.289890379 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.269809185 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.283180974 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.283167321 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.253825768 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.27878957 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.285030704 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.281332793 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.304703136 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.26931254 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.269601905 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.280086802 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.28611237 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.285007843 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271384651 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.27070351 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.297282341 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.270422782 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.278459236 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.278524079 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.276585567 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.269795238 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.282745789 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.286768962 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.262643768 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.283659869 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.287913749 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.282429387 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.272213929 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.283620065 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.271845949 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.35942162 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.292044359 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.282138579 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.27991622 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.288940679 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.276368136 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.27775847 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.284629872 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.300219511 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.27921966 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.287103397 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.263067034 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.281481276 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.29854679 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.283768956 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.280939681 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.263779085 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.270278077 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.292343008 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.282900844 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.291971027 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.281219796 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.273865108 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.306578737 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.292937821 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.28420889 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.280385093 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.280564109 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.289427181 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.283046796 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.289217387 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.280425487 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.275379923 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276719997 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.28104282 seconds)
done (took 101.505593922 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.394872568 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.268744644 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.43052146 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.28199326 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.434546245 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.395377703 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.281098072 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.281915744 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.281689405 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.077325378 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.281412294 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.282096345 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.273010312 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.282692325 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.391840356 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.2809544 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.282496999 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.974840704 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.283951153 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.413924194 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.275037087 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.283151988 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.285059244 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.084226124 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.272251695 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.269887013 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.414595823 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.282685675 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.983357528 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.268220872 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.270964865 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.982178531 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.41455823 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.302111585 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.29283175 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.291834963 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.438735637 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.287658703 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.398111496 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.398832872 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.430466582 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.321628212 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.268957901 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.274962814 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.286675324 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.284889411 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.284167201 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.31268742 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.273869343 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.285840882 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.97923213 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.293079407 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.293718649 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.285181663 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.283913973 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.304182635 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.285116643 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.285083247 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.418779037 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.286167536 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.399653989 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.086662272 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.082158315 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.28451197 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.273803242 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.285862211 seconds)
  done (took 104.68249472 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.347072395 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.349272042 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.386899648 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.280033785 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.326738156 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.386100065 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.28255799 seconds)
  done (took 10.520436558 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.283030771 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.286558577 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.325608515 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325564286 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.287082732 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.448489814 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.286559515 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.287529067 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.2859298 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.328353182 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.289628031 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.287729244 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.296499467 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.276938593 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.324369416 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.289991421 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.397604399 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.28022126 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.290158889 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.430684606 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.286649634 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.297496555 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.329494993 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.289700651 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.289839733 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.285335603 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.061253056 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.288104835 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287900554 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.288731869 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.287567414 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.343846986 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.289296441 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.278956154 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.288567336 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.393986789 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.288783259 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.288307887 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.287890671 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.281940319 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.28906858 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.287938014 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.288639695 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.288558628 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.289297775 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.305416772 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.287850241 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.290037542 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.288042863 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.289093813 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.329193348 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.288718759 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.286552765 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.287289058 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.332843796 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.299020553 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.288659145 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.286711751 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.28794159 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.288922527 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.432379436 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.326974059 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.290686013 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329034079 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.289101285 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.288814011 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.28987401 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.289620229 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.369254802 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.28948756 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.328436294 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.289696453 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.462002785 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.304966284 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.29253354 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.285437883 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.283111611 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.291297337 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.27928287 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.287591651 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.290718815 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.284543072 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.288560099 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291186146 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.292428662 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.443095682 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.387821249 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.290812738 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.299605116 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.288458918 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.291742199 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.334388099 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.29044491 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.291177191 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333261197 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.40020456 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.333925092 seconds)
  done (took 132.8215972 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.294540266 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.296306 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.286979562 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.309352968 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.284419769 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.283239968 seconds)
  done (took 8.923351941 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.284546414 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.293475464 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.292656396 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.291483987 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.292701251 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.293030944 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.293256911 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285494646 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.296030728 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.29438683 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.295056871 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.294896353 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.2959343 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.294209991 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.29413442 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.293450147 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.292001531 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.295071952 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.293411995 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.293395906 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.280743702 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.295530298 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.294737226 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.287193107 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.299232143 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.293387689 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.309998218 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.294685672 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.29466189 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.293189571 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.297629134 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.297793946 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.287489432 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.290634951 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.297842834 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.287859064 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298502503 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.297177206 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.294866969 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.296449953 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.296644133 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.294971357 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.296900959 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.295665186 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.288505071 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.292374188 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.299885929 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.312337122 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.295372645 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.297510306 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.29718742 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.296117161 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.297688045 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.296631109 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.289875794 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291352289 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.299751318 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.297003279 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.296931869 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.29005973 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.299630357 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.298432433 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.290838282 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.299617954 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.296924272 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.298146031 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.28942996 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.299870829 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298595099 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.297430876 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.298513896 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.295912243 seconds)
  done (took 95.405578163 seconds)
done (took 353.512822545 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.657144884 seconds)
  done (took 3.829682274 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.545645203 seconds)
  done (took 3.720638617 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.827952215 seconds)
  done (took 22.248049241 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.290290472 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.291612776 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.294064755 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.291219809 seconds)
  done (took 10.33866409 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.545358219 seconds)
  done (took 3.719488965 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.294916669 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.296198574 seconds)
  done (took 5.768223105 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.435272402 seconds)
  done (took 3.611092333 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.489495684 seconds)
  done (took 3.665405819 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.31524164 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.300898891 seconds)
  done (took 5.800259532 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.265853951 seconds)
  done (took 3.44201006 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.18623845 seconds)
  done (took 20.362287932 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.306374701 seconds)
  done (took 3.483436535 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.316940834 seconds)
  done (took 3.491510304 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.704484994 seconds)
  done (took 5.880381601 seconds)
done (took 100.534476467 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.283817819 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.285160367 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.285786375 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.285588217 seconds)
  done (took 10.314944873 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.363561887 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.364002652 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.371481279 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.356713427 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.357937305 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.367032563 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.32545746 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.325921607 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.35494533 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.351299058 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.368242319 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.357015348 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.366130919 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.328717353 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.352712929 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.369751589 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.358698078 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.372636034 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.326629088 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.35922802 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.302963091 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.357998386 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.353342043 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.300699359 seconds)
  done (took 33.590252954 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.789123209 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.362822202 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.447054913 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.342444344 seconds)
  done (took 7.117875788 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.404985564 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.407293742 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.423323876 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.461258183 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.502661661 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.419923315 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.32871718 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.322994946 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.308445833 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.40773133 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.486692135 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.406163583 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.620460757 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.301602765 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.619566989 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.30191747 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.302200401 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.406797683 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.455857434 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.487092095 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.302804379 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.405696128 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.410916603 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.40712507 seconds)
  done (took 35.080594057 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.311712648 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.320576107 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.304463151 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.318758512 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.305507324 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.305003932 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.306748931 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.310110118 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.303594145 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.304755201 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.304823131 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.31945105 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.304062767 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.305648683 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.312146869 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.307234745 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.306157469 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.313179815 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.312909257 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.306808381 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.304637584 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.312256758 seconds)
  done (took 29.980444406 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.290572974 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.288653342 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.640202427 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.545726624 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.289709867 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.290863136 seconds)
  done (took 13.524806121 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.361930007 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.49490059 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.296934426 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.624842732 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.711087261 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.297595277 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.295832302 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.52825711 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.808319381 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.799329544 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.354102094 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.364469121 seconds)
  done (took 19.118381245 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.302738433 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.295859467 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.305888829 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.311159404 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.347339651 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.301437524 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.304385443 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.291979083 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.352273433 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.353900663 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.302505875 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.349582962 seconds)
  done (took 21.00083995 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381928413 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.302421941 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.309935802 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360576421 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300955529 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30119922 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.374793711 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974953479 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.307837068 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.577619997 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306968478 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.384878171 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549257274 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302823209 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30151535 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.246708526 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531613297 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.776311116 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309709714 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307319757 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332320991 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30651262 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30316108 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.496999018 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307268043 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.301443432 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.707855461 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.303522744 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567465899 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.544147826 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.544380421 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310817211 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578601654 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930099821 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.409163195 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.496028548 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315191577 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304607021 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.287088482 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.304295875 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307114289 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.30545991 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.540105496 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311945972 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.304737471 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.306319737 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993524555 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.312205934 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.30391429 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.30713623 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540734848 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392492367 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.310704383 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.304285268 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.347156744 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304101185 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.310896552 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424020991 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943582605 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305598404 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311495756 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.313604685 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317749535 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306932396 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922764888 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.315093335 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.314566929 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311948644 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304982959 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.306036758 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343818314 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.305888867 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.326564407 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306545896 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.04027899 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324751306 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310830062 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.831437939 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323775611 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.310968589 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.531248063 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305685429 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306045219 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.307300151 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307183889 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004289757 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.319009435 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.27623138 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.366560258 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.987217588 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.503861699 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.333211723 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.336778495 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52725732 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.276326713 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309546064 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.314168214 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309595268 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.32906589 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.994915114 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308240932 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.313061675 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554426953 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.519312785 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312109395 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.25595551 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.75764862 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314479081 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.337653339 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317334231 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.50805994 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.90839913 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55857531 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31862703 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346498454 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.310344369 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.065172014 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318143408 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.319050181 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.320029343 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.578330358 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.086764613 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314351987 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.381258645 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310897765 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.308884269 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321450207 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310662912 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.309219296 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.483357025 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322736797 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.550037286 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.316935956 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310057075 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.310844878 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345251675 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.312034342 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.532020281 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315530376 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.589310582 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310628804 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311948558 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311059197 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.52643097 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.309283087 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.318278428 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.650891591 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317341993 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323970383 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.554336222 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349914403 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42316495 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343465862 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.317042732 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.564667615 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.31767362 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.316996599 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321873251 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.314147588 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317374411 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.31985497 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313103363 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927920958 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293222124 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318235738 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.31279746 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.329467137 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.386034102 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.321138913 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510048052 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.324854498 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313366337 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.322704496 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.313222418 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552154427 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.552334549 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.320619499 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.48783925 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.763149034 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.907936251 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.333640896 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.313889118 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.315743729 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.314849283 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316124689 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312851019 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314401041 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511210977 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564245316 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.317063508 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.913131459 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320531787 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.319065048 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.321798502 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552088288 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.327866531 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31528684 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.327209055 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322132545 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320317738 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558572133 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541116021 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.330462742 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315164708 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.834682249 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324647825 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316247487 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315796699 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343217833 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.323087776 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.135205841 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654829287 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.312305963 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.552714859 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320971158 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.334240133 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.317883174 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321131091 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329859775 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.326994817 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325052943 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.512298285 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.321136955 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319051352 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.954717902 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069099619 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861157361 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321767686 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.328492167 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.320729708 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.006767123 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317302616 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316168175 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.55615821 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001000162 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317901187 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.768078386 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.317200849 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.048627063 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.560613378 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548171738 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316881946 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.318929214 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.560049464 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.5345222 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344125796 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.317693188 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323036137 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.288330666 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.843863436 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320185697 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498452334 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.005875071 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318705452 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.32147252 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.358532642 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.318276128 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.69327315 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317306167 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318569559 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.330243745 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325230676 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138045264 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.32453605 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319863384 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93893175 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.325943569 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.777506441 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31914132 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.516883226 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.562918487 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.540502276 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.332064184 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.325790094 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.562291766 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.558104435 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325025417 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33204854 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.865530675 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.178555598 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.326573598 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.320919922 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07311616 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32295015 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59049098 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.325874377 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.347880439 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329709821 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.321269409 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320889264 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.321770219 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32642811 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.293267776 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.788904801 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.321719963 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314212557 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330108064 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32679325 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.56791007 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.338001657 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.919155685 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.552539461 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31555175 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.35483333 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.326904024 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321251035 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.295018193 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.321754808 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322030835 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329465921 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.542997874 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.335298438 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.291643381 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.330106841 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.532331435 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322110299 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321942659 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.531760036 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.329108481 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.337576651 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.07855166 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.359791162 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.322736037 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324769553 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.337737371 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.361650866 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.395972071 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.52162646 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.570411752 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571154503 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707491304 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322940066 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.32658445 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.339979709 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.406107664 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323159171 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.342379667 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.322692956 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922585496 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079260686 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.935880626 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.571750823 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330990944 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335281043 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32495327 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567053143 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325888277 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.600536936 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325444273 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.337258882 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.346894863 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325002023 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353501517 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539978067 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.599347194 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326659956 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325657666 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332181886 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.325990175 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.574669675 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.543833556 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798216055 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85583268 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332696401 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.33520711 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.025039829 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.603246999 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329335073 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327835646 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327566735 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.328854867 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.347719942 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.334674275 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32668856 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551750283 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.56713305 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971897876 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.567932827 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.510801965 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.258901144 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328476204 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.574139983 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.160434453 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.525937726 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939113614 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.027907418 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584402364 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402701323 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526475651 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.336130576 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56436053 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.328570092 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327737209 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330218226 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327905638 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.327860859 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.568972746 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.940265405 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.584975307 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.33395247 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.328620505 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358996592 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.527495528 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.554758179 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.041306094 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.555447224 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576659977 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.342807642 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.330015907 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.94192636 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578312703 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336607972 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336463446 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.537973009 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33609283 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366114649 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.218687075 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.33086715 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85969624 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.547640602 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351886833 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331262693 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.038278349 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943381429 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.332392481 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.821173987 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.337276456 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330339265 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627368234 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.339061665 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.338507534 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.617793471 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.335861268 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.338778407 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.535723749 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.934249087 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.082089018 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.33696003 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349057242 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.351071889 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333338115 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.340632121 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332125424 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334181587 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.71377548 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.332980136 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334120232 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.346214185 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.338110239 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341416989 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.338530776 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333217697 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.34261328 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.3402263 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.310812819 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.334505465 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471652981 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.86601429 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336599952 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.948690973 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.670904082 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.579291631 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.349046984 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.307875379 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.339713391 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334342755 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334537155 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33429941 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.326214138 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.863874003 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.340417026 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.582710107 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.346143596 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.544195736 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.547885316 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.335276745 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.536995501 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342011682 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.363313167 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.305645281 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335212256 seconds)
  done (took 952.926433354 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.367068606 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.347387363 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.337335064 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.385151674 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.331195521 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.327661482 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.330396933 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.392011094 seconds)
  done (took 20.03037261 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.334360289 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.334745969 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.339568539 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.33979112 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.331261381 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.858935267 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.329857663 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.335187264 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.348716322 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.341510363 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.335171505 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.983370472 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.334859029 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.336541015 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.347249819 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.340380348 seconds)
  done (took 31.783658607 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.021919483 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.341705038 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.835755961 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.350710215 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.350439707 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.327772029 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.454094908 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.328162537 seconds)
  done (took 25.224142841 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.342784536 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.342056213 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.341986899 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.341822481 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.3437652 seconds)
  done (took 7.92536699 seconds)
done (took 1208.794048907 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.343886543 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.346249082 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.344181434 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.343782784 seconds)
  done (took 6.591650157 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.307550312 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.309397513 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.310133521 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.320327683 seconds)
  done (took 9.461613071 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.995241782 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.840343965 seconds)
  done (took 5.049648223 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.881610936 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.882822549 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.8764062 seconds)
  done (took 6.854745049 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.621857899 seconds)
  done (took 2.836300659 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.318590811 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.334079662 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.056302213 seconds)
  done (took 7.92419615 seconds)
done (took 39.933382012 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.340779783 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.093834848 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.50631323 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.34020503 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.488331903 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.48537594 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.581740169 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.335772824 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.340903551 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.339144149 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.343938055 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.489195842 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.567225278 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.094885527 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.566729669 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.093993508 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.492978572 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.329925652 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.335802779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.330423374 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.576702331 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.340433673 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.3338526 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.341542791 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.494640334 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.47731502 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.33338933 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.094442736 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.332772606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.335698191 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.476087206 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.330605985 seconds)
  done (took 81.180398068 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.330977812 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.336166048 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.335439579 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.330962583 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.34533535 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.335582424 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.333338571 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.331711087 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.332090664 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.345134417 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.331874582 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.349702008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.331589765 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.33080501 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.35077414 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.331692045 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.346225166 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.34652901 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.332176202 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.350088691 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.33763356 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.332912386 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.338905502 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.336423776 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.342160134 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.347539436 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.332470808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.348120321 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.334424138 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.333299341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.36303558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.333088566 seconds)
  done (took 76.05574604 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.346511764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.332519928 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.350700513 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.34215004 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.333632666 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.352601025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.335049803 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.349026945 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.333506093 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.350119413 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.335244183 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.333295147 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.33320879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.333188532 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.336020919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.333102629 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.341459673 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.335869343 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.336466877 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.333959711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.337322737 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.348807131 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.3325549 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.350012652 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.340543977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.343163275 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.339924266 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.334470901 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.334516381 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.349070066 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.348364421 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.338111246 seconds)
  done (took 76.092272283 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.575599998 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.350949254 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.354647152 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.344942044 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.35241111 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.351352546 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.345924081 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.581065491 seconds)
  done (took 14.477146174 seconds)
done (took 249.019473585 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.356401106 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.819586102 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.373927813 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.346790642 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.364976607 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.373710915 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.559635321 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.372545861 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.563791998 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.364576143 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.359941824 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.358230233 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.126427382 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.493230449 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.146179123 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.263238652 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.194084638 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.33645418 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.886886285 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.629833578 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.373723437 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.345180074 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.146476248 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.214708424 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.322202054 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.426442031 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.441104684 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.57556567 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.507681242 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.424583325 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.840328461 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.349674142 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.34876942 seconds)
  done (took 62.827635989 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.343979383 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.353284218 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.353719533 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.354220278 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.352220052 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.353543649 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.344916869 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.353301764 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.353713124 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.35478749 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.354770617 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.354235792 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.356875334 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.354477658 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.355271906 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.327838232 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.344797535 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.354786234 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.345611965 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.327504677 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.355924341 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.356426997 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.354448495 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.355230051 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.356731593 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.353612879 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.355790701 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.356507489 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.355384074 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.355835692 seconds)
  done (took 41.773589877 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.355205979 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.907831607 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.068855237 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.358068609 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.347311044 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.351242756 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.624849645 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.361427203 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.351075211 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.350606406 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.811379482 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.358498578 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379954374 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.071818575 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.350575519 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.357365546 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.358683284 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.347678927 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.917663701 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.361932038 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.625520083 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.362719226 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.624798287 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.362594639 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.352876865 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.350359588 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.353182 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.13469952 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.372908191 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.81561795 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.094561439 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.624175145 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.074381806 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.119430627 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.090935225 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.364420669 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.357542263 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.820176916 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.356918425 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.350131194 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.624450823 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.353900035 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.075244829 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.025164205 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.367710713 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.359363676 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.154669857 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.817553121 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.582463053 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.356729075 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.107440183 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.353122825 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.359536637 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.352104035 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.582809407 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.352684344 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.351151897 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.173660553 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.355587417 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.624724263 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.361567187 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.351487327 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.916102711 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.350240919 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.912977874 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.353249437 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.360289551 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.353628797 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.079248825 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.354778211 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.048088008 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.369047195 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.35968691 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.814339613 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.914607581 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.206810245 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.353803283 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.921737553 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.096041786 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.642216217 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.356144081 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.105530412 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.644318224 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.356099346 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.365462922 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.362947873 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.361434374 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.425417909 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.625751599 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.967710579 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.056547355 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.186766218 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.629255864 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.360810651 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.354694812 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.183447056 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.363062015 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.362071983 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.075282749 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.042652512 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.370759365 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.362252586 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.035271085 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.372227309 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.630434705 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.361833747 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.12127891 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.355293819 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.428975304 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.36362553 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.36078262 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.358950506 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.63005526 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.359065018 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.364236104 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.026107353 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.84820616 seconds)
  done (took 189.212894186 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.350512071 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.351258315 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.34939634 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.348805663 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.348214003 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.355780578 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.34903167 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.349109089 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.353288339 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.349257524 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.350329903 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.357524617 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.355532986 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.349039802 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.361070698 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.351735009 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.349332977 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.368627197 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.351043949 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.352533979 seconds)
  done (took 44.283892893 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.364465464 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.891624846 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.864954341 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.36683646 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.365523046 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.358046272 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.410768193 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.369964837 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.365689944 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.645028116 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.51932587 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.373056773 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.36427702 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.366144438 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.867042595 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.343649559 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.642561737 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.892418099 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.366709681 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.894143045 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.339073164 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.367277955 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.356045665 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.892139729 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.65348966 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.630502304 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.412914615 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.898841155 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.36834144 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.365698199 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.894367957 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.367516538 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.357392485 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.880782616 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.367690834 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.379871182 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.367349916 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.412758421 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.418382574 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.649834033 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.900670579 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.641584226 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.38411482 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.523363988 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.369100233 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.338706976 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.905046029 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.369137413 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.340619647 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.368922087 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.372860868 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.880329204 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.36105331 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.881519946 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.374893552 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.368696876 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.896586586 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.880673129 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.874371812 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.525667147 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.364300395 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.633481141 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.374053176 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.90684862 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.370133697 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.369030674 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.369220549 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.524982536 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.902002724 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.635571878 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.654010087 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.652937873 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.370764973 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.424446863 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.376780004 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.651156489 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.427891651 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.755956493 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.655525241 seconds)
  done (took 123.225327207 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.625435085 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.473690338 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.728493956 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.925610505 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.853357387 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.49909699 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.477160464 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.605301068 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.370825956 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.473287765 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.984314218 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.452909453 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.103256814 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.42940699 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.475174767 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.485020551 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.755046039 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.32013999 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.980402952 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.981465802 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.385635545 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.460102719 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.863499664 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.560011615 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.357604071 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.913880712 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.28837782 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.885109575 seconds)
  done (took 51.950929419 seconds)
done (took 514.496081677 seconds)
SAVING RESULT...
DONE!
