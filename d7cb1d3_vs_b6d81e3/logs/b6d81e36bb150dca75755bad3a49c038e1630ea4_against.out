cset: moving following pidspec: 23393
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.40510414 seconds)
loading group "string"... done (took 0.507095281 seconds)
loading group "linalg"... done (took 8.493397713 seconds)
loading group "parallel"... done (took 0.173781867 seconds)
loading group "find"... done (took 3.01108364 seconds)
loading group "tuple"... done (took 1.968721961 seconds)
loading group "dates"... done (took 1.444041657 seconds)
loading group "micro"... done (took 0.192900299 seconds)
loading group "io"... done (took 0.538437084 seconds)
loading group "scalar"... done (took 50.136312441 seconds)
loading group "sparse"... done (took 13.394528096 seconds)
loading group "broadcast"... done (took 1.267997564 seconds)
loading group "union"... done (took 9.119896238 seconds)
loading group "simd"... done (took 2.998665634 seconds)
loading group "random"... done (took 11.236815987 seconds)
loading group "problem"... done (took 2.191884257 seconds)
loading group "array"... done (took 24.738159316 seconds)
loading group "misc"... done (took 1.108892916 seconds)
loading group "sort"... done (took 3.68879605 seconds)
loading group "collection"... done (took 19.18454825 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.605050076 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.127534452 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.202144247 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.28521865 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.230413891 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.166164669 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.142149129 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.234159737 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.506829514 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205467713 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.140090992 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.422429698 seconds)
done (took 5.997511267 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.252508426 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.245180709 seconds)
    (2/2) benchmarking "String"...
    done (took 0.166509529 seconds)
  done (took 1.081113012 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.075435457 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.157512449 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.107710433 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094063156 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.093348154 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.109967154 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.092985886 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.10826077 seconds)
  done (took 1.437268944 seconds)
done (took 3.520297045 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.519481054 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.870967997 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.527369099 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.144068801 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314078576 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.294311065 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.268957147 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.205890668 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.091976474 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.088533665 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.173546807 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.42760266 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.385077693 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.956753848 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.088698128 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093602885 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.130346515 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.759828034 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.079581814 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.122935975 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.495936648 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.192373677 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.112839218 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105907848 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.185729539 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.131679643 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160448386 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.100570648 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.680443103 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.133982902 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.179150595 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.097290641 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.158081727 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.185135583 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.207462198 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.093828458 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.695303349 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.201718912 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100720857 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099124285 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.690453584 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.118335518 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.183609353 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.103154252 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.088514527 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.178335331 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.101715668 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.091580762 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094747381 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085236773 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.16021739 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.480395062 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106259555 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.168708344 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.092296993 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.701551849 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.09811759 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27572498 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.124783166 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.098134317 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.090350088 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.088311663 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.154304293 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.095289441 seconds)
  done (took 20.039186127 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.146357919 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164722281 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.078061028 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.15497665 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.123321112 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.079710403 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.10131075 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.079424375 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125523589 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180073347 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.136527584 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.151261569 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.090862658 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.090292206 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.128358219 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248118574 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.108771102 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.120428639 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.088579855 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088662775 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.138154754 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.096432112 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.106013419 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093612979 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169883322 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203081557 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110375603 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125161738 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.091371428 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095796365 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.141315433 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14549021 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091834318 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08908774 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.189246101 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.109500836 seconds)
  done (took 5.1703087 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.220353379 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.105348369 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.228260875 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197705102 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.132981098 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.183069031 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.168561615 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257635159 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.210840807 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.178039065 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.116761838 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127878507 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.097404367 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.078789032 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.079823342 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096767608 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.460654602 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.190879324 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.15051481 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.164414421 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113667535 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.085149096 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.381327136 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085037098 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.101639576 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.094428935 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.063250801 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.200084522 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111709609 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.111279751 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.106685961 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09885093 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134831356 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193468966 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.139310547 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.122551055 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110606058 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.086670314 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.225781288 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101966435 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.095423695 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.116707344 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130682561 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.115697499 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107339121 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.136942536 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.222299698 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.125849502 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085007813 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129217287 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.051753679 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.193428018 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.124827112 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.084997019 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.290758698 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127503261 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09947694 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.107867783 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.799822169 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.129651557 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.081050557 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.077870235 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.111266888 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.079849281 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.454398557 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.126132331 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.28548524 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082064196 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.156774902 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097041614 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11818885 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086269658 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101743307 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.10990284 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.085169376 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09554964 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.086487734 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078114786 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106074801 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.113360609 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101029488 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080061349 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.145910728 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.111674577 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.108135202 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.122624824 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.090062223 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.08499405 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.127670088 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.082902533 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096203282 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.089090926 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.160491647 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084235879 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.097677177 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.131510891 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112835358 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.129195006 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101218269 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.238162053 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081639333 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.121837923 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100289496 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.125026549 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.101195308 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079543496 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10125957 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.079064102 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079261864 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.158319483 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.088434286 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.07952513 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103638562 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.093656612 seconds)
  done (took 28.439669453 seconds)
done (took 54.319697637 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.439117872 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.082125871 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.082212026 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.099537298 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.082846834 seconds)
  done (took 1.531467461 seconds)
done (took 2.256184781 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.320117644 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.188838826 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.102976101 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.186739548 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.088818556 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.192710696 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.177909986 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.095331079 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.204994527 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.083044643 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.183071864 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084115492 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.103294044 seconds)
  done (took 2.760043865 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.101225162 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.109516422 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101623689 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.118987336 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084619011 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102072642 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.116457598 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10998505 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099547114 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.112224093 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.084840113 seconds)
  done (took 1.86279769 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.098966764 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.106806779 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097693014 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115414321 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083761683 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097145056 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.113387708 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107503437 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.098419067 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.110186766 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08481885 seconds)
  done (took 1.841291805 seconds)
done (took 7.187186714 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.091686669 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.417949337 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146370864 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.207740436 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.3466403 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.236050602 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.565355076 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.150950867 seconds)
  done (took 14.029680522 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.165424398 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.107230809 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.090304019 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089224447 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.093128178 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.110121619 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.093071428 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.093623465 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.112432781 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093287647 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.091798089 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10417332 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091973513 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.091140907 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.093378217 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.104400478 seconds)
  done (took 2.412691743 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142813082 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.139224817 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.097857634 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.098912186 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.111130621 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.098076751 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.100943215 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.113297773 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.095038545 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.094193126 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.116043478 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.097975121 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096140946 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.107758697 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.098155316 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.116964981 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.107765641 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.098519083 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.11621229 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.112946379 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.098969918 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095920299 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.111474866 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.097162169 seconds)
  done (took 3.373364045 seconds)
done (took 20.542207056 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.146723003 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.09913419 seconds)
  done (took 0.975425631 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.139832454 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.154162234 seconds)
  done (took 1.028960313 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109794225 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088443358 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.13445549 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101916209 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.089708952 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.10383264 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.113977798 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.104676286 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.090917031 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.090474556 seconds)
  done (took 1.766080732 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.093742954 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094069086 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.118815149 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.134336462 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.097038905 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.109482368 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.094418472 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.092824982 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110069346 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.089901318 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.094734587 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.122836069 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093514974 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.123793675 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.09500982 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.094477445 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.113917491 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094186557 seconds)
  done (took 2.608745004 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.089679914 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09104177 seconds)
  done (took 0.923183793 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093019631 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089197875 seconds)
    (3/7) benchmarking "month"...
    done (took 0.090012582 seconds)
    (4/7) benchmarking "year"...
    done (took 0.107338136 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089307102 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.088306846 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103469343 seconds)
  done (took 1.403671525 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48759152 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.379614451 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.358233594 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.108547405 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.146719067 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.350432825 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.148135336 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.103768231 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.12086495 seconds)
  done (took 2.980223163 seconds)
done (took 12.424363532 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.09004586 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.222152137 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.604978245 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.11178421 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.089304212 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.15653095 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.283906826 seconds)
done (took 2.304540737 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338965991 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.142553905 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.080041535 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.090847295 seconds)
  done (took 1.392488071 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082016037 seconds)
    (2/2) benchmarking "read"...
    done (took 0.098997102 seconds)
  done (took 0.932007863 seconds)
done (took 3.07432784 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088036993 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.118295517 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.104394088 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.08807354 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.087007673 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.086569017 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.103697536 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.088002989 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08658527 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.086431808 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.104659909 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.087079484 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086885484 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.102849068 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088689283 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08775145 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086672203 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.102987592 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.087496258 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086489086 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10135305 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087119975 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.086669306 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.086169545 seconds)
  done (took 3.002647454 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10503156 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090159094 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106608354 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.092361693 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.094758068 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.107133361 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093597753 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.088882684 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.107754885 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.089812905 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092492454 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.092256873 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.105518023 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.091838843 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089132063 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.107581345 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093806671 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089693858 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105743867 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094429427 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092152959 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106445336 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093400435 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090748355 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.10884636 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093253234 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.088949909 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.106450961 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093250603 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.091611249 seconds)
  done (took 3.656482031 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.09732956 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085423334 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.086653465 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.112450254 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085702447 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.087773297 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.100314337 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.08631391 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.089621057 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.087182281 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105355684 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.088687345 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.085167995 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.105432978 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.088784996 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.092252892 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.113020858 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.085539334 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.085221182 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.088185148 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.107521009 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.086969942 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.087548846 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.104737247 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.088643802 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086015237 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.088528279 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.104171871 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090114303 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.087875596 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.090234442 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.107484425 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.088698047 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097145503 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.10708162 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.088459121 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09488673 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.1022295 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.089592125 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.085061354 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.084725624 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.103698313 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.085935312 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094367673 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.104253588 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.088899269 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.086446286 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.089166914 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.10637389 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091311309 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084710252 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.100553424 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.090788524 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.089460465 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.107164289 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.085568384 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.089548421 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.084602839 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.104234567 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.088832341 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.084695111 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.10075294 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.093580389 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.088953844 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.10336357 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.111439183 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.086848827 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.090089474 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.105800552 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.096350525 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.089785066 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.113625932 seconds)
  done (took 7.521307063 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.100840002 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.097135742 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.089153603 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.106075452 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089839238 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088056914 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108813419 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089737997 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.089969825 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.112626037 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090297306 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089641722 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089721206 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107141929 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090034474 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.089200982 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110788943 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089720174 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08926566 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106056009 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09049543 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09374885 seconds)
  done (took 2.86400458 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.234584928 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095798094 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.137918656 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11992593 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109417829 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.118380738 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.09310573 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095929424 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.109354032 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099203468 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098469333 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111178197 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111725369 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113961717 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100230633 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100449712 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10942996 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100709654 seconds)
  done (took 2.820553691 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.103768407 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09161575 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126793673 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.091825631 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.091917547 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.092985672 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113002594 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11092528 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.106622533 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.092941133 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097960657 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090859446 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.108852607 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09294208 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090373575 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107037085 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091217714 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090813381 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114272615 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09730638 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09573769 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115211053 seconds)
  done (took 2.976029751 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104373872 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091383151 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.12600852 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.095409735 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.089472047 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.089548559 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.113029618 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091139184 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.09687274 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.107575342 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092569084 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.089989769 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.122689795 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092004134 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.095749003 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109192513 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.091864547 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090872537 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108159472 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.092049678 seconds)
  done (took 2.748984082 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.16782475 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122499262 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.107691017 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114035782 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121568948 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107629031 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.115051628 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.122673833 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107591469 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134382298 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107668725 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.106697951 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131235471 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.112762214 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104833848 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133130116 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114606733 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132230825 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107302387 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.10689241 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134936837 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106400335 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130784186 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106635474 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106693819 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125021788 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107574408 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111414844 seconds)
  done (took 4.071311159 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090598469 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.089804174 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088828495 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.105239912 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.090081787 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089958814 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.089646357 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.105900338 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.089086524 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089103184 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.105583077 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.090090376 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.090014521 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089068331 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105220231 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.090480205 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090225347 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.105389753 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09017625 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090853572 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088738558 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106101403 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.090079772 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089703247 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10445691 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.090247271 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090477486 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.088854188 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104996551 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089473577 seconds)
  done (took 3.584784161 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.103092162 seconds)
    (2/2) benchmarking "in"...
    done (took 0.099291745 seconds)
  done (took 0.969527492 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096530179 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103723808 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.089088967 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106719939 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.09800295 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.091065184 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114160856 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.096840868 seconds)
  done (took 1.565216505 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.140713985 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.159497974 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.096508951 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.101697654 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160543859 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.150186927 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133519175 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.094830247 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10611679 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084844493 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.152550329 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.084314263 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.091857715 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.087027947 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.108741328 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097503994 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.090214985 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.118330904 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.097388693 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092820037 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.111233201 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096394919 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.092476945 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.116953458 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.085551898 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094162926 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113362511 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102218785 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086942714 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110733969 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089967955 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.089604066 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.110021623 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095366112 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.091259652 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.159462441 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098122037 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.104218994 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.092133255 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09508492 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.13890171 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091197969 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.092245438 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105006451 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094500118 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.094292648 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.094939097 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.109469527 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.083803896 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084649282 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.107237505 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0865237 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09088094 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108068993 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.092513106 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097890477 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.110535347 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.089467513 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087323937 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103903368 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.090694926 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.087085945 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109639021 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094824406 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092022761 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.108337683 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092146381 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.091725701 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.09217371 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.109534637 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091655763 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105675686 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110649473 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.095624451 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.094159266 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.109154454 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089281044 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.095876461 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107184001 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.09215633 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.095289529 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.136231085 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094563888 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086374833 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104127669 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.099758428 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.092482216 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.110021046 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084668815 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099381346 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.109273277 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.093616741 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.084568808 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.105993502 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08811708 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.095428745 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.083889963 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108703611 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090980243 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.094885219 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113015463 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.091318552 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.093365484 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.113517401 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097568502 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089630091 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.152732223 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.089040869 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085979252 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.111690253 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098172813 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085372712 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107849518 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.090730428 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087781549 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104145472 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.096584957 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092049009 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.108420921 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.094880798 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093516378 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10966166 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.094441974 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.091204964 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.08695776 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.112465798 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101074556 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.093016739 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.110288074 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.09336307 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.091442783 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.109773271 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.094888605 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089098761 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.112857286 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089617745 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.091073671 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.091682454 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.115043083 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09373627 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086566963 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.108438169 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.093474177 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.090052225 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.111559818 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.093968903 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086480694 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101130579 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.093781231 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.087356647 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.110167724 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100073109 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087078662 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.110487489 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.089482838 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101568496 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105945576 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.09736034 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095019141 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.11290983 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09781923 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.083811309 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08898667 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.111329897 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.095210568 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.087902032 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.111947063 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.092346758 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.098905822 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.102502291 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.096503371 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.084318911 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.106705519 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098190619 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092603471 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.094562869 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105247725 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.130165116 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104713801 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1149399 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.091916143 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.090514097 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.113081123 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.092040563 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.094444486 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115882726 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097373424 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.089412495 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.109687003 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09855563 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087604116 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.112647556 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.09199352 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092754409 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101556903 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.093058992 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.084581593 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.095494133 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.11243487 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.09731899 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.096160929 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.111541338 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.09226912 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099107843 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.107242929 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.095743224 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.085235502 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.113987582 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102341192 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098156497 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.096927867 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112645925 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089423724 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.09248151 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118242196 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.09414397 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.0910602 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.112068634 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.08635375 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085793396 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.113854266 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.095293847 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.098050114 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.091181351 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111812925 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.094527817 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089189382 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104954129 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096294091 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094460899 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.106824903 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.093773607 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087718228 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.108185261 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.10051114 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084061512 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.106039119 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095549889 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.096990004 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.109763864 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.093158122 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.093250788 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.115360163 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.09599029 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.094003542 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089450688 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118949326 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090220612 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.090052595 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.106077905 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103682853 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085486305 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.111633837 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093351014 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088817161 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.106060786 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09711115 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.097441929 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.11406923 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09210963 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097089298 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.097119308 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.115210782 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089922087 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.097451557 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.106404907 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.085778125 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088500246 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.102719599 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.09564853 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.087285156 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.114491767 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.091850846 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091022091 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.094720944 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11354262 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.089837537 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.116051224 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105586623 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.086563729 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.103321586 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.090743593 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09239613 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.107237177 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.089910883 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09433596 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093556989 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.115814534 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096289493 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.089002386 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.110932692 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.098726902 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090048225 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.116604082 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099632497 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098619921 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106335151 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.096734827 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089623083 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114612543 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.086760279 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092703559 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091960683 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.110814451 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.090167774 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092012401 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.107812719 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.086071569 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088947545 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.11740114 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092418322 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.096304439 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109725731 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.092848849 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.089822288 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106229345 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.099762831 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.09080631 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.116215376 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094749984 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087170645 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.086327893 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.116310543 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093434429 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.097709625 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107304863 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.096699694 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099051656 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.113983214 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.095927379 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.102386675 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099994615 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.118157435 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099145788 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085611486 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.110611969 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096953839 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.092085708 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.113346117 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.094577146 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.085835711 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114043923 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.098086646 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094120714 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.110076159 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.086767763 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.093808525 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.118008186 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.09602986 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097157728 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.094773773 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112990313 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088745776 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096031739 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.116922274 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.094620367 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.098574862 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110659365 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.096860226 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090161753 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.116454941 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.095300422 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.08731966 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.086271633 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108905085 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.099084256 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.086939059 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.116230924 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.098271136 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.090647811 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110445345 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.098324577 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.090323788 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114814482 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098378467 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.091678621 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102078226 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.11305663 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.091090193 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.096614112 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.117674079 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088665787 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.091769716 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.111967671 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100500044 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.091764372 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.115123198 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094588872 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.097898085 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.095774794 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.11753441 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.098980786 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.097674544 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.105313561 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.100186103 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096801331 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.113777052 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.091654992 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092005594 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106248684 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093928841 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.099585406 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.109063952 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102447783 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100054517 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.091697975 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110793057 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100106886 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.091725786 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117839666 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.090588555 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094455279 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.105835845 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.096648204 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.091922759 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.118590421 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.091770927 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087029465 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.116019089 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.09881199 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.096879653 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.114635271 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101041502 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.087568614 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087714626 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.116364404 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.093431147 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102175228 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116627199 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.093248246 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091806548 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.113909123 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.096316676 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.100371816 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.107145781 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.092064181 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09452833 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11235828 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.093177647 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088570997 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.096006215 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111454589 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.097227813 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092174046 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.106586553 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.094228061 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.100209446 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.11027092 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.090728137 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.090701138 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.118043892 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.093633946 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090206512 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.105804123 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.101466246 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095482952 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11741426 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.091414973 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.09429339 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.109551756 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.097076053 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102394613 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091561329 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112864297 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.092771847 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.099104851 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118183782 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.088102726 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091014685 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.121944215 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099127019 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.095409877 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.114941247 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.094296795 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.099891073 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119039932 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097494631 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087422615 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.087660326 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.112581015 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.088790173 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.095741165 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11864572 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093681701 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.091157821 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117851815 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099045273 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.09676334 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.114207081 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.088769249 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.102614022 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.090380133 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.117431162 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.088720152 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087352643 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.116920851 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100215449 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093976743 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.112520822 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.096105664 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.096261091 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.087964906 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.111960156 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.099057236 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097833468 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.118941927 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09391206 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.092676443 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.115224875 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10496713 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.094473708 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112419186 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103547026 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.099082169 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113853984 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.094566335 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09833396 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.120045839 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.097227847 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.099532063 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110649651 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094509504 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.100305164 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.100221867 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125627516 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093900671 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.087538334 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.120152725 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.092721287 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.088388508 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.117191103 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101745283 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.09993295 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.113787218 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.092052927 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102005615 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118954738 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096064958 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.091469916 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.110817744 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.100311321 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091922581 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.115913868 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.092616851 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.100819734 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.099693726 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120346315 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.103901087 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.088152766 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11961216 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.096996259 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101374366 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.114375218 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.090302634 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.088052263 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.116378111 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102773555 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100542059 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.09714268 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.116941953 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.099276027 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.094497076 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.114741303 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.09384643 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.100634936 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.118049924 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096747128 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.09679934 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.113001764 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097180595 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.095712272 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.099295191 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.120110777 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.095917537 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.103558852 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.120890613 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.09446588 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.090542469 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.11529865 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098608704 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.094713558 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117872308 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093452708 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.089111774 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.119233451 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104169082 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094059868 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.101253931 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.120427786 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.094339838 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096405182 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.12179113 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.100441999 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.095787334 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114993775 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.099399243 seconds)
  done (took 60.655755388 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.144332668 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10250285 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.116142711 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097091902 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113721904 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117904 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097262186 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.097550356 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.116855972 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107352404 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097237356 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115092562 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113950979 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117585409 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.133941541 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106255085 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115825107 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099199638 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097084702 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098140503 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.13223963 seconds)
  done (took 3.158992989 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11673276 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.109019837 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128144515 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.112232559 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103226856 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.128366116 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108225256 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.128051855 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.113058631 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104819944 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.132046974 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108583153 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.124186336 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.108220031 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104868299 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125306964 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111759521 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103464806 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.12863857 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108523883 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.125653462 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.109129123 seconds)
  done (took 3.362232224 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.127245167 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.099960217 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.094289825 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.117121776 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.100387942 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.096098508 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121074227 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.099193749 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.105026252 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092270563 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.108004935 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.093314527 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.096641718 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.117055825 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.091777627 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.096621541 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.123019394 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.101709672 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.101844182 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.095907351 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107324244 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098013461 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.097558056 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.106745756 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103728347 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.101432545 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097223221 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.119961716 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088708735 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099466626 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.116607935 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09187491 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08840744 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08798883 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.107893057 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.100995426 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.09894938 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.11765484 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.098120599 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088992312 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.09769759 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.121160708 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.08916516 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.097696488 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.116911249 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092141469 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.099786121 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.115673706 seconds)
  done (took 5.749882563 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127257642 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16216349 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10172633 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.134598958 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.133412751 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107948496 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.099556592 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.134910034 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.099297238 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.121691943 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.113092089 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.110571076 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124473383 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.104886586 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103113963 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125572579 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.340613206 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.099688532 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.12661938 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.101542117 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104319766 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.124147759 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.111150699 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12977197 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10612879 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100514111 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.12101036 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105417924 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.108947298 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.125766865 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.104663509 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.104655672 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131067309 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.101907807 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100172111 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.12329548 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.112186429 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.120534983 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.102976421 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.098814947 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.11974148 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.105846699 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.102514847 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132039999 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103355704 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.102108629 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123538415 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100761087 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.110867663 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.121759674 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.110242325 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.110462174 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.123106891 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102143855 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.102915195 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131323485 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.104750605 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.098855442 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.123348553 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110079362 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.119244665 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105047244 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.111101552 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.120673655 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.108211953 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.110454742 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122621745 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.10403223 seconds)
  done (took 8.913527508 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131696382 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.104360908 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132674079 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.1134916 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104412317 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.125246296 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10504655 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.10407305 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.127869126 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109541941 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124277866 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.19777661 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.122445612 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.109796795 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.1037096 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.124650038 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.105357894 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10417279 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.125813926 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.104978245 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.104528259 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.133361002 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.105271163 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.13262232 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117543456 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.101990599 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.125491059 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.105692931 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113204081 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.126744767 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.117136694 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.124885029 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.105913213 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112163788 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.137515576 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.105368081 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09991443 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126618547 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.105800691 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125139935 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.103878285 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.11391574 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.124860297 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.103750954 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104783183 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126718119 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.115291736 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116029879 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.131339434 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110784787 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.125213712 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114028852 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.105553684 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.12542929 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113931469 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.139877147 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114447744 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11388885 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.125788406 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113406047 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.132352581 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.120758573 seconds)
  done (took 8.143404717 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098439389 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.097709781 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09805185 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.119181515 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099261707 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097507517 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09689058 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118533328 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099332568 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097271874 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11908427 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099987754 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099158473 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097029036 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1184561 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099793269 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097552869 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.119010705 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100067965 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098855144 seconds)
  done (took 2.913713313 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108894363 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115195533 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120960161 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.107343527 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.100666129 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.125589886 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.101847699 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101733881 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100193575 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123182539 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108787878 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129402878 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10247161 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.106200067 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129498039 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.10699897 seconds)
  done (took 2.632786789 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.120044497 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117647291 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.187419459 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.102225191 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122068062 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.110012637 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.100443909 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.124934883 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102087743 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106612112 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.104225051 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.126330525 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.101266274 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10107498 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123340734 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.106162182 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099543424 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.123973846 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103896224 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.185645145 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.105069789 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.102392189 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.100799654 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.105423095 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102067742 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.10407049 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.12989878 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101269308 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.103308851 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.123190853 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103603003 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.107757985 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.121546764 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.105568613 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100781147 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.12281301 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.102594005 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101307925 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.124196665 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102182929 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.102835124 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.123782656 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102875639 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.103295623 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.098908873 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.124242685 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.09944063 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106453033 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.123122452 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103709881 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.100455128 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.130012719 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107002946 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.107732706 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.129087697 seconds)
  done (took 7.068495464 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.112370185 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102883651 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.132615389 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.100268594 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.101588129 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.101487916 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.123033749 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.1033933 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101424353 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.120390082 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.103204598 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102218055 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.124038705 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103330345 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.102236238 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121614474 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100916975 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.102208926 seconds)
  done (took 2.80673058 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.106951185 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101301089 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.10496245 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.122126964 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.100884195 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100249779 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120701093 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.100510796 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099636899 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.121947902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102714793 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.101480657 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099962651 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.122940893 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.101798445 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100853991 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122644903 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101210381 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100716508 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09951537 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.121836663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101011876 seconds)
  done (took 3.206599475 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.113605693 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182347469 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.107479153 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.19270024 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097514156 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095264197 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.128163353 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099334776 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.114130049 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.119133269 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.097202014 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095220507 seconds)
  done (took 2.293607684 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.128455497 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136675279 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.123258023 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.102519386 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10941278 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127454589 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105991918 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105891132 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133880676 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117682563 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.126393874 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115635299 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111631069 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134454975 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109755451 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130210242 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10600116 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105260529 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122772337 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121840042 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105712297 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134215562 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106160175 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.104473944 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127385721 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112464787 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13399958 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118957916 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104888971 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.13590603 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110018703 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126243735 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114091649 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116652777 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122261427 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115118655 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105563259 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.142658533 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110051081 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133714039 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102752642 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108841804 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134570642 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112441787 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134906135 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107667537 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11072421 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127599998 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106940241 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.148371748 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111863967 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114335556 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131053779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114151101 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112899612 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149593182 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117655139 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136042724 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110884557 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.13943099 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.1138636 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131989248 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116312844 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11627899 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133053945 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113362858 seconds)
  done (took 8.768233541 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.144233092 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103129283 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127366572 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11955762 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134788553 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108314109 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105746637 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128500033 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107573478 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102584188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167908002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105959094 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133859834 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11586633 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.105988071 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127114437 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107631377 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114204938 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124119386 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128485314 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.126889118 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116356779 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114475848 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135737718 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119332098 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131569586 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108215972 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106223198 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127220202 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108460453 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111964957 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12760478 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114817267 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102954108 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136026045 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106790437 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127118344 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11376752 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106931922 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132023541 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114928755 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14239801 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109503557 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.106705614 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139241782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107962363 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106641052 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12574027 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108058745 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103868599 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.140144748 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118403118 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.140269389 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115321466 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106469785 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129725943 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107994588 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106679192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129346817 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11156385 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135625377 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108432101 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127985972 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128565813 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107158017 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136586192 seconds)
  done (took 8.762003406 seconds)
done (took 164.968967657 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.14593293 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.18380264 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.144339484 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.176369818 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093504411 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.126860555 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.146408064 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.146148658 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091755439 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114003424 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.094302838 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094623494 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182986412 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.094273471 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09251894 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.115380324 seconds)
  done (took 2.896430873 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.191363649 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307116821 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107101084 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.118614338 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099440951 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097142558 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.116830279 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100216792 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.097067167 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126938203 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.098983507 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.093855532 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.127287379 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095347107 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.098096125 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119000155 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106653647 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.097303217 seconds)
  done (took 3.058758427 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.11819032 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.140687176 seconds)
  done (took 1.124438377 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129095357 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.212422458 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.279817665 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.169176916 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119372484 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.139632825 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.147014029 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131816743 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.187436557 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132412242 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.11092048 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.094560544 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.146125281 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103451495 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.135107017 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.097371893 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.125012479 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.135673276 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.111753219 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099771243 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.141027805 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10250332 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.10362717 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135436144 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.179069222 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132945739 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.102953822 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.100202859 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123365848 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113320798 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.105138845 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.138678118 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.109757949 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.177598808 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101695274 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.176442699 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126295728 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.099777536 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.112348623 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120086591 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10212268 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100901326 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.134123274 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097129576 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.102637942 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.12788453 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.103746067 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.10121235 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128065734 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.107065488 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.128035097 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106795436 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.175238794 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.107023185 seconds)
  done (took 7.794517974 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.866882992 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139796042 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097714589 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.016198054 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.149799388 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112716777 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.88810511 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.122494918 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256479646 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.891625535 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112572601 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.134509747 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.239893087 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.281817847 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.269133403 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359279108 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.735265146 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111585652 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151670351 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.13934121 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130616986 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.125393403 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141539682 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.49210326 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.122851811 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099819115 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.106793936 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.134361557 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.175939371 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100371708 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102030255 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19883094 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.2934811 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.209103882 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.101090188 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119350938 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100566312 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.183650289 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27458115 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220130601 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.172760483 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118140961 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.100860277 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107740006 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.142483783 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.095919098 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.179658459 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.191826516 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190292727 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105317474 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.111700729 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.134104675 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.107210557 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.178684069 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.095839762 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.359968751 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.385385265 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099282153 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.106516735 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.137494682 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267916802 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.099280235 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233311045 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.150045932 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.214716412 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.098727662 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.833002401 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.185546508 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.098522885 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.12865469 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106249268 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.12678997 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.108810141 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.187642948 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.47615575 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.134078267 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104443201 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09828347 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.233027915 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.121330376 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100347719 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180269793 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.101475288 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.10742685 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136458524 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.111762539 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.189893259 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.273129164 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.11267644 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131361078 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.10653986 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.112662226 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.122569034 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211291953 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.250634209 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.152191127 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230484825 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130326864 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.160281717 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.185289594 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127466587 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.166000482 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.128446952 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.116109697 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128368933 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224843967 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.135312062 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.126530052 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.106296237 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108664382 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.158786447 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102625174 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132025683 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.166020626 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554188587 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.185445406 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096098435 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125338329 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110303797 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182325762 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108281312 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.264253374 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13013494 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.164479962 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.129314207 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.097903831 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107775698 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181990205 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.130691206 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.11031524 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107147809 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131174359 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.277949674 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.225964932 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.113678135 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.252393701 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.19992995 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.107232277 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.193715555 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10807184 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.188564101 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.109375566 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.131605751 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100919398 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.822791106 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136684164 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.108471911 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105180696 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.206714422 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.098426793 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124702096 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.10043644 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096534182 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.815652813 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.125564276 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098752489 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10172259 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128951022 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109760725 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.107284553 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128941984 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.178625257 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.246736307 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112483305 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128764142 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102189644 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.178275913 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.101180698 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099914239 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.122358993 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.101366626 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109789787 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.125958657 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104837293 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.1912769 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.152828845 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.252990562 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.6534334 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.101031924 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099375667 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.263379399 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.101839127 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.326674414 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107801373 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.258581749 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164424547 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120794935 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361950916 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.18553551 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.184709985 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126716792 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.16851117 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120036664 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.109471474 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.181109073 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.100871223 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129614196 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.155031867 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.137957 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.114841634 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.276932284 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.123244314 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.229658984 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.12052903 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.165867943 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.124835737 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107720619 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.327257406 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122378787 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118686225 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.178353651 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105292469 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122095991 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.62325058 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102889681 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111530461 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.130223472 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.237408663 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.184819422 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.110264291 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109234895 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.135652535 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.179645896 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.206958683 seconds)
  done (took 47.729951542 seconds)
done (took 63.462579924 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.264323211 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.180942865 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280222619 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.174643244 seconds)
  done (took 1.858515925 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.239222377 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1538109 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.197721854 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.118809548 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.202997328 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.118058367 seconds)
  done (took 1.921002323 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.17410122 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.166203248 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.143549013 seconds)
  done (took 1.372950137 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198473666 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.214065764 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.322581662 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254874518 seconds)
  done (took 1.966059167 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.260832843 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.11484041 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122669399 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.204693468 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.219013955 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.203105425 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.123334338 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.170937156 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.127675703 seconds)
  done (took 2.475290414 seconds)
done (took 10.485349438 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.399651707 seconds)
    (2/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.383084187 seconds)
    (3/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.235252962 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.135943128 seconds)
    (5/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.209966791 seconds)
    (6/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.287695376 seconds)
    (7/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.286369718 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.132106718 seconds)
    (9/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109611098 seconds)
    (10/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.30991709 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.218724061 seconds)
    (12/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.212081686 seconds)
    (13/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.108701259 seconds)
    (14/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.300785248 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.082823728 seconds)
    (16/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.28858193 seconds)
    (17/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.106968739 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.142046752 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.292820566 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.146439211 seconds)
    (21/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.226646044 seconds)
    (22/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.24081206 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.124160758 seconds)
    (24/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.132673767 seconds)
    (25/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.17533033 seconds)
    (26/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.166608465 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.203838115 seconds)
    (28/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.259291786 seconds)
    (29/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184114894 seconds)
    (30/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.191427271 seconds)
    (31/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.169656782 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.124366221 seconds)
    (33/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.158483827 seconds)
    (34/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.239308362 seconds)
    (35/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.137788243 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.1282779 seconds)
    (37/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.127006021 seconds)
    (38/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.077579725 seconds)
    (39/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.076241061 seconds)
    (40/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.076322845 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.108163504 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.126457316 seconds)
    (43/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.082630336 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.111942532 seconds)
    (45/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.160032742 seconds)
    (46/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.162423092 seconds)
    (47/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.282892235 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.101209304 seconds)
    (49/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.103431297 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.130761949 seconds)
    (51/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.137653568 seconds)
    (52/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.08259398 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.125357261 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.125271319 seconds)
    (55/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.076969199 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.1180167 seconds)
    (57/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.248380706 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.098949836 seconds)
    (59/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.076298808 seconds)
    (60/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.146382635 seconds)
    (61/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.264654773 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.118039006 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.120559222 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.21282783 seconds)
    (65/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.132617322 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.09960447 seconds)
    (67/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.253642294 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.120176634 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.125528614 seconds)
    (70/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.133501921 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.100001652 seconds)
    (72/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.10357733 seconds)
    (73/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.157452147 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.248609646 seconds)
    (75/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.111529971 seconds)
    (76/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.216239188 seconds)
    (77/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.147547357 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.11910136 seconds)
    (79/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.157500964 seconds)
    (80/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.082900996 seconds)
    (81/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.104897686 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083317173 seconds)
    (83/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.075706697 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.128977633 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.121787769 seconds)
    (86/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113198216 seconds)
    (87/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.10895851 seconds)
    (88/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.086067354 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.100214339 seconds)
    (90/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.085239922 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.142822069 seconds)
    (92/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.126702378 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.096881424 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.13184955 seconds)
    (95/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.078188997 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.163518195 seconds)
    (97/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.099619817 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.130284314 seconds)
    (99/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.107664724 seconds)
    (100/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.083081361 seconds)
    (101/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.103770172 seconds)
    (102/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.12834156 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.125726615 seconds)
    (104/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.079490962 seconds)
    (105/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.104277333 seconds)
    (106/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.078499053 seconds)
    (107/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.141803465 seconds)
    (108/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.076054429 seconds)
    (109/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.083190746 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.12312208 seconds)
    (111/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.079054978 seconds)
    (112/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109421873 seconds)
    (113/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148665672 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106121665 seconds)
    (115/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.077929506 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100467547 seconds)
    (117/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.105453195 seconds)
    (118/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.130387676 seconds)
    (119/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.097477711 seconds)
    (120/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.149880121 seconds)
    (121/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.081142962 seconds)
    (122/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.079919916 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.107760625 seconds)
    (124/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.150589723 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.102218831 seconds)
    (126/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.11064167 seconds)
    (127/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.121899458 seconds)
    (128/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.110268137 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.084345237 seconds)
    (130/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.209947767 seconds)
    (131/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.110219574 seconds)
    (132/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.08686567 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.104241709 seconds)
    (134/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.10708562 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.125489491 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.121852845 seconds)
    (137/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.084274486 seconds)
    (138/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.104057588 seconds)
    (139/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.140551941 seconds)
    (140/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.110505957 seconds)
    (141/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079086755 seconds)
    (142/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.10492955 seconds)
    (143/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.083443828 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.112870127 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.097106681 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.126857273 seconds)
    (147/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.078375445 seconds)
    (148/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.210618408 seconds)
    (149/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.083994404 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.101623531 seconds)
    (151/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.107985584 seconds)
    (152/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.132001299 seconds)
    (153/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.078063603 seconds)
    (154/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.084841216 seconds)
    (155/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.10793412 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.125279403 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.099445501 seconds)
    (158/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.185251224 seconds)
    (159/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.109310266 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.085331222 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.10724603 seconds)
    (162/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.079737671 seconds)
    (163/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.104294008 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.124767003 seconds)
    (165/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098683729 seconds)
    (166/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.079843165 seconds)
    (167/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.10466282 seconds)
    (168/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.084018029 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.07812389 seconds)
    (170/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.083944689 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.106791031 seconds)
    (172/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.086250779 seconds)
    (173/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.115823317 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.100969606 seconds)
    (175/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.10466146 seconds)
    (176/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.085285888 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119685833 seconds)
    (178/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.110648265 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.122318413 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.102489172 seconds)
    (181/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.077896529 seconds)
    (182/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.131037811 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.103478049 seconds)
    (184/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.076805006 seconds)
    (185/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10640289 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.108237462 seconds)
    (187/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.081714534 seconds)
    (188/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.07880266 seconds)
    (189/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.08470113 seconds)
    (190/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.124886359 seconds)
    (191/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.08097717 seconds)
    (192/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.078889092 seconds)
  done (took 26.241965176 seconds)
done (took 27.138731394 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.203306569 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.126050255 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108654337 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.108629994 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.198096997 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.116135842 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.123759339 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.136752083 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.118260209 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.107805325 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.123620627 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.121426603 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.108544203 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202100434 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11011672 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125780085 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101264862 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.119265535 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.148833561 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125402095 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.197385003 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.103096766 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.117294804 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.124537799 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.175181903 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124606497 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.108862745 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109741584 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.143686044 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110734115 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108840914 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.098957267 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.150356179 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.123510664 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099178459 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.133312139 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.100737671 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.084804419 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.133296857 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.111360263 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122585969 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.133913771 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110322078 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.101213679 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.132890722 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110680572 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099999999 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.112124268 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.122736922 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.110484119 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.102249235 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.148858999 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.109785306 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.099168371 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.122097554 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.102393802 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.1193902 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123543621 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123939653 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100106488 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.125554222 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101846276 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.111877892 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100120832 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.133403257 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103263084 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.113142881 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.136449467 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109742404 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10305358 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.123571039 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110000131 seconds)
done (took 9.705513935 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.106244936 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.145231276 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.197998095 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.209397545 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.129874823 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.141488295 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.116208527 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.124951721 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.13804452 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.120154011 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.138337561 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.157409046 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.18085463 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142462215 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.119179539 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.112382402 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.13855137 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.110420382 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.206082363 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.125786587 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.148851535 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.117838832 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.126881264 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.142150555 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.105788383 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.137257283 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134487704 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.114241315 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.103152605 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.137960364 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.125982034 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.103519242 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.134015637 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.123696034 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121254368 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.139485804 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.117108852 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.135531128 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.106655388 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105461918 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.137410352 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.122173223 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.104880102 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14147561 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11424539 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.11944333 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.135763448 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.118542571 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.106067728 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.134793223 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.107983756 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.130743236 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.141511498 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122742279 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.117446745 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.142698998 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119738141 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.117112932 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.133108018 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118342497 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.105804183 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.12838806 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.107861013 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.126080267 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.13362537 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119034315 seconds)
  done (took 9.478068086 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126404845 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.13448032 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.139462569 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.116381246 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110266531 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.123156135 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.099570015 seconds)
  done (took 1.791102559 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.102485399 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183086968 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.20763567 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.208705717 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178505145 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.217752199 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.149560617 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100961008 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.135608864 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.136304152 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.18455554 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.238398809 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.110414506 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.142196914 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.2102511 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.100644315 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.21136709 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.101885704 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11556712 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.210783119 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117597087 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.15506525 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.115444296 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101260804 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.204208197 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.101366922 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.260497341 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117791519 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135499956 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.115295282 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115245822 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.206466284 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.204817243 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116309804 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108784462 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.20818232 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.203299088 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115082672 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.219084027 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.105122908 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.204765683 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.11532639 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115636057 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.140868049 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.117056711 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.193869973 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119945625 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.11577721 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.139716557 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.186788188 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138942725 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.182003832 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138027663 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115089073 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.111579688 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.141547983 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124106275 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.115693349 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.213207565 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118018901 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.208246087 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209413619 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.180411668 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.209589947 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.148991707 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.183920622 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.200491373 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.113519081 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.110409817 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.144333235 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.183974757 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.142982678 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.114496208 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.197964394 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.1190469 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.210670534 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.2074422 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114531827 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113235337 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.130984047 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.115025605 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101476811 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.200531835 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114650469 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113058276 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.147014229 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114482022 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11471822 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.132913422 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.125061093 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.139714885 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.114892796 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.121150942 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.140197605 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118695867 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.215398736 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.112142418 seconds)
  done (took 15.551311931 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104251349 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.103377842 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106770452 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.129128457 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.102697647 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.103241914 seconds)
  done (took 1.608592215 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.140165835 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117196384 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.149474438 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.117554135 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.160415941 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.213428308 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.216707999 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111083506 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.157993881 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125474676 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.213754592 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.190914583 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.215836123 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.118305464 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.21973516 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117368918 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.219072695 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.112749202 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.151636742 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113568356 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11526327 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.145462211 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114242507 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.207227284 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117159496 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.117395494 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137322981 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.124686007 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.148700813 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.112020992 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.118753029 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.141450876 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.109858846 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110150096 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.219797054 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.12878123 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.137428439 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120060867 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.118405729 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144099615 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.191842714 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140260253 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.12290987 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.118857724 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.138006795 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.109870235 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.144955009 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111384525 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.219504461 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120545781 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119518833 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.142170192 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118705217 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118770312 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.135684443 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112189675 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119062139 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.220516511 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.11943333 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.137173848 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.11658143 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.116689679 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.138063765 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.121250946 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143123171 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120152699 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.108807569 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.142150625 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.115415752 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.11760515 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.142985953 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119471079 seconds)
  done (took 11.095855619 seconds)
done (took 40.462455184 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.474679716 seconds)
  done (took 2.433012574 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.880984464 seconds)
  done (took 1.83950963 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.55434558 seconds)
  done (took 18.542259365 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.421885415 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.466180304 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.122216854 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.146210092 seconds)
  done (took 3.114943808 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.819906207 seconds)
  done (took 1.803534374 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.281778859 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257314929 seconds)
  done (took 1.504944114 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.704577175 seconds)
  done (took 1.680101018 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.505577385 seconds)
  done (took 2.471001006 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.283981265 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.240293261 seconds)
  done (took 1.502595455 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.604582639 seconds)
  done (took 1.581017987 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.466821199 seconds)
  done (took 20.447525821 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.254766925 seconds)
  done (took 1.236992868 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.285932963 seconds)
  done (took 1.268580371 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.468840429 seconds)
  done (took 4.452603424 seconds)
done (took 64.850144866 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.113717217 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.115423257 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.115354622 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.138981673 seconds)
  done (took 1.456108568 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.122585664 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116764455 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.143113208 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.117497106 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12278577 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.116373984 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142241088 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118789068 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114922167 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143818032 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.117218304 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.113935387 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.143636617 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.115118032 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113692067 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.144595972 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.120227361 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.115514661 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.141451511 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.117900936 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.116701454 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.142627829 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.120407529 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.117879616 seconds)
  done (took 3.984122551 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.113124402 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106572895 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.108656879 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130274356 seconds)
  done (took 1.444500293 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.126121342 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128943961 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151087683 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124989662 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.12822127 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.153069136 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116555764 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11203735 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.140532325 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.125173205 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.131306762 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154579707 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.127735342 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.117314966 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152499047 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.110059467 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116053746 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.154240751 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.123407108 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.123408729 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.141704556 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.123017921 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.120120391 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152410383 seconds)
  done (took 4.137940011 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.190333432 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.127805175 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.173157372 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160305543 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.174542642 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.114441387 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.143204444 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.148188072 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.12280203 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.119304774 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.144901624 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.160259579 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.146615482 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.119430475 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116290573 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.147644781 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.129502687 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12192573 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.188437257 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.121152283 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.147395938 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.127355505 seconds)
  done (took 4.133644621 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.120494857 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106281661 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.126376581 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.107714338 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.118641141 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.133458252 seconds)
  done (took 1.705676824 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.106229876 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.10177124 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101771942 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125805252 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.105462124 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101027851 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.099731222 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.128557678 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.101259103 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101322871 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.126682227 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.10114741 seconds)
  done (took 2.287008508 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.328652578 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106931441 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133201924 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.109910489 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111587281 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103742358 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.144642755 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105282697 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.265802532 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.102383652 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.129450593 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.1947645 seconds)
  done (took 2.828703182 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197992636 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.144015376 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254619431 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.366471456 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182563954 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158973816 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.290970098 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186775329 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.173860961 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161655717 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207931034 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159229027 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151086019 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209418412 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16307161 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.157385594 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185934446 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204212298 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166579236 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207156711 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.181188644 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.196656032 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189173363 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173273648 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137581428 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187472841 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.117082741 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128551821 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190853326 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186905408 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172641439 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174862216 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139241766 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213436258 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.251280389 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169817681 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.269585574 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.156518654 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.170271512 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.210647541 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.256501066 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138188209 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212349461 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175583484 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127439271 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207947453 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149890409 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.206115788 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.132252408 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168881207 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180555044 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202882245 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.19974308 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13481476 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307248997 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131535642 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166744988 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164124574 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212003492 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22444482 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174807373 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.147400305 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176343956 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213488875 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234462326 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.138378757 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.189323182 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123736321 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189451494 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228016427 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179553496 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185144474 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.231653099 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127965583 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195968653 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166821362 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180483536 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227344249 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1687563 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.116695459 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177116482 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132398361 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149983581 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.188092317 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.119437098 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23838843 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156586784 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.341539317 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179163814 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180753808 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15811818 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184728434 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159271041 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173492788 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101158881 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167474543 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160731773 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179845194 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128073623 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151972484 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166035866 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.124100151 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177218991 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.121032303 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190801149 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.132438203 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185130024 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167394129 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.12847536 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.203521145 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170399479 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.15968349 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191674333 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189208792 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155884585 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130145146 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24274556 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165005569 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.159733215 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170517362 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.219415058 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.175919016 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132234714 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187827705 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189733556 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167027585 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196112818 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163242437 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132376009 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.163991092 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168138129 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185065021 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.151393823 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152229233 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.159944517 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213815951 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.122536512 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.163341498 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175922565 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158035815 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122855536 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1616572 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133751781 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138632831 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.172873793 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.135871344 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178401085 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16277553 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18927177 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15347825 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15972743 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16862685 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156716816 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.165794035 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171824603 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.117586543 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.197993039 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193111012 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154678366 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176737493 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187964995 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208214495 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1684264 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154769233 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180388065 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15261875 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119038389 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184269517 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171102438 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188481887 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.186331062 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207884781 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.189102605 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.159374147 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173444509 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192263769 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.182391853 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182988318 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142630801 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.195199183 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16510423 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.144283167 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.122166597 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.124954109 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161284782 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127872333 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13431807 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201355208 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187549144 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2036581 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164776576 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133865957 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.215698528 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.120964704 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18484234 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.196857208 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137249868 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.212217737 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186804379 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202770954 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138296047 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187578789 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118916203 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150260969 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.132275922 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.184130698 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137773485 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13365874 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166377954 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186531314 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196262617 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172098198 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19200255 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18692926 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226171405 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.118751814 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.157049284 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196057691 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191129897 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.180947004 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131639838 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.183474494 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.216694364 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139872283 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216172038 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165578815 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203119656 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218351546 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.163274816 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126843045 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173666364 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15738825 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163185224 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161673713 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172440466 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127938846 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177208449 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.136868441 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164080205 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183916302 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167811301 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174412137 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.184437928 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194382297 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126245947 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138298044 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.200898896 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142433629 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.1310473 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168122783 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220400728 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14656399 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181136705 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195195464 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12957893 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312369062 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209137783 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201476553 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134909621 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162123961 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.169238388 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184419032 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159800921 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209637264 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139292383 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231401086 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191249094 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.141857987 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127422121 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.173325216 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147672489 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.165625576 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149198141 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.186558726 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140810216 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210362968 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133199307 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194843032 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199494788 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.14401048 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146489471 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162758789 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.246767636 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165706532 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196624691 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.162305929 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.189830608 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179694598 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.148239924 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124937132 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.129433108 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.211852935 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125802864 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202238412 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192813827 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208474313 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171485631 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187180059 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138277064 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123972269 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192570097 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145187366 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21338029 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159760203 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.13564788 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213968103 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.125921551 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127405111 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188013033 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.29331646 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146164357 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196990179 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106237943 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.288068937 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1284854 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129856502 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188113545 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168094433 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.159396925 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182366965 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199327427 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139597941 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188041862 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133013801 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.205408367 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211939393 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165260971 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199193673 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.143181714 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187890294 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158134768 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199540938 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143208224 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173365168 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156541595 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220979325 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.20469758 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.131104791 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166913009 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19424093 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195213172 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174198918 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164407811 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182070458 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151476755 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164492941 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163343047 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12376579 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158195426 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.196048614 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153073626 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173395378 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195645046 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129608244 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12449598 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173272493 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16249275 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167331535 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.126728422 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209426477 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127830425 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207188806 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232838864 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129202848 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16426729 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171822323 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127704665 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163975295 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142352646 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12847053 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.197749845 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178509501 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.155558576 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173823289 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189122607 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159561683 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183903244 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140967319 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.360777552 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.126567728 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21690924 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147264416 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223040219 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.145824391 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201278579 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193790383 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148733376 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189643762 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145529897 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245460761 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163669148 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.19372436 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131426703 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139129623 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164256467 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132676472 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179254836 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165848328 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167271943 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.134642858 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.190949862 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143726118 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.142120454 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1672693 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223756147 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150300803 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213297875 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184750076 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164036187 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172747026 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201973951 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125348289 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.19114386 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195868409 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1433574 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148737264 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.160429571 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.134746426 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23733304 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.123256929 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185136677 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170693532 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195310105 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167970935 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.161027301 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175151451 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167244358 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172204391 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153261092 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.149787855 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197284826 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132440987 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.124121197 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198729028 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182560382 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.163732714 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139616191 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.199433087 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192837197 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.149320107 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131726563 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293468617 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158331992 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220675052 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.13431607 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162736988 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142994012 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184303661 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.162934927 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196502677 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.128154409 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126772586 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.171034944 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.156736821 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.166938751 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.167577829 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197556399 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157212044 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209421274 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.131927487 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280325883 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139362712 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.197905302 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.114840785 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.154240983 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141885785 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133168588 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169672614 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208642144 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212039061 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.189945236 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14550789 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161794308 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125299873 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129348958 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.191347032 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147678381 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193062285 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144126495 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.129920993 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140078417 seconds)
  done (took 84.972961947 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.159599542 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.149221273 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.166002483 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.220273624 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192903649 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.288312977 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226667445 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243813721 seconds)
  done (took 2.727591328 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.117735252 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.156390645 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140122442 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.141206017 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.107827418 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.438267438 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.130583301 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.144583665 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.159028719 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.148372281 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.132251549 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.529187707 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.114641232 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142022547 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.120823105 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.13126931 seconds)
  done (took 3.924514409 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.583543158 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.540602448 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.872723982 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.290504065 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.257910176 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.199624685 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.739239907 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.195448038 seconds)
  done (took 11.755093483 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.154475849 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.145329516 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.412922128 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.747593466 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.204015493 seconds)
  done (took 2.747199213 seconds)
done (took 129.078023838 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.120161375 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.120917353 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.120142922 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150658974 seconds)
  done (took 1.582844767 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.174686001 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.089998437 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.091353167 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.116031675 seconds)
  done (took 1.553072656 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.42299457 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.08956963 seconds)
  done (took 1.622354123 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.149729215 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.134265101 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.162128551 seconds)
  done (took 1.542780837 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136730635 seconds)
  done (took 1.218593418 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.124578193 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129990529 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.226264644 seconds)
  done (took 1.56772844 seconds)
done (took 10.175854258 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.117165505 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.921194061 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.428783649 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13112506 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.706866493 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.422406206 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.420014895 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172961747 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.172012707 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13437928 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.129187901 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.685655996 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.428156011 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.877220225 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.388991265 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.905321793 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.692438595 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.10846527 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.142361576 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.110669885 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.398245225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.133702029 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109118746 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.108210233 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.715054256 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.417605111 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106392311 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.913123987 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.107481003 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.11123072 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.423275882 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107630404 seconds)
  done (took 20.82060468 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115955402 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.164125121 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143321466 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.109264177 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110215299 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.135625712 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.120860002 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.11968909 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.20110274 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.10673903 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.157945786 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.10824417 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.112972727 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136463568 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.133699923 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107022784 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.137010109 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112471328 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.11474208 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.136377759 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.131589002 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106673457 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.136045311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.112420195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107180664 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156341886 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109418018 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119497269 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13452698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.114117686 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.112332422 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.135189659 seconds)
  done (took 5.15092266 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.156880001 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174679138 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.1440569 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144548394 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.185057839 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.110697621 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.221720865 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148085116 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200725145 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.113114229 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.130402513 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13525496 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.149014236 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.108601006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.161739096 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109630665 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111554165 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.13732924 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116506378 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.109416752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.158392478 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106978827 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.109466008 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138150769 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.108271879 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.130907202 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.136061031 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.122761249 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.13250961 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112668848 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.113413885 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.10823098 seconds)
  done (took 5.434795415 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.12285336 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.122968776 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.129415805 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.160654196 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.116800249 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.121865261 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.151149675 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.118215639 seconds)
  done (took 2.141612133 seconds)
done (took 34.634458171 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134021401 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.129460715 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.129415202 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.151683131 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.185067154 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.144970804 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.127463221 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.115776842 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.15013536 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.131146618 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.107270209 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.115933002 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.156414139 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.119474602 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.216443293 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.123616325 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.220366273 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.187538177 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.145616409 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124916654 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116831981 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.221930494 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119928042 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.115964906 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.218689404 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.110531252 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.209864469 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.118833631 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.147067338 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.111707632 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.215796641 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.121989345 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.116037705 seconds)
  done (took 5.947737331 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.203780392 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.118308939 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.147439964 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.11767331 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.118231522 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.143253103 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.208261375 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.144816957 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.117321297 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.116604584 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.115204035 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.218332129 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.123165785 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.14084383 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.120048278 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.107765269 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.236343913 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.11965079 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.108003796 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.119211706 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.114204001 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.116009817 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.248469542 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.112035606 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.116314567 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.14610848 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.119961245 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.120523455 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.146421924 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.120152753 seconds)
  done (took 5.30863471 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.123450297 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.130214136 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.133704133 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.21351923 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.14608308 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157350862 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.1374577 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.131414016 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.166583685 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.111812126 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126627231 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.177118415 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12672897 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.120318798 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144386266 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.130822796 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.133291068 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.140453613 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.119657299 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127580732 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.159875289 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.131063502 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.134309486 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.14864999 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.110752397 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118434722 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.1498603 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.126688078 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.119580102 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.152788972 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.113948035 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.114241101 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113483837 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.174832345 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.114952366 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.152343623 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.137923029 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.123914332 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.152250542 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.144131108 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.114735084 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.141060584 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.137672607 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.164932561 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.14007913 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.125869263 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.122859079 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.15309585 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.110192085 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.129595115 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.180713412 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.11228679 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.132423104 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.137985157 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.111205134 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.119303771 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.111648417 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.143885491 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.127909043 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.11402406 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.165445626 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119400391 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.121381485 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.141942029 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123690906 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110043392 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.137682393 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118086679 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.13655468 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.117953386 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.177218842 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.111369836 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123093108 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.153645464 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.123081492 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.123435909 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.139750366 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123719225 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122218811 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.145621782 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124539881 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.11463819 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.1430175 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.130536409 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.132360641 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.155277867 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125314208 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.126412594 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.14255814 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115228725 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128481279 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112165384 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.145709775 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.124952917 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111115287 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.144013888 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.124906855 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.122637037 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.137381599 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137951073 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.115077258 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.139255178 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.139152003 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.114123367 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.145391249 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.12396407 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.152759423 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.138788251 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.12477754 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.124963073 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.11095082 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.149463171 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.115201908 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.110430094 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.15948319 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.127138361 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118311278 seconds)
  done (took 16.6817209 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.31447498 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.270937764 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.211053239 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.242847302 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.124669881 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.235548923 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.300155982 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.301829355 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.110923097 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.181213464 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163692935 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.270396532 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.112007616 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.172973857 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.304001914 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.35638785 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.16985219 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.150474894 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.176863982 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.127406973 seconds)
  done (took 5.419749717 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.133856397 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14633433 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163762633 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.141341103 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.12162835 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.158232679 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.11244766 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13523261 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151943318 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.122504691 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.114546332 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.15757602 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.125830442 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.128063258 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.157094667 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.145913564 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.118588185 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.146096085 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.136397649 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.115891726 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.129539032 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.139568127 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.121447677 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.164490798 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.131160981 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.121872962 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.139641361 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.119898844 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.11833176 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.149498707 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.117805988 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.130289016 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.147289123 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108229341 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.122248666 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.126004238 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.148482579 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.114792286 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.11515063 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.144187884 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128570485 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.123832917 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.149197718 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.097416362 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.13101052 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.107919525 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.155378429 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.12455653 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.105522913 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.158861294 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.126566802 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.126928071 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.119097056 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164171002 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.119928325 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128735005 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154351734 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.127587404 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.117282796 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.140555183 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.110601763 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.115142663 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.149038115 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.127665677 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.123273836 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.162713122 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.129303281 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.111321466 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.145731485 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.116041913 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.11568774 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.155277539 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.133329719 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.121246205 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.147608309 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126397955 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.120670167 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.093121917 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.15175115 seconds)
  done (took 11.536904736 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.138421863 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.12258423 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.130545662 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.179167286 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.126165091 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.117669181 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.151584441 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.132770761 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.126783678 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.16148136 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.130001402 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.125270511 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.163693927 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.124201799 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.122225227 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.157059694 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.126385708 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.148982178 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160842763 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.139802673 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.157816239 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.118695522 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.124577343 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.123144072 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.171823024 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.12409369 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.166377689 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.128184169 seconds)
  done (took 5.031045974 seconds)
done (took 51.02544523 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.250462556 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.445957668 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.228544106 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.223837325 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.255257695 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.256353083 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.227726567 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.234064133 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.580222358 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.197161862 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.22569342 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.228212408 seconds)
done (took 28.481034215 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.279024166 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.793246404 seconds)
    (2/2) benchmarking "String"...
    done (took 1.532264018 seconds)
  done (took 4.445671106 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.216692131 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.215663912 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.465345422 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.216242045 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.232413 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.216419072 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.2175724 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.2298619 seconds)
  done (took 15.914041869 seconds)
done (took 25.975877553 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.27564114 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.405074734 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.468657827 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.227451911 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.223833909 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.224616972 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.220185922 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.241678522 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.229554154 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.225971619 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.620218167 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.48391895 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.231329735 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.592512685 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.225808513 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.24877411 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.221428823 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.4607367 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.22243945 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.249189087 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.197691121 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.198357438 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.248535154 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.221199275 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.22467063 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.23210251 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.262441634 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.220667943 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.413658464 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.239949148 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.250094239 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.223886827 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.260821538 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.224905664 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.220103488 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.222451347 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.404044335 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.226414616 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.202334724 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.238869951 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.410725604 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.235700909 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.227243089 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.222375444 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.227071307 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.268825101 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.203979046 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.352101338 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.242586293 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.220089288 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.221801328 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.590652242 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.22156736 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.226768118 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.231199812 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.449432717 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.23339852 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.27669767 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.238336215 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.223494072 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.229252621 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.221893311 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.281537377 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.236283819 seconds)
  done (took 144.848049588 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.220859925 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.223653137 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.220902174 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.223382502 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.224646983 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.224291412 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.222363829 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.222570287 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.222686804 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.249426936 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.225416528 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.221568933 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.224940676 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.233277435 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.234269132 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.243051296 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.226069857 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.24307455 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.233984962 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.223668212 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.22152931 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.226715121 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.238575683 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.22440063 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.268061128 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.297354143 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.243770937 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.254917103 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.235501836 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.224310344 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.265756669 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.228259225 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.82901145 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.095809307 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.234056386 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.246615045 seconds)
  done (took 81.025018593 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.224510172 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.225242856 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.225949815 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.256024378 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.224106617 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.783334358 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.786078465 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.193614177 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.361339932 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.555607453 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.225461019 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.428429182 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.222813441 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.315798139 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.235680077 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.22827227 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.241229391 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.250402365 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.227536931 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.22640864 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.785904866 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.239373589 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.340635178 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.400554809 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.240628554 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.257277105 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.617391968 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.227355827 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.256337217 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.556150548 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.27496654 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.227392802 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.568965136 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.570104907 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.337829835 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227855833 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.257218245 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.225512234 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.505647744 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.227337699 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.227400672 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.230206153 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.867428459 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.230153039 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.787849501 seconds)
    (46/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.226801579 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.188027176 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.229009447 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.225686261 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.226497279 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.181918597 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.891145388 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.229612933 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.225956143 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.230121665 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.228192731 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.22751314 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.258177411 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.164260497 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.323611645 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.227162078 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.231994419 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.259046583 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.227256744 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.293168805 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.226948651 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.237269385 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.288957762 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.334167985 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.788683555 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.228212616 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32265699 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344623573 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.228651012 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.227555045 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.227170714 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.228202758 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.337997027 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.228321975 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.906644282 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.403132503 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.244907505 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.55830543 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.327058289 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.22859381 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.569337623 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.231593784 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.228967303 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927542133 seconds)
    (90/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.229472783 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324277832 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.229636083 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.228239136 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.228144033 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.230000436 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.910827971 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.794771463 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.464095338 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.232994692 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.830993149 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.232912213 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.082248426 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.782971619 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.865011243 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.232255065 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.339730063 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.404912213 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.24746498 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.22988052 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.570791793 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.232652863 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.282697067 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.229784013 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.631455953 seconds)
  done (took 376.495470461 seconds)
done (took 603.488403935 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.10245052 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.046990037 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.199596033 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.064134636 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.044987233 seconds)
  done (took 11.58899297 seconds)
done (took 12.720213887 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.419814416 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.420543476 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.290981607 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.427522157 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.264259254 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.436422534 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407044058 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.252717909 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.340837708 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.314362945 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.341073746 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.284837772 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265839074 seconds)
  done (took 18.598294236 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519427197 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.245124202 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.295276686 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.503449631 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.279988603 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.512501435 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.545896953 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.244097221 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.391833112 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.252484605 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.254027928 seconds)
  done (took 18.177387226 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.509200396 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.243240062 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.299790107 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.504046598 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.279689218 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.522758646 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.540926568 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.244567441 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.371320839 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.251612405 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.248633185 seconds)
  done (took 18.147708205 seconds)
done (took 56.055970873 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.267724446 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.327839059 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.263722402 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.250756521 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.246694045 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.24674207 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.248659821 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.246823557 seconds)
  done (took 11.22759362 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.246968169 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.244425888 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.244593454 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.245509403 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.245288767 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.245881554 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.243516246 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.245194707 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.24541421 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.245185942 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.246104063 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.244926983 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.245980714 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.244734758 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.244682136 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.242664822 seconds)
  done (took 21.052089061 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.247274461 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.245529389 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.243382801 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.244914973 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.244426494 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.245412461 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.245005455 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.242951585 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.24398912 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.246397442 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.244450942 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.243687781 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.24501821 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.245417619 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.245664409 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.24515111 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.245266798 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.245311572 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.248064406 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.244784346 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.245037289 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.244759633 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.24409166 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.244872467 seconds)
  done (took 31.011864065 seconds)
done (took 64.421585424 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.233539795 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.229898978 seconds)
  done (took 5.593989324 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.302509638 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.304566557 seconds)
  done (took 3.738334931 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.245879614 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.242503462 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.242433178 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.24421062 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.243652877 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.245042422 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.24561328 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.244282739 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.245075077 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.244223538 seconds)
  done (took 13.572707791 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.24315611 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.244065754 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.242900131 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.246201901 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.243695714 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.244163242 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.244280304 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.243912373 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.24208058 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.243804213 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.245869829 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.243089337 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.244306853 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.245960934 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.244450833 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.24346317 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.246006869 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.243057049 seconds)
  done (took 23.523724141 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.257955734 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.263672142 seconds)
  done (took 3.651001066 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.373091926 seconds)
    (2/7) benchmarking "second"...
    done (took 1.285758603 seconds)
    (3/7) benchmarking "month"...
    done (took 1.351671272 seconds)
    (4/7) benchmarking "year"...
    done (took 1.340088762 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.286646102 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.266159435 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.287650293 seconds)
  done (took 10.321612651 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.24544111 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.461757103 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.59119315 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.895757223 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.246018926 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.248601841 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.183862749 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.248771646 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.255738967 seconds)
  done (took 14.507185075 seconds)
done (took 76.03928722 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.23249105 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.269245687 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.256141173 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.250152837 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.542573536 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.233284571 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.234106349 seconds)
done (took 16.14827087 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.216912659 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.2136686 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.221538215 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.2436567 seconds)
  done (took 10.026791549 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.232894285 seconds)
    (2/2) benchmarking "read"...
    done (took 1.555417161 seconds)
  done (took 4.916853451 seconds)
done (took 16.074317026 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.24747763 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.247510095 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.248412377 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.24572691 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.246654345 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.245109692 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.246820248 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.246343507 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.24704156 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.247281957 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.247424094 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.247256024 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.246584171 seconds)
    (14/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.24635885 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.249497568 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246520816 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.246604833 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.247941725 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248473811 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.249256437 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.247297088 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.24795846 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.247488126 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.248691571 seconds)
  done (took 31.067789714 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.248707972 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.249291392 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.248224064 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.250677866 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.246889887 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.250000712 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.248180399 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.250392555 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.248256396 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.247824659 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.246085737 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.248945564 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.247342652 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.250334599 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248187376 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.249986922 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.24922153 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.248872847 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250081552 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.248862535 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.24888723 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.248370054 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.247459549 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.248797996 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.250379341 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.249449762 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.250381997 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.248892521 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.248302985 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.249478862 seconds)
  done (took 38.599804649 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.251224184 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.250320741 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.249019768 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.251175849 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.249962526 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.250961947 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.248113009 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.250395546 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.250305202 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.249987971 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.249054044 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.251625345 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.250525949 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.250219702 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.251352702 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.250425457 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.251937641 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.251829755 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.250193116 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.249299668 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.249866826 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.250848532 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.250031009 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.251140038 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.251428685 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.251597652 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.250354848 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.250380352 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.252253295 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.253404259 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.251350844 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.251810143 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.251162031 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.252530611 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.251222464 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.251358691 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.253792035 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.251736509 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.251888472 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.252095307 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.251172214 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.253981498 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.25264971 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.252227413 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.251348947 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.252297192 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.253066505 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.252174756 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.251735969 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.253091999 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.251638947 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.253325982 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.25364685 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.251621808 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.251992351 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.252213922 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.250942768 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.252917569 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.253226882 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.254029887 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.252977034 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.252544235 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.252648105 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.253282339 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.252956002 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.252535408 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.252408318 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.252365081 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.252005057 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.255255025 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.253010898 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.252994902 seconds)
  done (took 91.257453485 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.255794879 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.254077348 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.251975145 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.25375165 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.253606308 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.25440247 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251678442 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.253586171 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253432828 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.255021933 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.253789822 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.25396283 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.253218378 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253587805 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.252578131 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.253848772 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.255032299 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.252878204 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.253326589 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.252724754 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.253035771 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.254287063 seconds)
  done (took 28.718595399 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254384423 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.254506945 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.252062396 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.253900356 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.258395694 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.252991552 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.254722891 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256137319 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.2546915 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254863966 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253289789 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.254371728 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256405485 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.252937801 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.253162865 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.255099032 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.25380576 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.255891412 seconds)
  done (took 23.719347772 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.253580405 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.253517578 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.254142966 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.253345408 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.253883386 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.255378519 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.254627748 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.253418941 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.25415542 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.253252089 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.253760714 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.252474777 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.254042725 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.253888786 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255969321 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.254175848 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.255123184 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.254390509 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.254448209 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.253797327 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.25550038 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254296774 seconds)
  done (took 28.728586132 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.254391021 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.255204304 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.255152516 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.253941635 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.255264899 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.253419328 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.254356701 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.255612625 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.256292513 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.254343079 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.254640724 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.255490404 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.257744723 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.254902013 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.254167841 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.25383251 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.254505728 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.256476114 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255286772 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.253192106 seconds)
  done (took 26.236353895 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.257221761 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256391982 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.255966845 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.256630607 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.257189692 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.255087954 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25615204 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.256226335 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255476763 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.256165321 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256869752 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260177571 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25775717 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.256129633 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256822578 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.255905889 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.256077031 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.255188781 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.256636203 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.257258792 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.256500153 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.255186765 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.255614518 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.255805406 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.255898412 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.257186545 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.256578612 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.254832252 seconds)
  done (took 36.319421076 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.25772978 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.256339766 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.256730214 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.256295383 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.256237233 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.257694199 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.256614726 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.257442264 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.254291717 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.255926749 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.255765977 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.255736751 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.25522637 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.255500405 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.256322358 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.255964245 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.255794841 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.256380688 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.25546416 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.255396355 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.257678457 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.255528379 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.254654253 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.256076394 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.257570323 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.256106305 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.256549548 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.256461009 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.255906579 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275851157 seconds)
  done (took 38.845254332 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.27416931 seconds)
    (2/2) benchmarking "in"...
    done (took 1.275094739 seconds)
  done (took 3.687367815 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.255690871 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.255444691 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.257754973 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.256207307 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.256020162 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.256736759 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.257195392 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.256745908 seconds)
  done (took 11.190601788 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.247779606 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.259227476 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.256864097 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.259074148 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.258243874 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.250163949 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256189695 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.263512289 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.250198464 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.251305602 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.251044081 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.250740627 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.252837224 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252584038 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.250775936 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.254672935 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.25990117 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.2585702 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.259572975 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.260369961 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.259993958 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253535687 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255353369 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.261243589 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.250661259 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.259644745 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.26047026 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.263146887 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.251917781 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.257527381 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.2563266 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.26179674 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.259581884 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.260022088 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.260059049 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.259678195 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.261370844 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.258081312 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.26092181 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.265009599 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.261149503 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.260247995 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.253948962 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.259301618 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.257183922 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.263005717 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.260094985 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.258997836 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.251779646 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.254772115 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.262991149 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.251822598 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.259929362 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.257006981 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.258137829 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.263653813 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.268081027 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.253797156 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.255328317 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.263289706 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.269618626 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.262500927 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.259288866 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.267070571 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256223259 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.260321924 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.266353294 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.268059263 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.262962811 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.262120736 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.260335845 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269863578 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.266815484 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.267160526 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.260928863 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.261239809 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256752135 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.264268834 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.264227119 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.265770054 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.267018006 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261857336 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.258898579 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262106308 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256785797 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.26593827 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.261273952 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.262251349 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.253611022 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26511116 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268863644 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.264662693 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.25473029 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258888464 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259133351 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.264590634 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.255732803 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258902118 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.264605553 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.262142755 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262576814 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.256380723 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.260520146 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.268367369 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263552337 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.265419306 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.26983813 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.255369375 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.267648154 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.271642063 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.265149562 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.255701314 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.260875692 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.267099628 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.256100941 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.259799153 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.269974638 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.259452579 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.269567504 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.264394887 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.261066097 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269915726 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.271165165 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.265825421 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.257506591 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.268772414 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.264171668 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262126456 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.270824452 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.26447134 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.264048658 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261041628 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.269671263 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.258953959 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.268512137 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.259258451 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.268040133 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.2646419 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.264955949 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.261761805 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.265198934 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.262963721 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.264682962 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.268299609 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.27460115 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.261053236 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.271777501 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.265282857 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.264529414 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.265308509 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.271644119 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265783905 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.260820556 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.270458743 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.257702844 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26691838 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.258912882 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.26997978 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265325907 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.265445451 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.266823874 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.257317152 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.260133507 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.270107043 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265512953 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.266613545 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.268700462 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.26487879 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.267641404 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.258349264 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.266856149 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.256752479 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.261918066 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.269890847 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.266165846 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.266869663 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.264671085 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.273491729 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.26628059 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.266862027 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.2596028 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.264410626 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.272175523 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.267959178 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.276641666 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.266465272 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.26768394 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.261004287 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.263379295 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.2682576 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.260279082 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.271940363 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273154224 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273524344 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.263481994 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.269394748 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.259359205 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.268818676 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.265588782 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.274841778 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.268978507 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267511468 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.259929627 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.269504408 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.261674623 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.270734748 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.259258548 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.270193576 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.269686838 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.267872879 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.266421722 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.260916677 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265290851 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.270674676 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.267573334 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26768158 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.260831535 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.270509917 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.259387599 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.263099994 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.271860714 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.268753629 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.269367395 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.275536553 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.265363413 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.270752236 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.269073827 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.263069512 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.270788102 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.266393784 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.268873739 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.273605096 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.271612008 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.263986479 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273640679 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27157178 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.263267287 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.269053957 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.277562075 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.270109311 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.262896863 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.273343764 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.270635572 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.270121785 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.267564821 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.261340282 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.273471647 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.27212575 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.276702019 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.262319199 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.273425541 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.26292468 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.273185706 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.265647929 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.270842266 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.269687874 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27248448 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.277972357 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.269879838 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264352653 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.272664491 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.270627406 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.269392127 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264922755 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.272359184 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.271684975 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.270488067 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.267862079 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.26714581 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.272184682 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.26299599 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.273670981 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.263350781 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.279335949 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.284916556 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.271429776 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.273562729 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.276836403 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.272730092 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.272943215 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.266397327 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.264866519 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266556614 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.266970942 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.265506182 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.272381505 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264248966 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.272623123 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.269270767 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.271703616 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.271583785 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.270997387 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.263941119 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.274479931 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.270428684 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.269205382 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.26197629 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.271898681 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.265194856 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.2722402 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.272022148 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.265213696 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.27820614 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.275591398 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.269010262 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.267540097 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.265239882 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.264547069 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.267656176 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.274896108 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.26430803 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.272972608 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.264125297 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.268152471 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.266217042 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.274859757 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.279814425 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.265251149 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.273773664 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.269471837 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.262603743 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.26428693 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.271918169 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.274989316 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.28179834 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.265632374 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.274746321 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.270952475 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.270657872 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.271479033 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.27231224 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.271017369 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.272317415 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.27669198 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.278749672 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.267911302 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273082338 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.282207928 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.269980384 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.27201288 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.264171596 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.273728498 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.283152236 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.266458859 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.27038292 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.267360231 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.273946192 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.272465747 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.270769072 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.272284825 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.27329482 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.274635628 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.276838781 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275996428 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.271886639 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.275801791 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.282891774 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277195033 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.283628093 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.26754099 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.277387533 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.273210286 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.266715206 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.269281344 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.268440906 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.27797381 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.265496659 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.275919698 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.271156343 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.268188692 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.274328375 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.280305603 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.264549332 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270905648 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280157273 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.264165602 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.275862354 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.271192293 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.265399875 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.275773362 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.272429764 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.267307028 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.267848541 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.267949871 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.274953244 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.266767043 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.276892693 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.265457819 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.275729076 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.272249998 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.27316615 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.27384126 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.274029315 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.266072219 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.275610322 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.271843198 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.281898041 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.268300298 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.270734523 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.268552472 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.277422929 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284035138 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.266794505 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.278141607 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.275389391 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.266315934 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.271795205 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.277862369 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.267115704 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.278569983 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.2646833 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.269803016 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.268353962 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272781747 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.275489243 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.27782927 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.26577215 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.268244653 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275019375 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.274847526 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275560139 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.269569439 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.279303923 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.265686826 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.267043554 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.275164664 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.267916484 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.280195802 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266900463 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.269453711 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.271813877 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.276967983 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.274719474 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.273739457 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.265751317 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.268150668 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.281192031 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.278265089 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.268873815 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.269771167 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.276326072 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.267973846 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269541071 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.270791435 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270164344 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.270463001 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.278556443 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.268012255 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.268834009 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.27128223 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277750193 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.277598065 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.278505047 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.270370271 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.281694717 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.282642505 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282563698 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.268376292 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.271506683 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.271120428 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.276356918 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.273928564 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.268326139 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279733146 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.280461349 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.27815143 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27361558 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.276813636 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.267505153 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.277504464 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276174397 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.27055691 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.281785098 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.270504986 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.282348278 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.277532611 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.274394622 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.268248189 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.269779627 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.271313639 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.270146232 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.278444997 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.274072429 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.280425288 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.276318616 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.281463057 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.27816186 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.275493762 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.276327802 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.267835079 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.27812977 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.269245792 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.27748929 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.277611544 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.271028108 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.278170249 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277287892 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.269445118 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.273121503 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.282224879 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.27687028 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.270174315 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.273554747 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.280079268 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.288401231 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.277279648 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.273007074 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.274637476 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.279087882 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.277220057 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.277523541 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.270544275 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285204154 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.288521775 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.272131323 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.27367229 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.280470692 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.286206377 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.276650192 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.278129176 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.272286139 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.276276035 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.281605372 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.278244041 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.281984368 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.284790469 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.273567993 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.280146726 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.269535871 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.273540113 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.279377149 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287816269 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.27754627 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.271731552 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.28563489 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.290001674 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.276411566 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29092229 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.285433598 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.278099008 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.282774481 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.271542435 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.279507511 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.274606797 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.283698458 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.278199724 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.279660897 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.280018092 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.270384228 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.279530156 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.285630526 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.289442432 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.278795947 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.273092062 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.274137469 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.279678444 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278250673 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.280655155 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.280599287 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.28108185 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.278459615 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.275378414 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.2902204 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.291775091 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.284019686 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.281067636 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.280148755 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.281063605 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.283247936 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.277973524 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.284420638 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.281739763 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.28202816 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.276416904 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.289866737 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.281893629 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.274408696 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.27596017 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.276369418 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.284878521 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.287925931 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.298940008 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.284955751 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.284894542 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.283782895 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.280340214 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.275898005 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.28369392 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.281297031 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.275127485 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.27867502 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.28354068 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.284081388 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.281785938 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.275878985 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.285283292 seconds)
  done (took 758.02302492 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.281787491 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281144877 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.281399118 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281204711 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281285036 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.281666064 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280948123 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.283287767 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.282096271 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282213019 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.279987519 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.283488463 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.283495122 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.283004842 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.28183706 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.283668535 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282687233 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282434483 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.281470566 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282464469 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283827456 seconds)
  done (took 28.084330756 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281663501 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.28358067 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.283239989 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.284035033 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.282335953 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283951663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.284497053 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282806764 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282891452 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.283520198 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.284762967 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283773917 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.282488831 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.283281189 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.284990574 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.282290988 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.28414459 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.285447164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.285363582 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.284106086 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.285841035 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.285182701 seconds)
  done (took 29.405038788 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.283984893 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.284150782 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.279169539 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.286722246 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.28523942 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.284901189 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.28767064 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.285594088 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.286845529 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.278781264 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.27828302 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.278431901 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.280756666 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.289240039 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.281489034 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.290817004 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.285626178 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.285702664 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.287731854 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.284011022 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.289589088 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.298416134 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.285381023 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.277551178 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.28909072 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.287016519 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.286666181 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.286295199 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.277750287 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.288817654 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.286632188 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.281189008 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.28883951 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.289703619 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.281280886 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.289586858 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.286819489 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.287172249 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.288961598 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.284353608 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.293145501 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.286767632 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.289728843 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.29869094 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.289255088 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.280032473 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.29073725 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.287023005 seconds)
  done (took 62.892934458 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.287292049 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.286928437 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.287010718 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.288502685 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.286299936 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.288482297 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.288821467 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.285672272 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.287262177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.287281438 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.286964313 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.28872009 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.2872799 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.288073 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.28903589 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.288600724 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.288672798 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.287894258 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.288895188 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287505591 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.286770692 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.287250656 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.289571651 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.289199069 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288610694 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.28923866 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.289177818 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.288684787 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.289293128 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.28793752 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.290505601 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.288610726 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.287763885 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.288481858 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290272212 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.289452029 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.290233524 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.291559902 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.290119558 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.289792649 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.290623418 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.289876261 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.289606389 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.289384659 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.290795867 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.291507013 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.290364246 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289999626 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.291983661 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.291445608 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.291588277 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.292115786 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.291390933 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.291345004 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.290911264 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.291337553 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.290606421 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.291574948 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.291702745 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.292890042 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.290102484 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.292097212 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.291006184 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.291621916 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.29176578 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.292325333 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.290862497 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.291999691 seconds)
  done (took 88.855527136 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290594376 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.293036321 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.292937847 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292879465 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.292477531 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.293229333 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.293085492 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.293344253 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.292039168 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.29266947 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.293930153 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.291884044 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.292085111 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.293180702 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292172026 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.294132945 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.292818127 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.294403081 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.293358622 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.294783643 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.293071752 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.293845641 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.294795607 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.294682507 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.294351214 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.294664298 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.293745198 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.294160644 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292521669 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.293429162 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.293056178 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.293259416 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29286238 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.294215959 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.295128251 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.293938767 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293441451 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.294468233 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.293882349 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.294688071 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.2937647 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.296860604 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.29415317 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.294527234 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.295444983 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296635532 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296348929 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.296111245 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.294942966 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.29528291 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.295340215 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.296457894 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.295757765 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.296378074 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.297054825 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.295632156 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.296413195 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295781062 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295770521 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.29642464 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.296912026 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.295227655 seconds)
  done (took 81.412481708 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295327885 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.297633319 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.29623862 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.294857034 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.296359673 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.296925414 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295905008 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.29678904 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.29645361 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.296280309 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297650921 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.296410928 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.297619092 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.296283794 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.296322465 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.297314711 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.296359785 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.298364189 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296629218 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.297025829 seconds)
  done (took 27.103196833 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.298243572 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.297417786 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.29708163 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.296857413 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.296384063 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29765182 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.297495193 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297600146 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.298199206 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.29701839 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.297682531 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.298493172 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.296230897 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.29913884 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.297382449 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.298052286 seconds)
  done (took 21.932555172 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.297789289 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.297928665 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.298415974 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.299933777 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.297832989 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.29786377 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.298676299 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.297505305 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.298157374 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.298334003 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.298611288 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.29893679 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.298288532 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.299771207 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.297540268 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.297455347 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.298147701 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.298323148 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299381287 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.300582766 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.299082152 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.299402039 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.301208097 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.300253582 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.299608595 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.300499646 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.299425424 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.300971828 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.300031713 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.299743109 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.299411836 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.300807457 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.299222724 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.300209044 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.30197939 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.301367094 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.300433713 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.300621576 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.301912771 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.301315454 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.300961276 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.300413967 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.302361877 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.300569376 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.303226373 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.301422281 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.299846898 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.300167795 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.300256131 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.301277351 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.300271452 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.302228702 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.301251411 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.301434604 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.302221627 seconds)
  done (took 72.669796818 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301687902 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302130562 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.301898597 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.301683799 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30122127 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.3016269 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.302022208 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.303019983 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.30183077 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.301769765 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302701568 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304082586 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.302657726 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.301811689 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.302164888 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.302378634 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.301768054 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.302363646 seconds)
  done (took 24.614361412 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.302761322 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303285735 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.303807595 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.302087949 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.30226745 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.302726024 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304493382 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.303332495 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.302773041 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.30159924 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303378555 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.304215781 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303820729 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.303656239 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.304365521 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302081946 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.303719399 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.302411787 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.304505244 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303217316 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303415296 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303774611 seconds)
  done (took 29.847967172 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.295965987 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.296940338 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.294486747 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.309160164 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.30400967 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.295188659 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.292746004 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.28692786 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.305175331 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.311755694 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.306278263 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.294705726 seconds)
  done (took 16.770134785 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.299995371 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290096093 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.288847616 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289712482 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288168807 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290772962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288538997 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288969025 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291889786 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283140042 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282170637 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282500762 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282988103 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281631313 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28254154 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283044612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282990239 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278854524 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279490697 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278301529 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278156477 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279373286 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27925868 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277713206 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277706065 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274171746 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276471035 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274777596 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275361609 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.274877269 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276524534 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275826268 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274792092 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271347184 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269928191 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.269215193 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.270209776 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.271182159 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269782502 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271661028 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.268009357 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.268590995 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.267601939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.267410062 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.266474756 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.268666226 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.266659503 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.267606111 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264416675 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265632829 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.264144076 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265354568 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265760443 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264110149 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265194389 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.265590438 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.264761422 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.265220139 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.265122543 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265345406 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.265436048 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.264881832 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.265307013 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26775908 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.262576175 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.262513398 seconds)
  done (took 85.288021844 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.262000423 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.263915269 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.261724968 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.263214398 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.263707893 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258565917 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.258289941 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.257598212 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.258396127 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.258106075 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258991231 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.257974838 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257984219 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255608786 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255314325 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255184038 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.256099516 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256259998 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256492824 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256381894 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254600729 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25545459 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.256191804 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257100589 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25591191 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255333099 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256209559 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25567236 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.256939649 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256497014 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256189311 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256140416 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.256189668 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.256654263 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.255909746 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.256423699 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.255016773 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.256343591 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.255640032 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256416567 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.257300224 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.256612126 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.257236272 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25737161 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.257123252 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.25100854 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253516372 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.2530148 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253688035 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253796425 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253770075 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253273974 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253537822 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250518335 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250401288 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25095023 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24933886 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250821368 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250273125 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251100941 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251742573 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.248392574 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.247825893 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.247288846 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.248429512 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.248421864 seconds)
  done (took 83.993767759 seconds)
done (took 1770.396117604 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.403218839 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.355304154 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.236136848 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.238999626 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.237682364 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.238663881 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.244067832 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.236843533 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.23639842 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.235953446 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.235558103 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.429134361 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.275115172 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.236497884 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.236656793 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.335070646 seconds)
  done (took 25.544874485 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.25938673 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.252322332 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.350599543 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.249306687 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.272527093 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.420416525 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.306533396 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.251515114 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.401093578 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.269934118 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.24172755 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.274061419 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.251115421 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.241057979 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.268613771 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.418145214 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.488940975 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.246375724 seconds)
  done (took 27.595476457 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.646793957 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.274003062 seconds)
  done (took 5.060021709 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.268881689 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.250563593 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.251508033 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.249328262 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.241663104 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.241955104 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.249818768 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.247645962 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.244866214 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.364836005 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.257173669 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.267130685 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.250207017 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.252534786 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.259074424 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.295872628 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.411161057 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.261125554 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.260196252 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.257810394 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.249921557 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.342310866 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.290188229 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.265275306 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.364933002 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.254146227 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.258779384 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.258192741 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.36554746 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.262171408 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.250639455 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.251513528 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.253566649 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.245057918 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.781840797 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.247738727 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.288440179 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.261368681 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.262079357 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.400643581 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.253432101 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.260111327 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.246094173 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.76930359 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.361127178 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.365591032 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.250665053 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.270880974 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.254857594 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.31296521 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.253596211 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.254295683 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.316494493 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.042305903 seconds)
  done (took 80.892747704 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.24705699 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.246632424 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.428459454 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.261166599 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.24666941 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.251428478 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.251000666 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.50261494 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.264203132 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.248801256 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.55379277 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.838016042 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.251856153 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.323662349 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.289032189 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.301326024 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.24881087 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.24704774 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.249450855 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.249931057 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.796462891 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.248057124 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.24755815 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.325986936 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.287066133 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.755429002 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.248539512 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.253677213 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.248912281 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.251088174 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.806110571 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.261475389 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.297534343 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.244840931 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.516510363 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.606969242 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.560143768 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.244430925 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.267258824 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.247946043 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.263707832 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.736278056 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.579126996 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.238717792 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.237933568 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.737928892 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.236731849 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.236928769 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.238902844 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.506607415 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.237482355 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.24597161 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.237235129 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.242593648 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.234817861 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.293694938 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.292616775 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.746715764 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.236653664 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.237198271 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.282646617 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.23902123 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.247981178 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.243865424 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.23966681 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.581699586 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.484189047 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.244170157 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.578567222 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.788263494 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.236976645 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.883232247 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.243197333 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.248099222 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.270830687 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.248344293 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.238160815 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.743968211 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.25701003 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.238508778 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.558628954 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.241961295 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.532497592 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.258154604 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.238562986 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801665814 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.244805318 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.283808926 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.239132153 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.248012149 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.244008614 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.245154449 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.519065634 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.294419577 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.23954063 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.240820157 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.24845759 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.238413832 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.256630718 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.248596466 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.866556606 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.250132714 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.251729285 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.24153041 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239778687 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.258137275 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.23983049 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.240786637 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.522808961 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.242679406 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.263026027 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.242973538 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.24168147 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.245729854 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.31612828 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.248757313 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.526078306 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.249126162 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.240881504 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.249931912 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.240700548 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.257294049 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.24100045 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.258412472 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.230493041 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.542994473 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.257651764 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.254188701 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.243278723 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.241047011 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.260501695 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.248731483 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.296076029 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.243878028 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.014904546 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.288016563 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.241863205 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.24071759 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.254872277 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.242116755 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.264719932 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.241215468 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.537929784 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.526039262 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.476710946 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.246577881 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.242950952 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.032903701 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.279194834 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.423633313 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.260807402 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.24169843 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.520919893 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.475564502 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.24535791 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.242665469 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.246175125 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.520586044 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.252469134 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.565964284 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.828303692 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.24860825 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.243662527 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.014967393 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.052439176 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.249535032 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.243702852 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.529655999 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.263669063 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.243146458 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.243248565 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.244941536 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.243563764 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.249611447 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.247704343 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.243853484 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.243892736 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.585912688 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.438246524 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.260373724 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.247001203 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.75638911 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.269972634 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.245869585 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.255663226 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.247266483 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.244119105 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.2989592 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.248540502 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.280380266 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.247287064 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.245194401 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.782553774 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.250096245 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.250516658 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.439336866 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.963352387 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.249931061 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.246505947 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.245148678 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.308801822 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787024175 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.282503572 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.531976927 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.250212032 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.285394661 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.24794205 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.264911442 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.786708753 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.255730665 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.24537712 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.963894824 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.250069317 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.680371019 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.24670276 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.251491039 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.8780853 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.25223385 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.246533904 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.250452509 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.251254176 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.579165412 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.253329472 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.25595997 seconds)
  done (took 478.006466552 seconds)
done (took 618.231684786 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.246084433 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.255036029 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.253758853 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.252491944 seconds)
  done (took 10.14917706 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.263390486 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.253052813 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.264065074 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.25348491 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.266562479 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.253423944 seconds)
  done (took 8.697694092 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.248115635 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.251738736 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.253265422 seconds)
  done (took 7.896833051 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.441966098 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.274360823 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.583066882 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.253165154 seconds)
  done (took 8.695363067 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.264506383 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.263111548 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.264629967 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.267606869 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.26605631 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.265794166 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.267068635 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.265689472 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.264442386 seconds)
  done (took 12.531102876 seconds)
done (took 49.112961091 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.237863376 seconds)
    (2/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.349778726 seconds)
    (3/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.228572644 seconds)
    (4/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.324463468 seconds)
    (5/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.326019065 seconds)
    (6/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.448464878 seconds)
    (7/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.233252786 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.288281225 seconds)
    (9/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.35345457 seconds)
    (10/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.460681156 seconds)
    (11/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.376081923 seconds)
    (12/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.231677353 seconds)
    (13/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.287358345 seconds)
    (14/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.22784185 seconds)
    (15/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.274384739 seconds)
    (16/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.371546489 seconds)
    (17/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.230663917 seconds)
    (18/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.2686732 seconds)
    (19/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.264189442 seconds)
    (20/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.25477845 seconds)
    (21/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.425158958 seconds)
    (22/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.287779037 seconds)
    (23/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.328261979 seconds)
    (24/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.283514014 seconds)
    (25/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.403999222 seconds)
    (26/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.248987334 seconds)
    (27/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.321498374 seconds)
    (28/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.252884779 seconds)
    (29/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.423787653 seconds)
    (30/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.493284176 seconds)
    (31/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.235993013 seconds)
    (32/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.256708985 seconds)
    (33/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.342577401 seconds)
    (34/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.482223732 seconds)
    (35/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.458010413 seconds)
    (36/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.344945921 seconds)
    (37/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.358728008 seconds)
    (38/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.23560885 seconds)
    (39/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.277277834 seconds)
    (40/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.330312608 seconds)
    (41/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.326004842 seconds)
    (42/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.275404208 seconds)
    (43/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.371495309 seconds)
    (44/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.357643539 seconds)
    (45/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.344266844 seconds)
    (46/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.348735436 seconds)
    (47/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.591782861 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.350295296 seconds)
    (49/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.314112474 seconds)
    (50/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.293098908 seconds)
    (51/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.246775085 seconds)
    (52/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.238901131 seconds)
    (53/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.435832208 seconds)
    (54/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.38752473 seconds)
    (55/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.379909678 seconds)
    (56/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.4046905 seconds)
    (57/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.416118086 seconds)
    (58/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.407155483 seconds)
    (59/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.234538299 seconds)
    (60/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.413866044 seconds)
    (61/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.232092758 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.361438007 seconds)
    (63/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.493773385 seconds)
    (64/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.379955486 seconds)
    (65/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.406039409 seconds)
    (66/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.349927941 seconds)
    (67/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.380255985 seconds)
    (68/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.349175954 seconds)
    (69/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.41044018 seconds)
    (70/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.286379194 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.489487373 seconds)
    (72/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.348887764 seconds)
    (73/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.439919948 seconds)
    (74/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.54355425 seconds)
    (75/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.405134434 seconds)
    (76/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.244857432 seconds)
    (77/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.422056377 seconds)
    (78/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.349656749 seconds)
    (79/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.314195012 seconds)
    (80/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.420375161 seconds)
    (81/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.375693497 seconds)
    (82/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.473567474 seconds)
    (83/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.237548934 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.370498694 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.347293448 seconds)
    (86/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.257752582 seconds)
    (87/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.263650379 seconds)
    (88/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.414284295 seconds)
    (89/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.359876451 seconds)
    (90/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.234971301 seconds)
    (91/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.41386655 seconds)
    (92/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.484775334 seconds)
    (93/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.377007046 seconds)
    (94/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.293063 seconds)
    (95/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.326528325 seconds)
    (96/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.25329326 seconds)
    (97/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.2394661 seconds)
    (98/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.432666586 seconds)
    (99/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.292270171 seconds)
    (100/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.492129926 seconds)
    (101/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.364151905 seconds)
    (102/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.335351508 seconds)
    (103/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.333926432 seconds)
    (104/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.414648198 seconds)
    (105/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.487569767 seconds)
    (106/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.241583022 seconds)
    (107/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.463825297 seconds)
    (108/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.241753225 seconds)
    (109/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.242810285 seconds)
    (110/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.387959754 seconds)
    (111/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.290930461 seconds)
    (112/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.298270088 seconds)
    (113/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.385789057 seconds)
    (114/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.433065034 seconds)
    (115/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.33420894 seconds)
    (116/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.400936639 seconds)
    (117/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.372190636 seconds)
    (118/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.237697647 seconds)
    (119/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.346510456 seconds)
    (120/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.333649804 seconds)
    (121/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.358664988 seconds)
    (122/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.322077039 seconds)
    (123/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.29604998 seconds)
    (124/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.597729577 seconds)
    (125/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.408860285 seconds)
    (126/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.331822466 seconds)
    (127/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.363089258 seconds)
    (128/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.297947965 seconds)
    (129/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.235818609 seconds)
    (130/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.566889685 seconds)
    (131/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.295201058 seconds)
    (132/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.23713351 seconds)
    (133/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.359758017 seconds)
    (134/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.497892816 seconds)
    (135/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.394841629 seconds)
    (136/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.351210442 seconds)
    (137/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.473451651 seconds)
    (138/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.350059025 seconds)
    (139/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.37613242 seconds)
    (140/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.327255257 seconds)
    (141/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.495455026 seconds)
    (142/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.495353158 seconds)
    (143/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.460991565 seconds)
    (144/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.332938629 seconds)
    (145/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.434775508 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.25882899 seconds)
    (147/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.252176846 seconds)
    (148/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.422704609 seconds)
    (149/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.41523194 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.360839587 seconds)
    (151/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.30084274 seconds)
    (152/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.290725934 seconds)
    (153/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.238852179 seconds)
    (154/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.446849025 seconds)
    (155/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.297449128 seconds)
    (156/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.259329992 seconds)
    (157/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.357748649 seconds)
    (158/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.480249647 seconds)
    (159/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.240448838 seconds)
    (160/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.685045087 seconds)
    (161/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.299024802 seconds)
    (162/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.479799924 seconds)
    (163/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.259776916 seconds)
    (164/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.378906104 seconds)
    (165/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.34829172 seconds)
    (166/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.242591372 seconds)
    (167/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.36357888 seconds)
    (168/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.556626021 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.244304222 seconds)
    (170/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.562791403 seconds)
    (171/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.441081945 seconds)
    (172/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.24005239 seconds)
    (173/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.301561425 seconds)
    (174/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.385673982 seconds)
    (175/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.533338465 seconds)
    (176/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.485582535 seconds)
    (177/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.457507291 seconds)
    (178/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.333087131 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.377538035 seconds)
    (180/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.498499268 seconds)
    (181/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.321390658 seconds)
    (182/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.295513019 seconds)
    (183/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.266974679 seconds)
    (184/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.257891782 seconds)
    (185/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.294767414 seconds)
    (186/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.66660183 seconds)
    (187/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.420332513 seconds)
    (188/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.28776225 seconds)
    (189/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.553989936 seconds)
    (190/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.267966986 seconds)
    (191/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.520760116 seconds)
    (192/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.241890039 seconds)
  done (took 309.7925431 seconds)
done (took 310.936847321 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.290306522 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.367054735 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.270463006 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.27118402 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.2714279 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.256553926 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.29246681 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.271812426 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.28561494 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.287039048 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.256031295 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.280867209 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.287067421 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.28196638 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.305114381 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.272072625 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.2718811 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.281350692 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.285805168 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.290219634 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.273996246 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.273469905 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.298058044 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.271625685 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.279504923 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280683141 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.27708422 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.266392554 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.283009159 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.287690978 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.277026626 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.282598907 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.291129777 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.284681081 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.27440232 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.28453571 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.272690037 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.369275886 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.292830359 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.282678622 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.28104856 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.290220105 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.278386673 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.278123272 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.285081625 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.301943258 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.280668667 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.289241412 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.278212291 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.251356667 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.295202914 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.285774495 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.282485554 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.251986597 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.266968572 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.292645849 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.284365856 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.293992709 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.281755543 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.274968228 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.30811056 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.295024082 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.286466193 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.282858267 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.282394386 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.289988216 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.284755262 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.290740924 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.282932178 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.275419663 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.27608941 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.284822377 seconds)
done (took 101.602881316 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.397835354 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.271429625 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.430977915 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.283198412 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.437551645 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.396413323 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.282980941 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.283508411 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.281442923 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.0744726 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.282023811 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.282895321 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.271894495 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.283229336 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.394206982 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.283910906 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.282085252 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.974473851 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.284103404 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.410986018 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.267426269 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.285099926 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.283013622 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.076717715 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.272501252 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.268521195 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.411570264 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.284744623 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.97734161 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.271341856 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.273191651 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.977169697 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.411364269 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.301671621 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.294180409 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.29187646 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.440872029 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.287508054 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.399634013 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.400662982 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.432567547 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.323104038 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.272761538 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.275937801 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.287006875 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.286492828 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.284781711 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.313759596 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.273222853 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.286210047 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.976997895 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.29398747 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.285616629 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.285671605 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.287265962 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.315076192 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.286688271 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.285811241 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.413469903 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.287459278 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.403182064 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.082283006 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.079166302 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.286921132 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.275192307 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.285769586 seconds)
  done (took 104.693631876 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.344473088 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.351261845 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.385715508 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.278427316 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.327187624 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.386017721 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.27846757 seconds)
  done (took 10.514027261 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.28381225 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.286743655 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.32599412 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.324743283 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.287739132 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.448269163 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.287097271 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.290200428 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.286433153 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.32922215 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.287820616 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.287840795 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.297537399 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.279695765 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.326194873 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.29097108 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.397321721 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.28023036 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.287962106 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.431392623 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.288879602 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.296986804 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.330799592 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.292535838 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.289842555 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.287444183 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.083287946 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.289652258 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.287542529 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.289310003 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.28995162 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.344735971 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.290064292 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.27936735 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.290867844 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398373333 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.290127044 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.289680533 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.289857073 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.282813707 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.290210257 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.28951927 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.288905877 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.289113567 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.288039709 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.304625421 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.289639941 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.289658033 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.289166463 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.289999928 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.333498715 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.289472254 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.289365603 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.29145633 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.336382639 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.298972464 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.289260787 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.290321095 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.291121977 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.291066262 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.434132354 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.328616072 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.290063981 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.329894278 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.289840055 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.292052483 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.290438667 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.291195834 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.372507913 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.29106385 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.329158032 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.290868033 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.469877966 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.30584513 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.293544807 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.286563981 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.284622033 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.290891238 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.278409565 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.288673651 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.290599323 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.284919304 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.289131873 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.291447873 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.291373951 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.440430456 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.394132905 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.292821617 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.298913227 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.289907619 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.292548104 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.336757824 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.291990449 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.291771156 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333061853 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.400842982 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.334573373 seconds)
  done (took 132.949527872 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.296542893 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.296971716 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.287957599 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.311491944 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.285522614 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.283819506 seconds)
  done (took 8.930724786 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.287381619 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.295812206 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.293234044 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.292653093 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.294994639 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.295556714 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.294516829 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.287304228 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.297061661 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.294972806 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.29623586 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.294094635 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.296346457 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.296213782 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.294545803 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.295369348 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.295505771 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.296845896 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.294298873 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.294104621 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.283135278 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.295157842 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.296697577 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.288030954 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.299220016 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.295901523 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.31015057 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.295608006 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.296233988 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.29405921 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.298010757 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.296255906 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.286544502 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.290539361 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.297508895 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.289438422 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.300032914 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.296766189 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.295373792 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.29730174 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.297428525 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.29774554 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.296758689 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.295887151 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.289203231 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.291615409 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.299934558 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.311310444 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.297035758 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.298341489 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.298220809 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.297181431 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.297366696 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.299362952 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.289950202 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.29176018 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.300410002 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.296775684 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.296813328 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.289942864 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.299921062 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.298584908 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.290023999 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.300791699 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.297695995 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.298472778 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.289476092 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.301699311 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298721327 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.29895951 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.298561914 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.297967513 seconds)
  done (took 95.465686316 seconds)
done (took 353.713343429 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.596706114 seconds)
  done (took 3.770393859 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.547010292 seconds)
  done (took 3.722217278 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.700501076 seconds)
  done (took 22.122342102 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.368955295 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.372467345 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.28305717 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.284156879 seconds)
  done (took 10.481425991 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.553400403 seconds)
  done (took 3.728795166 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.295287544 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.307211804 seconds)
  done (took 5.779090257 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.434066011 seconds)
  done (took 3.608959996 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.50825563 seconds)
  done (took 3.682971239 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.312252824 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.303115857 seconds)
  done (took 5.799353886 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.265516545 seconds)
  done (took 3.440367312 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.46390364 seconds)
  done (took 20.639693879 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.306815859 seconds)
  done (took 3.485507876 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.316670431 seconds)
  done (took 3.492900437 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.684923414 seconds)
  done (took 5.861076062 seconds)
done (took 100.789844587 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.285165914 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.284596385 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.285850258 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.284635014 seconds)
  done (took 10.316009934 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.366127558 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.363560673 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.372643867 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.356359901 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.35899155 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.369076416 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.327063088 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.32746622 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.356498325 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.35314309 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.370923439 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.357987194 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.368721918 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.327711483 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.352939161 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.369821642 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.357190643 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.373474635 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.327649428 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.360029622 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.303496545 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.360631327 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.354356003 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.302342917 seconds)
  done (took 33.616561675 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.789211503 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.374303673 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.447011118 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.344828014 seconds)
  done (took 7.132235511 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.405342578 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.40731397 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.425516547 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.461308867 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.509417885 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.422870754 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.325859022 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.325350906 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.310249341 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.408040285 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.491111001 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.40587902 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.622504169 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.303968066 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.621361256 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.302782463 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.303717949 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.40651234 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.455947095 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.486972418 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.303998149 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.407763342 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.410633727 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.407370576 seconds)
  done (took 35.110791974 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.311718366 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.319305165 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.305042768 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.320202387 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.306173796 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.306132882 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.306632091 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.313266732 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.304151056 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.304792631 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.306097521 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.320508076 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.305478932 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.306007453 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.314951975 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.308315338 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.307385447 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.312084176 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.3163732 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.307682401 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.306352172 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.313085021 seconds)
  done (took 30.001449302 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.290659155 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.290487408 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.641773952 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.546621262 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.28967816 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.297085217 seconds)
  done (took 13.536456142 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.360768878 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.497069884 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.298565519 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.623672558 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.707722871 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.29871587 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.299721891 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.527131448 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.812058428 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.803944669 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.354652444 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.36393645 seconds)
  done (took 19.12821644 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.296637436 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.296595449 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.302335525 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.312630336 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.348022233 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.303672838 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.305139781 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.290749404 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.354555422 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.354572062 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.307031373 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.348652683 seconds)
  done (took 21.003082749 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.383091607 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301635242 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316227493 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319135014 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30679052 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30221661 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.315017824 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.008342342 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.311925789 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579118002 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314368681 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390184364 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549180622 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.309899824 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307897356 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.234810237 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.535506782 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.761117428 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305065465 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30558616 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.340499092 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.305346923 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.309283469 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.518924231 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.311801021 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.305187438 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.567653271 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304751364 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.566285902 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.54542209 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.545374654 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311920824 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.58113107 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93468011 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415595216 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.497144632 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324941105 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.30946433 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.294550787 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.311224393 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335775883 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.311957859 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541901108 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311809437 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.305832087 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304144836 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.024211644 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.318082866 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.305596236 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.306412394 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.540320926 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.392454345 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.311114279 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.305119156 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325009022 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310953318 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.311386129 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425975993 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.945071454 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315970622 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325647316 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.312732652 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.304073136 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324841221 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930806885 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.318725311 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.312351822 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.312920703 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.306577243 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313908681 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.334937039 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307057924 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.328068399 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.308470169 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042616804 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314633577 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314072953 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821526302 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318168115 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.313863226 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533373671 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308550778 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307470127 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.308385384 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.308767092 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.003291318 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.316023053 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.277358779 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373773486 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.014919273 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.50711917 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332170773 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.338695591 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.529768742 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.278366736 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310663082 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.317105644 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317170972 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330297791 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.02058631 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314512957 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.31573049 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55659892 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.520164975 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311819642 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.241156283 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.770815343 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.318767399 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.339829282 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.317498616 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.509254168 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.90427731 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.559280221 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317324902 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348078487 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.311547377 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061514345 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315598618 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.322628633 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.313485576 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.586664802 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.106756305 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.311181635 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385390655 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314448173 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.312067213 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320121259 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317737356 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310638283 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.483385165 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320833189 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.552575828 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.318923859 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311496505 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.319185883 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322556346 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.320320056 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.532760816 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316702937 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592701487 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311702518 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.311998573 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312147038 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.531200068 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.316951603 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.324511574 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.654275506 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313144096 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.32263306 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.556779681 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.351103767 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.425294942 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344163615 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.316250228 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.566602316 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.31783628 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.318756051 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.31966741 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317864729 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31827836 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.321739789 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304378409 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908997104 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295157479 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.319652417 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.314146019 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.329674495 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.388069504 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.32205846 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508864354 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.322182092 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326835204 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.32607245 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.31427685 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55473365 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.550116993 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.321899099 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.495690424 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.770315715 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.908805698 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336001782 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.314812679 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.314387099 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.31418206 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315307558 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315224396 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315035117 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511655274 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.565581649 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324335739 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.911934125 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324960154 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.316823197 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.329077574 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.551978567 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.331009666 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315442327 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.325090334 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322119042 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.324266328 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.574805895 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543734541 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.332663247 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.315060637 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.834911427 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.323508427 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.317569108 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.316158208 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343625755 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.318873517 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.183879016 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660218893 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.307731761 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.558782043 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324899375 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.34008587 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.317229909 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316580378 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.351232587 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.337823682 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.329854984 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.513195264 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.323224411 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.324761156 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955993387 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.058767038 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861247529 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.334915189 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.329819445 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.324425928 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.035125239 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324909149 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.320127752 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556782364 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.036230228 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322725646 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777940292 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.332687986 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.053654446 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562651375 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549554018 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33017612 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.327130386 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.564344582 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537594229 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345236147 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.318110749 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.339370332 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.289147834 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.853619627 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335924437 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.504567276 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.03408931 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324055804 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.342243048 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.369036829 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.326024303 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.695345067 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.324073926 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.319567277 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326215615 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326968934 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144517286 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.325229674 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.319831653 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941343365 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.330088268 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.789428375 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325663609 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.517749292 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.565143817 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.541422058 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.335754932 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.337130118 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.571055214 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.561751788 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328808433 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.32520454 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.86260247 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.183291774 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.329611751 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322537073 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077412888 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323030687 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.593425958 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.338092772 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.328143318 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.331281157 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.322669114 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.322690958 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.32345243 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328795333 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299339741 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.78547642 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.316623356 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.314293667 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328768003 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329423779 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.568644578 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.338096081 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.919820198 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554414631 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316808055 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.36206385 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.328326832 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323116237 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.299914432 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.323347007 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.323397911 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.34876654 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.548212598 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.323059496 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.292997022 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39992781 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.538379935 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323950944 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.323876347 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532524149 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.329954182 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.328301468 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093021478 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361436272 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.327297622 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328344426 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.321034013 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.367859632 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.398183294 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522043524 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.571382434 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.57124975 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.70905942 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.343547786 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.332371637 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.34151122 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.405354616 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324665014 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.33665579 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.330774494 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92101927 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.080919577 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.935001815 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.576371911 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333658967 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326482139 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326274407 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565701456 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325981417 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601434196 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326606163 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.33587812 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.353577537 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.336353772 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337275795 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.542707474 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.601071016 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.326850426 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.33090879 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.333223466 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.326674934 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572410024 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.543406702 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.793417545 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843410328 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328846515 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333510991 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.054094291 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.608142542 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328455211 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.329725979 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328655404 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.338884833 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.35875131 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.339993075 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.329261672 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558311836 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.567485716 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977224296 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.572607512 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.518839998 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.329964517 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328040991 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.575635531 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162482886 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.527071025 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939558537 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.030958137 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.586279601 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402690084 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.527748016 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.335964767 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568245764 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.336007263 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.333118775 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.330570488 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329136821 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.328981549 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.569104908 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936869253 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.58951191 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.33512501 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.337904847 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365799389 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.528617099 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.558541032 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.031683386 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.550774584 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.576241925 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344308425 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.331138216 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939029031 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577422084 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337708813 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.336724654 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538520798 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.337450645 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.366091796 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.206207081 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.330834544 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.852034505 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.543480856 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.352028442 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335220127 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.036430814 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.944132388 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.348207808 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.80167902 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.336290883 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343552961 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.614096631 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.340363585 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343052347 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.619250064 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.338084004 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.339870158 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.539544829 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.938489644 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.074265081 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.355552944 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353606635 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.353856895 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334548372 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332114993 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.338711121 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.33522918 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.715484936 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.339635078 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334011985 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347140551 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.345034656 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34323955 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.339128144 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.334760921 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.342938109 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.305775637 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.326443763 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.368740422 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455586684 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.883938234 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.342524381 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.949288926 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.670261675 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.582008198 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.33491802 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.309510014 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.340418023 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.334656774 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336047163 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.336390333 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.332742602 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.861232102 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.338919824 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.584133335 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.347864569 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.546787319 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.545474868 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.344738071 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.542910147 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345784515 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361241522 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.305090862 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335875381 seconds)
  done (took 954.028118952 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.364892613 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.338780818 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.338915773 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.383866105 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.330655619 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.327751546 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.331301233 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.383699235 seconds)
  done (took 20.013708404 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.330989119 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.334955725 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.332579517 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.334997941 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.327964643 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.861480889 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.333093869 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.338312306 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.349691632 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.339052555 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.333254178 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 1.986889495 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.341242156 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.332567819 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.345458045 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.343242277 seconds)
  done (took 31.778697755 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.02497392 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.339864085 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.820229677 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.348703585 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.347528129 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.330301824 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.453390487 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.329598548 seconds)
  done (took 25.209176961 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.343132171 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.342862513 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.343236048 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.342810919 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.344109507 seconds)
  done (took 7.929922542 seconds)
done (took 1209.981447462 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.343576516 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.343830785 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.345281344 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.344739325 seconds)
  done (took 6.591784002 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.307702535 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.308636104 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.308999112 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.325147817 seconds)
  done (took 9.464931844 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.98961172 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.839674206 seconds)
  done (took 5.043111266 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.895136971 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.893790017 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.890457975 seconds)
  done (took 6.894502866 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.625330753 seconds)
  done (took 2.839675598 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.329877249 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.350432549 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.079347159 seconds)
  done (took 7.975923462 seconds)
done (took 40.02468256 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.338194542 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.092935277 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.487771397 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.338392212 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.490821109 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.487489448 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.58181209 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.334455434 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.333201852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.341510139 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.339518957 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.492669516 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.569879803 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.093606262 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.570344691 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.095602348 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.493514674 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.33077336 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.33317134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.331135961 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.584912532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.339024088 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.332130504 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.331771289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.501488721 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.51108874 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.332673086 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.090371351 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.331551393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.341444942 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.482088102 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.331941263 seconds)
  done (took 81.203749261 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.330941819 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.335332075 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.335666014 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.347737227 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.332302179 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.341065676 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.334532966 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.333148262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.331733795 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.350217263 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.346846679 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.332447738 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.33408281 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.3339948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.349136697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.345105198 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.332808855 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.337647814 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.335131466 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.34871485 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.333966253 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.333549844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.336685846 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.340587875 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.338704701 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.346569824 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.345980946 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.333977577 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.334200775 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.334635621 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.3637873 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.333902266 seconds)
  done (took 76.064015959 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.334363402 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.349050063 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.348975696 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.335211504 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.333540638 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.3404305 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.333561232 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.333958651 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.349229194 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.34385669 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.334912862 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.33558733 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.337812074 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.350427879 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.33816729 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.351189164 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.335352693 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.339261388 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.340740598 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.349454378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.334499445 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.344781103 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.333569036 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.335027661 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.340463241 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.337076068 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.342776027 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.335292024 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.335048339 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.335367921 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.360115426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.340614469 seconds)
  done (took 76.109550171 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.575706485 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.352042559 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.354094801 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.345626222 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.35523807 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.350429762 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.345037234 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.58255244 seconds)
  done (took 14.48206103 seconds)
done (took 249.074906491 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.354550839 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.825866885 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.380347126 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.346216452 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.368933577 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.374807341 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.561555946 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.379214224 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.560972636 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.366553314 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.360167406 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.359001036 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.124094749 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.500657737 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.160091342 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.261894391 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.198893131 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.344643845 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 1.890068668 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.622784245 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.375026868 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.33883046 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.14076492 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.206750716 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.322979512 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.443027147 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.441901427 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.574684479 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.506464991 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.420991947 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.830984589 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.353992364 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.354461805 seconds)
  done (took 62.875121154 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.345717602 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.354511783 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.354931458 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.355524829 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.354111344 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.35613326 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.345682324 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.354596786 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.355200134 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.354165978 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.355406711 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.354324472 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.354502881 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.356786038 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.355268363 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.329566372 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.344940215 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.354840668 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.345717169 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.329076143 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.355881633 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.356206707 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.355351097 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.356640954 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.356608132 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.355767205 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.355085122 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.356261085 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.356183906 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.356100557 seconds)
  done (took 41.795185854 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.357577229 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.882676171 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.066162663 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.358715795 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.348932722 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.351591976 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.623106726 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.365040174 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.350515945 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.35387404 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.800732663 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.3655668 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.380891696 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.071451586 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.356171046 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.358266242 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.359464983 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.349542437 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.893858706 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.364940178 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.624221081 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.365406054 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.625964644 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.364384823 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.352420246 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.350839919 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.354061401 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.16611329 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.373849991 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.800242152 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.083779268 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.62289308 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.10629244 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.119570612 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.094372626 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.366505721 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.359522168 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.808434079 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.357108389 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.351520656 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.622676861 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.35592873 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.078170784 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.028282742 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.365865701 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.359930699 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.18987794 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.816492123 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.586603192 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.361060173 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.107196538 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.358673473 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.362229826 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.351939496 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.583287508 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.358289393 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.35113563 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.1836858 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.362086398 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.626027613 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.367881644 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.351830075 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.893011832 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.358360341 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.890879084 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.358746612 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.360918772 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.353024681 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.080006158 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.361349741 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.044520239 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.373821998 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.361019935 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.805439767 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.894841093 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.242921468 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.360263275 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.897176446 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.134742031 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.644361185 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.36159942 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.141690877 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.649482578 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.361991377 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.364478662 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.363776826 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.362796201 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.4578566 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.623292618 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.972345842 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.044075208 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.201571035 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.634430075 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.367908011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.354443652 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.192224911 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.368125242 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.364157244 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.079116252 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.05272271 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.375524582 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.36228335 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.032919876 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.377552003 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.63001945 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.367285383 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.114395184 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.362259044 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.428848115 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.364178573 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.362044393 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.358910535 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.629115697 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.363372277 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.364138753 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.029373572 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.837867823 seconds)
  done (took 189.458731757 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.352586018 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.350902149 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.349202544 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.350131501 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.349902609 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.358235797 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.350891648 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.349225586 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.353777526 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.350387099 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.349778427 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.358172087 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.357418987 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.35045696 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.351795805 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.35164744 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.349560638 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.356185856 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.352326002 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.351278358 seconds)
  done (took 44.27626978 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.366844005 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.897389671 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.863390788 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.373289505 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.367517828 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.358111901 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.41019958 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.366769902 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.367236501 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.644608589 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.526462892 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.373651061 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.366274738 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.365685766 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.861964101 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.345240137 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.645650696 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.903314599 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.372713174 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.897829933 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.344750047 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.366805155 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.355078346 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.899805315 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.661113966 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.635929255 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.417883948 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.893896562 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.371874708 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.36653882 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.896174412 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.374411986 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.358523073 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.882865979 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.373516913 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.383175868 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.367049189 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.41453764 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.414792996 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.648339052 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.91104969 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.645434694 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.385148343 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.519263633 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.376853691 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.339781832 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.910493814 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.376439969 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.34232599 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.37102638 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.375376869 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.875781518 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.366339579 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.87332427 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.373462209 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.369474404 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.901082619 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.880455305 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.872213239 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.527372294 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.365194739 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.632979157 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.374099181 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.913259722 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.375861078 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.370530271 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.369574123 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.526905948 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.908677741 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.638626503 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.656564363 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.656817365 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.376275129 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.425175798 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.371579812 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.65233357 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.429140031 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.738376113 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.657130943 seconds)
  done (took 123.369183334 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.62799206 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.478055725 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.729476768 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 1.937334253 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.858041939 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.507204648 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.473954268 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.604205039 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.3770229 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.475333955 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.003973519 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.45862548 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.119392376 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.431275175 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.473133852 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.483727756 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.748990204 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.30073562 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 1.984090579 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.980656298 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.387702752 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.463584456 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.867312033 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.553604389 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.368071419 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 1.939372171 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.277615572 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.875385676 seconds)
  done (took 52.02353618 seconds)
done (took 515.019192382 seconds)
SAVING RESULT...
DONE!
