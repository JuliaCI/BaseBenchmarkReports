cset: moving following pidspec: 7408
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.985812883 seconds)
loading group "string"... done (took 0.574819964 seconds)
loading group "linalg"... done (took 9.258936735 seconds)
loading group "parallel"... done (took 0.177914064 seconds)
loading group "find"... done (took 1.420708185 seconds)
loading group "tuple"... done (took 2.245505662 seconds)
loading group "dates"... done (took 1.422860645 seconds)
loading group "micro"... done (took 0.237350612 seconds)
loading group "io"... done (took 0.657864218 seconds)
loading group "scalar"... done (took 45.214668223 seconds)
loading group "sparse"... done (took 14.483503594 seconds)
loading group "broadcast"... done (took 1.205554165 seconds)
loading group "union"... done (took 16.372610126 seconds)
loading group "simd"... done (took 5.654334323 seconds)
loading group "random"... done (took 11.351235457 seconds)
loading group "problem"... done (took 2.353361641 seconds)
loading group "array"... done (took 27.425279638 seconds)
loading group "misc"... done (took 1.306564753 seconds)
loading group "sort"... done (took 4.073902917 seconds)
loading group "collection"... done (took 24.284346096 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.742049675 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.156044503 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.17519722 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.22498267 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.237944321 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.159358263 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.185365552 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.623903981 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.11389874 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.255140145 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.170209749 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.685922383 seconds)
done (took 6.474737061 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.260810707 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.088777809 seconds)
    (2/2) benchmarking "String"...
    done (took 0.1530122 seconds)
  done (took 0.904959722 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.090992925 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.218018326 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.121466104 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.138360386 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.139066693 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.121647158 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.137173 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.137478087 seconds)
  done (took 1.680311581 seconds)
done (took 3.605543244 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.960352241 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.884027203 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.543055629 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.151435904 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.19084717 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.167624274 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.38679786 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.176876055 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.126794231 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.136352248 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.209539856 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.379094432 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.581566802 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.071273277 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.119376564 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.146736671 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.101565159 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.7316653 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.103204163 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.14308962 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.636698147 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.141029591 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.137594808 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.141296582 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.228550992 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137016071 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.202148374 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.1340223 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.692680264 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119912967 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.209816115 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.117792164 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.182714607 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.299446221 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.09884256 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.125421437 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.689622696 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.211845339 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.13535206 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.112862369 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.696927459 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.101040782 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.232652695 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.14302718 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.137053864 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.207625406 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.121777183 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.113039239 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.12268643 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.106611626 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.179358722 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.475884809 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.122532503 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.163985473 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.110024207 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.723512292 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.113436365 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.172564346 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.141054442 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.123206023 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.116080191 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.11717625 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.189406208 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.120196513 seconds)
  done (took 21.629172971 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.145082748 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.17059665 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.111112397 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.165349486 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.173679793 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.096159059 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.119170218 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.093523806 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.155336356 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.222636901 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.169264519 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.174042022 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.092133313 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.113359605 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.12386019 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.278728349 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.144374202 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.130223562 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.115857692 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.113247368 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.166136848 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116840563 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.132386408 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.133617742 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.194066405 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221957551 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.126933885 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.140844033 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.111064548 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.123857997 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.160649267 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.188382592 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093217342 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.110925205 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.218620382 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122994744 seconds)
  done (took 5.94852643 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.241777984 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.1193426 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.26469175 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.232368639 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.183839514 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.213288406 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.142359393 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.314943099 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.251976517 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.205385588 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146051549 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.114637942 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.110089694 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.100884077 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.094587921 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.175972668 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.134384375 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.217900441 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163009411 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.156549261 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126828111 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.115762222 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106158592 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.117282474 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.107451619 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.155526736 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365828716 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.22329621 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105376529 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.589665846 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.116375838 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.136743412 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148914251 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213880021 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.150979961 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.153394516 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125505243 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.10111789 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.286458645 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115168142 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.111037449 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.129450482 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152962296 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.156075515 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.119948337 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.123947568 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.291875661 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.100804973 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.145603578 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.100895055 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.320487471 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.222783381 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.116928144 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.117093228 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.417739445 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116998795 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.127882452 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.098063329 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.118181877 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.341096411 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.147923871 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.118920366 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.094322346 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.125051163 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.093773892 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.420807727 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135848096 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.910166592 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.113753883 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.204239396 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119298558 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.115266329 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.120693339 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.106672631 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.139799408 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.099074936 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.094656037 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.117640985 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.093989204 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.122208204 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.135615171 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102119294 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.112861429 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165052475 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.143128769 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.120892016 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14522185 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.122865194 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.097616479 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.147406772 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.115159469 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.104816502 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.174758172 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.110295676 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.136078257 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121478701 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.158450629 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.101379445 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.232384021 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.098489771 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.145580473 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.116864211 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128698497 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.147236469 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113803728 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102348364 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.117815673 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.094796422 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.096986431 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.183013318 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.100229483 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.114074427 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.103004728 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.134633023 seconds)
  done (took 27.262564709 seconds)
done (took 55.503411513 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.468155279 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.142728548 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.144976637 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.143350344 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.141791536 seconds)
  done (took 1.78584803 seconds)
done (took 2.497520829 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.43105396 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.253821548 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.121291294 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.247766578 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109191634 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.259267871 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.216314371 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.123294166 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.280238864 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.101880326 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.241987724 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.103406714 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.127757095 seconds)
  done (took 3.363396199 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.11219033 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.14317675 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.0984927 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111404991 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.109036928 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110676802 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.127869101 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.141646868 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.126879066 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.102536319 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.111635682 seconds)
  done (took 2.005224624 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.108562496 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116752989 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.114868758 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109382583 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.108519188 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.1082289 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.125516131 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120988996 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.1261419 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10433884 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.108329593 seconds)
  done (took 1.962357367 seconds)
done (took 8.034628566 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.242048776 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 9.218835432 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.122411101 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.198701533 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.411895045 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.233751289 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.66738493 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.14042843 seconds)
  done (took 13.191946615 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.133239192 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.1174403 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.117476387 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.118337587 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.097442755 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.119931441 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.100596304 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.115450233 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.098541954 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.114089815 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.101249856 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096577012 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.117625504 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098064243 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.116714636 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.100889013 seconds)
  done (took 2.544834476 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.14134286 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.140527222 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.126400168 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.114521474 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.122787612 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103196779 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.127061256 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.107264557 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.120293947 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.119620394 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.115519645 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.12994163 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.112353468 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.118948323 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107823367 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.132757632 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.102101815 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.124430598 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107905559 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.124935206 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.131213715 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.105532285 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.128671663 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.113702663 seconds)
  done (took 3.717773696 seconds)
done (took 20.165068404 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.204214741 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.103291325 seconds)
  done (took 1.022922361 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.119565788 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.140690846 seconds)
  done (took 0.984190041 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.128744779 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.113667994 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.164390154 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.120078004 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.116225033 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097909643 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.156575869 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.116134778 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098499712 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.115799625 seconds)
  done (took 1.952066894 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.101441104 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.104146112 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.126261594 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.140341301 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.112642414 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.117985362 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.104510648 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.12231458 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.104958909 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.113740058 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.107855295 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.140070402 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.126317275 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127205985 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.123313875 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.123568019 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.11151951 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.121650621 seconds)
  done (took 2.851266969 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.096004452 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09959849 seconds)
  done (took 0.919419128 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.100046907 seconds)
    (2/7) benchmarking "second"...
    done (took 0.113113722 seconds)
    (3/7) benchmarking "month"...
    done (took 0.100874098 seconds)
    (4/7) benchmarking "year"...
    done (took 0.118158545 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09648124 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.111793713 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096203833 seconds)
  done (took 1.462168345 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.608071824 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.280647642 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.416037379 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.143420167 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.182748702 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.44242676 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.184331918 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.139253474 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.139241192 seconds)
  done (took 3.312349443 seconds)
done (took 13.228494941 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.108704611 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.161781399 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.623352366 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.134338601 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.095872911 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.178499992 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.336611554 seconds)
done (took 2.363759976 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.403748091 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.143774198 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.10137763 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.095112554 seconds)
  done (took 1.466865412 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.095350075 seconds)
    (2/2) benchmarking "read"...
    done (took 0.106725516 seconds)
  done (took 0.932662206 seconds)
done (took 3.129187119 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.093964428 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.150022091 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094138307 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.111135291 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.217648199 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.092049966 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.111295641 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.092003215 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.113232967 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.095258396 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.093835621 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.111790518 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.094621597 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.112117345 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094913053 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091269793 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109552671 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095188577 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.110571407 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.091991806 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.091836974 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.112412849 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092094864 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.109440791 seconds)
  done (took 3.354035125 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.120155888 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.114647173 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102552683 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.120206893 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101020985 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.120537569 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103194902 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.113508564 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.102484851 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.116412945 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100526097 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.117810034 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099193941 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.118560357 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098574527 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.120830141 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.119651612 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096506361 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097928275 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.119635534 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.120192857 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096728302 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.118926294 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102641783 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.118642394 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102436489 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.116600314 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097146025 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.120500408 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.101217712 seconds)
  done (took 4.028644759 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.104967155 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.090843013 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.11165445 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.107617646 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.110383842 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.09690591 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.111262143 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.094171465 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.09407698 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.111343676 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.095926479 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.110736773 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.093082693 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.111983575 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.095798061 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.1019812 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.139821666 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.093593115 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.111349461 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.093493219 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.118004654 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.093130436 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.112902799 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.092392937 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.092666421 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.110045829 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.093229349 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.11056827 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.093961296 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.092361702 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.118212227 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.100789269 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.109668936 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.111213665 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.119295758 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093463796 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.121489673 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.092707457 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.094060929 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.110767522 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.092684008 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.110981176 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.092935525 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.126245639 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.096317858 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.093388172 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.112193975 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.094948283 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.112117931 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097816643 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.110279287 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.093714795 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095881572 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.113544593 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100003753 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.110557542 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.094087111 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.110226958 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095412985 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.092635611 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.110859217 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.092149429 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.119973022 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.0942594 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.145475124 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.108315416 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.110863113 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.095547557 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.11505049 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.105496208 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.113083914 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.119039635 seconds)
  done (took 8.276185154 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.099112236 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.125335231 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.096499667 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.095451382 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.111024147 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.093978757 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.120564962 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093784792 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.114576656 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117651147 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.113341894 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095800211 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114071229 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098745277 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111786285 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096667706 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12414615 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.091724639 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.09375466 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117679072 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.095518016 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.120084961 seconds)
  done (took 3.082289747 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.286466576 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.123904243 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.179094014 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.118049794 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.141998831 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.134168743 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102735752 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.123301606 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104051875 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.127556107 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.109258071 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.12152127 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.14192677 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109355955 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.12777179 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110574311 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.121683859 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.128274126 seconds)
  done (took 3.151838859 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.113077518 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.116287887 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.126389755 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.116863478 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098707786 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.118941334 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.107060218 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.134863752 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.099817667 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.115832613 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.111314821 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118453946 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100300053 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115924192 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101009365 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.116959412 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100063677 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115435041 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111908462 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.124898474 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105823122 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.130270892 seconds)
  done (took 3.241970043 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116774057 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117098637 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.125368313 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.123860028 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.092927099 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.116930327 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106973301 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.115036075 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108796021 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.117631328 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097800766 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.114221819 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.107771722 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.115988047 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106873832 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115797522 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.099931324 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.115965925 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100287135 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.110610879 seconds)
  done (took 2.971734601 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.14708313 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13678797 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.117468629 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.149683426 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.136201148 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.11827117 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.150652299 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118208838 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13619348 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.137802761 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.13688651 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.135758001 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133867059 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.145725936 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.118101321 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152265769 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.15058433 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.132895786 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.138399323 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11744408 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156950358 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.137143395 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133619727 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.137969085 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.118435021 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.137835252 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119541739 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.146703293 seconds)
  done (took 4.542268515 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.096350486 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096964929 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.113588126 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09426445 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.112394271 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.094554671 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.094058308 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.113374874 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.096985797 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.112553498 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.09803862 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.096922 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.115562634 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.09709675 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115085373 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.0972645 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096904073 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.113300648 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09479507 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113096018 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.097459891 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115080765 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.097068138 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.094139486 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112221171 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.097849241 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111841993 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094361283 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096163828 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.112492023 seconds)
  done (took 3.840411293 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.109241746 seconds)
    (2/2) benchmarking "in"...
    done (took 0.125785074 seconds)
  done (took 0.982154965 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.094264691 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.137989627 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.095108998 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.100537386 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.124539536 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.098405096 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.130448903 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.124266424 seconds)
  done (took 1.654745114 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.127532389 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.140702221 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.106053378 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.13393921 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.120843558 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.140258523 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.207700504 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106658335 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.126661874 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100226392 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.14106112 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.099484161 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.128716346 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107433071 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.128932486 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.120108623 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.114748158 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.110621528 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.126083315 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.10207618 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105521207 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14166709 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.133183359 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.110498388 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.121174798 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.116463224 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.139410176 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.113171027 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.125725111 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11834637 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.126988991 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.091987276 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.123862303 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.105043708 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.114460328 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.120437694 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.143612908 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.106984894 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.130644971 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106204895 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.130728836 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094654822 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.133377667 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.108568328 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.134898582 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105781661 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.124010663 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.094725891 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.100143819 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.12316034 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.093653172 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.122909854 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092894152 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.13107221 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.113284596 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14800249 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100975213 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.124966443 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.105196215 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.121825101 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108225092 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.123393343 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114768955 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.121911871 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.112604169 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.130682602 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110862749 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.112790058 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.091572887 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.115115325 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.113801169 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.149084163 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.118250575 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.124915386 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10521763 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.115480477 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106571926 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.125314258 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111780949 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.13576733 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.105122896 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.12789819 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112856175 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.124400521 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104403355 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.126812423 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.101453615 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.12133163 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.100693639 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.150973434 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.101983085 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.115560479 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.100889932 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.136091056 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105576261 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.121507197 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.101302793 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.130627705 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.092794554 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.105915424 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.125594494 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108443789 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.141283974 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.124659764 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107833411 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.132486432 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.113197112 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.125573338 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10670487 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.094730952 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.125869283 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.101363894 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.129230176 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.093500111 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.126537735 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.108017251 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.12478246 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.119226541 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.120757445 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104844673 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.132893323 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.117625928 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.121003841 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.095016675 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.123815732 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.104701785 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.129182794 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.118510515 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.120775325 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094288202 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.094055781 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.132213334 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.103541812 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.131037596 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106611246 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.126611515 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.092593982 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.116158855 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106122696 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.137638075 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10423293 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.12851919 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.114585113 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.127993663 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.10207093 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.133717012 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104134885 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.11894365 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.115309702 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.125966897 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094096414 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.130744079 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105338078 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.120912846 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.10532216 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.130278821 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10630699 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.125366242 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10244831 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.124435019 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106885032 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.118365026 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108036059 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.101582659 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.140147218 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.124575606 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094470177 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.095902247 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.127863122 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.101109266 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.123465915 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100440391 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.125143494 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.107034724 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.125598985 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.103566663 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.122146765 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121535335 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.133848449 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106835115 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.128916789 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.115681688 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.122756501 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.109526026 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.121964149 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108191465 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.124672074 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114716307 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.127072511 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107323992 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.105241087 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.115688208 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108836361 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.133208095 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101094077 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.116900458 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.100607549 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.124027578 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.117818094 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.124198714 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.106932455 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.121310935 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.111481544 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.130548864 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106592065 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.122869357 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101356984 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105451254 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.133098193 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107843145 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.126104234 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.117242549 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.129426416 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.094225769 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.130324232 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10196255 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.131181136 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095145522 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.120535827 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102090265 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.126128874 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.105784052 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.123387616 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093445635 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.113288129 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.135532144 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.107394885 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.120417711 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.104668734 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.140470244 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.105137671 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.131773901 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105777037 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.132460338 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.149960198 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.101116869 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.124707359 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.121514839 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.124553011 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093819375 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.110398868 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.122148068 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099460318 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.122316428 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.10161139 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.126937313 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110168143 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.129063619 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.093634938 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.12464152 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10378626 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100662596 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115854442 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.117242067 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.129401654 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.107437513 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.142164176 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.12628982 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.107129454 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.109048171 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.124801705 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.107430723 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.126457021 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107586682 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.12584187 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105443211 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.119902739 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.10867768 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.119788596 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098621517 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.124238987 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.107054994 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.126866876 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110300044 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.12236741 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.116744093 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.125590097 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.107373716 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.167456093 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101966549 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.121433466 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108678179 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.130167638 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105893509 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.125444507 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.095997561 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.133408529 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.105837336 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.134562836 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105974293 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.115529056 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.107937397 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.124646543 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108562295 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.106060142 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.127932399 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.105161605 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.124296638 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.106449927 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.141573376 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.101677523 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.13838251 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110615521 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.130919965 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107145169 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.12998593 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.105422815 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.121018111 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108739524 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.126767108 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.108962142 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.124758616 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.111130653 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.127779089 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.106808499 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.124522057 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.108478448 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.128230975 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.109747481 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.113224638 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10177784 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.101549136 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.12722837 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.115242695 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.128779889 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103710485 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.12346379 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108305822 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.12432831 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097246851 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.131808724 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110778004 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.126158841 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.12214067 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.12170106 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107823553 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.144105716 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095990535 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.12210771 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.09922721 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.103175845 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.135800176 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.106762017 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.136483797 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.108392876 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.123222098 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097626765 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.127271135 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104255884 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.113818396 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099309621 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.131335162 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.1046087 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103235791 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.127914879 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.110188367 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.129776491 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114393549 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.124600412 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.10869203 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.126804936 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098472745 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.121640056 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.102070563 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.127054216 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.108532697 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.121500253 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099183707 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.105679083 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.129236451 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.107788218 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.126154992 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.105097987 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.135048623 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105519776 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.127206846 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112936727 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114912922 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109056591 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.125285527 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.105908371 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.122164623 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110518749 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129094315 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1098865 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.135620326 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.105970989 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.130139847 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107056238 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098177448 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.12611954 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106080268 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.126572431 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102281269 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.128161025 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116362541 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.119101203 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.11011353 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.129344142 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.104308129 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.130433079 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.109020499 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.129820964 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112693944 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.126817593 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.108795964 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.133056504 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109202802 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.129378733 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109668322 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.125190516 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11458904 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.121930259 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.120128462 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.130119112 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108910283 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.125612761 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.104297186 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106014689 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.126202192 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.10497533 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.138570064 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.109604388 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.122200379 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.104574681 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.119059513 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.110216939 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.132575322 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.115784943 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.127843509 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.110610341 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.115909068 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.098592999 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.127607898 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.104660956 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106845902 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.131201875 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.1141066 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.129559203 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103182774 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.125386426 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.115790511 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.134705981 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.113435839 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.124373837 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.113271814 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.129054574 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.108711804 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.125919469 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.107314837 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.129252007 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.112082472 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.126835426 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104140483 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.142266678 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.117369694 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.129954373 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106411043 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.131547279 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107924285 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.116644344 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.109194137 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.128334618 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114447969 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.128785336 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107576228 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.145085927 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101629204 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.126536185 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114323232 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.126188136 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.120196805 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.116802152 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.110556889 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.129798128 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.109391472 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.09669816 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.123533488 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.10420547 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.129407647 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10321218 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.117704582 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.125619799 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.137510161 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110381237 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.126102649 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105178763 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.117021125 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097347526 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.123684696 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109547873 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.126570634 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123474745 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.122154205 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103221556 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097850666 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.127486794 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109922638 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.132918363 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.099139634 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.117954523 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104284896 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.131016737 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.120611236 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.125594777 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.107909701 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.130350062 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.110293791 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.120669423 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.115152965 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.097420535 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.131848104 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.145750539 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.109390107 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.132461198 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.115299492 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.136582358 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.110579748 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.117275063 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.110362431 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.12991349 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.111209357 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.108433663 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.131580525 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.155366561 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11141789 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.12250523 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.10632922 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.110791686 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.125368158 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121190004 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.13166885 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.108778767 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.134008506 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106724906 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.132286653 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.118106752 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.135940283 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110827388 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.133972971 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106143146 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.129275578 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105087232 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.127630253 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.110838374 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.130313914 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.108165663 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.132142097 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104234469 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.146746729 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.121292365 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.131905176 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099031179 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.123781994 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.105293449 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098121819 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.132226805 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101002222 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.125766067 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.105276576 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.125644321 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.113491373 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.132596167 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.111470158 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.129718911 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108099694 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095885312 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.134271315 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109335177 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.133919471 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098980879 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.129346302 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10928684 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.139445039 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.114929187 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.127829435 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.109978616 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.12908839 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113675785 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.120577768 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113530599 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.127307187 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107716002 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.124471874 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.109642418 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.131067955 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112738203 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109727724 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.133038082 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109552159 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.134836313 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111433215 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.122131215 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100041278 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.134126176 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101972163 seconds)
  done (took 70.66390453 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.185023998 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102764919 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097667543 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118740105 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.155640191 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100623278 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.117840266 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100268632 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.099716556 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.141178283 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.117023105 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099106434 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.150988145 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.160362817 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.134455275 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.140441048 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09707423 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.121618569 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098335717 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120607414 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.148061494 seconds)
  done (took 3.407792699 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.124601176 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.138238354 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.140961297 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.128380385 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.133707308 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.121231544 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.141359741 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.141848459 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.146470674 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115547522 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.148167399 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.141590825 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.116252264 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.13577854 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114901174 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.138584938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.146918189 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.114286005 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.143315289 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.140726163 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118493556 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.142724041 seconds)
  done (took 3.731935618 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.109730501 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10719367 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.136291212 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.100692118 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.128893151 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.102249485 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.134272447 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.105095271 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.136222836 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.10990328 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.125849992 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.109695512 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.114471403 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.123253188 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.106474093 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.124003907 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.116674096 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.128073431 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.110800618 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.12179524 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.152762984 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.121788745 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.102147301 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.126195715 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118169673 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.13065915 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.107980089 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.127633671 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.107121871 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.107603566 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.123769935 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.113729287 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.136461661 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.105820616 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.126855758 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.108317216 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.127602002 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.102001377 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.103356209 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.137279462 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.101286576 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.129275423 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120483714 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.125388003 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.103506395 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.132566834 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109210756 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.121995991 seconds)
  done (took 6.482421254 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.133262418 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.172298385 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.131374457 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.172397477 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.147842627 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.120074358 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.131157819 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.172097734 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101868768 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.12534737 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.131425356 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.14813448 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127063291 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113276537 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.133521677 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105706058 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.128771753 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104519275 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.137283716 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.107308582 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.136381558 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.132772875 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.127483344 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.145270613 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.133589395 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105098606 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124173975 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.11256797 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.143713081 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.115914643 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.135347841 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.133443819 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.128086509 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.127212296 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107826125 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.128383189 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.150044912 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107505791 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.129391417 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102896975 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.127892592 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.113866907 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.134126737 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.131086773 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.131182615 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.131311749 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106343971 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.121045461 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.125134079 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.128979207 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121408412 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.147914445 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.132432958 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10683675 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.133308615 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.149403666 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.107733824 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.124483419 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.111452447 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.144667841 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.102896303 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.135547358 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.14671223 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.110611556 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.141312299 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.127277988 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.132814516 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.133687171 seconds)
  done (took 9.706310539 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.124196651 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.154103307 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131759604 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.154591817 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.138181544 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117278713 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.137986545 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.117422288 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.138112061 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14545225 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.117506529 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201390719 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.127806919 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125738513 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.137371299 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116772263 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.137712648 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.115928777 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.138304893 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137093237 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117970385 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.152137506 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.115923361 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.154066518 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.156971605 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109048624 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.139393692 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.137078883 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13148113 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.137625475 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156854628 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.118202374 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.137130294 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.151966676 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.136712964 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.138793835 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104179229 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.138306124 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.117550449 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.139854411 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107497814 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.153591839 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.138893325 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.109121009 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.138831991 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.117363991 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.152955556 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.157062261 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.145531691 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127488772 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.137249627 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152162076 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117856183 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.137326029 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.132271022 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.162610492 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152585536 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.152216635 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.118005224 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.152808027 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.152148351 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.163906093 seconds)
  done (took 9.294706105 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100372534 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100394141 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.122092939 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.103067295 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.125533234 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.103209394 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103964515 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.125846232 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105419752 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.125198822 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105743572 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101511651 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.12297323 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105264004 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.123190122 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.103305377 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101268472 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.125252828 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107210948 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.12313582 seconds)
  done (took 3.047741642 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.110459292 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.146992563 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.106792448 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.137436656 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109508634 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.138303427 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10822571 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.130546887 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.108684463 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.129338975 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.123196476 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.143911725 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.128169387 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118122109 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.143419692 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116486292 seconds)
  done (took 2.813912631 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.127840362 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.140820186 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.156407729 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.112225645 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.102747981 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.139439194 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105622086 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125906279 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.101246043 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.138268281 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.113749106 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.139578551 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106279261 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.126449264 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.1080452 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.1343022 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102425678 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.132086083 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106768659 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.157501156 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.113254403 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.130785765 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.107858635 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.131352338 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109707734 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.135045808 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.115341416 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.125809087 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.105990318 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.128181538 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.11099777 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.138849882 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102503465 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.134680572 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104952652 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124985186 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106544973 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.128048595 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.11463057 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.127374903 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.105930479 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.130196487 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.107775061 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.128721352 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.102492149 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106938012 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.12508304 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.11424575 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.131150048 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.110273868 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.129246477 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.11525027 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.136635398 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.120097207 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.140385548 seconds)
  done (took 7.499264088 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118549569 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.125411202 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.108440863 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.120630494 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108298342 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.135628921 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.112936149 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.107203835 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.131220615 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.103597953 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.131801968 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111174552 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.130819539 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111546442 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.130692464 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110871943 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.122227969 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109015647 seconds)
  done (took 2.951048065 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.108529521 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.101689294 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.132558302 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10065038 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.12437171 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109728834 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.123881452 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104606336 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.125552627 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.108208397 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.127341808 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.1097501 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104021536 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.130920262 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105894021 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.128291432 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110304318 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12639634 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.107653873 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.122543619 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.110342143 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103753423 seconds)
  done (took 3.350206792 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.126292149 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.171415785 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.12654507 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.182883484 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.135915503 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.114958957 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.148643846 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.116593709 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.157689417 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.11359452 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.133567276 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.114811953 seconds)
  done (took 2.467254963 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.13480464 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.170627206 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100340178 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130115158 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124779895 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138940589 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115320453 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138598548 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150771751 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.156256901 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116863472 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151117934 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128449758 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.152039206 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141749376 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119771903 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130773875 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129062064 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.103583363 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156848761 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109511761 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146595363 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129712684 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110025052 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131661466 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.147197502 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126600352 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.156226246 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.135452163 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126141276 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141561021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114527944 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154197215 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.157182549 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1108074 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151775322 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.136904387 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143085039 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146790056 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149967221 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11046889 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.146737069 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151389954 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12413559 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153346592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136067991 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125949013 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136560734 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116097235 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.174295846 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147237333 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151599118 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125251053 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152675969 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151643145 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.175296431 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135922662 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.153362557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.145865302 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15786113 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130822848 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146721398 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151275315 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136140198 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.146479189 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150864565 seconds)
  done (took 9.979966366 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154239325 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.120865557 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108936873 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149909752 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.147144008 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115696705 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137632283 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136324124 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117072088 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130493689 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.197879254 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116605864 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151621965 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150793679 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117446514 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136440826 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117299316 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151194327 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109612633 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.175675647 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.138121271 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.151116321 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131013733 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.151796085 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.157197885 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145784349 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117445453 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137350513 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11652827 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13744557 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125079136 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.137908455 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15078407 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107094991 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151426343 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115031914 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.138476789 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.145829004 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116571955 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146021619 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.151038916 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.141452668 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.138685493 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11522216 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.158065207 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.138036142 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115710073 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132336529 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115660179 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133364074 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157933501 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136206897 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.159999411 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.152521463 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138104565 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117245623 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137740327 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117806434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.138116758 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126110017 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.152908627 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137372337 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.176059442 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11744434 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138345921 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.130695238 seconds)
  done (took 9.865772075 seconds)
done (took 185.118561109 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.124260045 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.171086644 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.125615272 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.196506033 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.101827113 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.159713866 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137504993 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.140988708 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.107724254 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.108605134 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.133090846 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.112951963 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.200762887 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.101288389 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.122403191 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.112062769 seconds)
  done (took 2.982072208 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.220168714 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.337302603 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.135656147 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.138708272 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.118248677 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.136862446 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.116834875 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.139909807 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.112037835 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.1527134 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.114436834 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.135873813 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.130582368 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.137247464 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111998524 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.135563312 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.130682923 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.135551822 seconds)
  done (took 3.476631078 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.14340052 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.169833197 seconds)
  done (took 1.144843176 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.14767644 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.225910649 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.35526957 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174354735 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.16241364 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.160061144 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.19693254 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.127823831 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.23281499 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.161859452 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.163371792 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119285654 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.173815125 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.148414034 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.125291786 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.13998405 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.152941462 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.143867685 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.119449711 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.143988556 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.148055133 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.14317648 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.149199331 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.1224359 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.230060699 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.161819988 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.119072065 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.141286295 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120699084 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.14151033 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.149555374 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.144261494 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.164331065 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.227800671 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.147882786 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.22542956 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.147276073 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.113714425 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.133157102 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111595004 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.13861303 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.137202364 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.132159687 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.131853855 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.113567209 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.143755294 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.115231626 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.135948975 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.129933372 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.151032884 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.144716919 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.123310667 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.237257041 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.128677976 seconds)
  done (took 9.21048221 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.955746217 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.180445433 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.108125674 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.123966873 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14583806 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152215759 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 1.209471335 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13405046 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.316594686 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.968174405 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.151242769 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122018993 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.311939868 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.310496907 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.222762931 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.418812887 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.825224528 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.156805743 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.148836074 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.200396872 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.150924884 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.177612524 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.143772444 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.479382922 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.137776355 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.115732217 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.154962026 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.153439004 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.219295545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114616153 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.142741604 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.243123775 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.323162974 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.268922491 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.117676967 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.137049181 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113273307 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.24798447 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.329470481 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.292507197 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.217021276 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110957193 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.137443497 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.131966046 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.166682719 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.1321788 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.222929655 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.232765659 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.232108478 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.143565509 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12875969 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.152893107 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.154475083 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.221585996 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.111264741 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.422505459 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.427456185 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113574096 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.153576668 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.160396831 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.321845379 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.138896208 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.310225983 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151630611 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.286949419 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112590295 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.887547709 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.224237244 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.137092762 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126079135 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.149362955 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.14547242 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133223155 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.213150662 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.447922973 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157932649 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.120239945 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.136928861 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.297816879 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.136199548 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114773809 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.221525959 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141974468 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.128334022 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.160058617 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156503933 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.230889798 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.306294609 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.157651694 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.128495219 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.144943445 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.155226435 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.118946909 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.268971312 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.303870945 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.216781921 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.2928162 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.134878947 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.223026968 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.24928609 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130901693 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.250499583 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.127830793 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.159393027 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132849856 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.301697482 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.187969393 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.137313463 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.123368254 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.14980044 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.189338998 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.119726909 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.150630696 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.226768224 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.531179054 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.224134268 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.134078531 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.119225593 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150713679 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.219384993 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.148104319 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.316077664 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.149408425 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.226387698 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.14980355 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.112789855 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.151299534 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.224950887 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.156749131 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12960493 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.15807024 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126001227 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.332381796 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.274603361 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.157593371 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.310858347 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.203610518 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.151408951 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.231937436 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.152948184 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.226391756 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.152356088 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132003009 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143238917 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.88191605 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135082968 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.152272891 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123384143 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.246285749 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.134197224 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.116036515 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.137590971 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.112579108 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.877607963 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.118417976 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.135185749 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.117271302 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.149600645 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.128685871 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148815875 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.122565318 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.219991446 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.320730713 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.155020558 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.15038097 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.116398045 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.218869385 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.14270976 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.116608607 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.137366878 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.117154666 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.152425531 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.122223143 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.13931583 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.227488113 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.217418596 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.307067223 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.588422927 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.139311763 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.115309473 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.318277859 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.115022754 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.393089906 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.152607262 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.311203119 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.228367231 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.112196201 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.422757908 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.228898974 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.250501641 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.141738002 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.223547617 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.105846452 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.149637206 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.223854459 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.138790921 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.127563499 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.216376042 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162272147 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.158907713 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.211550999 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.130058667 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.278336548 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.131073462 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.227283042 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116613726 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152488218 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.397808583 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112466193 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.159154388 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.213952782 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.140682307 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.113279042 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.85545135 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.130090301 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122150021 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.142968935 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.307641378 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.223523118 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.148953452 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120719324 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.146063838 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.215040005 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.26884067 seconds)
  done (took 54.414245479 seconds)
done (took 72.063117329 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.405978257 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.342048392 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.375045303 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.254985245 seconds)
  done (took 2.326592678 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.223333523 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.192922778 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.155181943 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.129634524 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.188855986 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.106552226 seconds)
  done (took 1.855009501 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.645475647 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.565599374 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.436220473 seconds)
  done (took 2.50940025 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.305811806 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.332670884 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.377469536 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.573126724 seconds)
  done (took 2.569454665 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.255054461 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.128983883 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.142630484 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.162126276 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.187559649 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.276134722 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.171117575 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203368048 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.135441909 seconds)
  done (took 2.578998824 seconds)
done (took 12.702694675 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.317721579 seconds)
    (2/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.331320374 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.176933345 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.157888729 seconds)
    (5/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.157127785 seconds)
    (6/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.125436102 seconds)
    (7/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.327133608 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.228843969 seconds)
    (9/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.316390593 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.119921747 seconds)
    (11/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.219310746 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.17149393 seconds)
    (13/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.2098748 seconds)
    (14/286) benchmarking ("sort", Int8, false)...
    done (took 0.257520633 seconds)
    (15/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.12855135 seconds)
    (16/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.18392892 seconds)
    (17/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.241603999 seconds)
    (18/286) benchmarking ("sort", Float64, true)...
    done (took 0.269920428 seconds)
    (19/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.143567163 seconds)
    (20/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.292032621 seconds)
    (21/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118653861 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.192973749 seconds)
    (23/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.148903788 seconds)
    (24/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.308395324 seconds)
    (25/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.248743519 seconds)
    (26/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.119232483 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.13706864 seconds)
    (28/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.14052893 seconds)
    (29/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.237083953 seconds)
    (30/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.178249747 seconds)
    (31/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.261477327 seconds)
    (32/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.172868985 seconds)
    (33/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.145029111 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 0.263658852 seconds)
    (35/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.139520575 seconds)
    (36/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.235388863 seconds)
    (37/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.160225142 seconds)
    (38/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.136941126 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121944149 seconds)
    (40/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.135958523 seconds)
    (41/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.213443164 seconds)
    (42/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120167631 seconds)
    (43/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.233542978 seconds)
    (44/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.172249131 seconds)
    (45/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.303026496 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.130207704 seconds)
    (47/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.120633715 seconds)
    (48/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.21017511 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.191758442 seconds)
    (50/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.207164996 seconds)
    (51/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.241932085 seconds)
    (52/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.265514343 seconds)
    (53/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.192624842 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.11596908 seconds)
    (55/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.147720958 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.147348054 seconds)
    (57/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.141732556 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.171295022 seconds)
    (59/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.125688628 seconds)
    (60/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.088091774 seconds)
    (61/286) benchmarking ("sort", Float64, false)...
    done (took 0.204563631 seconds)
    (62/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.119720009 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111324972 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.15654357 seconds)
    (65/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.244439241 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.148649976 seconds)
    (67/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.242425494 seconds)
    (68/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.114747988 seconds)
    (69/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.126936605 seconds)
    (70/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.212197086 seconds)
    (71/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.215475878 seconds)
    (72/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112872456 seconds)
    (73/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.171967029 seconds)
    (74/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.225372484 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.15731975 seconds)
    (76/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.201666305 seconds)
    (77/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.183653945 seconds)
    (78/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.125592598 seconds)
    (79/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.217735838 seconds)
    (80/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.138459454 seconds)
    (81/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.116425061 seconds)
    (82/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.142872308 seconds)
    (83/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.213079277 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.138730979 seconds)
    (85/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.125866739 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 0.129586161 seconds)
    (87/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.211962642 seconds)
    (88/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112271694 seconds)
    (89/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.211669465 seconds)
    (90/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.123178562 seconds)
    (91/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.234693297 seconds)
    (92/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.133499527 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.236059467 seconds)
    (94/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.11336755 seconds)
    (95/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.137856736 seconds)
    (96/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.13825412 seconds)
    (97/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.22721928 seconds)
    (98/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.145456503 seconds)
    (99/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111403795 seconds)
    (100/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.114490966 seconds)
    (101/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.153854135 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.148836437 seconds)
    (103/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.089234839 seconds)
    (104/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.159665088 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.121118047 seconds)
    (106/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.185732854 seconds)
    (107/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11220688 seconds)
    (108/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.135986142 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.114396081 seconds)
    (110/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.14418786 seconds)
    (111/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.232457209 seconds)
    (112/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.092259225 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.146339685 seconds)
    (114/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.091138399 seconds)
    (115/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.238578325 seconds)
    (116/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.088852221 seconds)
    (117/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.142073879 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.114891057 seconds)
    (119/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.173991354 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.148806595 seconds)
    (121/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.114348176 seconds)
    (122/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.115877785 seconds)
    (123/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.149691932 seconds)
    (124/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.129837334 seconds)
    (125/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.119369708 seconds)
    (126/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.113095913 seconds)
    (127/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.113651346 seconds)
    (128/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.112638893 seconds)
    (129/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.092276961 seconds)
    (130/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.184238414 seconds)
    (131/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.140982512 seconds)
    (132/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.155905012 seconds)
    (133/286) benchmarking ("sort", Bool, false)...
    done (took 0.229537896 seconds)
    (134/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.121758363 seconds)
    (135/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.112103756 seconds)
    (136/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.123605787 seconds)
    (137/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.147001946 seconds)
    (138/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.092711898 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.13495199 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.19297895 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.148531239 seconds)
    (142/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.136133192 seconds)
    (143/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.191342469 seconds)
    (144/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.187800839 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.12137087 seconds)
    (146/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.144581093 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.106240561 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.165990204 seconds)
    (149/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111190195 seconds)
    (150/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.115176304 seconds)
    (151/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.104537623 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.13051531 seconds)
    (153/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.106700299 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.138694494 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.114971305 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.141467202 seconds)
    (157/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.111360769 seconds)
    (158/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.211605102 seconds)
    (159/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.159394862 seconds)
    (160/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.097652575 seconds)
    (161/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.094502849 seconds)
    (162/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.123653758 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.12616514 seconds)
    (164/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.117620913 seconds)
    (165/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.176115607 seconds)
    (166/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.116762511 seconds)
    (167/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.191993558 seconds)
    (168/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.116669975 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.140218849 seconds)
    (170/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091160549 seconds)
    (171/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.114321321 seconds)
    (172/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.146127576 seconds)
    (173/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.090593088 seconds)
    (174/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.161947692 seconds)
    (175/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.090750105 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.213520743 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.114375617 seconds)
    (178/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.141745409 seconds)
    (179/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.114096317 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.116459711 seconds)
    (181/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.133852407 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.114939665 seconds)
    (183/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.174735495 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.115660446 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138582272 seconds)
    (186/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.090573594 seconds)
    (187/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.091842949 seconds)
    (188/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.136845614 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.145327703 seconds)
    (190/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.125805582 seconds)
    (191/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.146730891 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.117031703 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.138759228 seconds)
    (194/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.112558969 seconds)
    (195/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092409838 seconds)
    (196/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.153445363 seconds)
    (197/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.104259063 seconds)
    (198/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.139578411 seconds)
    (199/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.11088186 seconds)
    (200/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.162237749 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 0.263438447 seconds)
    (202/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.094373106 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.140740095 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.106812609 seconds)
    (205/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.130646819 seconds)
    (206/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.095235244 seconds)
    (207/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.121511999 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.127219441 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.146702317 seconds)
    (210/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.105823327 seconds)
    (211/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.125863692 seconds)
    (212/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.092967557 seconds)
    (213/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.091169045 seconds)
    (214/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.137020261 seconds)
    (215/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.156924198 seconds)
    (216/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.115241638 seconds)
    (217/286) benchmarking ("sort", BigInt, true)...
    done (took 0.291914456 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.111622765 seconds)
    (219/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.140244094 seconds)
    (220/286) benchmarking ("sort", Float32, false)...
    done (took 0.205670987 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.120065894 seconds)
    (222/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.106651369 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.135755994 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.138645398 seconds)
    (225/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092489404 seconds)
    (226/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.17129749 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.119017614 seconds)
    (228/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.090765656 seconds)
    (229/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.114103359 seconds)
    (230/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.098585464 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.115219567 seconds)
    (232/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091783549 seconds)
    (233/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.136544725 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.117117471 seconds)
    (235/286) benchmarking ("sort", BigInt, false)...
    done (took 0.27983656 seconds)
    (236/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.142964125 seconds)
    (237/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.091669411 seconds)
    (238/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.118284558 seconds)
    (239/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.092695064 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.13853979 seconds)
    (241/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.098242219 seconds)
    (242/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.092897063 seconds)
    (243/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.145919279 seconds)
    (244/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112454854 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.13088734 seconds)
    (246/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.091668419 seconds)
    (247/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.114926491 seconds)
    (248/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.09835169 seconds)
    (249/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.091547941 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.137693828 seconds)
    (251/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.092724009 seconds)
    (252/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.131025731 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.125704184 seconds)
    (254/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.115982039 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.137907351 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.152143386 seconds)
    (257/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.116979527 seconds)
    (258/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.132643371 seconds)
    (259/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.112805606 seconds)
    (260/286) benchmarking ("sort", Int8, true)...
    done (took 0.26399862 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.13255886 seconds)
    (262/286) benchmarking ("sort", Float32, true)...
    done (took 0.271344916 seconds)
    (263/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117000392 seconds)
    (264/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.117636561 seconds)
    (265/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.115797027 seconds)
    (266/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.286872308 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117563783 seconds)
    (268/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.140123475 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108317449 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.133729676 seconds)
    (271/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.090264529 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.14900655 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.116433172 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.136345863 seconds)
    (275/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.090204527 seconds)
    (276/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.115810471 seconds)
    (277/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.092246815 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.139200336 seconds)
    (279/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.115450148 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.133849913 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117774191 seconds)
    (282/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.138884947 seconds)
    (283/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.119313184 seconds)
    (284/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.090745774 seconds)
    (285/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.138834398 seconds)
    (286/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.091590977 seconds)
  done (took 44.03076698 seconds)
done (took 44.900704376 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.124047472 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.177916782 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.121565399 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.166766061 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123913497 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.150415728 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.141998127 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.123598357 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.146274435 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127045721 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.150024293 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.102039513 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.143421071 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12105523 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.145647991 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.142016261 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.149550932 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.117403199 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.134670749 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.112345742 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.135452084 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113636521 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.138525328 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.102239196 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.142734038 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119822269 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.138909257 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120862802 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.136793259 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109777467 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.132916776 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.115906616 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.132621608 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123281956 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.135081384 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.11236446 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.145360278 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.117900467 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.114742742 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.137731526 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.114904572 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.138154695 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.114179138 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.140236804 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.113175688 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.136563803 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11143226 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.149208606 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.167104267 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113411863 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.115878501 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.143438877 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.123732968 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.139778564 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.110136215 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.135789005 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.114034057 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.16670303 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.11626224 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.137515016 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.115847884 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.139625221 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.111373477 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.134829998 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.111865595 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.143626312 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.121104522 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.13642085 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.118779085 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.137037746 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.124187773 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.135828972 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.111919981 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.132019787 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.118266733 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.140614984 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.105045232 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.112223717 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.138813334 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.113825248 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.136340228 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.107797969 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.140455227 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.112628145 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.132115427 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.102052074 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.132569558 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.113605598 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136236153 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.112660382 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.137178865 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.114304106 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.115438455 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.145036851 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.135952374 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115262618 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.136413942 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.114432427 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.139350883 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.110206558 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.105313424 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133924583 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.116520649 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.131768242 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.114309677 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.147461234 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.110510896 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.137261413 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.113252928 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.135930004 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.128219655 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.142309937 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.114504262 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.13419645 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.108342671 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.140552454 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110790878 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.132674913 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.109680565 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.137040813 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.113851646 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.13700863 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.108842095 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.139163348 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12383368 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.106646094 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.135930914 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.108053736 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.137252891 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.114554795 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.13854917 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.108548952 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.134378033 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.105523536 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.132054254 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.109216813 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.141057216 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.108891896 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.110996565 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.138893018 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.111459871 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.137619264 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.112659488 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.139090955 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110803132 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.126194871 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.111048447 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.133940594 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.116407874 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.137475589 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114007002 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.12935666 seconds)
done (took 20.201206885 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.122780809 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.222794145 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.176591808 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.158777688 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.191608742 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.166462479 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.152297414 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.1585069 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.148507539 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.178679941 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.155217379 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.164556406 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.179351533 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.12742278 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.166873164 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.143879591 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.120728577 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.162561443 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.187357595 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.147080464 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.175177354 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.150517473 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149652702 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.177114712 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.118324423 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.177970811 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.151070277 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.120524211 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.150311832 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138386072 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.16608256 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.153019153 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.126887965 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.160891909 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.127175922 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.142080987 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.165885228 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.113810748 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.146130347 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.123555616 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.160201898 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132989992 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.142674287 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.159225594 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.121368306 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.150728397 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.12123359 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.143595497 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121236228 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.138566174 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.129198337 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.171947516 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.144704752 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.12735436 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.15032781 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.121024708 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.150590883 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.149835048 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.126595755 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.151065099 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.123147018 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.150668838 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.130361915 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.170472211 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.145221454 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.127413738 seconds)
  done (took 10.742733161 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.142580993 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.183019023 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.126934271 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.153107709 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.151997017 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.105758056 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.129778986 seconds)
  done (took 1.923921414 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.10855845 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.16971228 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.150850024 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.176997586 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.134345864 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.182050239 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.156466486 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.108600453 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164179671 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.123859637 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.166610745 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.20223589 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.112081424 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.150409535 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.153137063 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.13617655 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.179022236 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.109412759 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143361277 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.150728002 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143853532 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.137555678 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.155847448 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.109554291 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.161402336 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.116573052 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.222472313 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.156656897 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108549957 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.148489709 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118974739 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.231403477 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.160189131 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124917184 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.131119139 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.168620084 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13581916 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.141520758 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.141363683 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.141378912 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.135943083 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.144626147 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.121178682 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.144321481 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11945988 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.150679208 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.126420278 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.146510561 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.117174497 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.167940852 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.150166816 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.136553707 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.136440854 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.115047268 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.149263513 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11793136 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.151787106 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117866589 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.167505589 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.12023239 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.168092605 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.167240669 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.135914029 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.169542822 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.134622511 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.161506034 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.160264074 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118104479 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.145098298 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.12125145 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.168055475 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116465688 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.150170635 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.127316153 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148812476 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.141399128 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.1651038 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115762551 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.15017975 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.115937329 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.138727368 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.109174131 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.152510735 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.113991731 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.137799898 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.135437947 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.15236986 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117729315 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.14077957 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.166875108 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.117661389 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.151941769 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.126928515 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.14115014 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.133849824 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.171125828 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.151357459 seconds)
  done (took 14.84082728 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.114231355 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.110230105 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.143903039 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.111756776 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.135798879 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.111074413 seconds)
  done (took 1.665918803 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.14944795 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.140393927 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.130265354 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.144390754 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.186623741 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.137418719 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.161318016 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124497612 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.158880288 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128530191 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.162408217 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.164031459 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.147507729 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.14499923 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.136765877 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.146320775 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.137517377 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139052108 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128817191 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.138995659 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.129907887 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.147389228 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.113891389 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.16296785 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.14305008 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.121385993 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.143131687 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129613989 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.154047974 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125149183 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.145229064 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.120000029 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.146306527 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.12428466 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.162900425 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.144786373 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.112548012 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.144710777 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.120668545 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.14345031 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.139364088 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.139973676 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.129546503 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.145357774 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124308538 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.14582701 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.120080694 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.143195199 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.136271384 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.145202358 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119809152 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.146051065 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118315218 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146272715 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120138557 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.149355084 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.144839845 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.137923361 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.145452624 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.1207323 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.141554636 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.119596105 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.14980371 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118018698 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.143769461 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120484259 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.145903233 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.114443157 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.139596481 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.122133914 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145475074 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.118776099 seconds)
  done (took 10.885656486 seconds)
done (took 40.97630973 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.719261831 seconds)
  done (took 1.655737586 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.984244872 seconds)
  done (took 1.924505728 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.779152963 seconds)
  done (took 18.749486627 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.652463814 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.810712894 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.273757156 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.205890807 seconds)
  done (took 3.882120493 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.018317506 seconds)
  done (took 1.977033983 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.366992139 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.287077698 seconds)
  done (took 1.599499888 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.876816473 seconds)
  done (took 1.833552642 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.707897956 seconds)
  done (took 2.654522668 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.442819589 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.228648543 seconds)
  done (took 1.636074255 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.676070031 seconds)
  done (took 1.628727819 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.966013443 seconds)
  done (took 15.923777255 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.29027965 seconds)
  done (took 1.256648365 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.346124678 seconds)
  done (took 1.300792363 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.78119445 seconds)
  done (took 4.735572021 seconds)
done (took 61.705522167 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.123957555 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.124941118 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.152471625 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122285712 seconds)
  done (took 1.473556564 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.13162467 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.147573124 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.128381513 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.147127659 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132387657 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.148264526 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.118519629 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.154758122 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120852261 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.149779165 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122355227 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.146920454 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.124277859 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.144290193 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116586089 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.150502303 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125464967 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.147958911 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.120333234 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.149859712 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119033204 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.149086046 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.149585669 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121927829 seconds)
  done (took 4.230517389 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.122542019 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.115735456 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.142659632 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.115198433 seconds)
  done (took 1.461637819 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.129329582 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.165318444 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138178703 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.153609195 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.139934532 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.164692862 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115079179 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.141114401 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118710447 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.154633207 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.117111628 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.167735914 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.163965709 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.111002892 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156399665 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.107534944 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.138208201 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.139671497 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.154293784 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.132196443 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.1394675 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.128013893 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.148522873 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.132749731 seconds)
  done (took 4.324683446 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.221785565 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.159905507 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.17073195 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.12510521 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.205886388 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.172859655 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.114486267 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.172590976 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.115629654 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.168919516 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119659217 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.206375479 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.169409477 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122580325 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.14354097 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.153188503 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.141035176 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.172859594 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.118883925 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.157811446 seconds)
  done (took 4.100979293 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.126976588 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.114937578 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.136377982 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11542405 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.149707239 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.117972376 seconds)
  done (took 1.729985944 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.111611648 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.108397968 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.134626408 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.110022208 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.139817252 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.108662396 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.1077378 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.134085662 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.108172 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.133716057 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.107857686 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.106146201 seconds)
  done (took 2.382722136 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.50654022 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.114222301 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.15488598 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.116452678 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.167336848 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.139033069 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.132990881 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.138024202 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.208157782 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.126929495 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.160203316 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.205684516 seconds)
  done (took 3.142744249 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273774921 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121453614 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.347062156 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.494057745 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194148021 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.210723618 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.376704122 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.208973576 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.241770479 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168641857 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.250895068 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195842481 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187136557 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223415515 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147518985 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.21771208 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223951282 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.267315106 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184227875 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26929195 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215378599 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211595058 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.234783901 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186328225 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1728427 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20638093 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.11656502 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.154674708 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22661688 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218021565 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239067975 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192080624 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145761691 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.294288175 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.297616185 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244897583 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.465291348 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14146616 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.25198308 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.236042218 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.309426344 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175768577 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.26800225 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194086892 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133300179 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23463322 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200099532 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.229868564 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.160414671 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172769904 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258560378 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22420433 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.239005977 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172842047 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.398045665 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180797937 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.178259418 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23568931 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259579263 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.249821812 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215629927 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.147680468 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.271672232 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230655966 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236568002 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.179018223 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.217472407 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153948573 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226709535 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.254066992 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23565893 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213164864 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.283068217 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167698524 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212793735 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.216053367 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189826238 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228363424 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202048386 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.11831211 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185645426 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142245315 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154596974 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.218461528 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12076469 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.275188449 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170279766 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.324795845 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.308182818 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172128737 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.2082945 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212299352 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219468099 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179706422 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.116754624 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184393885 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.204554431 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196013159 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136635525 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198466419 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182003036 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.15305191 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162280709 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.148527929 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201669328 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.136117441 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21428952 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208420957 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.159270616 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209057319 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157337855 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.202625945 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220110884 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239604531 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16316466 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1617787 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254322331 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173449662 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.166692163 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.226766187 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.243758149 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.209262714 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170695675 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227285378 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260547079 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.175044016 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248915951 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153467889 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166335221 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.196847449 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20257033 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.202830745 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.165119306 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156037866 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.195425385 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251473408 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.152428037 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139898086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224514705 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15335681 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128485134 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180391983 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168896654 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.145370561 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.188271012 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.169297645 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197671105 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171884991 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192201113 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206708218 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185678807 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271198087 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162515705 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.20141366 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153167467 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.14142249 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.233785077 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241256076 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1296069 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237865471 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.217677588 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.314410246 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210492384 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158760169 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233429592 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129935177 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.143660197 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218727991 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.205287253 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209097352 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.234005194 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285175923 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.214925493 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.190813898 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184881566 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220448049 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.223635384 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21335659 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.178265253 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182328663 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221021208 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147085386 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.121446412 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.154981341 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17287205 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132902769 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161153899 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246199238 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212077272 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.303147475 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.207795391 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146845578 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.236549352 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.152504495 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.210880947 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.224452999 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140777967 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.239467127 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.258374653 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187676003 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175534679 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227839181 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.143037205 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123664811 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.161913141 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.212288871 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133018904 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166063184 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186428473 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.236760361 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226289293 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158305102 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.330375968 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213595868 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.247925036 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.14736043 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.192552773 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21556167 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171505166 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.2231975 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164018944 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.177237826 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.231980032 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181672787 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262058599 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206553637 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222595988 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.302858933 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.168988152 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159282798 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186923709 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212279325 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149898283 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.202847057 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18133158 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165663775 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165474343 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.169364294 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153274843 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247923977 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173344549 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249113332 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.193954357 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239788307 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122875171 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189261456 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203967608 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1762956 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.115297166 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218302767 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249690479 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18422321 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201205387 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224453866 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129774606 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.432844094 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25045542 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246031802 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170860676 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177772651 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.176270231 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201616016 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209547152 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.234863247 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18531721 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235314361 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.198269449 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.148042588 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167178939 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181657077 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159861361 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.19684545 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.166162686 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.193790168 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.146015551 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282923742 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151703253 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199667912 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21519435 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.174458616 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.163313949 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174251983 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264299189 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199426287 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231706103 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.194030043 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.207921516 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240724841 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.120079087 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15573444 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.124388085 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.234782205 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160350882 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204219906 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.269455608 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.324709742 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203392177 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214677961 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166818199 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.121620085 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204677698 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186120549 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.316948154 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156740789 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.166424968 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.247802189 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.183774589 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129299846 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.207346594 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.396747604 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14961443 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222871234 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.146629532 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.359706303 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149731522 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131295512 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201019155 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219597177 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.161362336 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.1962458 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211073796 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183120747 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.201806474 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16935329 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.274270027 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31016245 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228430619 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230798869 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.151758085 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.203391718 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21212334 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226638813 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179237339 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.178032636 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173481855 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235880041 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.237325084 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.162517965 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207686145 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207313709 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.20459904 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246500969 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132698604 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.266920606 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132143306 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218692359 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178492963 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121841702 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195598698 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.291636442 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137047592 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222439279 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19821573 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159527676 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124958769 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196412361 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198007245 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180621934 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128415344 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243982331 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.153533709 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210615121 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227769432 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12932525 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.194424147 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180631383 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130578546 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179000174 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183217974 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138668047 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.202666052 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239971287 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.131049133 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.253771903 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230964123 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211779859 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176224862 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179001794 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.697133367 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.124996908 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232825165 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180420946 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251762441 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182859059 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217656544 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.205838032 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154724401 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219877133 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189573536 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.257872031 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218975609 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.202200281 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130334939 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184820721 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181216925 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.132149045 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189723621 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207211523 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170157173 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.138241 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.199241184 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183656664 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.181946699 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140667416 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243731948 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180888463 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.248870547 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.236598945 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.172039796 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215236227 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246832101 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128945375 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.208480494 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220720422 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177892673 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197019816 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.127940171 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.163291244 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229805054 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.119682438 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206822796 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203211392 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.208588207 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208676332 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.139258491 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204881394 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181242218 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203455963 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122505302 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.1945125 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.199369726 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158907423 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.12604002 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.194179803 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207182727 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.199729821 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12503534 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.203089304 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234187282 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122221853 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163530969 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.374889404 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195076757 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.254451566 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.193698831 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164355799 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145440592 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199398459 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.192268024 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202847287 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.12846163 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159829734 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.131654235 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.218906541 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.191804716 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.198432537 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24425867 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205400619 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240578234 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.161474839 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.274008824 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168431355 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.195303411 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.137340646 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.155937223 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173721826 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136747288 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184483363 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.306460652 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229848239 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.161787577 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.183215251 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154156428 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.124516111 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160203945 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.174125839 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194529494 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198343982 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183258086 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.115163159 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182145527 seconds)
  done (took 97.34408921 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.170801672 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.167620875 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.176079661 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221197518 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198425371 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.277143171 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.235195241 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256062287 seconds)
  done (took 2.756255089 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.128394544 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.165321891 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.174417535 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.125001557 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.140614515 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.451513294 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.168892504 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.15350441 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.150633716 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.194307965 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.114105963 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.756331628 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.126284613 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.152732315 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.136391103 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137185075 seconds)
  done (took 4.322165682 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.852909062 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.601581988 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.306004707 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.302637543 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.289479083 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.210094484 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.807863989 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.247478166 seconds)
  done (took 13.668370068 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.149180917 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.166695555 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.169719525 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.196600672 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.153378958 seconds)
  done (took 1.901796729 seconds)
done (took 143.791392876 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.117699564 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123011872 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.147556355 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.121508151 seconds)
  done (took 1.560571024 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.13016299 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.10339546 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.131072934 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.098568861 seconds)
  done (took 1.527699641 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.532186807 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.129201944 seconds)
  done (took 1.761579439 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.147666829 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.15960053 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.132690621 seconds)
  done (took 1.501474395 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.128849345 seconds)
  done (took 1.192875788 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.120816787 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.123295176 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.166650643 seconds)
  done (took 1.474115161 seconds)
done (took 10.084014601 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.13416447 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.464428777 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.409466438 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.1635164 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.725190207 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.4311504 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.095399089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.166727616 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.19968719 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.142834729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.135503124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.720725924 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.048596666 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.390118611 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.032598832 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.483670584 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696548594 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144031596 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12291621 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.141646206 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.039832369 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138769355 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.11507801 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.141452674 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.692245117 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.41929428 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14189719 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.501893564 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111707571 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.119930321 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.432422556 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112181039 seconds)
  done (took 17.866530678 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115669872 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.216264294 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.125246081 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.143140193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118706145 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.142095353 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126047251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.161269985 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.218275477 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115457665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164695088 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112472233 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.146359192 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.114097349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165889801 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.112447333 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.143546913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.117538851 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.150238086 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.116835353 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.135567836 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.139708033 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.114119456 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.144110098 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.111516244 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.156776495 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.113442038 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.161432879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.112830103 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.149590877 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.119792254 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.141572272 seconds)
  done (took 5.493952329 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.167512769 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.229294273 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.151617702 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.151830386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.207767929 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.113860859 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.244117706 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.196463158 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.221065573 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.141618546 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136715503 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.111196864 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.185353318 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.141004349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140846099 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.139659936 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.117996828 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.143516945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123398867 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.142614586 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137557309 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.138387563 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116673748 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.115358017 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.14289641 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.128646572 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.141801236 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.160249551 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.113053925 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.120458678 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.149885231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113374661 seconds)
  done (took 5.850483339 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.123815669 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.15380853 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.135336086 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162098468 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119427615 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.150303439 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.124720028 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.116473218 seconds)
  done (took 2.157205733 seconds)
done (took 32.428364033 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.131890031 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.120784935 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.159091265 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.131793127 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.153168811 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.14233052 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.141735779 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.125307934 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.158671239 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.124722098 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.158966456 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.113520284 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.114270668 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.139280003 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.127312267 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.145994966 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.130282917 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.15193099 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.139625965 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.159224655 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.114196942 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.154443004 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.124772536 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.16777432 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.138945465 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.168615953 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133391594 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.152728635 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.116716116 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.142145078 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.133237252 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.174288769 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.11877858 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.160407099 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.119050065 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.145709736 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.11614703 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.114575549 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.160491576 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.125532515 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.148613177 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.128307798 seconds)
  done (took 6.887587699 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.147596061 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.191892445 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.114555646 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.139326606 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.110721136 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.188471242 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.157611245 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.139687463 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.110106762 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.173598822 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.174841631 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.111515395 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.110718111 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.140505437 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.111118381 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.139811732 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.143480983 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.174174385 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.150654473 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.176103317 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.200748155 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.154755554 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.182399042 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.174093033 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.16193541 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.186981554 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.142926337 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.185264077 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.176694861 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.114137692 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.179830265 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.148370695 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.143109547 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.110625939 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.189843125 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.187720215 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.152304398 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.189227159 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.18248774 seconds)
  done (took 7.152072798 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.125924035 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.129832796 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.170018043 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.222941514 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162021646 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.157431494 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.125775598 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.167031625 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.134167372 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.143964335 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.12466754 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.184086979 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13431229 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.153184027 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.120961671 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.161975516 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.139625144 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.146621089 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.120934745 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.166611511 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135186712 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.161679073 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.12953291 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.155678442 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114944652 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.160454916 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.120645481 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.160535223 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.124865339 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.151326661 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.12200133 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.149534387 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123311264 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.127971479 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.149206346 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.128011558 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.171766949 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153162989 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126480657 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.185232231 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.129742913 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.150883574 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.143055042 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.191968239 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.119332055 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.153921863 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.120332332 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.153145033 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.113189851 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.16429586 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.128137015 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.117670645 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.171276756 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.144062778 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.113572329 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.131266801 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146671291 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.117351943 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.152958706 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.122276044 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.170865043 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.121501101 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.160252851 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.11945382 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.150781852 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.115536913 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141832181 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.127424874 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.171355055 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.125090569 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.192094105 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.117836721 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153790068 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.123540738 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.151035295 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125885011 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.11410089 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.162296473 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125209955 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.15101621 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.126257334 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.148212236 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.119788986 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.164879707 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.139932394 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.157329027 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123115144 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.152601805 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.118944458 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.144200616 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.131257634 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.146405259 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.119082832 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.162235786 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.116280383 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.146602663 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.123932318 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.149869915 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.11330622 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.158169927 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.121163216 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114081409 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.155512066 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.116339075 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.148183793 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.125373434 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.149811999 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.115670786 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.150780394 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.13342061 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.142940654 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.120606799 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.148191172 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.118789286 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160888094 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.123935972 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.118960007 seconds)
  done (took 17.558702958 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.292761816 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.261174835 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.243289468 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.367981448 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.174256242 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.147116701 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.258229579 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.207802668 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114713793 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.200224807 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.22059902 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.226070852 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.211559789 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.222606704 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.219654352 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.114616348 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.173646797 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.20892149 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.261168227 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.328428511 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.173340322 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.164544528 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.170442828 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.200776867 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.168701176 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.135398034 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.175372909 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.173892956 seconds)
  done (took 6.913308914 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.137790266 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.19478372 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.124387089 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.182310751 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.177803245 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.116077064 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.150567371 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115372963 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.162949991 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.135451968 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.146654744 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.124118425 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.152104438 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.126768465 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.143580111 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.12658224 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.156142974 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.128577272 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.147376724 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.121491403 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.167901195 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.134945209 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.152199535 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.125442766 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.167834042 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.124233602 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.149336726 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.176239874 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.128749636 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.182225325 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.111202745 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.156621404 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.132671724 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.14516937 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.125789413 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.148230623 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.117078726 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.146276102 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.118412525 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.111963245 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.144974824 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.102300888 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.155549627 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.134562658 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.15496293 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.118720814 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.152212746 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.12003725 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.150821425 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.111158259 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.147085103 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.118108189 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.150445749 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.137872006 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.148784793 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.110661376 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.119350044 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.136184072 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.126898041 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.1487274 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.10837425 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.153900891 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.107450799 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.150627955 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.12669487 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.137576171 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124004143 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.147464084 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.121581781 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.153827169 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.119507713 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.132355835 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.142889743 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.116241505 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.161147786 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.132419841 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.150081081 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123883638 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.156579169 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.114038975 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.130953949 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.114136263 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.099151579 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.152111779 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.113890672 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.154092313 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.117924837 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.153526849 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.1376687 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.158120397 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.153789377 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.115839162 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124844212 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.151490468 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.111768307 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.15061276 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.136905995 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.174128103 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.113490621 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.144388185 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.139393684 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.147774719 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.111956106 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.135580144 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.128392197 seconds)
  done (took 15.53452661 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.176160229 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.217543825 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.1471691 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.138243515 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.188931496 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.206128328 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.133097407 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.12469403 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.145904081 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139838555 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.157212767 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.126944565 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.158493353 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.134074896 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.205389224 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.158059019 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.116923042 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.163321679 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125435372 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.221040104 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.138296131 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.203381169 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.210591736 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.161563544 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.12281864 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.201187497 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.210076556 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.131759817 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.159709857 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.181906362 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.161626799 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.210075572 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.213444456 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.123231336 seconds)
  done (took 6.722960671 seconds)
done (took 61.84017949 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.195732982 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.398709741 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.173148292 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.173663419 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.219883747 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.214737386 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.17535338 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.36749135 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.921381723 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.163228721 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.173968567 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.174964719 seconds)
done (took 27.446051802 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.271637913 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.330707923 seconds)
    (2/2) benchmarking "String"...
    done (took 1.468147961 seconds)
  done (took 3.904814844 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.175319561 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.175663794 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.421360938 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.181877022 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.174243113 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.193046028 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.174324062 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.195389381 seconds)
  done (took 15.607999232 seconds)
done (took 25.055173763 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.244951095 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.369246792 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.429716435 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.193071299 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.191023569 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.182776313 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.17725313 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.19955829 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.19126394 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.17682114 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.175829227 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.459403737 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.193445827 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.559953043 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.180250411 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.18484083 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.194206875 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.44535738 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.177110974 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.230116442 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.160979857 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.165642955 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.181345399 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.193113053 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.183848315 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.188046719 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.194949012 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.190509273 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.458609462 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.197941288 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.213686084 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.181839029 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.19443638 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.19052989 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.289169067 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.202959648 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.433771596 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.18601029 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.167954723 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.181271242 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.438311378 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.60240345 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.182322381 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.179200678 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.189791778 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.225444354 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.171634851 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.89694118 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.186507486 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.188459339 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.22986162 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.627251649 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.191113851 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.192122221 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.184970403 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.502747199 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.205283834 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.223218747 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.200196479 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.209977832 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.180024164 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.180225276 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.240387227 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.182904476 seconds)
  done (took 142.418588915 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.178815204 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.188305944 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.188175927 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.205507018 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.189321206 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.186550273 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.181330073 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.182582153 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.189471499 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.213336827 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.190511142 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.178714706 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.190999494 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.197672295 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.182031035 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.196968649 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.189807004 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.183328544 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.200125504 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.183461692 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.183509328 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.187747988 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.189049961 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.185660452 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.188430558 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.263258602 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.219814337 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.192662041 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.186748301 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.184644095 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.188253734 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.192609614 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.82234764 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.037998645 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.192145701 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.220685224 seconds)
  done (took 79.529801233 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.182078701 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184535735 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.182474141 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.215517363 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.184881997 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.77155939 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.778463326 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.954954833 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.305762033 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.673531908 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.457122838 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.184645169 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.278139573 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.199426692 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.193981689 seconds)
    (16/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.184043475 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.200348037 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.183209751 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.211098404 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.184015489 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.776676324 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.204884625 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.360780541 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.201159112 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.214506014 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.578490503 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.342657794 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187427603 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.217121553 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519457337 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.235965529 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.18374536 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.602648846 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.738491263 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297913769 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.187182272 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21795812 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.186493443 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.467223912 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183611403 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.187359928 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.189552259 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.927913991 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.194610156 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.77497636 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194109799 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.167915706 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.188025084 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.185676813 seconds)
    (50/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.188170922 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.467731099 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.863547363 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.185115643 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.188172684 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.189548331 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.185289211 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.186631676 seconds)
    (58/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.187786293 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.219412439 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.581461727 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.312309925 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.188937915 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.190111312 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.218211372 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.187804331 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.388931781 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.186449322 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.080996005 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.248572977 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.300607142 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.778810528 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.193980434 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286339992 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307781968 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.185625608 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.186608594 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.188502942 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.187057996 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.297639554 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.186579236 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.606376909 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365358166 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.206004534 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.666412573 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.296073774 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.189157871 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.627246704 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.193254834 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.189881242 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956433341 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.2850542 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.186807706 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.18839133 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.187021328 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.607872143 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.781116466 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.51231121 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.19202865 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.933245616 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.198810624 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.621283086 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.763138547 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.858110113 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.191266354 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.304293705 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.366334832 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.205265604 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.192401979 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.189488969 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.666446806 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.198995008 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.248727339 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.198976651 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.588438418 seconds)
  done (took 366.236223743 seconds)
done (took 589.27898513 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.951854757 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.859274769 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.993744955 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.884604744 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.850118203 seconds)
  done (took 10.643644928 seconds)
done (took 11.748435859 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.38645192 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.390014598 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.257906886 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.397489918 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231412839 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.407651438 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377235407 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.222439677 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.298711913 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.285835297 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.306823651 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.255105248 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229359149 seconds)
  done (took 18.151358104 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.465159222 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.192380129 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272374254 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.438214285 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232147456 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.455459492 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.497714438 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.193258705 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.336863446 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.204575555 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204462718 seconds)
  done (took 17.599690545 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.470559636 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.192759544 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25788221 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.442817582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232606344 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.48172377 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.500939489 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.19181384 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.373635106 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.205688942 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.204505616 seconds)
  done (took 17.660449173 seconds)
done (took 54.517300862 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.234114901 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.359583342 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.235553951 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.206453012 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.201340365 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.202622818 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.206984101 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.210618894 seconds)
  done (took 10.963640328 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.198451638 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.197217445 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.19964411 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.198911777 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.197639998 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.200683193 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.201019308 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.198223339 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.196921508 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.19772303 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.200517981 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.196946309 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.200851579 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.196684842 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.20029299 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.19968479 seconds)
  done (took 20.290060498 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.201552552 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.197886486 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.19841668 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.197101576 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.197643758 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.200189509 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.199030847 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.197965737 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.199368311 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.198126301 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.199607115 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.198763198 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.200085619 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.19892002 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.199022759 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.200824651 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.197665347 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.199824471 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.204030477 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.201636196 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.199264362 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.197490528 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.1988983 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.198650507 seconds)
  done (took 29.892389582 seconds)
done (took 62.251846852 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.204756673 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.208142927 seconds)
  done (took 5.521186109 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.26004089 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.265607191 seconds)
  done (took 3.637623184 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.203473686 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.202586301 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.203257769 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.204081128 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.202169038 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.202380764 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.203212876 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.201729227 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.202463967 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.202845788 seconds)
  done (took 13.136482134 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.202819456 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.202693236 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.200365953 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.203368705 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.203236977 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.200861208 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.2030942 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.202971087 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.203594365 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.20075451 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.204614627 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.200936914 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.202536238 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.201738587 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.202538603 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.200935064 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.202418489 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.202578289 seconds)
  done (took 22.751777419 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.218062919 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.225104357 seconds)
  done (took 3.554010219 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.331818971 seconds)
    (2/7) benchmarking "second"...
    done (took 1.245122108 seconds)
    (3/7) benchmarking "month"...
    done (took 1.311455073 seconds)
    (4/7) benchmarking "year"...
    done (took 1.299256037 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.245026401 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.22282307 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.243888433 seconds)
  done (took 10.01305633 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.206577697 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.401404504 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.503407252 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.773085798 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.207078724 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.208918616 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.082655216 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.210106646 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.210811774 seconds)
  done (took 13.917042434 seconds)
done (took 73.639909424 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.199821369 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.229809585 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.22029428 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.219231567 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.497370243 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.230003026 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.208770358 seconds)
done (took 15.916454529 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.19559329 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.198998399 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.188169214 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.20653268 seconds)
  done (took 9.900266621 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.205582495 seconds)
    (2/2) benchmarking "read"...
    done (took 1.60405328 seconds)
  done (took 4.924264843 seconds)
done (took 15.937482931 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.206379742 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.205046364 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.206553479 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.204398187 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.206393839 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.204535605 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.204744325 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.204962258 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.207044733 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.207318102 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.207259538 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.207285662 seconds)
    (13/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.20768092 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.20638685 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206385377 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.204771862 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204959025 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.207578062 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.20579121 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.20384911 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206752979 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.207609798 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.204823328 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.204566971 seconds)
  done (took 30.056666245 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.208625814 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.204823849 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.206787049 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.20789469 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.204124888 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.207520199 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.207721308 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.205776642 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.208067005 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.207341191 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205639947 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.204508536 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.208039071 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.204986773 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208098284 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.206699025 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.208455778 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204827045 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.209368445 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.204364124 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.207523272 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205581827 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.207081743 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.209258581 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.204469828 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.205615308 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.210266402 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.20635825 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209157435 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.20653311 seconds)
  done (took 37.321122637 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.213744431 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.215671692 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.208873942 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.209282106 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.209726865 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.209821566 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.211087441 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.210271544 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.208173863 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.209997379 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.209887145 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.209353363 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.209662737 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.210171011 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.211057684 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.210376643 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.210066216 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.210262807 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.211430958 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.210840355 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.210554313 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.21068242 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.210900799 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.209325975 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.210861844 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.210927067 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.210121755 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.210542871 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.210539236 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.212145666 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.210698375 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.211352068 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.211374766 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.211595598 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.212016885 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.211947376 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.216227843 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.220091514 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.210942026 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.210683122 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.211718246 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.211562531 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.211777432 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.210506942 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.210764953 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.211966139 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.211418679 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.21197096 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.210891585 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.212320865 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.212265405 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.211400451 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.212533097 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.212278647 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.212403629 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.213543795 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.211780683 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.213731591 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.217038944 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.217368871 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.219066412 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.219290807 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.215242654 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.214207775 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.21298255 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.212741647 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.212277197 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.213565993 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.212981788 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.213426408 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.213113029 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.213540135 seconds)
  done (took 88.382495643 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.212815329 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.211687798 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.212787215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.210353903 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.210637922 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.214303523 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.210538186 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214873068 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212513423 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.214793755 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.215264138 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.212804752 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213363188 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.213374055 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.214025214 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.211471085 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.215451234 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.214190653 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.213552879 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.215470215 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.214263287 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.212300183 seconds)
  done (took 27.811739283 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.215597683 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.216449077 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.212849683 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.216311556 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.21456329 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.217169979 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.214921974 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.216609775 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.216040017 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212786995 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212905418 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.216501644 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.213647528 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.213294271 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.213247384 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.216012663 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.214353982 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.214255019 seconds)
  done (took 22.988511441 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.214479639 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.21428791 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.216203257 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.213170045 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.214519327 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.216945123 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.213783712 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.217130119 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.216071253 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.214258797 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.21748577 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.215800396 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.216148861 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.214279465 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.21662554 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.214455876 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.217635918 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214198945 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216632333 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.215604141 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.214646556 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.218754159 seconds)
  done (took 27.865828278 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218863438 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.216867236 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.214672909 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.216138647 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.214241932 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.216196754 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.218175217 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.214248414 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.219830859 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.218039784 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214918835 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218525649 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.218040626 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.216126205 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.215677532 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.215406701 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.219955701 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.216064314 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218785341 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.215813562 seconds)
  done (took 25.460406756 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228965668 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229103759 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.230531931 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229845475 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230854329 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.230158606 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230545061 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.230620044 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.229774348 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.230243606 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.231743739 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.230479313 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230325734 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.229759196 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.232118171 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229447363 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.231043919 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230956078 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231325207 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23160018 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231894037 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.232095541 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230883798 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231046833 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230721339 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23191651 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230753708 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.23113034 seconds)
  done (took 35.585683359 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221416692 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.221752601 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.219176198 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.218571555 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.219772645 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.217769853 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.218911076 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.218309399 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.221834361 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218936884 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.221989952 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.220158862 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.224035895 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.223564373 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.220451651 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.222966997 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221994361 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.220027871 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.219997105 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219857844 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.222428387 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.223222926 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.222824081 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218656348 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219875115 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.221874634 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220987834 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.220341132 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.222565248 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.221279412 seconds)
  done (took 37.754708745 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.267414115 seconds)
    (2/2) benchmarking "in"...
    done (took 1.26618802 seconds)
  done (took 3.661753549 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.219729344 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223769885 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.223701302 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.220863996 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220355897 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.223242731 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.224014936 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220949125 seconds)
  done (took 10.904996576 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.222357079 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.223825372 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.222733754 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.224110194 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.224660416 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.223412265 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23282922 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.24580119 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.224381959 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.225186339 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.231739259 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.737248459 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.226297835 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224128105 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.223510657 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.226917089 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.224149996 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.22559611 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.225486312 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.226437628 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225651661 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.22823956 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.227884116 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.224891752 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.227326389 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.236820679 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.227718 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.227544827 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.225249572 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.230950711 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.225302845 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.222935851 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.225960127 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.225524202 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.227132307 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.225431894 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.2376209 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249628416 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.23216105 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.226865658 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.22664261 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.224014981 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.226882291 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.226841194 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.228326954 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.225639062 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.225580724 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.222606119 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.224630449 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.229702385 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.230303672 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.226186824 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.223702305 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.229468951 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.227567329 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.232599689 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.246788418 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.230110528 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.236319972 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.237665136 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.239582093 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.250648819 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.229898144 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.227741864 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.237335003 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.250824063 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.235626571 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.243704958 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.224193232 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.226301307 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.234169008 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.24066764 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.253375141 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.225564421 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.226568244 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.228747148 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.227798555 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.227990182 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.237020793 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.250949871 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.227683214 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.228651021 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.237422757 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.252252911 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.229376475 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.22750441 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.22828301 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.227633997 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.22968647 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.240073258 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.248193343 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.228833729 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.228218677 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.228059747 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.229397939 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.229508296 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.228515266 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.227954856 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.226018635 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.228761506 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.228678092 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.233343783 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.237528221 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.230296772 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.230695758 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.236908031 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.230464322 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.230221321 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.2354031 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.230343247 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.229688642 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.231835677 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.2365261 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.227150042 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.233018915 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.237508715 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.22976454 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.23137112 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.23076317 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.230659455 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.23957855 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.255860313 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.231039139 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.230812057 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.23543226 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.243528949 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.23196339 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.233319394 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.23108735 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.229271781 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.228857796 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.232513904 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.232576772 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.231366098 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232565542 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.231170907 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.22881788 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.231655495 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.23133966 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.231859684 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.232830432 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.232001031 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.232425155 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.233851192 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.231080692 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.233972678 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.237134244 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.231692864 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.233500006 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.231867581 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.229621314 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.231754465 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.233113592 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.232737774 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.233327621 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.232024681 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.232045288 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.231642451 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.232915996 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.232633327 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.233635337 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.232142529 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238580469 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.232387504 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.235795931 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.231926719 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.229538476 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.232801188 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.233808953 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.233075748 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.234278973 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.231181144 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.237771575 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.241964075 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.234123186 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.23473788 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.235337057 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.233150477 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.233905296 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235327904 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.237635459 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.241419889 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.233443072 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.241928124 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.234507851 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235297152 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.234819002 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.234146965 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.234372803 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.234632124 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.238675637 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.24469735 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.247118545 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.260889274 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.236493895 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.238823703 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.236531963 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.239481973 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.24174291 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.236810954 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.236599936 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235732029 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.235863337 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.235274452 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.236651348 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.234898972 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.234957159 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.237132111 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.237440209 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.235472962 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.236789025 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.23631952 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.236550625 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.233029504 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.236400338 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.235858033 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.2362432 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.232962284 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.234879108 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.23606678 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.23783038 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.238028991 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.241408958 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.233635657 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.237567118 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.237861238 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.236066117 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.235560323 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.237906644 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.238640006 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.237859686 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.246477342 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.259579197 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.238874888 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.24399318 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.257401174 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.23764931 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.240065048 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.238251091 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.236052154 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.241297281 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.24717647 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.238410957 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.23819037 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.239393165 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.238618184 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.239019608 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.245099223 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.237402375 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.239971636 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.240798359 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.241597479 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.2369618 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.241813115 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.240892847 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.239716813 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.242311465 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.240480545 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.240417727 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241845341 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.241108287 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.240985008 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.24072328 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.244484146 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.248377755 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.246547187 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.239677582 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.242592641 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.241723948 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.244843288 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.24008566 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.240949281 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.241281903 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.254206732 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.267222604 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.248384992 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.241992723 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.241553011 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249164517 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.241850566 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.244921678 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241945666 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.240828204 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.240442143 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.241358907 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.23925888 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.240874586 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.242039161 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.241262373 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.24309298 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.247165841 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.242200498 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.240879934 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.241515041 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.241000742 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.242824624 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.241892377 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.242240317 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.244528601 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.243646481 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.241964722 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.242025527 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250610673 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.263776409 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.242636748 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.243193519 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.244092458 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.241693732 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.243306549 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.243027344 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.246908598 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.2515391 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.245445759 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.25045237 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.245076123 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.252896602 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.243108289 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.247488868 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.251271735 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.240429549 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.243605468 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.243429797 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.244749254 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.253719744 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.265582614 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.247118705 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.249654464 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.243258684 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.244758493 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.243442353 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.244292699 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.244716971 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.244251645 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.256394283 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.268314596 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.248463801 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246137211 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.239665198 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.244045122 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.246210343 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.244181481 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.24726019 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.246744466 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.24498908 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.245329438 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.244734428 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.24602312 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.244256005 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.246181579 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.243633865 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.244786925 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253705992 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.269068842 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.252758146 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.246695368 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.253983212 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.24487362 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255720098 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.268347196 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.247057432 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.24567388 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.246646654 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.248975933 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.248272681 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.247817803 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.247871279 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.247361097 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.252666325 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.248025989 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.247762578 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.247571087 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.246051614 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.248637132 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25710068 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.273321165 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.249647119 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.253117207 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.24435616 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.249716806 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.252224281 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.247347851 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.246594524 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.250960611 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259737327 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.257268287 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.247287279 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.248478954 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.248793587 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249545146 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.247900445 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.248034963 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.24898874 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.248591936 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.249135575 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.249752448 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.251202428 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.248161198 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.249702399 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250785766 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.250952611 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.257383921 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.25019262 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.249283604 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.249776202 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251111435 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250288623 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.250221125 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.249229084 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249862551 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.250082879 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.249559876 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.257204647 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.256441725 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.251893588 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.248824335 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.249532147 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.249174087 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.249803657 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.251536615 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.250183501 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249625331 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.2507366 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.250500596 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.250205812 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.248762145 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.249922343 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.249752284 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251548941 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253528158 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.258137469 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250904568 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.247221225 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.250686865 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.25138618 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.250477952 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.252826787 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.258775353 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25505296 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.261898192 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.262669036 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.25787448 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.251506703 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.255981354 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.260293387 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.25125165 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.252378993 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.251369938 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.252811714 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.252520499 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.256699042 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252188021 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.258614052 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.252107311 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.251503618 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.263901334 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.276717527 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.252256433 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.254365391 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.257135193 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.252860212 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.250700546 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.253391779 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.251816645 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.261275558 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.274651863 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.253065289 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25499099 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.252556428 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.25557849 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257484658 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254481593 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.253654859 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.250496698 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.253525977 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253416939 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.253487998 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.250382111 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.251916582 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.254209342 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.25662693 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.259997532 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.250637 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.256423621 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.254074628 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.254316503 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255611401 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.254967993 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.251925682 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.252810805 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.254855552 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.255051616 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.25562535 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.256643874 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.253081901 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.256719559 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.25662027 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.255831862 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258404727 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.266139599 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.264181204 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.252803326 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.255364216 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.256213531 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.257253639 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.256749832 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.256282423 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.256689391 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.256814105 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.25730965 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.257282905 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.256404037 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.259144993 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.2762568 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.280898173 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.256910399 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.25827809 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.259976797 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.256842353 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.254435956 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.257718544 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.259874956 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.261335168 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.265246026 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.258496662 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.263556004 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.277791567 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.259111159 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.261477448 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.260494311 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.266011942 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.259693757 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.257202555 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.257597465 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.262106538 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.274997991 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258266071 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.26749226 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.29019423 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.280130604 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.258075238 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.258786239 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.257003926 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.260072377 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.259186198 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.258520838 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.259654551 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.25854979 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.259331539 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.258684535 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.263622832 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.260192542 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.259361038 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.25950261 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.257804056 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.259514382 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.256422993 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.257608235 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.258799414 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.259409861 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.259548388 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.259444382 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.260293132 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.27285637 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.287451187 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.260557614 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.26079961 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.257048511 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.262352868 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.264368037 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27138626 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.269003461 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.260738159 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.26073311 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.2589686 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260569094 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.26063511 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.261759379 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.260073306 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.260034392 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.257561374 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.273487654 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.288284516 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.265436053 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.260560112 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261146607 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.26107326 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.262572164 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.261235308 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.262075948 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.261638067 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.263968401 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.266315915 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.261605321 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.262481696 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.265447908 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.270668307 seconds)
  done (took 743.693832498 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259452883 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.259963632 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.259563916 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.260190869 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260476612 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259701823 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260228669 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.260657586 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.261034661 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.260070521 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.258869073 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261163354 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.26056887 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260965382 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.260270295 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.2597049 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.261075304 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259952703 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.260802073 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.26002959 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.261640261 seconds)
  done (took 27.630836342 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.266003003 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.261109632 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.261280643 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.264065366 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.260999044 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.26473516 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.262127733 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.263948387 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.264410981 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26101482 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.264478844 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.264390158 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.262841938 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.261191283 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.261902986 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.265413492 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.265332558 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.262193475 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.264124808 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.264038886 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.265226052 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.263624117 seconds)
  done (took 28.959660575 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.26457981 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.266186908 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.265039091 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.26224045 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.266251603 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.263018115 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.266365093 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.267217053 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.268365764 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.266784476 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.265102428 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.268500544 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.274633047 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.272815756 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.267930158 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.26631977 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.265756227 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.266347596 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.265026641 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.263068015 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.274193123 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.264939598 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.263632182 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.265685793 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.26739861 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.267627041 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.266469765 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.268905998 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.267675647 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.270682392 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.267839634 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.268157449 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.268367185 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.267087058 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.268805536 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.271601606 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.267243599 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.264330102 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.268304429 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.277486656 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.287574692 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.267129272 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.273737225 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.267335769 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.266669824 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.271125075 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.276075761 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.265549277 seconds)
  done (took 62.041669208 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.267702438 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.268520566 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.264740039 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.268334306 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.268463117 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.268464961 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.26676152 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268978402 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.26613753 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.265444253 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.268863597 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.265166989 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.265927317 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.269613012 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.269692031 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.266446046 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.26625444 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.266470591 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.265670063 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.267364205 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.266693745 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.269270928 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.268463345 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.266435905 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.269672765 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.266856087 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.26721393 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.269395012 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.26784883 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.266675517 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.269888205 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.270008915 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.269522641 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.26774338 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.266805361 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.270003251 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.27029256 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.269083751 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.269588562 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.267132541 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.269724141 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.269929318 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.270969365 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.269667142 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.267830971 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.267991186 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.267872896 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.267263999 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.269876205 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.271576469 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.270727048 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.268929667 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.271260993 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.269494308 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.271745512 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.271940935 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.268767259 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.270173905 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.272884247 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.269712014 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.270292381 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273323207 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.269479286 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.272965359 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.273064524 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.26969004 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.269992301 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.273471566 seconds)
  done (took 87.454758055 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.272640977 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.273992978 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.273076569 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.272679586 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272184125 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.272545475 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.272245492 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.273522817 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.273979238 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.273561998 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.274052074 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.274354548 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.273717157 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.273633395 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.273183936 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.273722487 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.273776185 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.273445736 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.274435186 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.273756636 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.274051463 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.274738625 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27309435 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.27376904 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.27353318 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27454038 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.273457501 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274514222 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.273735205 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.274258688 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.274183633 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.274207131 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275260869 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.27441947 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.275291453 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.274156051 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.275105472 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275926298 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.274378746 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.277161885 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.275629071 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.275170928 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.276861842 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.275545343 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.275737336 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.275587692 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.274845765 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.276564495 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.275593427 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.276084268 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.27569376 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.276100164 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.275199877 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.274619464 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.275405524 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.276733405 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.275191046 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.276712314 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275991208 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.27549189 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276176209 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.277519293 seconds)
  done (took 80.201381451 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.276807077 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.276900185 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.275061363 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.273335539 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.277423882 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273688846 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.276139369 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.276412015 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.276910343 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279399878 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278332887 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.275447758 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277032261 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27712413 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.276587939 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275866091 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275543286 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.275968116 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.277772331 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.275144333 seconds)
  done (took 26.704206817 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.275703871 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.277762696 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.275243315 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277747937 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.279679322 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.275902762 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.278903388 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.278295441 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.275037004 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.278504676 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278768512 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.278959477 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.275818415 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.275705278 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.278312915 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27626448 seconds)
  done (took 21.614469425 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.276169575 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.278843376 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.2786334 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.278335933 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.275406696 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.276123439 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.27828231 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.276511015 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.275649576 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.279569423 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.279604429 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.279790196 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.27924572 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.279658476 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.277355704 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.279654933 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.277572126 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.276540392 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.279430761 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.280420503 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.278219787 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.27620291 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.280536924 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.278772734 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.277410502 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.278279306 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.277689463 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.277930472 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.278570244 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.280498225 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.27972411 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.279416538 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.279090371 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.277758869 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.281237786 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.27796912 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.281525148 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.281444525 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.281370076 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.282101627 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.281530096 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.279032969 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.281259752 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.281451769 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.278639018 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.282093858 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.27858407 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.280971025 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280357095 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.280169069 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.282292726 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.282513697 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.281828487 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283185867 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.282457771 seconds)
  done (took 71.545102131 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.28283172 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.282636495 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.280131009 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.282816491 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283043844 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.279950946 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.282966681 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.282546517 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.280578154 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.283337046 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279024679 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284310297 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279365369 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283006955 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.279763349 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.28216507 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.281106198 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.279826433 seconds)
  done (took 24.253138896 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.281440345 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280870303 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.282819837 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.278509984 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.280825179 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284541102 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.280540576 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.283153705 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284224951 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.280903391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281248306 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.284019922 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283739756 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28399337 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.281469711 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281136897 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.284781713 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284104437 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.280648387 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.281923343 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.285557158 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.284563389 seconds)
  done (took 29.396825464 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.283614966 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.2820573 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.283749111 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.301262847 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.304024808 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.283912419 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.283611638 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.283477242 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.306940635 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.338071139 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.332865721 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.305067181 seconds)
  done (took 16.771974414 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.283232955 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285540004 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.282446645 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285453041 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285623079 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283135443 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282757647 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284337316 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287052514 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284205188 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283120758 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.286699514 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.2864179 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285076208 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287066221 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.286087995 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285354003 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284153206 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283474133 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286683072 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284697666 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287045039 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283930704 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284451522 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283730833 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285051181 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288503256 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284997888 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285561194 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289102577 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287478902 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286001125 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288209704 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.285725968 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287903671 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.287658847 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.285982353 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.287832331 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287592914 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.285930892 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288874923 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288298012 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288486421 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2856246 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29015681 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286851459 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28682078 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287187768 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286586733 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288227996 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288656131 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286098213 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289048929 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291234961 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289930139 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290602469 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.286869326 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287121673 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289980345 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287558019 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.286401018 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290071687 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287993661 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.287967678 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290796417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.286886423 seconds)
  done (took 86.10680548 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288260522 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287295562 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288085901 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288294824 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.287353318 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286451074 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287087327 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28682466 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.286970167 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287450382 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290176052 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.287712377 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28738499 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288199343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289183688 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.287233928 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.288301422 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289396917 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288671168 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293541912 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288705994 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287501563 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289254817 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289229657 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290715982 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291279372 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289074117 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.288474041 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289449287 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290072532 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.288179561 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.288217932 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289898761 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.288748496 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.289365945 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290333132 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289571954 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.2896902 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289279421 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292454646 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289203001 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292155083 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29021175 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290134431 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291583782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.289601939 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.290324694 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290792553 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290935611 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289434511 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290833156 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290410603 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291152066 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290610754 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.290561484 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289636528 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291183345 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.290282437 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.289392116 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292996078 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290908001 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291203081 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294451599 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291095768 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.290667493 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291526981 seconds)
  done (took 86.304664704 seconds)
done (took 1741.586148074 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.465382534 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.411743946 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.293308736 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.313743872 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.294267698 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.290607814 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.306520573 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.292852997 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.293116 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.29332398 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.293367079 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.493011433 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.288634356 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.293932583 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.293751595 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.390335962 seconds)
  done (took 26.501702678 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.324080519 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.302627077 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.423236362 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.322469874 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.32391274 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.499860643 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.360658122 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.299397052 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.490340981 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.347877834 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.304550732 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.328884116 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.302632672 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.29216688 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.320854298 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.501589594 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.582414249 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.303719959 seconds)
  done (took 28.824218656 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.801424707 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.298921477 seconds)
  done (took 5.2966517 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.320439343 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.29986969 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.301179473 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.298516763 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.291616509 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.310451513 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.298972918 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.29823699 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.305990071 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.445997469 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307122744 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.312063616 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.32323773 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.302230299 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.298303932 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.341069144 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.478945862 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.301085493 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.295236402 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.305908911 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.300453935 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.411762402 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.350993887 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.301091279 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.438624769 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.312675036 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.308266418 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.309762232 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.431915721 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.299958246 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.300799817 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.301643192 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.303197065 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.277863931 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.897325212 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.299472724 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.328661285 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.310220853 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.298241522 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.464891713 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.303245205 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.309573521 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.293706072 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.895693568 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46137408 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.429739687 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.31784351 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.310602962 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305922064 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.369846641 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.303989938 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.3043111 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.347797684 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.148775175 seconds)
  done (took 83.992462041 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.338896172 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.295376356 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.477507182 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.323953058 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.296488637 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.330654629 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.301757966 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.620322929 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.309465724 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.296389094 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.606892546 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.887931406 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.323179327 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.349799759 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.16616572 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.352145253 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.295929858 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.314912748 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.298699096 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.297403473 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.869517109 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.313500838 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.297996938 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.538451744 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.33798764 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.8430065 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.301470524 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.298472999 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.304345872 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.296686646 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.843952746 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.319752117 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.352077505 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.29894475 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.585490205 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.710413205 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.670482458 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.303690636 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.334055566 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.301070359 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.30727519 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.826140604 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.686244937 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.299181536 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.298859986 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.841967879 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.30256424 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.300340521 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.30181288 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.549145868 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.298306547 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.299206113 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.317105037 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.300579133 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.298166438 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.393555816 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.390130877 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.846449517 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.299081312 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.298444841 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.334390718 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.300151645 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.299672757 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.299565614 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.316384548 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.691281566 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.509703347 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.306594751 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.688663773 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.839379851 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.322215016 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.915574584 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.323075452 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.329839014 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.346965662 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.299142587 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.299767476 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.841981217 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.304553778 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.298666168 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.673230428 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.302734603 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.616476819 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.326456536 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.302023001 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.879469938 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.312299152 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.385418593 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.301353327 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.30542217 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.301671329 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.304589069 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.595333948 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.333384234 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.300906405 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.300723001 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.352236681 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.301985607 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.299941702 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.304187964 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913269644 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.329819677 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.301896226 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.304574093 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.314703083 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.305728237 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.301890476 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.303844769 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.569791373 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.31369436 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.311897844 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.301906626 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.302098039 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.30778214 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.471916199 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.303356092 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.64297674 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.306165458 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.31999345 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.306231924 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.302783317 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.337375488 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.303679546 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.303624958 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.192465557 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.570989527 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.324439006 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.323542962 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.303497991 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303960507 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.322938367 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.324860751 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.332970736 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.303958911 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.086997428 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.334781169 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.318269322 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.303162325 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.308048589 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.303867659 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.337046905 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.305698586 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.606012107 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.601012951 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.512426139 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.309369605 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.310733523 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.074223674 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.36288865 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489675693 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.323241054 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.304810421 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.559101929 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.515133327 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.307546529 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.306339063 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.306174926 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.565279401 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.305264751 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.622987321 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.872340153 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.323780118 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.309016242 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.083714932 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.021546567 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.311100649 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.308992267 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.613902603 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.326857062 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.304977803 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.305728078 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.306655884 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.323728185 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.307324548 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.315105915 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.30638293 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.307062294 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.323418693 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.500378753 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.325704549 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.31169028 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.849996838 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.314557117 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.306664029 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.342246246 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.311105521 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.306377114 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.365684127 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.308734013 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.363220363 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.308139191 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.315744796 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.869193906 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.307114982 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.310639161 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.503032342 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.021002976 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.32566169 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.306570814 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.326189564 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.196923716 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.881841711 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.330159528 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.650860684 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.317866582 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.349797114 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.30626048 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.356231058 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.880087059 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.312219731 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.326952786 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.992480643 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.326911533 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.934171379 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.309581499 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.311297226 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.938852061 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.32831314 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.31489457 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.309708624 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.329226992 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.606231319 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.313385725 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.318618503 seconds)
  done (took 493.11537428 seconds)
done (took 638.920935805 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.308976143 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.316761773 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.301170831 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.317192988 seconds)
  done (took 10.455951466 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.318958594 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.316933685 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.327068978 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.316316641 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.320066308 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.316516614 seconds)
  done (took 9.129513131 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.308898162 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.318115797 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.318791968 seconds)
  done (took 8.159496828 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.542625009 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.335351652 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.700219299 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.342960801 seconds)
  done (took 9.136404253 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.328430652 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.328679575 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.330099085 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.321025293 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.321403241 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.321112851 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.321332268 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.320599665 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.320906909 seconds)
  done (took 13.127357898 seconds)
done (took 51.222083292 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.447477938 seconds)
    (2/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.40048362 seconds)
    (3/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.335706117 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.348415136 seconds)
    (5/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.314823134 seconds)
    (6/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.326602718 seconds)
    (7/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.098676548 seconds)
    (8/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.360680035 seconds)
    (9/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.299469945 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.321455049 seconds)
    (11/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.042971977 seconds)
    (12/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.426344904 seconds)
    (13/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.354883835 seconds)
    (14/286) benchmarking ("sort", Int8, false)...
    done (took 1.444849682 seconds)
    (15/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.332842531 seconds)
    (16/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.521105483 seconds)
    (17/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.449164026 seconds)
    (18/286) benchmarking ("sort", Float64, true)...
    done (took 1.958124677 seconds)
    (19/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.363996007 seconds)
    (20/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.377405588 seconds)
    (21/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.322531432 seconds)
    (22/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.493765025 seconds)
    (23/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.318996188 seconds)
    (24/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.454760916 seconds)
    (25/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.343564327 seconds)
    (26/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.350056925 seconds)
    (27/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.402529199 seconds)
    (28/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.443814206 seconds)
    (29/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.158408564 seconds)
    (30/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.655822997 seconds)
    (31/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.418030902 seconds)
    (32/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.358085139 seconds)
    (33/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.322771983 seconds)
    (34/286) benchmarking ("sort", Int64, true)...
    done (took 1.768266323 seconds)
    (35/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.325099129 seconds)
    (36/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.398288804 seconds)
    (37/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.47483404 seconds)
    (38/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.406392732 seconds)
    (39/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.326068564 seconds)
    (40/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.323396348 seconds)
    (41/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.379001314 seconds)
    (42/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.315369617 seconds)
    (43/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.426878723 seconds)
    (44/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.331771454 seconds)
    (45/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.617889252 seconds)
    (46/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.409673 seconds)
    (47/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.965458681 seconds)
    (48/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.45447878 seconds)
    (49/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.445137587 seconds)
    (50/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.510426099 seconds)
    (51/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.30722405 seconds)
    (52/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.368874579 seconds)
    (53/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.338357788 seconds)
    (54/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.333931928 seconds)
    (55/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.33376326 seconds)
    (56/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.344719002 seconds)
    (57/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.323321683 seconds)
    (58/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.370770954 seconds)
    (59/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.323920803 seconds)
    (60/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.324606242 seconds)
    (61/286) benchmarking ("sort", Float64, false)...
    done (took 1.522801294 seconds)
    (62/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.404813144 seconds)
    (63/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.330363461 seconds)
    (64/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.330080514 seconds)
    (65/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.513767213 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.383882997 seconds)
    (67/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.213355652 seconds)
    (68/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.013407479 seconds)
    (69/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.332786864 seconds)
    (70/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.301148324 seconds)
    (71/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.98689536 seconds)
    (72/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.47507071 seconds)
    (73/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.327113906 seconds)
    (74/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.378215811 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.336276364 seconds)
    (76/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.348125802 seconds)
    (77/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.378303819 seconds)
    (78/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.396523024 seconds)
    (79/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.476773393 seconds)
    (80/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.34468006 seconds)
    (81/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.330891928 seconds)
    (82/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.332208065 seconds)
    (83/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.468914802 seconds)
    (84/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.353958304 seconds)
    (85/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.660423164 seconds)
    (86/286) benchmarking ("sort", Int64, false)...
    done (took 1.510385822 seconds)
    (87/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.110280753 seconds)
    (88/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.352009854 seconds)
    (89/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.43210592 seconds)
    (90/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.325770497 seconds)
    (91/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.403884387 seconds)
    (92/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.317700713 seconds)
    (93/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.468743401 seconds)
    (94/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.35277597 seconds)
    (95/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.334117606 seconds)
    (96/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.325839156 seconds)
    (97/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.083690465 seconds)
    (98/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.357890004 seconds)
    (99/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.334253839 seconds)
    (100/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.077148864 seconds)
    (101/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.564775892 seconds)
    (102/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.376880425 seconds)
    (103/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.362967773 seconds)
    (104/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.335200931 seconds)
    (105/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.376697473 seconds)
    (106/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.591773729 seconds)
    (107/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.365825277 seconds)
    (108/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.376089441 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.394460264 seconds)
    (110/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.333021322 seconds)
    (111/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.316224931 seconds)
    (112/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.971059229 seconds)
    (113/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.347310098 seconds)
    (114/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.381966238 seconds)
    (115/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.336657572 seconds)
    (116/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.380677104 seconds)
    (117/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.356086489 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.427788803 seconds)
    (119/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.336274604 seconds)
    (120/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.446298991 seconds)
    (121/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.34330704 seconds)
    (122/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.555422828 seconds)
    (123/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.342252222 seconds)
    (124/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.416169312 seconds)
    (125/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.333226162 seconds)
    (126/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.4703375 seconds)
    (127/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.330717849 seconds)
    (128/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.44900622 seconds)
    (129/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.094834748 seconds)
    (130/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.40426998 seconds)
    (131/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.566816107 seconds)
    (132/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.343625346 seconds)
    (133/286) benchmarking ("sort", Bool, false)...
    done (took 1.352114087 seconds)
    (134/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.329630322 seconds)
    (135/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.402222916 seconds)
    (136/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.371094827 seconds)
    (137/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.331413543 seconds)
    (138/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.99462665 seconds)
    (139/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.413062279 seconds)
    (140/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.400306672 seconds)
    (141/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.369597045 seconds)
    (142/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.337365689 seconds)
    (143/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.403230775 seconds)
    (144/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.342160109 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.352288971 seconds)
    (146/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.404041243 seconds)
    (147/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.359529052 seconds)
    (148/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.377157313 seconds)
    (149/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.376976905 seconds)
    (150/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.45258507 seconds)
    (151/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.453024472 seconds)
    (152/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.421594934 seconds)
    (153/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.475069244 seconds)
    (154/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.330074017 seconds)
    (155/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.413604258 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.503937606 seconds)
    (157/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.337497513 seconds)
    (158/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.34434701 seconds)
    (159/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.330158641 seconds)
    (160/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.46159402 seconds)
    (161/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.080130834 seconds)
    (162/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.37589105 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.333348813 seconds)
    (164/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.029017913 seconds)
    (165/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.203131858 seconds)
    (166/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.341890737 seconds)
    (167/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.327228738 seconds)
    (168/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.340400377 seconds)
    (169/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.329990625 seconds)
    (170/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.311681973 seconds)
    (171/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.33396276 seconds)
    (172/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.325495212 seconds)
    (173/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.319695746 seconds)
    (174/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.546029528 seconds)
    (175/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.381648247 seconds)
    (176/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.405760764 seconds)
    (177/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.455006374 seconds)
    (178/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.362720585 seconds)
    (179/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.514533455 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.392387946 seconds)
    (181/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.341461383 seconds)
    (182/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.332954582 seconds)
    (183/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.324909742 seconds)
    (184/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.441145718 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.400137053 seconds)
    (186/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.455888822 seconds)
    (187/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.08942173 seconds)
    (188/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.406919902 seconds)
    (189/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.335311957 seconds)
    (190/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.332825453 seconds)
    (191/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.53096 seconds)
    (192/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.37776765 seconds)
    (193/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.435865998 seconds)
    (194/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.337665181 seconds)
    (195/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.309387499 seconds)
    (196/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.354472499 seconds)
    (197/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.490333359 seconds)
    (198/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.368841796 seconds)
    (199/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.335971734 seconds)
    (200/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.331689784 seconds)
    (201/286) benchmarking ("sort", Bool, true)...
    done (took 1.53241274 seconds)
    (202/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.329796671 seconds)
    (203/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.354221499 seconds)
    (204/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.411998061 seconds)
    (205/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.488020538 seconds)
    (206/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.226794849 seconds)
    (207/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.51462516 seconds)
    (208/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.42070745 seconds)
    (209/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.346974932 seconds)
    (210/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.308664114 seconds)
    (211/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.392748411 seconds)
    (212/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.981306203 seconds)
    (213/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.314321644 seconds)
    (214/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.33767991 seconds)
    (215/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.468211789 seconds)
    (216/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.491357019 seconds)
    (217/286) benchmarking ("sort", BigInt, true)...
    done (took 2.346056759 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.33472994 seconds)
    (219/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.333339716 seconds)
    (220/286) benchmarking ("sort", Float32, false)...
    done (took 1.485121985 seconds)
    (221/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.568364721 seconds)
    (222/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.411650779 seconds)
    (223/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.335723251 seconds)
    (224/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.368479647 seconds)
    (225/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.315863948 seconds)
    (226/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.334876565 seconds)
    (227/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.53102211 seconds)
    (228/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.313055815 seconds)
    (229/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.085874026 seconds)
    (230/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.489911253 seconds)
    (231/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.344141863 seconds)
    (232/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.389086128 seconds)
    (233/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.340220822 seconds)
    (234/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.433637691 seconds)
    (235/286) benchmarking ("sort", BigInt, false)...
    done (took 2.328299812 seconds)
    (236/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.329783257 seconds)
    (237/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.169333116 seconds)
    (238/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.977799194 seconds)
    (239/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.638876609 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.386685956 seconds)
    (241/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.361075469 seconds)
    (242/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.481295923 seconds)
    (243/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.368786244 seconds)
    (244/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.338328568 seconds)
    (245/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.365636782 seconds)
    (246/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.445212166 seconds)
    (247/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.439001408 seconds)
    (248/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.361008171 seconds)
    (249/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.354307839 seconds)
    (250/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.337508934 seconds)
    (251/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.042958837 seconds)
    (252/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.34158787 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.366895438 seconds)
    (254/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.316160224 seconds)
    (255/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.329795273 seconds)
    (256/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.418168599 seconds)
    (257/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.338830552 seconds)
    (258/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.392200174 seconds)
    (259/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.360307427 seconds)
    (260/286) benchmarking ("sort", Int8, true)...
    done (took 1.714399523 seconds)
    (261/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.385391473 seconds)
    (262/286) benchmarking ("sort", Float32, true)...
    done (took 1.943628805 seconds)
    (263/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.337773259 seconds)
    (264/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.412526723 seconds)
    (265/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.407413335 seconds)
    (266/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.330104461 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.365036847 seconds)
    (268/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.342933965 seconds)
    (269/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.343206749 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.35095985 seconds)
    (271/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.454114063 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.526500682 seconds)
    (273/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.363789065 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.339645966 seconds)
    (275/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.394831692 seconds)
    (276/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.044559008 seconds)
    (277/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.215802292 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.403341865 seconds)
    (279/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.329784866 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.362173901 seconds)
    (281/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.512583029 seconds)
    (282/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.346248312 seconds)
    (283/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.531888295 seconds)
    (284/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.49560528 seconds)
    (285/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.356881315 seconds)
    (286/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.989812554 seconds)
  done (took 468.168455935 seconds)
done (took 469.383079333 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.376879678 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.386895746 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.341890409 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.375372581 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.456314802 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.513917047 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.351826127 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.381206668 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.391287138 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.392653907 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.348510706 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.515510432 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.343206631 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.34286818 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.342758367 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385537335 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.332187015 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.343744901 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.358887434 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.381732886 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.359278934 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.350634663 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.392828876 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.515724579 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.347656705 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.346419456 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.34725957 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.367550405 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.459750165 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.346659502 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.346751652 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.356566398 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.335811509 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.348035015 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.338627382 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.367984712 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.356137734 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.353211938 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.379384488 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.458445489 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.337265422 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.349911298 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.345848579 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.346278284 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.345493014 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.385346659 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.345409073 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.40257661 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.388365858 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387483107 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.348389827 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.360025408 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.354011393 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.346245669 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.356486327 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.347149893 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.403031815 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392763102 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.365636945 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391977949 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.338225961 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.356711484 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.384661122 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.36089577 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.357605824 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.350866835 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.343813235 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.385902728 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.34126538 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.350640355 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.351913764 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.358378531 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.348983329 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.361454272 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.382334158 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.340354689 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.341453263 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.347607353 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.359542268 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.345927606 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.395727071 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.388212629 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.398409617 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.349160511 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390422037 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.520715802 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.357628035 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.34986506 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.381631047 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.368061076 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.360175109 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.36042697 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.383428016 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.349543385 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.394924375 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.406508951 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.357141924 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.357391482 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.397742371 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.360051237 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.343080862 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394863454 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.345296985 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.346137797 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.348889622 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.470700548 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.343956659 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.350043968 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.381611161 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.396409835 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.409898734 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.345671705 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.362961424 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.396356295 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.359970162 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.411051101 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.351769622 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.339032406 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.34063227 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.474018388 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.353095262 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.356912011 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395906909 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.409556854 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.350405369 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.346286534 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.352497321 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392399692 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.470295877 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.361993585 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.467027981 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.349056778 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.354840815 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.382657601 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397074124 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.38652239 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.413233862 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.397489443 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.367994593 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.351754864 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.364771013 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.363701479 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.353916231 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.409306045 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.350017517 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.384032634 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.39445017 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.394826161 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.385704989 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.474068145 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.356697303 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.342035527 seconds)
done (took 226.155573843 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.412255229 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.348366484 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.450100658 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.349491873 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.452113066 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.452067841 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.34749715 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.346300981 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.345854787 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.724586515 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.348379469 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.346386951 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.34738649 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.345815141 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.431794699 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.350398658 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.345583406 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.688487726 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.352152428 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.420972277 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.34927233 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.346955672 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.350917252 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.731290658 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.34830293 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.345138053 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.41928008 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.351243214 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.697546387 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.344295158 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.348174552 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.696445168 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.439055877 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.367301614 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.360072637 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.357483531 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.453642524 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.369315892 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.430366795 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.431367686 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.453761297 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.388966889 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.346814036 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.349351635 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.352748939 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.352318926 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.34890236 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.377402629 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.350757723 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.34924011 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.690724603 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.36161191 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.35783838 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.349951399 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.349989544 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.372063619 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.349390242 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.352477449 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.442791492 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.354330356 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.418150445 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.732399616 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.728427077 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.352794465 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.350642292 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.348682789 seconds)
  done (took 105.569093579 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.41937718 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.428524959 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.473310607 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.354244054 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.404141958 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.4772251 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.353893146 seconds)
  done (took 11.15552525 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.359294752 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.355052275 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.403449739 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.403223667 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.353874206 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.57218084 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.354855664 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.366376119 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.351616212 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.433277566 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.366318675 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356138387 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.360257617 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.352290161 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.401591838 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.36733201 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.468817898 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.355408712 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.355947269 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.508986945 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.352573441 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.361498844 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.435668898 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.366430451 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.368160167 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.364323118 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.319280284 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.356474616 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35226436 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.356716077 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.352941879 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.464916071 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.357322763 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.355723103 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.353565124 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.517587944 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.356053428 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.35545539 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.355726879 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.355583258 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.356033136 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.358426458 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.357752535 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.354057991 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.35509785 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.381468886 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.357647456 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.357347068 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.357323921 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.358280879 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.435700215 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.359184417 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.353839178 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.354282883 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.436729369 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.363338479 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.358380853 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.353617366 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.359700147 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.354825814 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.511772209 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.404892816 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.357639787 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.404187649 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.357827465 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.358697482 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.357557189 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.358896868 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.450264866 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.359532359 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.406253329 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.355501398 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.582789331 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.382339193 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.360333049 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.360599706 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.360475881 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358350245 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.357090284 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.367562818 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.356265184 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.358732109 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.365038569 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.356190592 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.355049167 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.541805513 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.518587067 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.356482835 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.372841076 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.36641823 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.356819856 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.433169206 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.359994371 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.355716965 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.41136363 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.474585257 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.439192608 seconds)
  done (took 140.466231324 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.365400559 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.368506323 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.362733644 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.381695704 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.362059651 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.359841116 seconds)
  done (took 9.451288022 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.362678412 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.361572309 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.35908992 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.359995351 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.359948865 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.371737147 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.372948905 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.361824208 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.365668343 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.361184406 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.374170659 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.36255381 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.364456278 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.361560431 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.373828108 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.364463858 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.372679003 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.358941664 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.363041969 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361349634 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.360226597 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.361366105 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.360329068 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.362448408 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.377015948 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.359907544 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.367356177 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.360887414 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.361602385 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.367909914 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.38479274 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.373847809 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.364506304 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.369009688 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.378720887 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.364147878 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.366872682 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.366337574 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.360949373 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.374647838 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.365228562 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.363255753 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.363985093 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.365831112 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.365417032 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.370761974 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.370797181 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.372122941 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.375050766 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.367057888 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.366578897 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.363774721 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.375236522 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.366362829 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.367543798 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.389624098 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.370931764 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.376639826 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.365108977 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.367412627 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.366763443 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.376384841 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.367794053 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.379386724 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.362804704 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.367321732 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.36756 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.369638489 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.365683533 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.366340918 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.367078277 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.363073528 seconds)
  done (took 100.698074155 seconds)
done (took 368.580947689 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.356954136 seconds)
  done (took 3.613496201 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.473535658 seconds)
  done (took 3.731545434 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.631970988 seconds)
  done (took 24.894330702 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.360597783 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.397569221 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.359663693 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.374239807 seconds)
  done (took 10.748937709 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.707409122 seconds)
  done (took 3.964053923 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.361184011 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.365787692 seconds)
  done (took 5.985283915 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.68675411 seconds)
  done (took 3.944504751 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.788096922 seconds)
  done (took 4.050101428 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.380145885 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.379964008 seconds)
  done (took 6.02618909 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.342745432 seconds)
  done (took 3.60068303 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.252515555 seconds)
  done (took 17.512407238 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.361748597 seconds)
  done (took 3.622297997 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.384705905 seconds)
  done (took 3.642936863 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.360245275 seconds)
  done (took 6.618227535 seconds)
done (took 103.212564952 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.361055632 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.367249309 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.366770525 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.368331546 seconds)
  done (took 10.721358037 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.414268338 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.39969782 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.403171918 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.41595515 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.407062371 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.400632038 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.393457199 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.395528026 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.413177188 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.404138545 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.404634887 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.408990787 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.401684727 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.395183717 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.404011638 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.403724726 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.413539611 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.40324631 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.394091779 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.405619716 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.368429909 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.413037427 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.405694918 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.369555215 seconds)
  done (took 34.899754409 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.861255794 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.440496758 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.521894479 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.421512694 seconds)
  done (took 7.504861141 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.438506087 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.437429763 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.449608993 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.487399049 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.512127873 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.445789136 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.397619502 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.391414779 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.378028424 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.438915196 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.498333387 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.435714969 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.520185424 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.36941324 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.636893366 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.370077929 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.369182958 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.447145262 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.500757457 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.506343252 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.370231378 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.447868917 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.449170618 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.436413428 seconds)
  done (took 35.994649177 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.369943072 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.389826444 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.369533807 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.36917291 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.377383075 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.369102165 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.370056171 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.371198221 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.370660958 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.911155064 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.37568549 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.383289168 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.89420579 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.37813895 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.376992425 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.372549715 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.897803356 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.897992009 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.377085211 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.376626111 seconds)
  done (took 30.859734464 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.364876829 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.364115817 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.716582304 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.622517483 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.365099225 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.364930928 seconds)
  done (took 14.061279433 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.458271307 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.618305344 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.380635927 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.791552179 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.879863698 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.38155787 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.376022586 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.651218607 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.040798199 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.01879081 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.441625369 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.456660521 seconds)
  done (took 20.758054789 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.373922241 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.369955455 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.379698161 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.389528281 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.438739592 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.377800964 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.383828116 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.368686316 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.442532809 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.443754965 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.377776195 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.4406266 seconds)
  done (took 22.050774521 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462610346 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.368305137 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368392981 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.477234459 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375349423 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.218273898 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.45993778 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.119709044 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.392437634 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641937516 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38383054 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471871847 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62644544 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.38283344 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373469398 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.357086875 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.607970288 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.915724169 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371800457 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368508716 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407025986 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.368050073 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.373695402 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.621120441 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.37430673 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.36989783 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.631068114 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.369671075 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.703275617 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.389980016 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381272074 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.369485924 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.646606889 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.066992911 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495964748 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.613997167 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.389772496 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.376525103 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.36728323 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.37619833 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.389122243 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.374459768 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381508861 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.370321837 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.370692684 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.370377725 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131135768 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.397542813 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.368737259 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.371765599 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.679922699 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476509511 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.375530212 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.371584201 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504374094 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.377823936 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.375606861 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.38114061 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964840907 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379407426 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379568389 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.378186554 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.386994571 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.379915102 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.068073892 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.380138782 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.377518907 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377448191 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372018862 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.373224771 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.396384113 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372769639 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.402351641 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.374073955 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16417848 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375960704 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400516758 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.980303683 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390485866 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.378892705 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.606492753 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372928234 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.372728152 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.372783808 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.375130149 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.153738637 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.382957255 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.357393254 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.373139957 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.129941039 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.639876431 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397743277 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40589456 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.600349349 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.356984388 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.375126125 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.38959011 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.381300156 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39810451 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.12871301 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395241118 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.378709046 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635218868 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.588485169 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380905068 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.367466674 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.90140376 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396796616 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.402903363 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.375705808 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.647641257 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.049149322 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.397141674 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.376295726 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397824981 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.376559726 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.213912224 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377569917 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.502948697 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.395225772 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685730042 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.235384353 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.377922634 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.444139753 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.382979294 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.376312534 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.377496809 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383897719 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.377057624 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.61062549 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408063703 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.393287515 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.388074536 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.376479447 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.377961129 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.381469239 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.386148936 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.603220599 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37831566 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.659229075 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.378244303 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.37799969 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.378231769 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.6028271 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.375727343 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.740183206 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643712256 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382527248 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.38933953 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.396897066 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.399054344 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484019873 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.401111191 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.394888801 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.642685744 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.383549614 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.383189231 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.378946482 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386771358 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.384600793 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.386712915 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406078939 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.065679564 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.352313682 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389054464 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.310823994 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.39461121 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44860097 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.38612019 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625394012 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.390404287 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405621114 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.391081193 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.382396837 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.613232649 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.390829474 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.379235282 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464193069 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.897851863 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.061636846 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393236664 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.380619047 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.377974484 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.379917414 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380477196 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380552988 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.380566152 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.626850284 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.401873057 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.402056089 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.04852862 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.383385076 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.381658729 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.394517817 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.394912887 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.388435513 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.382421488 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.388221989 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393568992 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401438545 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.39859083 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526095949 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.398134595 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.381836158 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.899822799 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.388225683 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.383901653 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.383133866 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418672787 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.386368053 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.249900822 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.648170353 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.410736442 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698144393 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389941215 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.406857664 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.381725752 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40255359 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400406454 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.416202679 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397454515 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.396033437 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.382879169 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392084538 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.961069803 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.208674795 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.992229764 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384547989 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.400142274 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.389268027 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.142387007 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405568915 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.384279087 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.648184052 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.142608732 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405528078 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.907945551 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.403544346 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.269753571 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.705176163 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626101168 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387395995 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.406299445 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.707044642 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.60639139 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421794008 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.393328898 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.392413569 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.369471133 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.992904367 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.422638237 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464811451 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146510504 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416918321 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393141463 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.473934948 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.404545489 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848955678 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412249924 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.38643931 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.395403932 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409934822 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2541986 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395132848 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.387581329 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081982813 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.39038056 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.915456075 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409282452 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.63729248 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.406784946 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.388676022 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.384458056 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.395225962 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.651526817 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.701340908 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396291465 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.388234171 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023730415 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.263011497 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.394347465 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.388747226 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.208098489 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398170833 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.731078183 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.396203574 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.423295844 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395995674 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389625741 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.389441099 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.385582868 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.395575936 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35803969 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941561219 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.40325844 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397339192 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.396374369 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419837318 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.647538764 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.403155826 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.060974869 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.625334264 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.419762075 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417437448 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.393638429 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.391309461 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.37981589 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.390177051 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.389523232 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.526859182 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.622666951 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390133452 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.374288233 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.514035303 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.609833849 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.391039777 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.390611911 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.674931675 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.393950143 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.41759616 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22057761 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424709829 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.389948808 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400133005 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.404193704 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.405346499 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.468435969 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.639606564 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.411438389 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.402707022 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850827037 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419159085 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.398943248 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.405398491 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488534155 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392088525 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.430687172 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.169290023 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.059371034 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.217505419 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.062242371 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.705794741 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399453777 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395432218 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.392778093 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.557095766 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392030408 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667824233 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393634847 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.417324946 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421277882 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398763857 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41771407 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.612531056 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.670313235 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.393913722 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40048733 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400813957 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.394848841 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.405228263 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.606944161 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.952830662 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011998814 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395342926 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409659305 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.161805722 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690258404 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395134444 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.394593089 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395292549 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.394513769 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.442595164 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.400994413 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401165124 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545221261 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707445363 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.105639422 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.427045363 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.423823566 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.169276324 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40313524 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.659101572 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.392615367 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.65278458 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.06913729 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.19089115 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665061902 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466418516 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64660449 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.401258953 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560986479 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.395585951 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.400357544 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.395591367 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396089372 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.393320131 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.40636498 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069567825 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.665714014 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.400888348 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.396579843 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43344698 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.406694242 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.621413998 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.196869936 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.622346835 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.407727098 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403368526 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.397022114 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.067919907 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711682106 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404267229 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.40212328 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.667813923 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.401473852 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423845616 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.849891526 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.395421163 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013478587 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.373757901 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420637842 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414636156 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.19976698 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.06931053 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.396996481 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962683811 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40041474 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412009073 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678975165 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.403838558 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.399365699 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.682477997 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.402803963 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.40896662 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.655119845 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.072868174 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.290740406 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.427288239 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430904914 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.407110776 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398605188 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50807379 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405741991 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409435707 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.863443648 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.423919023 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399147396 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41133167 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.408245769 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406565115 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.404961679 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.400312347 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.406570997 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.413084606 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.389958291 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.407678173 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.413393674 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020987335 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43012622 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.074148738 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.730240463 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.660767769 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.409232977 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.390522304 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.407567893 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400848745 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401669846 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401354535 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.431025443 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02914191 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.414727483 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.419978465 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407657014 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.621926958 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.615495174 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.412646611 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.649968755 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4148097 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.421246511 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.385062508 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402966842 seconds)
  done (took 991.676909562 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.454240328 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.434727035 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.444227584 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.437960317 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.468728031 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.460252621 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.48746901 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.434724138 seconds)
  done (took 20.918135974 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.418163296 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.4184388 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.413968207 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.415522585 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.413106055 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.951343715 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.43409239 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.41366059 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.413633837 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.417896098 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.406655234 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.224989961 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.418064318 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.413831886 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.40595561 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.413099198 seconds)
  done (took 33.297150784 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.697872303 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.675466631 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.92360967 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.495653021 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.405206137 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.423121413 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.799335423 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.426140582 seconds)
  done (took 28.145484062 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.418476792 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.418376874 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.415006055 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.416351139 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.416477842 seconds)
  done (took 8.385464742 seconds)
done (took 1260.531534637 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.40967449 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.410944014 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.408744416 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.411970134 seconds)
  done (took 6.940268965 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.387878865 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.393778601 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.394583926 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.407591343 seconds)
  done (took 9.881571664 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.238161041 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.128871292 seconds)
  done (took 5.663996722 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.409379841 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.162317172 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.156303676 seconds)
  done (took 8.029657737 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.720350571 seconds)
  done (took 3.02202636 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.836708484 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.781505139 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.605310992 seconds)
  done (took 6.525124938 seconds)
done (took 41.362440537 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.411139768 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.66258479 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.568073089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.416954476 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.569384966 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.566880912 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.225432738 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.408608305 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.415524726 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.413916845 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.409841383 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.571416498 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.205208179 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.664183892 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.205529379 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.757143083 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.571643909 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.417636587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.408852451 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.434384249 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.22623571 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.4092955 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.417288993 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.411589595 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.571776208 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.556521801 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.426165475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.757738496 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.409490238 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.412962635 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.556663736 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.418187736 seconds)
  done (took 84.182148351 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.413488288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.41558672 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.414605342 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.444491111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.413983886 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.415480092 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.439991302 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418555662 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.424433112 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.420016365 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.423593995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.410681797 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.428572036 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.411401077 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.431686657 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.432353381 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.431263086 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.418367434 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.412321238 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.431007834 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.424461727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.413357435 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.411927664 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.418601628 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.411009996 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.41633998 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.435189141 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.430265236 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.430929919 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.415040447 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.435391181 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.433616682 seconds)
  done (took 78.832890432 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.414261411 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.432061054 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.428936784 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.425256896 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.412495405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.454115502 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.41306251 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.42334483 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.423517367 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.431905622 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.420210382 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.412490265 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.415720223 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.414000867 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.413468948 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.413925973 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.41251239 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.421764697 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.414194675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.43201974 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.414735043 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.427928116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.413640414 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.42331699 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.433953174 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.436154926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.428376279 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.414334299 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.415288496 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.416363165 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.442456772 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.425130456 seconds)
  done (took 78.827635029 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.695955339 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.420939799 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.422385173 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.413911956 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.423766135 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.422901729 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.415106172 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.698995623 seconds)
  done (took 15.220827158 seconds)
done (took 258.365667071 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.417785656 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.420234177 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.635181768 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.446141201 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.427610326 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.443672774 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.443988015 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.662778961 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.440490621 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.667342449 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.440687648 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.442410528 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.415008227 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.460674033 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.721905085 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.57549745 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.369486482 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.43028174 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.789460737 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.453968946 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.704589945 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.416352034 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.718377496 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.421871343 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.416008205 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.436650226 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.416899485 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.373945439 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463796514 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.80100252 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.428843693 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.402353853 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.513948995 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.538722666 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.649607582 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.590010225 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.416790705 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.534102837 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.655949361 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.41805496 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.417862359 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.245853038 seconds)
  done (took 85.396828309 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.425303807 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.542466418 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.424249501 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.424160129 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.426497195 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.545107702 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.517996556 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.425936214 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.425691031 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.425047435 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.42638109 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.425817864 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.425502256 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.426538318 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.426640691 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.426759986 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.425704534 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.438592129 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.439029799 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.468469205 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.545389711 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.453782296 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.417353297 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.426777178 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.527359822 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.562523735 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.427891352 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.417867245 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.467367214 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.427805544 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.43109991 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.471356367 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.427340935 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.428749341 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.541377432 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.5231319 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.439834302 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.423379645 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.539023136 seconds)
  done (took 58.124012442 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.429123897 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.703500032 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.901136491 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.441276562 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.428822755 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.432704264 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.519990552 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.430458849 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.432242847 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.433168036 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.613289873 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.432913746 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.465390233 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.933732225 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.436121684 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.431817474 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.42988661 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.431226835 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.71426964 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439915504 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.543168887 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.431479037 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.520032692 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.43961855 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.457012466 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.430789428 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.436670701 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.012517604 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.437191346 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.613039229 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.368213278 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.523532181 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.955932466 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.92008756 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.376240263 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.438370165 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.43306599 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.616720884 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.4347727 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.431936599 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.521753302 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.43436229 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.917070431 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.118327192 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.454920466 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.432987441 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.040449953 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.623095871 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.72682485 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.446646894 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.946437141 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.441128371 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.433650315 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.434320536 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.717143041 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.44034909 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.432370656 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.036005886 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.459330511 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.523686142 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.432981328 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.434966029 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.717844435 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.434876192 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.703322633 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.435703301 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.441048986 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.458154406 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.91845726 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.440117397 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.137028784 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.45633368 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.433377712 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.616461301 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.708094993 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.079633142 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.443104815 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.721716266 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.969378513 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.524619162 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.438586614 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.006495572 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.530666897 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.437646702 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.436796472 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.43572957 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.4362305 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.486131225 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.521948485 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.061193415 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.13126539 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.079575803 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.551421018 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.446740257 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.437230837 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.042895097 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.461917861 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.435695709 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.915769344 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.150047746 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.460905395 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.442422189 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.150915076 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.464862771 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.525733122 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.442264273 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.925964118 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.442204843 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.540867313 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.443562833 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.443289177 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.498231946 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.527471441 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.444063909 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.436487671 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.113694151 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.65123444 seconds)
  done (took 190.106155528 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.431309439 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.43070307 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.429680444 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.429011537 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.429291864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.438666881 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.42941024 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.429278539 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.435457877 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.429725965 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.430398874 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.433225334 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.431949107 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.433749406 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.442597733 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.438199378 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.431568171 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.430660077 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.430640869 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.431013627 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.429829812 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.459498582 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.433717346 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.430791018 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.431193041 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.430562482 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.436193736 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.433141429 seconds)
  done (took 65.453065747 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.437788003 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.12000547 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.444796911 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.594023856 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.467644477 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.43507519 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.5868544 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.503724007 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.441999065 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.436212052 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.435952637 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.785387742 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.440258537 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.044520982 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.668271968 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.588590677 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.057022521 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.465751051 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.438776236 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.438129547 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.592073647 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.449838621 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.78808916 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.086865601 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.442820713 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.086702138 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.427968866 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.438201603 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.439592544 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.107980458 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.443164136 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.788784117 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.529977707 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.512304158 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.092260063 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.054268726 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.077770224 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.624499937 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.446667039 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.437424258 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.442734609 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.427946192 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.091484013 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.443244978 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.442675104 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.100122305 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.465326846 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.442578269 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.434149637 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.439046413 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.512290305 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.520679801 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.800331983 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.192083261 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.537389303 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.445757192 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.602211889 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.776271307 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.450844112 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.035885417 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.429356901 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.135662744 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.455354387 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.429469577 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.440744326 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.432669 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.617445163 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.604915809 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.060167457 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.471120516 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.033627025 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.640421037 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.446760684 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.44147447 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.44576255 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.132813022 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.043331131 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.640014438 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.609421494 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.68247309 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.437430838 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.441577442 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.430476026 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.534956327 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.447876891 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.134262568 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.082667288 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.470374173 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.44520956 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.443701125 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.444554838 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.657233943 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.104338815 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.535511989 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.054793649 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.821047259 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.796370366 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.447682529 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.513129412 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.469400821 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.867038869 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447949525 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.513009643 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.830691754 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.803021548 seconds)
  done (took 173.996055245 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.722640828 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.466766678 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.564656284 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.618742883 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.106424624 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.077566221 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.44776623 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.585488404 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.5722817 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.744629646 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.446586787 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.534681349 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.692872171 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.540706819 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.253490039 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.528218899 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.547505796 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.607130071 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.603382791 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.446776785 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.131072323 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.793960146 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.661404069 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.479202462 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.559643004 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.339342878 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.092144659 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.039827845 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.649750533 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.463368457 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.022721752 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.448336234 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.449814351 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.187587653 seconds)
  done (took 67.757530206 seconds)
done (took 642.141395288 seconds)
SAVING RESULT...
DONE!
