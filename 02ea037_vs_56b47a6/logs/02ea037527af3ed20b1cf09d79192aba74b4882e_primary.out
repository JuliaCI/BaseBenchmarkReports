cset: moving following pidspec: 14219
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 2.000394447 seconds)
loading group "string"... done (took 0.580545658 seconds)
loading group "linalg"... done (took 9.408924402 seconds)
loading group "parallel"... done (took 0.181248197 seconds)
loading group "find"... done (took 1.485359292 seconds)
loading group "tuple"... done (took 2.213116283 seconds)
loading group "dates"... done (took 1.436178583 seconds)
loading group "micro"... done (took 0.241945468 seconds)
loading group "io"... done (took 0.67163129 seconds)
loading group "scalar"... done (took 45.885409669 seconds)
loading group "sparse"... done (took 14.680525233 seconds)
loading group "broadcast"... done (took 1.216663362 seconds)
loading group "union"... done (took 16.66473091 seconds)
loading group "simd"... done (took 5.726344318 seconds)
loading group "random"... done (took 11.695830063 seconds)
loading group "problem"... done (took 2.416629534 seconds)
loading group "array"... done (took 29.951225887 seconds)
loading group "misc"... done (took 1.334215429 seconds)
loading group "sort"... done (took 4.372918179 seconds)
loading group "collection"... done (took 26.006330104 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.76722242 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.161275085 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.181146155 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.233869635 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.246529226 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.164940474 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.194124155 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.640445528 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.174617932 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.267385091 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.176597708 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.739797235 seconds)
done (took 6.703314135 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.268475052 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.093248759 seconds)
    (2/2) benchmarking "String"...
    done (took 0.160462564 seconds)
  done (took 0.919515793 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.094151779 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.22908754 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.127773153 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.145100126 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.144690935 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.126457266 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.143352627 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.144186927 seconds)
  done (took 1.734231577 seconds)
done (took 3.697731775 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.99340897 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.909920834 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.562750124 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.156844346 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.199867259 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.176749002 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.416731441 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.181959501 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.138626551 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.14249519 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.216063732 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.376169953 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.615768973 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.104241683 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.137647989 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.149340187 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.106370856 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.72549608 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.101923844 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.14685321 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.672836963 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.151093876 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.142745301 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.145289464 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.237533672 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.15660937 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.214436039 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.122793453 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.703483162 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.123235615 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.212525903 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.121252119 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.191758064 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.308837877 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.101765958 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.127683182 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.694781377 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.214150289 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.138014065 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.116407821 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.704054519 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.102629293 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.238315273 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.132822262 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.142140684 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.214237725 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.125955562 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.116405699 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.125945996 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.111627751 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.185730728 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.488613139 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.125669123 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171895667 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.113321046 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.725646102 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.11645597 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.176624136 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.143929156 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.129029632 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.121921787 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.120908101 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.192508044 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.124835428 seconds)
  done (took 22.136819144 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.151996736 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.175996424 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.114195906 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.169895665 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.178479568 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.117170485 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.105827041 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.114087434 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.142670284 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.230112897 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.174700637 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.180150552 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09442678 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.117321357 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125773814 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.282504528 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.150212232 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.133154552 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.120586244 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.13113181 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.155132086 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.137794523 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.118464679 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.138927042 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.199219577 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.226724391 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.143664096 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.141693799 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.099417125 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.146044685 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.161639449 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.177307919 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.111305192 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.098547995 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.225094456 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.140733778 seconds)
  done (took 6.123119603 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.252705331 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121120164 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.277472309 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.244744842 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.197842723 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.224643321 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.148574636 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.326337014 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.302442272 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.190825108 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.151399361 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.136695987 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099143655 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.119319852 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099415764 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 2.194534952 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.211375288 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.197908875 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.159065644 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130286524 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102394615 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.399331908 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123157689 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.105141207 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.12695848 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.091201404 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.198449989 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.232786361 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.130433635 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.656031005 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120671305 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.140146983 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.152870233 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.213981306 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.154916878 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.160520532 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.129779817 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.103938016 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.299598641 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.121939686 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.11524201 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.132696706 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.15670715 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.160798954 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.123102808 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.129535044 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.301134946 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.104837497 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.152590323 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.381559467 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.227729281 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.119704632 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.120692687 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.436096582 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.124346422 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.134639111 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.123444552 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.379340121 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.155868507 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.122260706 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097535362 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.130182036 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.096919464 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.44119172 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.12405423 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.122510089 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099371427 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.212084004 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.947262953 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10927918 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.136175357 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105993245 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.124774563 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.146184801 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.103997847 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.097667327 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.122370779 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097969604 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.12713214 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.139587062 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107071362 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.116672047 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169523355 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.147857862 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.124577745 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14884252 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.12563979 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.101356242 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.150919261 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.119695148 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.107854084 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.180788072 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114483147 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.122658442 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.141269492 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124157512 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146401445 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.120597426 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.228817871 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.101474188 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.102350778 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.152004173 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.123327297 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.149426499 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.15369261 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100440056 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.123059305 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.09783565 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.119343252 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.168160931 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.118172739 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.100183776 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.123897859 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.12061828 seconds)
  done (took 28.13308664 seconds)
done (took 57.062872647 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.476696584 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.146795604 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.149067188 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.148057358 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.146033976 seconds)
  done (took 1.823685051 seconds)
done (took 2.546722701 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.448038963 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.262833867 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.126169494 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.252492501 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111397601 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.264105709 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.220835672 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.126580473 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.287715955 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.106125072 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.251941123 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.105957025 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.129764227 seconds)
  done (took 3.453570047 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.117334372 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.147218612 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.100984655 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.133700321 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093750046 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.114689093 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.131704283 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.159652939 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.114183382 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10602276 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.114785836 seconds)
  done (took 2.051237148 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.113577398 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.138718029 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.099663925 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112752487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.111678599 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111688239 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.128743379 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.124996814 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.130314198 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.107818661 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.111855984 seconds)
  done (took 2.011515803 seconds)
done (took 8.227676283 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.407813855 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.512011034 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.128235178 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.218696279 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.414015891 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.253469544 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.736513173 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.168509699 seconds)
  done (took 14.804329434 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.158196095 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.121362419 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103461403 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.123066932 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103836681 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.121708776 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100701043 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.117226285 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101965708 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.117002138 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.099145594 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.117436422 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.104418175 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.119948232 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100897487 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.100753838 seconds)
  done (took 2.603914858 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.144519905 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.143174773 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.129180196 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.118000457 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.12543857 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107546409 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.130252572 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.127496383 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105779096 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.124624959 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.117785399 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.13432412 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.115609078 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.122824822 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.112193813 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.136309059 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.122372585 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110933167 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.128759356 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.111872318 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.136215972 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.108735013 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.13166995 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.134257028 seconds)
  done (took 3.826590091 seconds)
done (took 21.951293975 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.217504742 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108360361 seconds)
  done (took 1.048160608 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.12740788 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.145217075 seconds)
  done (took 1.002917368 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.13897318 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.116547456 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.170227635 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.142567636 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.102997282 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099844413 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.16119496 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.118684832 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100843306 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.118225434 seconds)
  done (took 1.999849236 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.108200443 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.124634689 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.11485577 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.145808327 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.117893294 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.121865128 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.108710598 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.124910125 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.126498982 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.100530376 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.129584011 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.130296817 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.127201518 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.149186355 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108013744 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.128471474 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.114797231 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.12681382 seconds)
  done (took 2.938303418 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.101258982 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103106494 seconds)
  done (took 0.934957283 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.106171726 seconds)
    (2/7) benchmarking "second"...
    done (took 0.11690474 seconds)
    (3/7) benchmarking "month"...
    done (took 0.105203253 seconds)
    (4/7) benchmarking "year"...
    done (took 0.122490186 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099797488 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.116673486 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.100077714 seconds)
  done (took 1.499105994 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.743325305 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.299007005 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.398078399 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.145616219 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.188973568 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.454354038 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.209726776 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.123932593 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.143449773 seconds)
  done (took 3.488152157 seconds)
done (took 13.639621385 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.113304669 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.166327557 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.644982031 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.137090228 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.096975512 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.181571217 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.351740751 seconds)
done (took 2.425575371 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.417156318 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.145605857 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.104160417 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098706325 seconds)
  done (took 1.497027355 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.099777117 seconds)
    (2/2) benchmarking "read"...
    done (took 0.110037513 seconds)
  done (took 0.949491951 seconds)
done (took 3.183630296 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097603087 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.153836033 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.094978319 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.112930796 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097036028 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094608276 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.11457542 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097398875 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.117314228 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.096474936 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.096486088 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115039425 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093913119 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111572195 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097283891 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.111731953 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.094543818 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093947827 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.112642784 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094424312 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.11452222 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097341912 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.11262959 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094514399 seconds)
  done (took 3.296836435 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.126780139 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.1164243 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105780632 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.123700753 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104848413 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.123632226 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.10612178 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.118752848 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.123741134 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.102535893 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.121817271 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105007313 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.119638759 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.10419723 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119720282 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104902031 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.123740935 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100533876 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119906494 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105932357 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.124236496 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100736384 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.121534612 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10720921 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.122251383 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.121885206 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101998497 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.10006044 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.124259196 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.122974921 seconds)
  done (took 4.166454898 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.110910109 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094792355 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.114297798 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.111818644 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.112882295 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.099633974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.11369784 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099681501 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.119658089 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095221042 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101579685 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.113125167 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.098009006 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.118549309 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.101365816 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.122339806 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.124638093 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.11605164 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.098432688 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.118964214 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.103406072 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.097838616 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.116574822 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.094792035 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.113973068 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.095062267 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.114841899 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.095714695 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096812271 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.113287026 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.103363309 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.123371308 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095167763 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.132618029 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.104815956 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.114116173 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.108377308 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.113403818 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.1018985 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094900955 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.113081094 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.095606395 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.117380529 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.112017411 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.11796458 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097609682 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098943495 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.119207904 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.100933086 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.12204222 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095557535 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.117398971 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.10354021 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.119161218 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.103585898 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.09462116 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.115687825 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.095419737 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.119273559 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096168345 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.113058689 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09550974 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.105112547 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.115247822 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.150801256 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.112425674 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.09886825 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.12107982 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100732949 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.126701641 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.103256189 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.14056743 seconds)
  done (took 8.600420198 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.103670798 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.128592138 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.098427502 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098184415 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.11270526 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096862527 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.123631864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097226803 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116976003 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118016032 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114800855 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098669706 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116837757 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.101168059 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11492082 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09951307 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.128416181 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093905899 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.11447202 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100694379 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114992014 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10597018 seconds)
  done (took 3.144698279 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.304125912 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.127045408 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.185722349 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122864523 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.146892842 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.139991349 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107102107 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.126920105 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1064873 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.13155481 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.131231564 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107121593 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.145981131 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.131875391 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.11316101 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.133475185 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107089488 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.13336203 seconds)
  done (took 3.251996522 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.11769886 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.118996881 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.129418801 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.119643098 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101627841 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.121584993 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.109959492 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.139346232 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.1040703 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.118347152 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.115676026 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121182089 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102666141 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119995898 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103244278 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.119097895 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.10318377 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118679713 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114555679 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.127842504 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.127899414 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118611522 seconds)
  done (took 3.322894628 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.122267912 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.12076212 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.131031465 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.127453223 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098670056 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.120156037 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.111417958 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.119239638 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.113283428 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.12070611 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100921219 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11869042 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.11115081 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.118051868 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.110216095 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.120140694 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102433262 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118680991 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102742278 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.117402041 seconds)
  done (took 3.059116762 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.156230659 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.138103708 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121281286 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.155046325 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.139716297 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.121414371 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.156474387 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.121401066 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.13935799 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.161318932 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.121251061 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.139703043 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.137772032 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.15010233 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.139872458 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.13775332 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.15605378 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.155624391 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121093658 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.140755122 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.159889192 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121537709 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.155832468 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.120760861 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.14008748 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.121652429 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.139951345 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.149171608 seconds)
  done (took 4.671917679 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099262689 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099520005 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.115281873 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097254792 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.115233873 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096418321 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.096921215 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.114464883 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.099736562 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.115045797 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.100422553 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.117134056 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099280597 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.099203852 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.118278939 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09947201 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118679693 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096833119 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.09690923 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11566891 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.099016665 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117758035 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100127519 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.115283778 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097103281 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099310262 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114948877 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.096767299 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117990242 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097541818 seconds)
  done (took 3.920720044 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.112726602 seconds)
    (2/2) benchmarking "in"...
    done (took 0.127202579 seconds)
  done (took 0.998134389 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.099188949 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.140210683 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.097157042 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103389572 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.12827653 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.11893725 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.114324254 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.128097212 seconds)
  done (took 1.68658888 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.133117234 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.144883081 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.109692788 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.137553619 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.123644654 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.143270817 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.213847021 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.108581793 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.129144651 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.102415942 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.145575042 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101870921 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.132099517 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110910335 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.13269659 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.12294288 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.121320592 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.113672221 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.130365395 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.103857203 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.127466919 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.14528955 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.118667602 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.131255757 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105543435 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.137577011 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.124617016 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.134511885 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109617842 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.140228272 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.110740829 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.113109955 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.107148917 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.127911175 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.102773367 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.141761197 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.128943432 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.128053199 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.113909424 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.128733902 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116072028 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.118132887 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.119351699 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.129696157 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.119638577 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.126687038 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.109596122 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.118304775 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.103346419 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.126401742 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.099524086 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.126152996 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.095401936 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.134788469 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.116683255 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.151882011 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.104850541 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.128195461 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.108531757 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.125855926 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.11152236 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.12664144 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.117680412 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.124786079 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.117041957 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.1347351 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.134196194 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.10022662 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093804206 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.121518791 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.11771379 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.153554942 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.141258437 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.109425198 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.1288156 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.102851694 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.129383967 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110928219 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.133570131 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.120423609 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.126595398 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112178805 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.136817592 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107627382 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.127087135 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111019112 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.123274724 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.105124608 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.122351116 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.137749413 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.123379693 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.102554818 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.122958352 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.120301914 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.126845691 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.106670875 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.122158481 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115678011 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.114234038 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109733778 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.129636966 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112862432 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.143984861 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110126059 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.128660761 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.116968539 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.135239748 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.111244106 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.126106148 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098733023 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.129628373 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.105144727 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.132940409 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09529156 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.129586127 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.111098789 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.128265037 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.122746112 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.123663613 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108918145 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.138274478 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.121195397 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.123786168 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098179555 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.128312521 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10779803 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.134727278 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.121767568 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.124062838 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.10069706 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.120190127 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.11714773 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.125827806 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.114950941 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.128142388 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110571426 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.094753 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.122986844 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.108533778 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.141881361 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.125651627 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.113772669 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.138215343 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.11287822 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.124869668 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.118253152 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.124407056 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102593362 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.137692642 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.109943443 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.119151961 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.117391288 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.127754854 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.105326641 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.127320354 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116152305 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.128794787 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.110197213 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.124711481 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.110204772 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.138581033 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102788407 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.129461825 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.106107955 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.142330918 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.109183157 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.119116159 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099251495 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111458732 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.123623779 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.107227606 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.122080769 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.109990432 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.128757244 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.103666439 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.125869479 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107910841 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.144424858 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.12087942 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.130266355 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.114791558 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.137806074 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10750452 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.130840731 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.108054355 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.130314088 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.109738721 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.136484659 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.112718298 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.128823183 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.109250193 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.117607535 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113547509 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.13597133 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103361151 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.123247914 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.103715779 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.12723174 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.122139413 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.127574122 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.109933648 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.124084004 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.113481656 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.13606916 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.109130587 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.126925897 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103691461 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.127112913 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.115509905 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.129573032 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112228578 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.140140224 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111974782 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.118545927 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11783492 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.125488199 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.115633455 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.120644511 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.105578688 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.103394661 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.131135797 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.10862959 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.127725544 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.09617944 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.137441141 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.119352891 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.130348434 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.104229513 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.128730669 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125807746 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.128110403 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114298711 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.129803944 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.116611414 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.15432099 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.120690079 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.109810204 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.143952371 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.109354488 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.114784008 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.115108289 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.125692504 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.103056397 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.106150633 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.125282721 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.111279349 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.132710303 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113285308 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.113363149 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.109233887 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.124491753 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.1047347 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.121238262 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.121598835 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.131651123 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.11138118 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.144315871 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112038398 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.130063229 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112581304 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.127174156 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.110093463 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.12864042 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.112163843 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.12996044 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.10728691 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.1221433 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.1130829 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.121758761 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.10496941 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.128499428 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.110082716 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.131497539 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113430761 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.125950448 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.121091476 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.131024113 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.111233227 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.174821882 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.12524132 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104999357 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13083297 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114614853 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.127754059 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.109739265 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.102091404 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.138690214 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.109035529 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.139812253 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.109093966 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.118681167 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110614704 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.129351261 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.110569928 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.127339603 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.109972997 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.125150908 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.106584348 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.125668882 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12414616 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.121772514 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.122352429 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.134716528 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.113910716 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.130030512 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.111985439 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.128392978 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.104408599 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.131718538 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.111383627 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.130204612 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.108044792 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.133889455 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.11142647 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.127102534 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105191393 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.126979414 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.108673154 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.1287338 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.094474967 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.122473434 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.104878752 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.127188961 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11754817 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.127417138 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.104402663 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.123501493 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109396347 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.122776476 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098466095 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.130704899 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.112778875 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.12702103 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124140633 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.120745139 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.109750107 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.145266927 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09733896 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.125245509 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.10510125 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.106307628 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.139168538 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.130326588 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.119150097 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.130746417 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.105691621 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097709165 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.127361156 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102971232 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.114923345 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104467923 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.132176876 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.107273858 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.127157022 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.111234019 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.133218825 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.112902019 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.137102646 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.107928354 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.128644274 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.109952256 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.116827197 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10463542 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.120286844 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107281454 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.126427925 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102890655 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.097127493 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.125388905 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.10810385 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.126527943 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.104714361 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.123486244 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.115714412 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.124289242 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.106362138 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.133552126 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.093605016 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.128084157 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.107834644 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.124939777 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10185443 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.128942683 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113925424 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.13156633 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.118670751 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.126129002 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.112778632 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.125404516 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101520317 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.125116308 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.106630707 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.1266476 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10172717 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.127484424 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116699661 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.12093977 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.111452219 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.128619451 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.107083148 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.132953135 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.112658063 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.129646204 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.116538262 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.129349283 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.112050897 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.135821548 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.109825223 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.128332276 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111403922 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.12399753 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113947336 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.120459419 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.119740632 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.129360273 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.109337176 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.124418105 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.102775888 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124345002 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.105698402 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104833839 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.137683947 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.128220419 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102802279 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101655811 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.122006045 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.108619824 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.134138121 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.133495795 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.108665827 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.127541661 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101214125 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.097724969 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.128749612 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.102451346 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.124938919 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.110945143 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133270061 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107496024 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.123135685 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104007256 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.135216658 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.113269159 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.133502179 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102891625 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.132152749 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.107863963 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.126811053 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104221953 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.124971042 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109176203 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.131836471 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.105536305 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.120684969 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122141619 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.135169587 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.127923885 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105802945 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.129423355 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106431889 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.09858938 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.128084145 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107659934 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.132605081 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.107332586 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126005946 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.144423331 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.100540872 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105166067 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.135042823 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.104945248 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.138443329 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.118350373 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.10867887 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.127905797 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10943215 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.098141864 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.121934025 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103127131 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.127482323 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102130557 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.119497452 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12564915 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.137866399 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110792801 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124296543 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103640108 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.119850557 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.100185461 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.121561821 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.109638265 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.126028816 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123219542 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.12224637 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.104274059 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.120083549 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109067123 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.128733735 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.111689423 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.117632707 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102541235 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.101981069 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.130198059 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.13898251 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104868307 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105394876 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.12989207 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108416891 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.122201668 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.133735045 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.098487588 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109715118 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.14589707 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.127765308 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112174587 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.134599765 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116991064 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.128468715 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099144118 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.127845276 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.110605648 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.128878608 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.109566866 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.129993407 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.138689292 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.129651899 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102079563 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.125560511 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.111163721 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.123394424 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.122297481 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.130277624 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.11002159 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.131994229 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108684989 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.132098487 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.120993862 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.132747819 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.110497865 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.132109591 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105459657 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.127767431 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106049143 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.126598361 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.112673888 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.129457563 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.106830375 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.131473806 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104164147 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.147576174 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.124334959 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.130087407 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.100763836 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.12476158 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107328433 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.12184716 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.115307812 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.12027969 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10857654 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.106323285 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.125576051 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.115013906 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.13292393 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.113764307 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.130403677 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.108555227 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.114917731 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.113520754 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.129437 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.114098556 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.119301247 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109354698 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.129152959 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.117792814 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.135094672 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104693531 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.129408098 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.107573062 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.131100674 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.099974685 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.132827266 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104732373 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.125815738 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102920708 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.127207498 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.11014253 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.130385312 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109115783 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.130451432 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110195989 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.132953493 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.114108131 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.117316394 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099172897 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.131923167 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103605389 seconds)
  done (took 71.972186419 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.196171395 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11180842 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.100068103 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.121791173 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.160352262 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.105217058 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.116714527 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.105492619 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.121277506 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.119847834 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.115702927 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097674389 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.149438408 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.159728146 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.153139432 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.119006085 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116835784 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102335287 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.115842189 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102523426 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.146715578 seconds)
  done (took 3.443479363 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.134003336 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.140796906 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.14181356 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.129071963 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.133549342 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.140596195 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11878393 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.142467258 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.146062295 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11268372 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.146515074 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140086156 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.112586085 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.133552088 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.132046717 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117163953 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.147483842 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.130364282 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.121887172 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.140313738 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.13709955 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.118887923 seconds)
  done (took 3.720780735 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.116632616 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.108403037 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.134026672 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.09856116 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.125691375 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.098494661 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.132929752 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.101542221 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.136461168 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.107424875 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.124521107 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10741474 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.133702392 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.099978542 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.125396431 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.101946483 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.136392075 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106288706 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.109670858 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.119195257 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.174568664 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.099282487 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.119643572 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10512572 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.136429027 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.110076754 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.124824804 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.106130662 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.102939529 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.127510012 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.100972448 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.130678561 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.11518959 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.12400957 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.103369861 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.126636601 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.105743014 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.119379705 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.104508614 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.134974395 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.104611186 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.126260038 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.120334312 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.12141585 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.102171845 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.129512597 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.106608519 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.098055477 seconds)
  done (took 6.412615718 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.154305702 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.190347319 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.105910222 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.17185655 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.147719229 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.119478367 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.128359343 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.172055502 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098972942 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.126520023 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.150125857 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.126052079 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.127735096 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.113945394 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.131940336 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.125541492 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.110068473 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.121448342 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.114404165 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.124342409 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.114231856 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.130934092 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.146118364 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.123336883 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.132845481 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.12391958 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103642555 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.134069193 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.122933862 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.135572593 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.134150748 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.116786842 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.146958574 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.128349142 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106013515 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.129622342 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.129535181 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.127007723 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.110197203 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.120418772 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108918274 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.135126554 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.130156831 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.13100217 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.128302817 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.129074726 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107772611 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.117608901 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123628514 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.130673198 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.121330559 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.146555901 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.132549955 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108324977 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.135247915 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.147579934 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10767629 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.125029273 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.113501171 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.142403134 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099200749 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.133879779 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.144614255 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.109768875 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.139659042 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.145901093 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109108425 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.133269616 seconds)
  done (took 9.693637586 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.152282909 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.135569433 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13183279 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.151848165 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134830236 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.115008444 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.136210098 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.13411412 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.115399848 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.14461837 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115077928 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.201364546 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.129212092 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123440489 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.136068452 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.13480497 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114895257 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.135753698 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.114880614 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.135678538 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.115198655 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.152355128 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.134732332 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.150579361 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133989258 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.130045596 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.114376169 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.135851036 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.151032758 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.114869365 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.155486224 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.134080502 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.115839484 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.15289898 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.156125207 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.115204886 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127510468 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114681542 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.136138946 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.134903346 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.109718472 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.151943242 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11524941 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.131016447 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.135483683 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115577071 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.152815759 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.155716066 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.123991937 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.147515068 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.136147637 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13156408 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.137026501 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.134796974 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131781213 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.1641886 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.152417063 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.151377944 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115307271 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.152537893 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.151244343 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.164030089 seconds)
  done (took 9.246112404 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107716039 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101709734 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.120576433 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099191189 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.122550051 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100267482 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.101207453 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.123781207 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102747432 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.122160526 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102684858 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.118898779 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100549352 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10170542 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.120039462 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099877017 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.119370989 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100390471 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.104367925 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.121412372 seconds)
  done (took 3.01003473 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.11869561 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.150695026 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.104096444 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.135703342 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.106185603 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.136094616 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.104835639 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.127675724 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.103923335 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.127285978 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120722868 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.141305974 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.123763179 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114347133 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.142199622 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.133814346 seconds)
  done (took 2.811618349 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.134825354 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.152763279 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.155028796 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.110545963 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.122035214 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.113713069 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.127905169 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100790911 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.098186789 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.136089332 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.110042988 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.132923941 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105686871 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.123604864 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103797467 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.13229206 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.098222432 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.129723276 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.106712089 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.155348636 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.130460664 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.108112777 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.128595986 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.107604003 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.127444054 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.110864883 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.134347655 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.101310772 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.124140279 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.108003471 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.128958604 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114223814 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.120258014 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.110555171 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.12291141 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.10146299 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.126573901 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.108759928 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.131616697 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107350263 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.122662631 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107244028 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.126886073 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.111098061 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.118823316 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.108269681 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.098189029 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.133652412 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.105039621 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.128782425 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.126446253 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.114364094 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.131936796 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.119652938 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.1370954 seconds)
  done (took 7.415702846 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.127791866 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.129378117 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.113396127 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.121222578 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.108702107 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.133425773 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.109434393 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.12688937 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107743654 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.121169966 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107626238 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.128752542 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107675225 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.129786926 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.108006471 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.128731581 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.098216284 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106371244 seconds)
  done (took 2.939035031 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116490589 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.102726042 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.13493125 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.10377773 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.124899288 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10584078 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.120348237 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.101828968 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.122664703 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.104149592 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.123860259 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.107114807 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122041989 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.107166937 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103234961 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.126028475 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.105604499 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.122189334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.103107662 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.120231838 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.106373665 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.122050779 seconds)
  done (took 3.33480083 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.134554143 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.168280803 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.124611386 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.180278392 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.13247999 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.11105589 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.145131796 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.11243277 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.154662957 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.109888001 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.130936313 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.111359673 seconds)
  done (took 2.44198677 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.143758472 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.177930351 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106103069 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129106915 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123723306 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134854555 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132837853 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113644815 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152929999 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.15325118 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112939869 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153421107 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.150817645 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150068595 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125332206 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145455623 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112610417 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.135407203 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10457778 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.164868071 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134545396 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151450297 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113655551 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133606979 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113739559 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149952502 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151261989 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153882243 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112995862 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153061658 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144165481 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114770071 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153679415 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.153568975 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108224619 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.152857583 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113347493 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.164716173 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146029714 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.149529445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108406144 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14509949 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151636719 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124187722 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152703337 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134411611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123085134 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134612392 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112295333 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.175595418 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146702563 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.151235453 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144807599 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132170611 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151865488 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.17498977 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.154588101 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.149975568 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124905811 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.154427856 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150000809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123918183 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151883123 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.155631823 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.144943933 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129016074 seconds)
  done (took 10.029466374 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167943746 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128285667 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.112712894 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.155265887 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151609593 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133629994 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113702144 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133312443 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113402851 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127627043 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.19930784 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.113135756 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151774036 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.150233995 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112981294 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135194692 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112511899 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150646021 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127847414 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1766774 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112802186 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.150912454 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150737409 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150495741 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133089817 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.145445168 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134225294 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114175962 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134332572 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11340805 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.145322993 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133866866 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.130236092 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.127028253 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150194246 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114698501 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13385936 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124072626 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.135225972 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.144852614 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128564459 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.164850585 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134106668 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113239582 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154414422 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134076915 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114212025 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128317718 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113676385 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128808539 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.155384214 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134074971 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.156027274 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151736969 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134412743 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114027192 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134175898 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114668254 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134486016 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.125054141 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15184976 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135123183 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.175369992 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114156566 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134600847 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.151555888 seconds)
  done (took 9.818011027 seconds)
done (took 187.147882198 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.132837611 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.171128379 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.121557385 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.191766345 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104482688 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.162590463 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.14122811 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.143724525 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.104565729 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.125839836 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105351124 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.130852647 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.173074134 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.103850816 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.12686203 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.110432588 seconds)
  done (took 2.983607509 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.228399247 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.339628741 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.133319116 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.135662079 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.114287076 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.131683595 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.113295516 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.133752327 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107747593 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.148406262 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109029665 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.131205014 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.125052981 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.131337157 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.106537747 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.131603404 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.146216131 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.110029229 seconds)
  done (took 3.419133139 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.152772356 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.173831138 seconds)
  done (took 1.169992938 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.156252268 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.472669032 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.362475978 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.178892654 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.164086048 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.164150524 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.203236055 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.128853405 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.239062852 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.16412221 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.165154331 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.134844913 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147392419 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.145277874 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.119025067 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.135489981 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.169234753 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11782546 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.135780483 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.117259555 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.164717764 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.116512674 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.145688003 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115720467 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.22559758 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.161624545 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.138215456 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.116931629 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.13925619 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.114646759 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.146593477 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.162514171 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.160552873 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.224844178 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.120434217 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.243544741 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126283651 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.136465486 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114334589 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.13730166 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.141839368 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.121805331 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.15674868 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.114209567 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.137233432 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.125671912 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.137274908 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.136642012 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.128645773 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.150393582 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.148145246 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.125916478 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.220839174 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.151618658 seconds)
  done (took 9.468446197 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.978251693 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.184121572 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110901332 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.149325303 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.175577459 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.131686967 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.980417585 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.161238537 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.301725794 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.973963509 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.158909243 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.152672431 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.323906238 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.313604922 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.242373823 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.405538313 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.860226568 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.128595784 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.167935896 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.198154888 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122390732 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.178993215 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.165894913 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.500924547 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.136420299 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.113233463 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.145583561 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12843016 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.240907695 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.1168751 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.138415276 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.248249271 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.32814341 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.281158099 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.12030566 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.133232184 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111539112 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.227104664 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.353879323 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.3017189 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.227209056 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109931619 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.133131621 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.132274649 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.165140629 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.129331273 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.226429123 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.235408113 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.236175515 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.149039155 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.151110444 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.129518278 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.15359182 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.222909282 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.132074268 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.411009428 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.437635605 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.137005449 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126707684 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.162273454 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.348061207 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.111570169 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.316979253 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.175634506 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.295632524 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.119241615 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.870608127 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.226741135 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.109491965 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.149515582 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.146740943 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122139214 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.153619763 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.21822274 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.471839171 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157827013 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.121867642 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.132279452 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.280112086 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.135580029 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.113494746 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.224387511 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.138203071 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.124872539 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.160345094 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156713732 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.233831012 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.313238213 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.1591658 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.154857515 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.124242749 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.153888896 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115307485 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.2968664 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.292434077 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.243118782 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.281642878 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.153674815 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.227692003 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.225273763 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.153175274 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.234560683 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.148967194 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.136754271 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.156906427 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.308042001 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.189731342 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.113833342 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.143282488 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.126535127 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.191707805 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.140120516 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127857157 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.250969325 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.553112805 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.22627171 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.131368435 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.117747722 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.151567998 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.225086443 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14771244 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.324113771 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.150940279 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.22939954 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.148462744 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109604886 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.149692249 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.227680789 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.158152282 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.135185564 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.157163769 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.148771937 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.319192622 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.308601926 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.142196737 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.321495771 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.229515959 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131889175 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.266167644 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132860311 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.253069409 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132217977 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.153330896 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118101061 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.863962558 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.155322915 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.126099693 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.144119557 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.242360501 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111077239 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.135217716 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.109732752 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.13077084 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.882482664 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.14205913 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.110408403 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.134634397 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.128828747 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.149842061 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.148714127 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.12174935 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.221156859 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.328110012 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.15754017 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.154767333 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.11956427 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.2218874 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.140582485 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.113065897 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.13331474 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.113548674 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.149113216 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.121230483 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.135900549 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.233535624 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.220363747 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.314667314 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.654621988 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11856397 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.10962914 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.326868769 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137245681 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.398512537 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129200466 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.319147725 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.230783104 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.13298574 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.431728392 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.234669505 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.243207841 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.121751387 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.235149232 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.139520706 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.148965596 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.225563423 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.116352029 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.146976242 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.222031694 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.162478409 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.133101458 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.248095872 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.134945651 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.292187633 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.106245251 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.25232439 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118350525 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154040001 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.403775106 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11347611 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.16274185 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.22332542 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.14458656 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.111804182 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.110153801 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.111993128 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.15280128 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.127514486 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.317851984 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.229636903 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.152289032 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.15053586 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129895346 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.246163638 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.275896511 seconds)
  done (took 55.141593264 seconds)
done (took 73.020975456 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.431622124 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.355989519 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.38848256 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.269005393 seconds)
  done (took 2.406223484 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.236409364 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.200859273 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.159648719 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.132490338 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.194787126 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.110362088 seconds)
  done (took 1.903607665 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.733511938 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.586675042 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.503301435 seconds)
  done (took 2.695832743 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.325195166 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.348180324 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.387745587 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.593947573 seconds)
  done (took 2.653281425 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.264832918 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.156660977 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.122321726 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.16593014 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.220287897 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.26421564 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.177821934 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.212084907 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.137993382 seconds)
  done (took 2.646788649 seconds)
done (took 13.177828488 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.215648655 seconds)
    (2/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.32032709 seconds)
    (3/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.246255304 seconds)
    (4/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.13172738 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.248990762 seconds)
    (6/286) benchmarking ("sort", Int8, false)...
    done (took 0.262486307 seconds)
    (7/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.35623084 seconds)
    (8/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.134374739 seconds)
    (9/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.256685513 seconds)
    (10/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.282846275 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.115692441 seconds)
    (12/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.322635204 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.173337795 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.15291328 seconds)
    (15/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.140406927 seconds)
    (16/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.298670291 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118212838 seconds)
    (18/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.150757605 seconds)
    (19/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.129527262 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.159652076 seconds)
    (21/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.235925669 seconds)
    (22/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.183335624 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.151244888 seconds)
    (24/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.125453826 seconds)
    (25/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.254484543 seconds)
    (26/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.278247055 seconds)
    (27/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.213183667 seconds)
    (28/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.092954554 seconds)
    (29/286) benchmarking ("sort", Float64, false)...
    done (took 0.206641639 seconds)
    (30/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.235465567 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.214435412 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.195977725 seconds)
    (33/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.256599981 seconds)
    (34/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.11673708 seconds)
    (35/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.303171414 seconds)
    (36/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.1186539 seconds)
    (37/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.282895198 seconds)
    (38/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.232671704 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.180326419 seconds)
    (40/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.130428313 seconds)
    (41/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.25141316 seconds)
    (42/286) benchmarking ("sort", Int64, true)...
    done (took 0.26811208 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.14290254 seconds)
    (44/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.125297157 seconds)
    (45/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.122382474 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.243468664 seconds)
    (47/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.122459572 seconds)
    (48/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.153869662 seconds)
    (49/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116761678 seconds)
    (50/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.124468378 seconds)
    (51/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.099572371 seconds)
    (52/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.21434508 seconds)
    (53/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.236496783 seconds)
    (54/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.120869245 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.252368387 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.181740244 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.142400122 seconds)
    (58/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.196553338 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.127042134 seconds)
    (60/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.130300456 seconds)
    (61/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.127858558 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.137689399 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.234846221 seconds)
    (64/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.113756329 seconds)
    (65/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.131493342 seconds)
    (66/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.155069986 seconds)
    (67/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.144505823 seconds)
    (68/286) benchmarking ("sort", Float32, true)...
    done (took 0.275570398 seconds)
    (69/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.095637234 seconds)
    (70/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.189738047 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.162216484 seconds)
    (72/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.197402235 seconds)
    (73/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.14197003 seconds)
    (74/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.162772083 seconds)
    (75/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.199328007 seconds)
    (76/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.146988541 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.178996628 seconds)
    (78/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.124579561 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.141610886 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.108029203 seconds)
    (81/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.116195514 seconds)
    (82/286) benchmarking ("sort", Float32, false)...
    done (took 0.185926589 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.241683598 seconds)
    (84/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.232898614 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.145482894 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.120208309 seconds)
    (87/286) benchmarking ("sort", BigInt, true)...
    done (took 0.298622065 seconds)
    (88/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.147713807 seconds)
    (89/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.094172099 seconds)
    (90/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.206787871 seconds)
    (91/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116736618 seconds)
    (92/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.120111038 seconds)
    (93/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.177120083 seconds)
    (94/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.095685809 seconds)
    (95/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.092924131 seconds)
    (96/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.223371187 seconds)
    (97/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.138704703 seconds)
    (98/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.241802507 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.142714611 seconds)
    (100/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.175234413 seconds)
    (101/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09479975 seconds)
    (102/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.178575033 seconds)
    (103/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.125389831 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.149730979 seconds)
    (105/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.095330622 seconds)
    (106/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.125354755 seconds)
    (107/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.09401785 seconds)
    (108/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.117670717 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.094330987 seconds)
    (110/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.174928569 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.117359184 seconds)
    (112/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.175580899 seconds)
    (113/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.092033202 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 0.234975569 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.150020446 seconds)
    (116/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.122498707 seconds)
    (117/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.260468973 seconds)
    (118/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.143567391 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.127122912 seconds)
    (120/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.14998848 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.121210805 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.140111549 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.125449353 seconds)
    (124/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.161002252 seconds)
    (125/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.161793229 seconds)
    (126/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.09518429 seconds)
    (127/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.145510127 seconds)
    (128/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.20269276 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.149622454 seconds)
    (130/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.155048442 seconds)
    (131/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.144127155 seconds)
    (132/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.221656563 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.139797701 seconds)
    (134/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.094906289 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.177114826 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.162032726 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.133150031 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11946591 seconds)
    (139/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.143116523 seconds)
    (140/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.127536435 seconds)
    (141/286) benchmarking ("sort", Float64, true)...
    done (took 0.274456153 seconds)
    (142/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.118791953 seconds)
    (143/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.222592588 seconds)
    (144/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.120518194 seconds)
    (145/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.152396217 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.124595194 seconds)
    (147/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.150523502 seconds)
    (148/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.176199096 seconds)
    (149/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116546567 seconds)
    (150/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.119865067 seconds)
    (151/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.152483683 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.149500443 seconds)
    (153/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.095475593 seconds)
    (154/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.118848695 seconds)
    (155/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.150541291 seconds)
    (156/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116502028 seconds)
    (157/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.116855646 seconds)
    (158/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116365446 seconds)
    (159/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.176001992 seconds)
    (160/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.139634137 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.118623406 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.164995154 seconds)
    (163/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.095821112 seconds)
    (164/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.240497121 seconds)
    (165/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.101496197 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.142437412 seconds)
    (167/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.122210868 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.138927435 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.119047916 seconds)
    (170/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.137727 seconds)
    (171/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.094821529 seconds)
    (172/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.12316955 seconds)
    (173/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.100719964 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.141769313 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109374188 seconds)
    (176/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.163550765 seconds)
    (177/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.126861523 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.149353418 seconds)
    (179/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.116326103 seconds)
    (180/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.117051519 seconds)
    (181/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138883376 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.122987024 seconds)
    (183/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113626875 seconds)
    (184/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.117139944 seconds)
    (185/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.093994381 seconds)
    (186/286) benchmarking ("sort", BigInt, false)...
    done (took 0.291336494 seconds)
    (187/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.154465058 seconds)
    (188/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.116437118 seconds)
    (189/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.133426289 seconds)
    (190/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.095925765 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 0.268606894 seconds)
    (192/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.163137106 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11489953 seconds)
    (194/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.14516013 seconds)
    (195/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.100858225 seconds)
    (196/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.187671205 seconds)
    (197/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117742689 seconds)
    (198/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.137994656 seconds)
    (199/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.095550493 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.132650384 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.129769535 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.150272344 seconds)
    (203/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.093289981 seconds)
    (204/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.164119088 seconds)
    (205/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.185260894 seconds)
    (206/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117409853 seconds)
    (207/286) benchmarking ("sort", Int8, true)...
    done (took 0.266784617 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.138446177 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.115292074 seconds)
    (210/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.146086409 seconds)
    (211/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.094204794 seconds)
    (212/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.095443362 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.143885446 seconds)
    (214/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.095283399 seconds)
    (215/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.122881654 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.119062973 seconds)
    (217/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.141308169 seconds)
    (218/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.184207335 seconds)
    (219/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.094399493 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.120647514 seconds)
    (221/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.142603334 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.095623052 seconds)
    (223/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.115905395 seconds)
    (224/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.118080913 seconds)
    (225/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.141347193 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.2184358 seconds)
    (227/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.106136121 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.221135598 seconds)
    (229/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.115675969 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.133927307 seconds)
    (231/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101614139 seconds)
    (232/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.140771583 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.120785212 seconds)
    (234/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.219448882 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.093686291 seconds)
    (236/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.183360114 seconds)
    (237/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.141377883 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.118525197 seconds)
    (239/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.21799313 seconds)
    (240/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.11652415 seconds)
    (241/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.117942867 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.147014286 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.15216277 seconds)
    (244/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10974096 seconds)
    (245/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.118473906 seconds)
    (246/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.292091975 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.119722268 seconds)
    (248/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.152276468 seconds)
    (249/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.096544282 seconds)
    (250/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.118807275 seconds)
    (251/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.096200638 seconds)
    (252/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.153678257 seconds)
    (253/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.09295871 seconds)
    (254/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.137229957 seconds)
    (255/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133116975 seconds)
    (256/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.138459322 seconds)
    (257/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.09463281 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.144323443 seconds)
    (259/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.120305875 seconds)
    (260/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.133284668 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111708354 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.142659539 seconds)
    (263/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.146047717 seconds)
    (264/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.115854915 seconds)
    (265/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.118453428 seconds)
    (266/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.141561811 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.113098254 seconds)
    (268/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.142049478 seconds)
    (269/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.119691862 seconds)
    (270/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.192351476 seconds)
    (271/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.094971628 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.152912068 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.121239559 seconds)
    (274/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.118342401 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116779821 seconds)
    (276/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.140719891 seconds)
    (277/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.127921438 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.14527926 seconds)
    (279/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.094756669 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.137373351 seconds)
    (281/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.095162419 seconds)
    (282/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.114945037 seconds)
    (283/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.135866099 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.119470878 seconds)
    (285/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.139740979 seconds)
    (286/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.113196068 seconds)
  done (took 45.116967998 seconds)
done (took 45.997523496 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.131794793 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.182900619 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.124511311 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.170267085 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.128066128 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.155535326 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.145305208 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.126259993 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.151054851 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.129819209 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.154881883 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.104986453 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.148422553 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123628186 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.148693822 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.168882306 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.127146346 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.144883856 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.113987615 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.138900994 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.114309169 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.140462189 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.117705336 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.128523423 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122452142 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.145960827 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118637166 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.146878621 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.116391111 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.135284311 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.113481222 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.141425565 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.113005518 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.15030515 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.115663316 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.114444448 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.148973159 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.120610609 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.143412577 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.141263325 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118950543 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.116441512 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.141049064 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.119636946 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.140007881 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.115257294 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.138732006 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.152607933 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.16463496 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.137193846 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.119191745 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.147181612 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.126998663 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.143145626 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.114089713 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.139271728 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117231047 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.171187372 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.114580227 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.137832052 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118578964 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.143309139 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115717417 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.138171471 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.116199724 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.146467522 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123492329 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.139004676 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.122167411 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.141037247 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.108589619 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.139214885 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.112728255 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.135745281 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.121344166 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121630294 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.131484461 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.11502419 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.142102509 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117333682 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.139947779 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.110693735 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.141957502 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116178179 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.135306962 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.105667409 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.137391155 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116064019 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.140068907 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.115563767 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.140703918 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.117066267 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.142632172 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.124085886 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.139793576 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.118315811 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.140655163 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.117453669 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.143029785 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.113649788 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.132192569 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.111112525 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.141441587 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.11067047 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.139629833 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.127568711 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.13661483 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117033019 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.139101835 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11612032 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.155814371 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122472975 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.140984964 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114173645 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.13362331 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119955493 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.137413807 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.113222065 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.135775104 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.117078172 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.139534525 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.117365179 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110257391 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.144716712 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.150037977 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.109774591 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.113337768 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135302813 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.116354118 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.141080394 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.116900768 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.136093856 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113362333 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.131060989 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.111931648 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.135268094 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120568476 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.134817768 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.115795557 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.140386054 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.11519436 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.139373944 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.115977206 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.142606594 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113299428 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.128503597 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.114659108 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.110953323 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.143514873 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.140100157 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.116853274 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.108575193 seconds)
done (took 20.703024095 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.130743067 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.225977441 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.182309529 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.18525699 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.169414157 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.171880355 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.154793863 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.186494352 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.127520017 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.182608656 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.181803463 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.143601264 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.183823024 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.152899221 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.146413211 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.147117838 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.125446718 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.166512955 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.191664793 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.15026483 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.182118519 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.154221907 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.179318841 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.157125132 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.145451405 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.190410599 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.131280362 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.148254304 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.129655724 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.157915026 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.143062574 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.155556111 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.15324596 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.140508763 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.153836615 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120845625 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.169521609 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.14119133 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.126587704 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.150586705 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.143408521 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.161210572 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.14307063 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.14031915 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.148564354 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.129993417 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.147355197 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.123010557 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.147431569 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116275505 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.155802699 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.178904741 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.12486827 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.153871296 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.15430304 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123943036 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.153594207 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.130868646 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.15358284 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.129309958 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.15186421 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.153737559 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.13457194 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.177000223 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.149140293 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.129325239 seconds)
  done (took 11.012085272 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.150415127 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.185420196 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.154249128 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130847017 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.155715097 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.108728081 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.133641613 seconds)
  done (took 1.955762596 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.116194754 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.172864623 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.154718051 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.178393146 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.137122635 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.184142107 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.158236509 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.111340492 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.167641988 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.126186578 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.169964985 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.206671727 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.111664927 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.154057696 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.181528712 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.110687816 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.182065354 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.111553879 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.147215937 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.152896471 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145095774 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.163917544 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.133809586 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.136980953 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.13728231 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.13859315 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.22336913 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.129627373 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.136668951 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.120178893 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.148304722 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.237417364 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138963488 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.150919824 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.108682704 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.174200041 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.162807624 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.122577106 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.168591154 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.119773804 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.163560364 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.122174288 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.148218941 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.12225156 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.14689 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12947616 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.155339208 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.150756299 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.120399901 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.171949128 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.129094414 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.16329137 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.114534995 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.142000427 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.128304094 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145217891 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130871746 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.14534034 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.171118021 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.123605719 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.170492161 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.147321954 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.164095414 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.172118068 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.136976483 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.163558721 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.138933558 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.147084164 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.123716178 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.148180636 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.17280003 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.119475294 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.154202809 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.129983013 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14987417 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.143077501 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.169348887 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11839501 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.152794956 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.117757628 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.141688588 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.111799097 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.155810746 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116557658 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.140550906 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.138090256 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.154568712 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.147383306 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.119129198 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.170057044 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.12066575 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.156150173 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.130928142 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.14456948 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.161001445 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.150342905 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.154552185 seconds)
  done (took 15.145824181 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.123827692 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116530586 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.145835113 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.116021178 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.140021635 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114171499 seconds)
  done (took 1.699726966 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.16143225 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.143849169 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.133202195 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.148325202 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.191266494 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.141745219 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.166242122 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.128448973 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.162792581 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.157671798 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.141031694 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.16835283 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.153766893 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.14807761 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.167007382 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.126746463 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.167569673 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.119285134 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.15806745 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.116934648 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.159953959 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.125749088 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.142532845 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.141677885 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.14872888 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.150325814 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125094848 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.159145204 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.132775165 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.153087797 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.125502377 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.148229867 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12380651 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.155406762 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.169580761 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124624448 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.142034163 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.124909777 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.151373586 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.122284995 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.16968994 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.120100666 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.158757756 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.126037063 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.155392511 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.1514194 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.124691591 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.147994426 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.141416181 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.150331887 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.124124634 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.150617103 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.12221329 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.148724039 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123789535 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.153725203 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.12399388 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.166918074 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.148918435 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.124907815 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.145964985 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.12208946 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.153947074 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.12326671 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.147843712 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.12414611 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.152124864 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.119722198 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.14222577 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.123681534 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.150148367 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119956827 seconds)
  done (took 11.237629786 seconds)
done (took 41.982691607 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.733894971 seconds)
  done (took 1.674887073 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 1.010080068 seconds)
  done (took 1.952217634 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.692987582 seconds)
  done (took 18.667635788 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.711701409 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.844291808 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.272329849 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.201936262 seconds)
  done (took 3.975452055 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.026289068 seconds)
  done (took 1.988668131 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.384990773 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.316752448 seconds)
  done (took 1.65040071 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.893133514 seconds)
  done (took 1.845033604 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.776479696 seconds)
  done (took 2.73139763 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.482409381 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.239011161 seconds)
  done (took 1.68903179 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.694249319 seconds)
  done (took 1.649865307 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.708232407 seconds)
  done (took 16.673245041 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.298756124 seconds)
  done (took 1.274031949 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.359630448 seconds)
  done (took 1.319157409 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.75534348 seconds)
  done (took 4.713178077 seconds)
done (took 62.75688891 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.134603966 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.152664065 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.128142341 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125427725 seconds)
  done (took 1.49542432 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.142417451 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.153402523 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.131138223 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.148478178 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.13532718 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.153341883 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.123819394 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.157347128 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.124987283 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.152464843 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.127110032 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.150407049 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.152074743 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122617435 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.144103856 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.128246678 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.155458547 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.126471762 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.150160156 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.125910342 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.147774951 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.126630051 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.153827425 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.124407096 seconds)
  done (took 4.326200832 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.130422636 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.118904292 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.146416103 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118073348 seconds)
  done (took 1.482402436 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.137542943 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.167676001 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.143107237 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.155940664 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143498758 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.167684801 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.141410336 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118054269 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.120531664 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.157701027 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.144801168 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.147142572 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.167456657 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.113403191 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.159373235 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114408255 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.143072783 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.143633126 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.155867224 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.132723885 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142988958 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.130414167 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.150384731 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.160567056 seconds)
  done (took 4.431450163 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.232212807 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.162840135 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.174175244 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.127732071 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.212639207 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.17854804 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.117328052 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.175579962 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.118404076 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.170030528 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.147829051 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.182205948 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.169675398 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.149531182 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.121362827 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.158179534 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.144580776 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.175416476 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.146786266 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.138554472 seconds)
  done (took 4.170636656 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.139988991 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.148828534 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.11629482 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.11695557 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.151560227 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121850348 seconds)
  done (took 1.770516057 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.122258928 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114717972 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.138130777 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.111049725 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.14099024 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.111116234 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.109253294 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.13725791 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.110255414 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.135463748 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.110646842 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.134038595 seconds)
  done (took 2.449675531 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.522095313 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.11605412 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.158102436 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11873394 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.170412584 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.14180374 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.137511651 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.141518614 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.213069094 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.129826264 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.161501465 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.211154916 seconds)
  done (took 3.189553338 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288245429 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122933004 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.361972593 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.499050944 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207101396 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217990295 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.374212978 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.214401004 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.246607577 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.174021376 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.259285437 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199992034 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1935835 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230325179 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177132958 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.221560195 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233081334 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.272767598 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191010435 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.277743279 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224336474 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.216600523 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239649566 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191159219 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149355103 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213285087 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.144583049 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133517732 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235813142 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251152807 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249175162 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197996422 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15143896 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.309793404 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.31621724 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259029548 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.471385654 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168943775 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.234259284 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.243064116 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.342687664 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15256452 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.30162002 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171127659 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.16232344 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242928523 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208994592 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.240976213 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.165969048 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153275941 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.293380527 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233768168 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.248280032 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.175750057 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.404109403 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192804711 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.184308242 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240723846 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.267083235 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25624385 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219406155 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.148867907 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.277199236 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.265164808 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242092625 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.158039301 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.224900388 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157738559 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234950297 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260331445 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.242125227 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22283645 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.322513068 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169133016 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219010492 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.221496932 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172147672 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233207841 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20785024 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.146637047 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190691985 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149097959 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158755273 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.220989761 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123900248 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.282937401 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173410896 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.331820367 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.285667854 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204015018 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.215091948 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219779416 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224515221 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184956704 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.119205922 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188932202 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.209898332 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204311994 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168339554 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202422893 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161615653 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.159382431 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19612729 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.122221529 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206578023 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.165349128 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222326289 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214422256 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.133802313 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213309114 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190020466 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.207098601 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230687788 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.248148902 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165352379 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138433248 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25977529 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206558413 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.170409818 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.230038539 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.249408967 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.214478309 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176852542 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237924373 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.268432137 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179379118 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.257981182 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158715584 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.169782063 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.202260835 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209205299 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.208097292 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.195281925 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135263647 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.199297696 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.264274984 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.156288059 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.142175366 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229977857 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157760357 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160152921 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161286741 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174564788 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.176894646 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.165942606 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.174281405 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208368739 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205968121 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.195509026 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215905938 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160934087 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.313882968 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138650383 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.203963136 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.185741366 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.116223167 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.273569475 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.248026334 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13288809 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24729451 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.254375573 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293737055 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216567085 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162891534 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.239961587 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131927601 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.146512636 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229221735 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.211860804 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215668428 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.24349483 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.317547544 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.231183314 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.195253709 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162665885 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.255585616 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.201100049 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221466455 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.185587842 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.21519318 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231290078 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.147977975 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125991624 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.15812383 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152164398 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165833187 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162849998 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.259262306 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222050073 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.304935423 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.211572991 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151976435 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241699356 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.155623026 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219913734 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.231653807 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174609317 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.249280383 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.241473867 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221066888 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151665322 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269079567 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.118895656 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.125163891 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.169523507 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.22032321 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163127316 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142421771 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19265066 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.241310112 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23725046 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194999771 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.334031547 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22556829 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.25480158 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.149508855 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168528989 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225259399 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205531078 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.228448678 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143710623 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.210582127 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.233282505 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18925333 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270283698 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21318722 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227561123 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.314965635 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.199523757 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134873165 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.192068992 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222354366 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184547494 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.208649283 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15775685 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171805591 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201484644 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.145457202 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157681344 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.261580947 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182072782 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259433526 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.200865789 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249514498 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154764587 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19188105 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180229042 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184310045 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.143880116 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229353963 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.262904625 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189805792 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209720318 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23400368 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133572219 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.437107189 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.261186965 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.25738461 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.174871961 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186130536 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.207635967 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176765069 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220416075 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240683398 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191416375 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243240972 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205413678 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.181414894 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143107238 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.18583187 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191577096 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.201915841 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.142220316 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.198593829 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.178822704 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.267973008 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188137818 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203010227 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222273308 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.148968029 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.195405686 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181066385 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272729757 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204970726 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241647221 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.197994203 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.221447697 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251337549 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122807266 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158876125 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.127979827 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.24117536 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165925264 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209795564 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.298994876 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.30606112 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206671019 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223598667 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172408908 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.124248555 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208615215 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192477014 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.321424066 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188093231 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.142350782 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.286765092 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.159864597 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161658833 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.212949076 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.381366036 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17967716 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235173458 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.14804297 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.360294594 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154463487 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13669931 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205141989 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228745326 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.166146646 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.198937906 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219753279 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189639569 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20630348 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147950354 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.306303086 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.314249785 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240888897 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.241386657 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.1847368 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181735075 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221473858 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234834073 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186827299 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.183377472 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206992738 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.244158341 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.246668526 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.137840522 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213905978 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213834923 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.209166882 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255355768 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164413997 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.251012037 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164009982 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231957177 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156179605 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153801968 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204302517 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.293742231 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141504038 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236347897 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204578783 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164152078 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127719593 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20442385 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20514068 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187280161 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.130304184 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.282960565 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12859997 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216768722 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236349639 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132759931 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.197424801 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.18515231 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.163704836 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157003439 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190866593 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170479215 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.178521362 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249043274 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.165039648 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238601311 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244185741 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.220934083 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214693216 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180605493 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.669899261 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.158236618 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.240411976 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185330163 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.260791975 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.187275444 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223029308 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1823134 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189119473 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233164244 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197138729 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.258941012 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230884722 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.207681561 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13400105 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190587032 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18947484 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.163419547 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165294061 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212745711 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176857565 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.171367638 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.20413898 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16088584 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.187384739 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170907459 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247933172 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157386274 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.287060152 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241923778 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147744325 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223605171 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.255937346 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161903484 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.214832475 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231061122 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179859271 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204362694 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.133743684 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.167563873 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235590072 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.122709039 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213325271 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209164597 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212600751 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215514256 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144179331 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210134742 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188066755 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211439668 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154241626 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.172497806 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202779551 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162976845 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.128989512 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198556193 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216414046 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.205305012 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155675607 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.179304471 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.242163354 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.151762445 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139630174 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.405116036 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209240857 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.263390685 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.198626838 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139517638 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182036899 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207722693 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.197115192 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206209828 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.132675375 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163011132 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137209733 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.220989728 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.199106927 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.201901454 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.249740429 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214411049 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25113933 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.163474107 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277777227 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.17281776 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198757572 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.139015415 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.15977452 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180151607 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141616267 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191777875 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.30675716 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236959934 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.192017778 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.158606232 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160134184 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125448221 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164932344 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.206551672 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202246125 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175244054 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190330764 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.145989373 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158406846 seconds)
  done (took 100.660987743 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178478594 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.17480894 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.179792295 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.224396246 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201775358 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.281274896 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.237896333 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257964112 seconds)
  done (took 2.802095685 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.136797735 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.168162464 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.176879135 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.154646621 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116040018 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.45938598 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.170369906 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.155866835 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.181747086 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.170126853 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.117074786 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.773222042 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.122922268 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.154279581 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.139263241 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.139647301 seconds)
  done (took 4.389526844 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.83627692 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.603706823 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.173906186 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.306267441 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.296353758 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.2147104 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.80824938 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.253076745 seconds)
  done (took 13.547802128 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.158994447 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.167731541 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.174046414 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.19682266 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.152922998 seconds)
  done (took 1.915497427 seconds)
done (took 147.58685176 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.129499819 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.126265426 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.149860134 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.153167243 seconds)
  done (took 1.609121197 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.138705663 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.102512524 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.133515489 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.101171242 seconds)
  done (took 1.533788709 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.54594868 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.130171774 seconds)
  done (took 1.777009188 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.157013475 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.16204591 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.13586399 seconds)
  done (took 1.517455767 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.136839105 seconds)
  done (took 1.204731727 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.129336037 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125707753 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.169526386 seconds)
  done (took 1.49252533 seconds)
done (took 10.200419462 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145802395 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.468232797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412647527 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.16510328 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.756479547 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.403900976 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.081243077 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.197763339 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175508444 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.143346399 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.138641351 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.723043585 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.037015063 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.388439682 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.018632404 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.391177813 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.699390878 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.146560991 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125299068 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.145254328 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.023349756 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.14273574 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.116659919 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.14619755 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.695263511 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.45052355 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.115792337 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.413027879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.114477845 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.151312633 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.406867097 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.143032952 seconds)
  done (took 17.737426927 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.129429811 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.220874302 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.126271759 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145609154 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121621954 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.14437421 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.129968009 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.165737658 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.222974705 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.115476361 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.167379091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.113452488 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.150337626 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.116576107 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.170406015 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.114495632 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.147738432 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119958503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.153615973 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118843739 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.166532426 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.114401736 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.145734646 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.118628122 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.141862007 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132274925 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.143001262 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.136778838 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142752631 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125493488 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.15116058 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.116821878 seconds)
  done (took 5.596809378 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.180917937 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.233773001 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.154540695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.155915208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.211237729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.116425547 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.251032942 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.200168292 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.225117849 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.143405582 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139943837 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.14297235 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.161394533 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.14512505 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14233271 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.144054256 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.12016132 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.148125532 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.125792987 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.146169012 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140193005 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.142945684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.118189057 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.147111267 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.116077863 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.160975509 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.116581566 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.165891584 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.115096129 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.152856427 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.12426396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.144172737 seconds)
  done (took 6.004644154 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.133048926 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.156610056 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.138040878 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.165163973 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.121442118 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.15383098 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.128200507 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.147616176 seconds)
  done (took 2.215855211 seconds)
done (took 32.62220621 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.140976357 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.121935309 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.160289129 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132149962 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.154041928 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.142484694 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.142324079 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.128723585 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.160280541 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.124981263 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.162530201 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.115316588 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.144321971 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.114328506 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.131116629 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.148670612 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133494643 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.154157237 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.142718285 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.162140324 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.116611596 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.157370362 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.125513214 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.171438977 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.14288488 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.172347202 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.162261333 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.124377802 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.14360965 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.117721945 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.163033714 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.146294547 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.147242552 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.135823007 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.148722456 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121441194 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.116956885 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.145779395 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133726891 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.156615611 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122566882 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.157024809 seconds)
  done (took 7.009650483 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.157469215 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.195411027 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.116590321 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.14481018 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.117696372 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.192948711 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.18665824 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.117014875 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.116258877 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.177043774 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.179520161 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.117057636 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.144897502 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.116795652 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.116114425 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.145172729 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.146282179 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.175373679 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.183116811 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.150797117 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.200498742 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.182917415 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.155270671 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.175440737 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.193946292 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.160053613 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.175572857 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.18574279 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.148363982 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.143550275 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.155858263 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.180473884 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.115129557 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.145170132 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.164119251 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.190466988 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.179590956 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.16474634 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.181324868 seconds)
  done (took 7.273451975 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.134772149 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.133088362 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.144678607 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.227243303 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.166065597 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.160914951 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.12947321 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.170327792 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137142103 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.147254628 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126835601 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.187971424 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.136383972 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.156721087 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.123033106 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.163372247 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.142430618 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.15018836 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.123769352 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.168626127 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138570869 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.162932353 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.131203292 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.157700198 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.117388669 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.163712893 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.122815655 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.162514173 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.123350082 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.154040071 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.124225031 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.152830743 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125956648 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.15985304 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.122141152 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.159498288 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.145592438 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156707337 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.128181847 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.187794253 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.160864949 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.125890119 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.175551674 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.165673502 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.148944996 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.128241941 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.151785473 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.128580948 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.144223712 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140220387 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.159338381 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.119911228 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.174007937 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.117886724 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.144228687 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135460152 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.146122802 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.13043401 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.154931056 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.125688348 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.173289815 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12367514 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.163187251 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.123683364 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.123759184 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.14599324 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.116498245 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.157309051 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14382024 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.153190363 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.19511421 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.11864263 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.155177099 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.126934495 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.152425375 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127977053 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.116681786 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.161947013 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.127491395 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.15265389 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.129922815 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.150589293 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.121979209 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.16668368 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.144179342 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.160640035 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.126448186 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.154730302 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.122112274 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.148038407 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.13534648 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.146751551 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.121750655 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.166813129 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.118611896 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.150541737 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126680832 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.153429054 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.115870154 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.163357977 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.123600322 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.146065298 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.12924689 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.147347513 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.122678315 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.156505659 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123480291 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.118378001 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.154795724 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126298759 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.145914862 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.12365871 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.15117189 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.122043667 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.164601505 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.125956672 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.15096123 seconds)
  done (took 17.940820341 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.305042014 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.266428841 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.247845029 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.372078174 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.179699 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.150190996 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.26002998 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.213485122 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.117374085 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.203766162 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.223455088 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.230490226 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.216464868 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.22471433 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.223526683 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.146880664 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.145968112 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.212882907 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.265692087 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.367478468 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145981161 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.168739401 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.206220726 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.204792705 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.141896692 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.170663634 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.177969323 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.149881497 seconds)
  done (took 7.034042382 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.148232133 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.198720449 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.12792309 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.186207458 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.180310461 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119533178 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.154135369 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.118481952 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.167603269 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139116497 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.149541183 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130213782 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.154988915 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.129660589 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.146716935 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.128897101 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.161182752 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.132141801 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.151062342 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.123327466 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.17226201 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.168856256 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12493606 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.156826835 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.14307206 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.158001848 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.122375105 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.179188555 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.161043876 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.156786014 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.144540452 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.128077948 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.16551385 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.116940042 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.159211238 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.121054831 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.148632446 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.120375571 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.119486428 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.143577494 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.117777452 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.135399068 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.128214407 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.168415037 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.127022475 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.152227637 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.125205548 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.154104098 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.124300377 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.143528186 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.120665544 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.150945319 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.123161181 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.171001919 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.121989199 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.143056317 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.122300879 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.13636601 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.130033953 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.12127239 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.140469251 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.127221455 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.139613613 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.124742834 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.159293184 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.110148596 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.156435616 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12060677 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.154881104 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.128469251 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.150941162 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.136332918 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.144406773 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.119632458 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.164621482 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.135986493 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.152455789 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.12705784 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.15820277 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.116801152 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.132536706 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.117397765 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.101982397 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.155860456 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.116826723 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.156425851 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.121588185 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.154456209 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.141867588 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.161679037 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.156135298 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.119174996 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.127660608 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.152447845 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114292315 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.153752781 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140589501 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.177627387 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.145846822 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.116152955 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.171606098 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.121764548 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.114786668 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.137395637 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.129959164 seconds)
  done (took 15.89387609 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.185532453 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.221321852 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.149050079 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.141551318 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.192460286 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.21042556 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.136314994 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.157045606 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.118929899 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142424335 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.160913494 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.129322602 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.160789763 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.166002338 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.179817198 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.160182475 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.120073489 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.167065401 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125106548 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.225291878 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.171538985 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.176825157 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.213844446 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.163586829 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.123872972 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.204126907 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.213470029 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.133645775 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.163041143 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.215817263 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.134140317 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.213739324 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.21704057 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.124693551 seconds)
  done (took 6.835197758 seconds)
done (took 63.054276224 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.229995077 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.409198889 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.183783457 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.184074055 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.220643641 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.226440688 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.186747402 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.399851526 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.930089694 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.169212699 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.189956569 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.182352295 seconds)
done (took 27.612279435 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.239800316 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.34253288 seconds)
    (2/2) benchmarking "String"...
    done (took 1.474491004 seconds)
  done (took 3.912011992 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.184686692 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.187763633 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.429081719 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.194342962 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.189702638 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.203050415 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.187835963 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.219049903 seconds)
  done (took 15.706601253 seconds)
done (took 25.139106672 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.257163831 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.366230477 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.429488729 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.20402312 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.206173949 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.17953308 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.179049364 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.202644814 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.183431253 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.195201326 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.187955584 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.452814005 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.200381005 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.563804945 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.194381679 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.19718458 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.195636764 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.391814635 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.180230432 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.22144964 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.163489418 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.195313619 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.200537445 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.221738344 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.189058553 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.187961258 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.248305504 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.179942467 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.39337821 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.180660443 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.222696531 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.184511728 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.190670114 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.18385816 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.285940152 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.221467572 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.357615447 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.185005815 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.171636266 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.187667879 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.368407448 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.580259897 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.187136337 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.18189369 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.1998652 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.214155734 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.172281573 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.885256227 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.188884738 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.205019645 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.201921488 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.586751677 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.183963082 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.187632403 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.185831548 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.404592327 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.198711785 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.191060577 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.21218866 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.185246069 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.180432301 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.178798941 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.192570538 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.196078475 seconds)
  done (took 142.102816323 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.190699665 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.186206489 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.182771817 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.245430319 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.18944291 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.185743711 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.188788634 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.189885044 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.186774086 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.21391142 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.192943275 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.186069062 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.189876906 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.179118911 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.18767929 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.201744164 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.186747623 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.183010546 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.191450434 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.191065145 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.191148593 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.183374378 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.199031525 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.180621459 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.226123111 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.266024744 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.216792791 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.204884941 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.188244191 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.183172838 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.218033498 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.251912314 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.770547294 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.042625674 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.19505815 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.193726896 seconds)
  done (took 79.653793286 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.185014504 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.184307404 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.190968194 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.219836409 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.184932988 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.731820843 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.726210066 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.902624625 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.434030221 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.439353468 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.458064317 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.186985301 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.285108362 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.195120798 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.18026775 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.207239621 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.212032948 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.184791269 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192677693 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.724082929 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.200563324 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.281440596 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.35676952 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.194272687 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.223160068 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.578326857 seconds)
    (27/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.179852792 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.186546038 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.21898514 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.511584971 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.223773109 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.183248698 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.523691793 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.168952636 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.296171425 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.183880417 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.216168345 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.184699235 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.463968765 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.183655626 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.184343886 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.186964089 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.830535637 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.181757546 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.70346676 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.181944188 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.081875943 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.177620732 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.187177895 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.057686865 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.743292358 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.195819666 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.18017555 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.18172516 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.182019241 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.179095722 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.211730331 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.049571233 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.268895583 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.178969947 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.179693326 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.209112738 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.179977522 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.344071558 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.174419256 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.178858933 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.229260446 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.313764625 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.955175669 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.69010518 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.178793751 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.276666616 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295591138 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.173619514 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.177484829 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.180600997 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.180261084 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.287995431 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.177215659 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.542104381 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.337556324 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.187138623 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.292009383 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.273914757 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.174715238 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.512197312 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.178050396 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.179875156 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.859185437 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.268503589 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.175335223 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.179275459 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.180434091 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.181571765 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.543764365 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.66691267 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.332430581 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.178210702 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.286932395 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.178783203 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.177692434 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.562060561 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.661818239 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.790081836 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.179522337 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291655722 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.341369922 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.188805345 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.177276109 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.286823351 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.18008347 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.23795637 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.177973011 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.574686769 seconds)
  done (took 362.749878795 seconds)
done (took 585.600575695 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.941069746 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.846524156 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.974779244 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.874552921 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.841890917 seconds)
  done (took 10.567399563 seconds)
done (took 11.656790952 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.355460948 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.351439934 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.234744293 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.356706876 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.214452796 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.374554624 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.335716637 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.201423536 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.280199057 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.256736023 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.281174002 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235935466 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217476633 seconds)
  done (took 17.787298563 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.440542798 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.191556896 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.255965479 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.411481886 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232445037 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.442708237 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48691345 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.191240913 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.335631703 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.234439837 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203846747 seconds)
  done (took 17.519046213 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.439523643 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.191541045 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.258607633 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.434278796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.23274285 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.452419964 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.492180954 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.193361621 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.333114916 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.222097743 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.203829207 seconds)
  done (took 17.547064047 seconds)
done (took 53.944597357 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.228372936 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.352219874 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.20971459 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.195805031 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.191207329 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.192498527 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.195727804 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.192403343 seconds)
  done (took 10.851493094 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.196290222 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.195079244 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.192690418 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.192583673 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.1926282 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.190705712 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.191468203 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.190853042 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.191677895 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.190752316 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.19113623 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.188926819 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.194573985 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.634746545 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.188903499 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.191380113 seconds)
  done (took 20.607381969 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.195478202 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.189300804 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.188160634 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.189591918 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.190571621 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.189042269 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.19032007 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.190959912 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.188773553 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.189670357 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.191390949 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.189511266 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.189726716 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.18798563 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.190253869 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.189751634 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.189744449 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.19042245 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.195827584 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.192608156 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.190088848 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.188964278 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.188700251 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.191956496 seconds)
  done (took 29.665584321 seconds)
done (took 62.216623952 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.185432961 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.214022699 seconds)
  done (took 5.495419727 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.254809231 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.25489909 seconds)
  done (took 3.607452911 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.198461107 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.190851855 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.194876995 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.195241523 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.195032559 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.194202352 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.194998776 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.193774189 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.193211618 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.195749455 seconds)
  done (took 13.042908708 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.198662737 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.193859417 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.191589146 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.195564192 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.193402218 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.192271872 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.195130292 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.194194423 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.193910417 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.193011112 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.193730638 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.193482279 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.193412758 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.192552478 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.194449812 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.193254437 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.19159622 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.193670293 seconds)
  done (took 22.584200529 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.208347861 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.216494726 seconds)
  done (took 3.521155689 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.323092232 seconds)
    (2/7) benchmarking "second"...
    done (took 1.233439632 seconds)
    (3/7) benchmarking "month"...
    done (took 1.303117361 seconds)
    (4/7) benchmarking "year"...
    done (took 1.289908285 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.233136431 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.212785346 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.234160939 seconds)
  done (took 9.927134676 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.201228478 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.382816663 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.483666951 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.773267225 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.197037577 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.199928685 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.090849247 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.199777623 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.202488019 seconds)
  done (took 13.828201958 seconds)
done (took 73.099635743 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.189388812 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.209412734 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.206197962 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.201925242 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.49018718 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.215827399 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.189851934 seconds)
done (took 15.799008305 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.178856732 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.173104631 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.175925155 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.198913301 seconds)
  done (took 9.822624384 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.127103316 seconds)
    (2/2) benchmarking "read"...
    done (took 1.559821355 seconds)
  done (took 4.785074722 seconds)
done (took 15.706037914 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.198499797 seconds)
    (2/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.197858986 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.197723862 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.19472705 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.198641363 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.193784245 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.194462986 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.198787063 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.197824789 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.195957207 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.196394554 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.1989188 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.195191434 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.193729729 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197764798 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.195745606 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195722995 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.194529206 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.197962292 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195718589 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.198505203 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.195221279 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.195542821 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.196288145 seconds)
  done (took 29.81581935 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.198419852 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.196550336 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.198855596 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.198006517 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.196805334 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.198909779 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.198893766 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.196113426 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.199910162 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.20109307 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.195458772 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.194878541 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.199364105 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.194718242 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197099742 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.195636376 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.200044495 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.1968343 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.200073133 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.198186714 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.197875194 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.196302636 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.196289882 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.200394575 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.197907083 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.198371308 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.201365295 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.19873331 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20204183 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.197403992 seconds)
  done (took 37.043421063 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.207560268 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.207451819 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.202588672 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.202748226 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.199322037 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.203740582 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.202208293 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.200612768 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.20065635 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.201505471 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.201946608 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.200351322 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.19996981 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.201661207 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.20310429 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.201295653 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.199666598 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.202769572 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.202225681 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.201742306 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.2032566 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.203327324 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.201378599 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.201174019 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.204187318 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.201805618 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.20214575 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.203114197 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.200965384 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.200370305 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.203471233 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.202786542 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.201795778 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.203852345 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.202914651 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.202865228 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.205693369 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.209990919 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.204616503 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.202661912 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.205811864 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.202571442 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.203031601 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.203571677 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.20326287 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.203351911 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.203794038 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.203477302 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.203459941 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.200918277 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.203474629 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.204606489 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.20290124 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.206579072 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.203592372 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.206899489 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.203160396 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.20449801 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.204186816 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.20267272 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.204842752 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.204166324 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.205157108 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.204031015 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.202630705 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.204493564 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.207429842 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.203951724 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.204118599 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.204817353 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.204382111 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.204465301 seconds)
  done (took 87.739392962 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.205778004 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.20270164 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.202148835 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205212691 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.204295489 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.20438655 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.202920596 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.208326123 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.204283853 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.20631919 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206476135 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.205478502 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204861338 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.206518604 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.208921608 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.204177011 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.207730419 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.202189014 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.205571173 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.20693084 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.20696126 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.203306867 seconds)
  done (took 27.621925868 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.207407806 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.20819654 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.206491159 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.208109815 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.205664549 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.211030318 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.209974363 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.208583387 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.205054032 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.205736942 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203651241 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.208342758 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.206147934 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.204900877 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.202776323 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.206214771 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.205389122 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.208392584 seconds)
  done (took 22.828346378 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.207575799 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.204133912 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.207449848 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.205997433 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.205726896 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.208252866 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.205604872 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.207951317 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.206019136 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.205512858 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.208477051 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.206216219 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.209934087 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.203681651 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.206943413 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.208852149 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.207446612 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.205159194 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.20850022 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.206808654 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.204743958 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.209948402 seconds)
  done (took 27.659134176 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.212252359 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.208890986 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.205374585 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.206094625 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.206512911 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.212661497 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.207022837 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.21107229 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.208786432 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.210108622 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.208226921 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.213180701 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.210155042 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.209507619 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.207302164 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.206852689 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.20669015 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.206567575 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.20952778 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.206461325 seconds)
  done (took 25.283370713 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21231686 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.209379081 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.208287052 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.210469268 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.212955609 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.211138972 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.215206234 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.208273414 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21000688 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.211338256 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.208785659 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.210294734 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.21404162 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.211806843 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.210301988 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.21084807 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.212945937 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.213360215 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.212621595 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.210510337 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.212131619 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.21187975 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.21290788 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.212956204 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.20970243 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.208112344 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.211274947 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.209917752 seconds)
  done (took 35.025082227 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.21110332 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.210998953 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.209758912 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.195563562 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.19394837 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.193484649 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.191701479 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.196866134 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.197939388 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.193184833 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.205861371 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.185367087 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.185699237 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.185666004 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.185595158 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.181091529 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.184660366 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.181938898 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.185021482 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.17779499 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.179219386 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.17838948 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.177816089 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.17622286 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.176749911 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.178897048 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.175590827 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.176723503 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.17537213 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.174155174 seconds)
  done (took 36.736481191 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.224714572 seconds)
    (2/2) benchmarking "in"...
    done (took 1.219896916 seconds)
  done (took 3.532029667 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.177551003 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.174782302 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.175387202 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.165884759 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.166760981 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.169103709 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.169982285 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.16657171 seconds)
  done (took 10.453733597 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.170385694 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.172228973 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.165930918 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.167648884 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.166224853 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.165594932 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.171142554 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.188774815 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.170773339 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.171122007 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.176422312 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.172695401 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.168699361 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.167625696 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.166667961 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.169525087 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.167285659 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.16987379 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.169732414 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.168407148 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.166426576 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.167686205 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168530121 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.1653163 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.167495225 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.176049501 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.16880615 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.169091198 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.162297457 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.166064643 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.163111594 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.161445351 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.165040063 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.166231589 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.164439595 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.16505588 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.170705959 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.179308249 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.166953672 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.16276393 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.163545736 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.159631034 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.1626183 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.162810468 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.163605728 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.160264585 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.160855637 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.156562661 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.158657342 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.162310282 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.162591381 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15965226 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.156880798 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.162353688 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.158747808 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.16305316 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.177063187 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.160967388 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.166367074 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.168445127 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.170012536 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.178921533 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.160132405 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.159513808 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.168515852 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.178357707 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.164657304 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.17503079 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.157204225 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.159664135 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.166035789 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.170267153 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.180951608 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.161125858 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.159893391 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.16042627 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.159122758 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.16147288 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.167340429 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.179149813 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.160079927 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.160716599 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.167661845 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.178244486 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.159937453 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.161590127 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.160658675 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.162224499 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.160502535 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.168251601 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.179812274 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.162528322 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.159700093 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.159974966 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.16179548 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.161493238 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.15874111 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.160838553 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.160180162 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.162682453 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.16269491 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.164287265 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.167549318 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.162923128 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.163166634 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.168432806 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.163401874 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.160741274 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.166873303 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.161893564 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.163266601 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.162754145 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.16532654 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.160641952 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.163579111 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.168208299 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.162983742 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.16249 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.16359923 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.163344713 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.170470384 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.183921874 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.16377311 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.163465522 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.166722083 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.171495317 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.164653886 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.164824654 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.164072419 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.161901094 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.161909021 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.164547052 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.164658729 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.162260176 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.16455374 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.16393964 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.160865721 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.164553958 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.16512458 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.1633015 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.163809773 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.162456392 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.163983686 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.16503413 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.165357657 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.164480838 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.169491149 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.163430577 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.164388746 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.164954577 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.161283675 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.166253178 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.164916065 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.165675433 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.164949097 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.164976134 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.165450625 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.165590581 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.166048021 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.167294914 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166213652 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.165186799 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.168308435 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.166464252 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.168728053 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.164783795 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.163903019 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.166355169 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.166681051 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.165389026 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.166486713 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.164578353 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.168418011 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.172763263 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.168402337 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.167120834 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.168727979 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.168046891 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.167671771 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.167059271 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.168999676 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.172606152 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.166926251 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.172086903 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.167702188 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.168286371 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.167738182 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.165547328 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.166316552 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.168327158 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.169559844 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.175249613 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.17691226 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.188285386 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.166787804 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.169879286 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.167699798 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.172397078 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.171120166 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.170366059 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.16892147 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.167505097 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.168231493 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.169535828 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.168870021 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.169378056 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.168026927 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.169791259 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.168916913 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.167453299 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.167526385 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.16652961 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.16755786 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.165345191 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168989466 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.167307972 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.167715552 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.160352586 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.161922641 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.162923593 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.164433015 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.163031681 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.167841281 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.161361556 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167621138 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.159488849 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.159208751 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.158649969 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.162516271 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.160915675 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.159872132 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.166128209 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.176945499 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.161237223 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.163973747 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.174956794 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.157691332 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.159493037 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.15993594 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.156323599 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.160365883 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.166828626 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.160076577 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.159803201 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.159153668 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.16023464 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.16015037 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.163891072 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.158220285 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.15920751 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.16136594 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.159848323 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.156683629 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.160149462 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.160397827 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.159601627 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.160946423 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.161489745 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.160900766 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.160494913 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.161257434 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.160237128 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.161483271 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.162472863 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.167003446 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.164499213 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.159334865 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.161313309 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.161068259 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.16445051 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.160236069 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.160944914 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.160302501 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.17093555 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.182350666 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.167602542 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.161897768 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.162189987 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.16598127 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.162086194 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.16388966 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.161596102 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.161072006 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.161192575 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.161458615 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.160286707 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.16112863 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.163265362 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.162024482 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.162415813 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.166033223 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.163099013 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.161447346 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.16346082 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.163504317 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.163231837 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.160634453 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.163566555 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.164035356 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.164310981 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.161366062 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.161615308 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.17061834 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.179686277 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.161821376 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.162873166 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.161749017 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.161877055 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.162424395 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.163804369 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.16555257 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.169905881 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.166136537 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.168395834 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.163400809 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.170696349 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.163982947 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.16732797 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.168826644 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.162100565 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.162040389 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.164435774 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.164605946 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.169422961 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.182150569 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.165935636 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.168382658 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.164605593 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.166170184 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.1649464 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.165145221 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.165590604 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.164278108 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.171750642 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.183868269 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.166132978 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.165022549 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.16272194 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.165774974 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.16672493 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.162806342 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.167250121 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.167137886 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.164245304 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.163747544 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.164174981 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.165136783 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.167706997 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.167184456 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.163594363 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.166519838 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.171857449 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.184443308 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.170515167 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.167909826 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.172168522 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.168007372 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.17211016 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.1843204 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.167564928 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.167328869 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.168603493 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.168245103 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.166383301 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.165574677 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.169396087 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.167798417 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.170860975 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.168122381 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.16926824 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.166779823 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.16778574 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.166040552 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.176201361 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.187379164 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.169130219 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.171246222 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.165440663 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.168722384 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.171626576 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.169297218 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.166784911 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.169647218 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.17617933 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.175506601 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.169156042 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.169322712 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.16861457 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.170145669 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.169910524 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.168326941 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.169104676 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.170334915 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.168456027 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.169951835 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.17061152 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.16848906 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.168095696 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.168124449 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.169228448 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.176437391 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.169339017 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.169460084 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.169045401 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.170600766 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.168783737 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.169100452 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.170076737 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.169744 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.170627334 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.169597213 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.175496026 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.174093578 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.170965436 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.167834289 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.171072221 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.169848072 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.169563989 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.171661868 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.171209022 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.170517769 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.170686513 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.171381515 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.17137324 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.169371942 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.171266275 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.168972634 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.171425617 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.172300426 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.175169026 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.169957085 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.169316787 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.171110744 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.172588463 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.168148481 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.170421115 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.176599732 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.173230104 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.177731092 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.177060665 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.176160988 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.17130189 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.174073893 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.17700475 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.169841104 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.172354176 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.172096464 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.171851917 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.171268089 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.173852564 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.17373733 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.178314241 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.172206106 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.170976595 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.180180751 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.192345534 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.175002428 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.174009701 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.176437815 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.172590963 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.172289812 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.173658216 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.172351283 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.179131668 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.190062429 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174670026 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.17437535 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.171291815 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.174489625 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.176597162 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.175373792 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.173364599 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.171367142 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.172925426 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.174895327 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.175654584 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.172690524 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.172168462 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.172199568 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.17530617 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.178299859 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.171834124 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.175428796 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.172403593 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.173760848 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.174671525 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.174823421 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.172403397 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.173004024 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.173637591 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.175266634 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.175247209 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.176203375 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.173241859 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.175121729 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.174995979 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.175216043 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.178886891 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.184059758 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.181874745 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.172673583 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.174105645 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.174462387 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.176441514 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.175594791 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.17650063 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.175232173 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.175673724 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.176555867 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.176774336 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.176923281 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.178250757 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.189542693 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.19741559 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.175852684 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.176069311 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.178542267 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.17760884 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.175191885 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.177104702 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.176686578 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.180166249 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.183092006 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.178018918 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.182467826 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.195351773 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.177751997 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.181565979 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.179891075 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.1847154 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.179839917 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.178810483 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.178724286 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.182131152 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.190918944 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.179643398 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.185798352 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.202581649 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.195349105 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.178458016 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.17967672 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.177208819 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.180900297 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.180149985 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.17893954 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.179669767 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.178940309 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.180641439 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.179546843 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.183032957 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.179068712 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.18151331 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.181303803 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.179322139 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.178097766 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.176288856 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.180060392 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.1802434 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.180816464 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.179926857 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.180464989 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.179252487 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.19046372 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.201602445 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.18190445 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.181098135 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.178232112 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.182114285 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.183068043 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.188138479 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.186504703 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.181138186 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.18170456 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.180587371 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.180843136 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.179933671 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.179873816 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.180629572 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.180189992 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.179347974 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.190062621 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.203280325 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.185062894 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.180726931 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.182161909 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.181572849 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.181281044 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.183666502 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.183545781 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.182117038 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.183481707 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.185498031 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.183254038 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.182319073 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.183284089 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.188202064 seconds)
  done (took 698.309162398 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.180957463 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180819164 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.179323383 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.180368529 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.180759478 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.179035748 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.18039188 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.180858718 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.180381342 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.180998785 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.179829137 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.179833925 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.180183691 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.181367 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.180921097 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.181003874 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.181669032 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.181132588 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.181939479 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.181424562 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.181671665 seconds)
  done (took 25.882094977 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.183151082 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.181436303 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.181134234 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.184330722 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.18013254 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.184462396 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.181370306 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.182644574 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.184944664 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18036605 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.183542686 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184759661 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.182982546 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.182184943 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.181332601 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185830347 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.185328199 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.181771369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.186473171 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.1832872 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.185446594 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.183794078 seconds)
  done (took 27.119442759 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.187214788 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.186789445 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.184265622 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.182443464 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.18525637 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.181697829 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.186180188 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.18605148 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.185961074 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.185896534 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.184072685 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.186350131 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.191457381 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.189178794 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.186005091 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.185042883 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.1867421 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.187103801 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.187938363 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.182654063 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.190968925 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.182695695 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.184060755 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.184104714 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.187561997 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.188172108 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.186385294 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.187418533 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.18742821 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.190828699 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.187515416 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.184324057 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.187213173 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.185419154 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.187160423 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.192419167 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.187467966 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.185398138 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.187515871 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.196300498 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.204748812 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.188002795 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.192855075 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.188831561 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.187941776 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.189192726 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.193976394 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.185767606 seconds)
  done (took 58.091799307 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.188904058 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.18888723 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.186073847 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.190469067 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.188804689 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.189250716 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.188468772 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.188797155 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.187153913 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.186197097 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.189657523 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.187004374 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.187103366 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.189125131 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.188841758 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.186727903 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.186038035 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.186281765 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.187716816 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.18741978 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.187432336 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.189647647 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.190063033 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.187322292 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.189744787 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.187662243 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.187295457 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.19050571 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.187350571 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.186838238 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.192085937 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.189901774 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.190946837 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.186311186 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.187550481 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.190544004 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.189982734 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.18796555 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.190404732 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.187828853 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.189336405 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.190504314 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.190699273 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.19120246 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.188465599 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.187970289 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.18808933 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.188759903 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.187674769 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.190837739 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.191649089 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.190288151 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.190833948 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.190041604 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.191127105 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.191762006 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.188953628 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.189907998 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.192209593 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.190507982 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.189803492 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.192958814 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.189637718 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.191605588 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.19403278 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.19055314 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.189692324 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.192708893 seconds)
  done (took 81.9633448 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193770396 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.191663499 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.192689478 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192556451 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.192455222 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.192064008 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.192868173 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.192632409 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.192809761 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.194055389 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.192795657 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.193450296 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.191427499 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.193887618 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.192852532 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.193466658 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.194652771 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.193355589 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.193898336 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.194583921 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.194398576 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.196252381 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.193528994 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.19390333 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.193886987 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.194195141 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.193407494 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.19388622 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.193780674 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.194587814 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.195490113 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.194743069 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.194950407 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.195359206 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.196400272 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.196958936 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.195221017 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.194932157 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.194784256 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.194316 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.196129574 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.195633855 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.195763006 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.194421443 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.194790062 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.195842317 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.195118744 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.19540739 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.194335594 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.195226873 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.195149077 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.195602418 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.195533301 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.195904803 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.195533417 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.196737255 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.195603508 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.196781377 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.196631449 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.196001019 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.196195606 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.196687632 seconds)
  done (took 75.159562237 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.196073757 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.195373515 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.193406779 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.192610282 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.196135285 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.193408557 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.196234849 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.196753849 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.19688369 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.196974739 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.198225038 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.193874729 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.194744097 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.19660989 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.193962135 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195766461 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.195321413 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.194541137 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.197133224 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.194983811 seconds)
  done (took 25.008536011 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.195663811 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.198082064 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.19389 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.19548207 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.197221088 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.195615926 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.198122041 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.197091113 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.195308531 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.197687242 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.197946428 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.198486901 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.195221863 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.1960738 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.198433858 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.194787598 seconds)
  done (took 20.245029931 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.196194007 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.197972906 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.196816207 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.199838797 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.196276004 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.195131017 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.199026373 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.195701717 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.19605308 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.198774456 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.199881192 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.200078473 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.200573119 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.199823306 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.196785467 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.19959466 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.196126743 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.197492816 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.199170185 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.199687351 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.199027953 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.196894177 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.199457458 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.199416843 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.196982584 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.198074812 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.197901175 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.19772753 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.197134917 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.200457437 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.197900753 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.197295576 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.197312119 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.198577433 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.201360493 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.198567178 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.200488214 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.200624879 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.20024968 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.201264824 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.201125464 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.198789781 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.201514852 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.2008462 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.196933278 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.202374903 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.197335727 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.198854224 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.197782689 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.19953803 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.202133043 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.202284468 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.201915646 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.20226715 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.201389407 seconds)
  done (took 67.045884569 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.20167195 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.201664144 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.200151665 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.20145476 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.20324771 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.199251254 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.201758378 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.200688553 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.199023394 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.203669433 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.199285287 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.202949676 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.200331004 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.203354384 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.201316286 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.202181476 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.198956645 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.200950239 seconds)
  done (took 22.727037367 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.201357886 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.201318749 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.203486702 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.201028905 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.198732303 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.20372362 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.200690254 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.203410465 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.204200417 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.200419281 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.200714717 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.203315687 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.203738273 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.202409541 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.201046977 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.201549965 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.20524473 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.203897668 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.200727069 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.200546603 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.204412554 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.204838291 seconds)
  done (took 27.556416037 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.203109369 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.201287022 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.203426878 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.217788985 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.219026631 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.202348203 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.202851703 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.20294623 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.223217693 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.249686788 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.243937108 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.218036946 seconds)
  done (took 15.694941469 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203174091 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205073727 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.202197999 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.205555453 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206263954 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202251922 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202013515 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.202464436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205289779 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203556816 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.202419712 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.205772271 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206426546 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.204175666 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206685663 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207226745 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203538079 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203509856 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.202388985 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205751047 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203658234 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206567406 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20254224 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.203700427 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.204816614 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204856597 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206621589 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20458865 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.203801795 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.205737655 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206302438 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.203706767 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20617752 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205739876 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.205666465 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20786416 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.20391793 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206993736 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206425117 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.204630599 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.207752629 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.206904763 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208527001 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.204655628 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.206983338 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205517375 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205258508 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.205238457 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.205406444 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208152525 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208066243 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.205117042 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208926064 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.20932907 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.207960422 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.20841272 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206823102 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.206835163 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.208420308 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.205939312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.206761728 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209635545 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206157485 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.207074414 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208409846 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.206552557 seconds)
  done (took 80.684168712 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208411267 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.207391101 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.206850066 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208320962 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.207818534 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207772346 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207165433 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.208251525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.207909396 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.206928093 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210452296 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207005956 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20698376 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207754762 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.206598333 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.207131363 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20760423 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208258851 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208025193 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211171739 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209313727 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208067913 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208234158 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20894868 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208800417 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.211161252 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209413564 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.208796998 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209372057 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.208440888 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.208385256 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.209065917 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.208161969 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.20920252 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.208046484 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.20900542 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.207928213 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.208946936 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209736175 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212187829 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209499226 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.212400608 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209467284 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.210352507 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.209638807 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.20921447 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.210037154 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.209021678 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.210369438 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209336341 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209570534 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.212124158 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.212599283 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.209561551 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210137265 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.20936519 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.209930446 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.209595509 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.209493789 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.212415161 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.210240973 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.210625318 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.21472087 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.209784857 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.210279025 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.211236603 seconds)
  done (took 80.92414023 seconds)
done (took 1651.247578573 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.374528551 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.32833962 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.210068113 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.225703316 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.211067236 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.231485532 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.220859793 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.211687498 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.211462035 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.211700149 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.211577904 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.39730647 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.267646404 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.210301151 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.210537161 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.30602506 seconds)
  done (took 25.157000006 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.236347641 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.223076914 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.327592488 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.242902337 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.245539776 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.396479581 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.27588044 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.228963372 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.381542694 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.266760016 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.223877701 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.249279937 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.224581943 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.212411244 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.245495002 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.397726066 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.457002971 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.22953642 seconds)
  done (took 27.181907432 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.633301834 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.237688083 seconds)
  done (took 4.994498357 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.240760106 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.22269994 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.225314548 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.222435997 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.213634196 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.214155772 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.22174256 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.21464714 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.222105478 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.343102943 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.230254321 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.232901328 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.242377942 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.224145361 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.221287024 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.261685926 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.376500012 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.223044339 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.220864596 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.230186994 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.224542297 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.304513271 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.265401774 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.226091383 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.338946926 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.229361528 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.23039816 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.232017925 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.377292419 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.224657995 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.225086205 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.223247261 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.226261687 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.132019173 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.674928332 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.222009886 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.248377765 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.232931583 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.224037435 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.371108574 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.227097253 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.231287205 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.21748564 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.645822111 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.358143459 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.343856988 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.234108085 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.231631411 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.228665265 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.287185975 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.227282945 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.227444271 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.270004162 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.006409259 seconds)
  done (took 79.102989051 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.228663698 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.218285447 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.398036638 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.234947266 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.218757608 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.238236885 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.222654174 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.488149937 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.262346213 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.220037023 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.502137778 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.754911369 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.241973776 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.268431234 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.076689557 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.283165405 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.218911116 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.236770497 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.222959218 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.223149277 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.75164954 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.225032269 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.240134411 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.445915427 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.2587264 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.723508418 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.224878926 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.227280987 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.224768316 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.220339909 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.709637805 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.249376497 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.289294165 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.219984227 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.487715224 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.590609919 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.552687577 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.228935585 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.266374969 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.226169214 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.225491615 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.705887917 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.571152444 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.225280913 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.22162421 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.71693035 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.224779149 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.226235657 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.222120121 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.465443419 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.223874208 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.221763092 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.236449152 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.226527835 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.220377576 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.324282799 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.313903631 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725496162 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.226796417 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.226134632 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.272781848 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.223399997 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.226811471 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.22662621 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.224447348 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.571076111 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.378530887 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.22430789 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.568072047 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.708881317 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.2422906 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.794222563 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.242059662 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.240545833 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.361337609 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.229615155 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.233606154 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.722611102 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.256149836 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.224424785 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.553061284 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.228523358 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.508730234 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.246154723 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.224080153 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.762637266 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.240797661 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.231147222 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.224762552 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.24257209 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.223823928 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.229885391 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.497240875 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.280275176 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.22478619 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.226444856 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.273981274 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.223362206 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.229041909 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.223629362 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.77712365 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.247629924 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.224679119 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.229113407 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.234980868 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.226648128 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.225730753 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.227518387 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49281124 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.234464271 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.236113582 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.227765467 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.225154501 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.254175991 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.458519657 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.231352663 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.516054267 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.229648434 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.226190339 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.233990157 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.225739301 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.280963698 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.226284948 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.23328512 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.110170587 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.537550144 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.243506712 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.243811 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.226427184 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.225889989 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.227091819 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.23332901 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.263144262 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.228668611 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.957280162 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.26921125 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.250835482 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.227952361 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.227655825 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.227318694 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.237570438 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.227759361 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.515664554 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.501085998 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.379219669 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.22762856 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.229693387 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.956591801 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.293011868 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.407489295 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.246767208 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.227102269 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.47613194 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.464400824 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.230684365 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.228222888 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.230343693 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.503326459 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.228162501 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.542780774 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.744831332 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.248695064 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.230508118 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.964841762 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.959592986 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.234430138 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.233143024 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.510699966 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.250116501 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.229598181 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.229114307 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.230204717 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.228340693 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.233238343 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.236943197 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.229414407 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.228739918 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.345341766 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.42171995 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.245810562 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.237665815 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721535099 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.239649007 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.239999045 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.233967043 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.23214213 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.229124819 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.310398676 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.23390658 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.266808346 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.231450243 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.238920603 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.781579507 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.230222394 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.236101925 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.421131503 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.888195219 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.245448308 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.231531127 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.245343822 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.133921519 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.750489838 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.286280402 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.526332189 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.241817991 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.269752027 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.23109505 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.317785478 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.746694083 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.235758436 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.249925437 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.861944222 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.248830415 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.085491248 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.230493077 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.232897516 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.809586378 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.247881379 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.237654892 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.2310445 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.238070291 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.539801394 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.232506823 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.248590986 seconds)
  done (took 474.619436281 seconds)
done (took 612.171179085 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.231546995 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.236672276 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.221792345 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.235781752 seconds)
  done (took 10.065561991 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.242555653 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.240287868 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.240425057 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.239058913 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.241054496 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.239209975 seconds)
  done (took 8.583442667 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.234144249 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.238301633 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.236878173 seconds)
  done (took 7.850517862 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.432923219 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.256456565 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.554235345 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.25443635 seconds)
  done (took 8.636588863 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.243709696 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.241719947 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.242731654 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.243022131 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.245005041 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.246662631 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.244381384 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.244117233 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.245311317 seconds)
  done (took 12.3447117 seconds)
done (took 48.621069575 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.244186747 seconds)
    (2/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.264861547 seconds)
    (3/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.274297473 seconds)
    (4/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.253333704 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.284640863 seconds)
    (6/286) benchmarking ("sort", Int8, false)...
    done (took 1.365382944 seconds)
    (7/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.882174695 seconds)
    (8/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.316348993 seconds)
    (9/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.353209603 seconds)
    (10/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.292594168 seconds)
    (11/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.270743118 seconds)
    (12/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.083947704 seconds)
    (13/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.353625178 seconds)
    (14/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.250821728 seconds)
    (15/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.252374255 seconds)
    (16/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.219618929 seconds)
    (17/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.24487543 seconds)
    (18/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.245341745 seconds)
    (19/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.281233817 seconds)
    (20/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.258892857 seconds)
    (21/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.379041837 seconds)
    (22/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.266701348 seconds)
    (23/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.286225936 seconds)
    (24/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.287919355 seconds)
    (25/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.980259251 seconds)
    (26/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.292364073 seconds)
    (27/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.290182824 seconds)
    (28/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.290333883 seconds)
    (29/286) benchmarking ("sort", Float64, false)...
    done (took 1.43509854 seconds)
    (30/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.226719516 seconds)
    (31/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.460411382 seconds)
    (32/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.308775367 seconds)
    (33/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.888715973 seconds)
    (34/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.312913106 seconds)
    (35/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.393913641 seconds)
    (36/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.266536046 seconds)
    (37/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.231542614 seconds)
    (38/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.071482708 seconds)
    (39/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.268399651 seconds)
    (40/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.242796429 seconds)
    (41/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.341666085 seconds)
    (42/286) benchmarking ("sort", Int64, true)...
    done (took 1.657830304 seconds)
    (43/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.288745792 seconds)
    (44/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.252889857 seconds)
    (45/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.310498772 seconds)
    (46/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.50196105 seconds)
    (47/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.235569682 seconds)
    (48/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.249193886 seconds)
    (49/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.3207869 seconds)
    (50/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.268750539 seconds)
    (51/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.3321581 seconds)
    (52/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.296105875 seconds)
    (53/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.355764647 seconds)
    (54/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.263900983 seconds)
    (55/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.970538442 seconds)
    (56/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.457855003 seconds)
    (57/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.260998511 seconds)
    (58/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.35158071 seconds)
    (59/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.288556037 seconds)
    (60/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.378447755 seconds)
    (61/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.270613258 seconds)
    (62/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.253000856 seconds)
    (63/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.223084538 seconds)
    (64/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.271952632 seconds)
    (65/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.313852594 seconds)
    (66/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.257839992 seconds)
    (67/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.419741497 seconds)
    (68/286) benchmarking ("sort", Float32, true)...
    done (took 1.843118388 seconds)
    (69/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.230114813 seconds)
    (70/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.230499227 seconds)
    (71/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.25112661 seconds)
    (72/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.938944563 seconds)
    (73/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.260342282 seconds)
    (74/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.248959436 seconds)
    (75/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.358290358 seconds)
    (76/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.257738824 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.400839558 seconds)
    (78/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.34930132 seconds)
    (79/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.285623683 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 1.425438873 seconds)
    (81/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.227750053 seconds)
    (82/286) benchmarking ("sort", Float32, false)...
    done (took 1.436698662 seconds)
    (83/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.391970086 seconds)
    (84/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.319404008 seconds)
    (85/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.438986234 seconds)
    (86/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.258068722 seconds)
    (87/286) benchmarking ("sort", BigInt, true)...
    done (took 2.245085106 seconds)
    (88/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.254524827 seconds)
    (89/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.349759234 seconds)
    (90/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.104304802 seconds)
    (91/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.263642859 seconds)
    (92/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.892353485 seconds)
    (93/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.249936406 seconds)
    (94/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.939518184 seconds)
    (95/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.954686087 seconds)
    (96/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.384139923 seconds)
    (97/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.296200359 seconds)
    (98/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.326260007 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.424420625 seconds)
    (100/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.25460681 seconds)
    (101/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.380463311 seconds)
    (102/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.312619752 seconds)
    (103/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.296509345 seconds)
    (104/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.266102826 seconds)
    (105/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.97378569 seconds)
    (106/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.262135448 seconds)
    (107/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.381966889 seconds)
    (108/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.913447122 seconds)
    (109/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.996180721 seconds)
    (110/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.338926624 seconds)
    (111/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.340454279 seconds)
    (112/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.252034979 seconds)
    (113/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.348929354 seconds)
    (114/286) benchmarking ("sort", Bool, false)...
    done (took 1.278371797 seconds)
    (115/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.252281719 seconds)
    (116/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.256630539 seconds)
    (117/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.226054382 seconds)
    (118/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.279216692 seconds)
    (119/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.273876352 seconds)
    (120/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.296789562 seconds)
    (121/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.250951847 seconds)
    (122/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.323609254 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.280216448 seconds)
    (124/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.257459479 seconds)
    (125/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.532916542 seconds)
    (126/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.912480102 seconds)
    (127/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.262850325 seconds)
    (128/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.384434377 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.283410173 seconds)
    (130/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.359294402 seconds)
    (131/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.349857377 seconds)
    (132/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.368003676 seconds)
    (133/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.316555236 seconds)
    (134/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.241481499 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.348201144 seconds)
    (136/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.251869111 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.334094269 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.256146348 seconds)
    (139/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.252435493 seconds)
    (140/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.329133024 seconds)
    (141/286) benchmarking ("sort", Float64, true)...
    done (took 1.870040403 seconds)
    (142/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.39088581 seconds)
    (143/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.38673166 seconds)
    (144/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.441906133 seconds)
    (145/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.263467298 seconds)
    (146/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.25252975 seconds)
    (147/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.260153287 seconds)
    (148/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.258473417 seconds)
    (149/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.256964531 seconds)
    (150/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.422092479 seconds)
    (151/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.270223873 seconds)
    (152/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.428723669 seconds)
    (153/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.234746448 seconds)
    (154/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.274421792 seconds)
    (155/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.25883432 seconds)
    (156/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.254183338 seconds)
    (157/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.892189225 seconds)
    (158/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.381264919 seconds)
    (159/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.299830839 seconds)
    (160/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.348119005 seconds)
    (161/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.298949796 seconds)
    (162/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.254599008 seconds)
    (163/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.937544626 seconds)
    (164/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.336856378 seconds)
    (165/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.388814068 seconds)
    (166/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.260014109 seconds)
    (167/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.263416989 seconds)
    (168/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.294837958 seconds)
    (169/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.347314471 seconds)
    (170/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.267071205 seconds)
    (171/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.986255684 seconds)
    (172/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.295741306 seconds)
    (173/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.366287106 seconds)
    (174/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.360030702 seconds)
    (175/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.319744879 seconds)
    (176/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.447525025 seconds)
    (177/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.253135813 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.333395889 seconds)
    (179/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.310841396 seconds)
    (180/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.057626005 seconds)
    (181/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.269327029 seconds)
    (182/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.276267321 seconds)
    (183/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.265521117 seconds)
    (184/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.502938112 seconds)
    (185/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.310174962 seconds)
    (186/286) benchmarking ("sort", BigInt, false)...
    done (took 2.248751239 seconds)
    (187/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.270310224 seconds)
    (188/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.258060573 seconds)
    (189/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.299500403 seconds)
    (190/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.098437937 seconds)
    (191/286) benchmarking ("sort", Bool, true)...
    done (took 1.503231657 seconds)
    (192/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.264767605 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.259199246 seconds)
    (194/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.326513844 seconds)
    (195/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.363955332 seconds)
    (196/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.29012697 seconds)
    (197/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.265154754 seconds)
    (198/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.266611098 seconds)
    (199/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.250136708 seconds)
    (200/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.333326361 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.345050414 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.27070246 seconds)
    (203/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.321132701 seconds)
    (204/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.289807578 seconds)
    (205/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.391753223 seconds)
    (206/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.271041478 seconds)
    (207/286) benchmarking ("sort", Int8, true)...
    done (took 1.615056984 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.257174249 seconds)
    (209/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.257836717 seconds)
    (210/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.442764651 seconds)
    (211/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.238866911 seconds)
    (212/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.929274069 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.314432465 seconds)
    (214/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.349477162 seconds)
    (215/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.279467217 seconds)
    (216/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.343578283 seconds)
    (217/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.263769565 seconds)
    (218/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.36619891 seconds)
    (219/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.238427072 seconds)
    (220/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.265894229 seconds)
    (221/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.263690218 seconds)
    (222/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.989815289 seconds)
    (223/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.320633355 seconds)
    (224/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.272902175 seconds)
    (225/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.270898544 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.272930591 seconds)
    (227/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.304868662 seconds)
    (228/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.236747093 seconds)
    (229/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.284499907 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.284256082 seconds)
    (231/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.420010752 seconds)
    (232/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.288178779 seconds)
    (233/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.330489493 seconds)
    (234/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.017749262 seconds)
    (235/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.402271319 seconds)
    (236/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.27435095 seconds)
    (237/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.25949524 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.259453261 seconds)
    (239/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.327339718 seconds)
    (240/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.264536228 seconds)
    (241/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.432657157 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.286726488 seconds)
    (243/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.297541022 seconds)
    (244/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.283828259 seconds)
    (245/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.07496646 seconds)
    (246/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.257083684 seconds)
    (247/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.322128839 seconds)
    (248/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.26332799 seconds)
    (249/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.237750607 seconds)
    (250/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.375954936 seconds)
    (251/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.487203819 seconds)
    (252/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.552303417 seconds)
    (253/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.32924112 seconds)
    (254/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.282653702 seconds)
    (255/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.27385441 seconds)
    (256/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.263266378 seconds)
    (257/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.983420441 seconds)
    (258/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.289647354 seconds)
    (259/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.321259615 seconds)
    (260/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.392937932 seconds)
    (261/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.270839288 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.320446109 seconds)
    (263/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.314831269 seconds)
    (264/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.267871841 seconds)
    (265/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.262478842 seconds)
    (266/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.261636317 seconds)
    (267/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.274817924 seconds)
    (268/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.270552336 seconds)
    (269/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.282126876 seconds)
    (270/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.256909042 seconds)
    (271/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.308641083 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.442100341 seconds)
    (273/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.406689017 seconds)
    (274/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.91608002 seconds)
    (275/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.265594003 seconds)
    (276/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.265235132 seconds)
    (277/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.375412906 seconds)
    (278/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.431225042 seconds)
    (279/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.35880896 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.263900155 seconds)
    (281/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.236827788 seconds)
    (282/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.298302609 seconds)
    (283/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.268170574 seconds)
    (284/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.350689462 seconds)
    (285/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.267511087 seconds)
    (286/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.252658385 seconds)
  done (took 444.291968727 seconds)
done (took 445.434348245 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.306796687 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.310883811 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.265300202 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.298039071 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.376141293 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.437899767 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.274682191 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.303102888 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.313884342 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.31723916 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.272023481 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.438611984 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.267308865 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.266131786 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.266215823 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.307261003 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.254936456 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.271244131 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.284756291 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.305632963 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.28217239 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.273079214 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.31666353 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.439438493 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.270113663 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.268770482 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.270639584 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.287285177 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.379400192 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.271738122 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.268995342 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.279640007 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.256909583 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.275982606 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.260628962 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.285531608 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.278782461 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.276857647 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.300731645 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.378585662 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.259067969 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.278621261 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.269120089 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.26841361 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.267781563 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.306932343 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.269781307 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.324701214 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.311197386 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.310765221 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.257315633 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.303828885 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.278592787 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.269778292 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.278587375 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.268127358 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.325052289 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.313434642 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.289359151 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.313655314 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.266581875 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.27747601 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.30889773 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.284704193 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.276905803 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.268210891 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.266851822 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.30808651 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.257876444 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.291696414 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.269738458 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.278158532 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.270320133 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.283764968 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.30181875 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.262244439 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.267458191 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.268549361 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.276981562 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.26856449 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.316443925 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.312124802 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.320313619 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.270775788 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.311348549 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.443044469 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.279281973 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.271642242 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.308324835 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.289648594 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.278469531 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.282372247 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.306176288 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.272471803 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.318680072 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.327749401 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.280879444 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.281015456 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.320733826 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.282948259 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.269322922 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.322152112 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.26883661 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.268320166 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.271403702 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.393327432 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.267501303 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.276533886 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.305300606 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.319417214 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.331516729 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.274494738 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.285664334 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.318008285 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.283097587 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.330987901 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.272668106 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.273520761 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.274745565 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.399732174 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.27300561 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.278923457 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.317771145 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.333318202 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.272585674 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.269059388 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.278956595 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.315662418 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.395413037 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.283170156 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.385334695 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.27162196 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.27741156 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.303190005 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.318439164 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.306670123 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.333241031 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.318929508 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.290740515 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.274665 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.285207168 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.285938733 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.274460597 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.330809233 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.271925279 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.304211853 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.314793649 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.316674338 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.306824369 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.394693516 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.279306732 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.262989926 seconds)
done (took 214.40147319 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.333369333 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.269669582 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.381332562 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.272262903 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.382234721 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.372428061 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.270352722 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.271341473 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.271062833 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.691780926 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.271323864 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.269786852 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.26951369 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.271187217 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.367416027 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.273714053 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.269930166 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.610904771 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.274536532 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.342491292 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.271520558 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.270262498 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.27339631 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.652464378 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.269796343 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.26652368 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.34123108 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.274187059 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.657588631 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.266736487 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.268215622 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.620915364 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.363255023 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.290099782 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.284600148 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.280960813 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.372635378 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.291938831 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.354941138 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.364620968 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.382532779 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.313475386 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.266842563 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.270839762 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.27433057 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.275962232 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.272430928 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.301157473 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.273341199 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.27275837 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.651809175 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.285404593 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.272831558 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.272647579 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.272500048 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.305297227 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.272663829 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.275631222 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.365084141 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.276687023 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.337036877 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.70001431 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.651463896 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.275891802 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.271191493 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.275002408 seconds)
  done (took 100.606883341 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.341846739 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.350296993 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.384807957 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.281009446 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.327102957 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.388840243 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.280736091 seconds)
  done (took 10.52730849 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.281580415 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.279071026 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.325800179 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.325553509 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.277792011 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.490449362 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.278659632 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.28876072 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.274575213 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.355707598 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.277875318 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.279587076 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.284208473 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.27217578 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.325245111 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.289867532 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.392156424 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.279721569 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.279554823 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.430378023 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.276047192 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.285419841 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.350258946 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.290150852 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.278312109 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.283477729 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.239550087 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.279133906 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.277452333 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.279339203 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.274648521 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.385350245 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.280326822 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.274707548 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.275663759 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.43704742 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.279459997 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.27695671 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.279097305 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.278285931 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.280190695 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.278475597 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.280302182 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.276669621 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.279452153 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.302134229 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.279725087 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.279607809 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.280475213 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.280616041 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.351144203 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.28009777 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.27685256 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.276528286 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.357194134 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.287220948 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.280848896 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.2786374 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.279695926 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.2776402 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.433336244 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.327098755 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.280447182 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.326728534 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.281433377 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.281990222 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.28200799 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.281311625 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.370855511 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.282004337 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.32690834 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.280093943 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.501368967 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.304858072 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.284996573 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.282683552 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.283432106 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.282807426 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.276356717 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.287838759 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.279507398 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.28265445 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.287389135 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279771693 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.279846557 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.46500821 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.436785246 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.281296473 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.296675284 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.289342879 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.280787844 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.355753952 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.282870637 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.280166459 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.333438651 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.396576425 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.359839624 seconds)
  done (took 132.835117126 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.287465919 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.290808582 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.286349295 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.30722913 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.282666066 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.282308874 seconds)
  done (took 8.9158647 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.285380887 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.284916384 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.284565833 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.285128315 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.284120251 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.284100911 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.284594483 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.284151411 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.288303177 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.285393284 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.284736293 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.284455976 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.28562938 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.285760998 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.284751964 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.286153715 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.285201599 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.281950658 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.285648132 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.284380138 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.281916776 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.28573738 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.285230457 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.285539531 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.288307142 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.286113063 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.292847807 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.285433533 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.285617513 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.290104202 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.305880264 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.28551756 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.286007992 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.291085751 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.288744134 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.287305453 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.291019568 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.286339303 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.285438949 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.286076498 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.286508609 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.288302271 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.287873589 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.288389566 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.287275776 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.292635113 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.290267369 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.294183208 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.286727542 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.287297062 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.288072229 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.288332757 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.287262071 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.287877638 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.289086732 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.306412551 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.290843385 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.287654476 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.2881737 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.288967773 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.288179026 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.286857553 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.288060948 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.291265149 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.286462056 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.290433254 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.290693325 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.292566557 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.288962652 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.289612257 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.288838524 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.286468169 seconds)
  done (took 94.901735379 seconds)
done (took 348.964148568 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.706581563 seconds)
  done (took 3.890167526 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.350652869 seconds)
  done (took 3.538586397 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.934899235 seconds)
  done (took 22.126421547 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.323086166 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.299380785 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.288416867 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.295372453 seconds)
  done (took 10.392835905 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.540736467 seconds)
  done (took 3.725643864 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.300417492 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.294570425 seconds)
  done (took 5.78205519 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.544340393 seconds)
  done (took 3.729672584 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.601926415 seconds)
  done (took 3.797876851 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.289923845 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.299389109 seconds)
  done (took 5.784230977 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.275849286 seconds)
  done (took 3.461338527 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 14.993455593 seconds)
  done (took 16.182617957 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.288456378 seconds)
  done (took 3.477864623 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.308072117 seconds)
  done (took 3.493523712 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.795567024 seconds)
  done (took 5.982667426 seconds)
done (took 96.548959467 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.284199651 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.289831907 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.288142513 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.288862292 seconds)
  done (took 10.33792775 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.346542649 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.326737768 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.326804473 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.336207797 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.328066001 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.326191596 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.318506657 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.317646152 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.33694406 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.329939408 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.327498196 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.329028308 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.326405978 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.318530302 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.328904762 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.328464682 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.337713884 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.328296243 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.31869591 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.33003105 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.294613366 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.338076173 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.329700504 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.29462258 seconds)
  done (took 33.014578064 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.785782586 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.362962946 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.446960834 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.348175437 seconds)
  done (took 7.132195832 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.365084011 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.373363258 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.372247242 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.410894797 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.436815065 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.372186429 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.320736772 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.316213858 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.301196458 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.37353176 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.422382062 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.359472532 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.440299188 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.295103796 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.572632974 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.296058001 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.296335345 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.374106991 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.411312979 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.425432407 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.295136683 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.37201459 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.374662169 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.359741924 seconds)
  done (took 34.126007909 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.295138645 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.313415243 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.295137662 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.293941663 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.304069986 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.295329323 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.294516054 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.295851281 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.295800292 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.807485653 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.300241215 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.307048361 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.793980133 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.300819916 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.301565484 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.296898094 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.796143299 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.796469657 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.301131246 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.301943678 seconds)
  done (took 29.177588606 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.288796004 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.287662518 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.640492757 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.546330374 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.288191094 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.292797235 seconds)
  done (took 13.534753576 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.366698956 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.507248834 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.302292518 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.641144112 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.725960053 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.300933389 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.296247504 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.538102533 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.849639852 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.827354067 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.357918161 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.372543613 seconds)
  done (took 19.287105477 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.305423787 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.295484536 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.303981627 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.312479548 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.351686374 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.305554994 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.303698987 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.289579429 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.356809684 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.360436314 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.30761289 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.352243246 seconds)
  done (took 21.046219647 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.39278868 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.292422202 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.29049621 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323361061 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298346798 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.13708751 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.304674863 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987790624 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.31365819 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.564367127 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.29095297 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.408686584 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.549037183 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295307113 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.297962552 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.279215362 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.526490011 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772401145 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.295031301 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.304282045 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328740745 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293038823 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306647849 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.504156554 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.29505582 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.293478833 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.554158819 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293052431 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.575799543 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.310382176 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304821486 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294122798 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.56847141 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941264525 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419500582 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.500341829 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300468123 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318411449 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.297217465 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.309430033 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302558596 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.295390782 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.309325383 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.294556748 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.293398679 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.29375735 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000134322 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.31583688 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.29420212 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.295977537 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.554255986 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407294376 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.29785888 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.295842845 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.349730881 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300487089 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.299190625 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.292964485 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879685062 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.294848252 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302529698 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.300835038 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.306442463 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332541395 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91761466 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.302695199 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.302261053 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.301349085 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295212841 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.310003824 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.317128167 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.299380219 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.321941724 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.295086149 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.991251896 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.295347891 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298573232 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840375883 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302540168 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.301533996 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.529093824 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.297054363 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.297959073 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.303846451 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.294458875 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994585017 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.31309087 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.29543127 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.301188609 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.016859456 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.523061739 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321079565 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330900959 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.520967796 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.279384691 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.298369678 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.307906122 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30182092 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.321707973 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.997105475 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.315953169 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.301437932 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557322678 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.510118411 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303620428 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.286669173 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.764531702 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32825944 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.318365412 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.301496139 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.515421015 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.878198542 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316464631 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.299791277 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323855429 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.300280535 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042706464 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31844908 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.406174041 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.299783408 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572396526 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.077468612 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.306818786 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.36781783 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.304164399 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.299553126 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.300334788 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.305447185 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.30184311 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.498460854 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.322938484 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.317759666 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.29862857 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.300839473 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.312736004 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.307258419 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.30745002 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.52622947 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.314372383 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.583020033 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.302387188 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.301482343 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302043759 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.530392749 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.303350079 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.645058018 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.566977213 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304128473 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.307659853 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.317768343 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.318187271 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410342604 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.326503561 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.31478164 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.563972518 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.306520312 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.306778705 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.302624566 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326731533 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308086966 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.310033807 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302523827 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.887542534 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283670502 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312755964 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.193822337 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.31703703 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371815763 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.310002049 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.512246946 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.308745234 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325652054 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.32945764 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.306593083 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.533325343 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.313607795 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.304397547 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406619266 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.768542035 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.902066699 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.319971588 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.305184641 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.301299415 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.302368319 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304962431 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304586845 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.306262995 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512570609 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.324261516 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.309500405 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.909045744 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308240823 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.305990543 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.333026721 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317529096 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.310163032 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.30594283 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.304183167 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.312125599 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.313461915 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.340954343 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.45056056 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.320303185 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30732087 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.823334679 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.311993307 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.307677084 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.307115791 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.342841111 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.307620301 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120357901 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.570155944 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.316481014 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.588839084 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.326612863 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.32965591 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.314856927 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.307511305 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313874544 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.314927887 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.341632525 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.32071393 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.307828375 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.332530341 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881951459 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.035017091 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.843277133 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.311046571 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.309911507 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.31578973 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011774317 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.325273564 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.308569941 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.545117788 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.016003049 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327346309 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777359353 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.334671462 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.061887637 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.573613963 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548073307 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.30932025 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.311979546 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577394264 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.527674183 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.343537943 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.320563021 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315910211 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.290946765 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858702313 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.328442268 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.387996919 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.011609014 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326667445 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.316819549 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.354373977 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.314969509 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710242564 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.333651284 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310282808 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.325525378 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.317284667 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.109096031 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.319389149 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.310389409 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.930572259 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.322529758 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.782242873 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.329614703 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.520896035 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.327710696 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.312004703 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.315743055 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.317061663 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.571977701 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.571876638 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317667587 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.314027476 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.850105191 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.190661457 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.317622984 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.313385337 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056983883 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.324073475 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.601800635 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.321476291 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.314933363 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317444556 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.313407557 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.312777436 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.309740351 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.31753475 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.288755151 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.805109181 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.32987575 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.380761234 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321590673 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.318518019 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.56864718 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.32684554 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.892721271 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.544832287 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.335910625 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358618716 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.319569444 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31966993 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.302716566 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.313230277 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.314237592 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.360986101 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.54390399 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317427449 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.302878421 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.332330825 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.531227568 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.314633135 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.318966641 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.558123032 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.31532812 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.321691436 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.045313938 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349700501 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321750888 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322274084 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.315534857 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.338744493 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391332939 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.526010025 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.333933221 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.327279767 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.710462463 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.345999509 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.325108182 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.330457461 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419537044 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.316497514 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.321602654 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.095279108 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904641818 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.047865795 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.905329504 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.578206192 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.324716957 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.319296587 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317384005 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48132652 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.317253702 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591933777 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31841193 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.331585149 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.362914008 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326863188 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.332481373 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.534980174 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.596765471 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318213234 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326405553 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325037087 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.319361078 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.330356231 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.531476043 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.813568869 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885665044 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.32643834 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.326521652 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.031419246 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612730588 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.31851491 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318848991 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.320007762 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.32042219 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.3261479 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.331324962 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335412828 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469688005 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.578693803 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.976525373 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.348442654 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.349521676 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.095460779 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.31994357 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.582488456 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.318170686 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.539207555 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.909450507 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.021459602 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592293905 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390247706 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.533610987 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.333745267 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48721779 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.320205962 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.321896059 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.321716943 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321769179 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.317231459 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.330678652 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.912984369 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.590075641 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.327062345 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.331869412 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.357150003 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.33243791 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.545525355 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.034013439 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.55241721 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.332249123 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.327105363 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.323168004 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.910277353 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.585596106 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328562311 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.325592409 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560266885 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.326900621 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.348691888 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.774572132 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.319750987 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.883145633 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.302410271 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34612035 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.335081608 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.032842334 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915264921 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.326315687 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.824966235 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.331151174 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.333509337 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.602546663 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.328624755 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.334815961 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.605327679 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.328184364 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.322356076 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.544955264 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.911445511 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.081285582 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.333826739 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330722769 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.333336669 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325690618 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.364651728 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330384061 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.327442554 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.732070234 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.342968862 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325667222 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.336939954 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.330979421 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341481682 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.329332191 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326254686 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.331259319 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.322033455 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.325259773 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.343319333 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.330515048 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884545505 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349663587 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.004059209 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.657519105 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.581568994 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.328063744 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.31437004 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.330392772 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326736883 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326875715 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.326936266 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.340714532 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.903014732 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.330061505 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.343682789 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332101086 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.542123499 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.540868554 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.341654066 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.549082731 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.328437637 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.347438098 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.309153703 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.327378656 seconds)
  done (took 948.824821914 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.344493412 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.355884621 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.337579094 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.362439454 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.353461328 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.362073607 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.415750957 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.450593647 seconds)
  done (took 20.208480388 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.331027793 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.342262808 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.327751596 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.342316356 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.328643657 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.802769372 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.346443525 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.337827648 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.339310099 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.334305025 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.335305022 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.060832059 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.338280576 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.328058082 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.318962446 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.338310633 seconds)
  done (took 31.784574922 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.265040974 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.460552126 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.216601944 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.365851238 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.371969524 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.330343053 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.548520051 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.345530619 seconds)
  done (took 26.132106743 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.342104061 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.341349176 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.340469639 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.340564966 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.340664452 seconds)
  done (took 7.933719372 seconds)
done (took 1203.729434804 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.33444723 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.336924038 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.334871571 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.337145008 seconds)
  done (took 6.570440017 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.312352911 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.317641047 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.318446008 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.333693759 seconds)
  done (took 9.50967369 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.031333375 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.960410495 seconds)
  done (took 5.21956104 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.333082529 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.090939017 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.076260402 seconds)
  done (took 7.730852877 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.627465239 seconds)
  done (took 2.85687057 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.743202801 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.699150187 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.530719356 seconds)
  done (took 6.201754108 seconds)
done (took 39.316098546 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.332284318 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.580204953 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.486661289 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.33378343 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.492503118 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.487215083 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.064192138 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.331804731 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.338967026 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.348142375 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.335490359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.502697781 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.049839815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.579521117 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.0516543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.591216752 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.498746851 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.330317511 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.344560265 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.342633421 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.066059121 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.330792134 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.347853921 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.332121557 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.491490459 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.476028851 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.339951684 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.580261576 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.330877393 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.344880836 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.477944496 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.333945235 seconds)
  done (took 81.105910002 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.343925666 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.33334988 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.340778701 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.341080862 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.340246768 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.339820798 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.334568913 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.338378948 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.343558872 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.334839764 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.339578472 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.330454039 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.333385648 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.332583511 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.349385953 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.332455418 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.354494345 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.338116348 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.349584191 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.332957503 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.335593638 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.333067403 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.334766857 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.333789615 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.33907298 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.334958829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.351423823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.334654659 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.353956878 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.336381005 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.340465553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.368798334 seconds)
  done (took 76.112594087 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.341315319 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.341927414 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.336084158 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.334297979 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.334252826 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.341648005 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.335511188 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.333676688 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.360610913 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.341192588 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.333824097 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.351146754 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.337968642 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.334281838 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.335386059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.333683357 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.335530054 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.355494461 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.341211979 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.335738494 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.338295725 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.335616619 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.33957404 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.343078061 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.353213201 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.334661745 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.345240706 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.335965628 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.336094196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.351973503 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.361856167 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.341641971 seconds)
  done (took 76.145306925 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.618121141 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.345672634 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.345306993 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.328876129 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.345788281 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.343929509 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.339094659 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.621955617 seconds)
  done (took 14.523095037 seconds)
done (took 249.116378701 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.352247971 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.351877854 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.555957662 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.376316544 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.345739391 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.364806624 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.374848495 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.569474865 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.32783615 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.595748693 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.364342359 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.361856054 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.350852936 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.372847436 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.628427744 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.499913314 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.272175826 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.346662135 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.680941158 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.356984909 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.624406801 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.349349203 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.621587676 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.311288642 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.3632425 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.338703988 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.35805253 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.266074904 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.392358968 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.699929362 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.348257313 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.324294445 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.446724004 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.448284816 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.567436942 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.512872284 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.361300307 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.430167016 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.568195306 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.349653638 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.383977213 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.126974641 seconds)
  done (took 81.87904159 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.346680878 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.46023997 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.349117912 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.34929827 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.349447347 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.463901948 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.442443305 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.348122691 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.34935566 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.348085001 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.348207009 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.349091611 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.34918436 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.349613981 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.349745745 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.34906286 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.345430515 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.348611766 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.351943376 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.392713058 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.466790322 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.371291776 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.339989165 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.34780225 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.449568531 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.478671123 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.345710587 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.339374525 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.392639994 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.350971984 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.350241978 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.391056672 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.350232985 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.350695305 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.463277857 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.446693538 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.350788467 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.344861177 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.459902332 seconds)
  done (took 54.969999158 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.352112033 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.602614445 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.78597519 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.362183138 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.350263353 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.354719371 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.427473022 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.358031671 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.354866739 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.354531515 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.520071024 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.354126215 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.384164331 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.803215262 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.353601221 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.353251764 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.353169279 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.351760787 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.605917916 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.361435494 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.448461368 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.354587206 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.42964627 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.366508062 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.37468616 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.353918207 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.356790725 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.917140327 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.355335168 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.520315343 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.132901278 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.430441665 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.866434544 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.792623528 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.134339725 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.3604496 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.355669268 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.524765956 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.360476453 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.352448788 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.428192887 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.359294323 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.791552328 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.012336256 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.37694282 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.354163071 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.941598696 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.530478009 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.597875715 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.367744158 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.818096812 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.364284024 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.356778965 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.355127305 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.594770459 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.363062404 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.353363788 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.927493412 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.38184209 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.430068902 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.362566537 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.355313484 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.650546456 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.354485065 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.604366545 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.358106182 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.362542676 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.374551434 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.793637669 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.357817999 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.03043003 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.372425596 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.356058502 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.520364845 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.604460815 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.975142665 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.360008697 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.624774037 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.87730559 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.430699502 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.358775831 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.911540677 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.435718171 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.360809575 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.357158758 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.359727671 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.35752137 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.409621485 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.430549051 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.973067556 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.022181341 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.946145307 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.453463013 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.371455302 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.357287112 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.92330763 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.377079494 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.357057534 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.791173136 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.036737043 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.376574686 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.363459487 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.035225508 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.378336851 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.436495624 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.368955103 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.801395814 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.359452871 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.410566356 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.359165712 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.365389232 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.382456472 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.43625527 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.366584523 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.359928349 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.002216635 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.554412081 seconds)
  done (took 179.152754233 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.352425195 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.367950749 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.350232774 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.371908307 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.351533207 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.359531742 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.35077108 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.35170913 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.358380484 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.349313385 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.351519463 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.353685127 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.352183764 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.351950773 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.364528813 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.358751776 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.351501389 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.352061318 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.354451858 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.353213156 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.351638356 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.37937283 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.353027321 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.352416436 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.354239187 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.352231848 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.360710906 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.356190142 seconds)
  done (took 63.21606614 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.360569212 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.914427868 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.365829681 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.48842066 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.391003145 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.357419051 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.486622605 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.423985939 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.361110579 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.358322106 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.360587697 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.654034119 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.363775673 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.866251029 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.549230651 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.497295329 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.868708545 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.380135218 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.361535376 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.359258338 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.490654684 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.375363124 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.656321793 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.911918554 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.364713154 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.913060214 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.348324728 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.362211859 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.361295644 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.918531903 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.366340659 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.663335368 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.441570754 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.426337633 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.919897201 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.87383827 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.895486128 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.514309059 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.361877651 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.365546348 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.361332489 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.349611835 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.920943474 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.368851774 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.363237307 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.911502268 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.383586067 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.36466487 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.355843593 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.361714194 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.421389555 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.423707645 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.664587142 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.000147149 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.446283564 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.365468078 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.4924417 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.660673644 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.372683584 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.871050318 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.356392608 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.924314576 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.368882604 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.351914746 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.365412513 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.354787027 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.513495651 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.501180489 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.873222096 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.384441008 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.868576049 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.530276135 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.370350127 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.364049725 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.367875777 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.927153787 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.874957546 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.531061926 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.503132998 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.562667935 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.360041984 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.365862662 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.353668492 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.441892766 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.36925582 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.926473517 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.88876804 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.385980046 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.369465782 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.368571262 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.369233233 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.538714754 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.928729545 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.442978999 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.875520723 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.687549261 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.66656098 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.368637364 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.426137612 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.38288459 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.727594478 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.369712532 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.42406722 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.707625152 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.674627952 seconds)
  done (took 162.326168487 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.603577185 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.398513504 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.470993608 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.517176695 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.966381207 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.961214299 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.378331485 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.48959759 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.487882699 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.622534185 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.39000039 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.465790317 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.591353232 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.447587826 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.088732362 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.440832318 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.465830079 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.514275445 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.514626044 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.369787416 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.001397445 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.660528027 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.555505003 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.400890107 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.474012878 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.142317994 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.95407712 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.904309183 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.540876843 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.383885672 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.891481605 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.38574397 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.283912055 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.044445434 seconds)
  done (took 64.066422177 seconds)
done (took 606.847066645 seconds)
SAVING RESULT...
DONE!
