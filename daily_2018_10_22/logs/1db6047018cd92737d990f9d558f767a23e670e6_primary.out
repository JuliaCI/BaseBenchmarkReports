cset: moving following pidspec: 7843
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.235870045 seconds)
loading group "string"... done (took 0.463267319 seconds)
loading group "linalg"... done (took 7.60602268 seconds)
loading group "parallel"... done (took 0.172025262 seconds)
loading group "find"... done (took 1.175137102 seconds)
loading group "tuple"... done (took 2.087781563 seconds)
loading group "dates"... done (took 1.334826322 seconds)
loading group "micro"... done (took 0.248095111 seconds)
loading group "io"... done (took 0.659347941 seconds)
loading group "scalar"... done (took 41.703841341 seconds)
loading group "sparse"... done (took 12.520947142 seconds)
loading group "broadcast"... done (took 1.139107347 seconds)
loading group "union"... done (took 14.053622832 seconds)
loading group "simd"... done (took 4.78549496 seconds)
loading group "random"... done (took 9.736642973 seconds)
loading group "problem"... done (took 2.022118283 seconds)
loading group "array"... done (took 22.976628865 seconds)
loading group "misc"... done (took 1.433028903 seconds)
loading group "sort"... done (took 3.615262306 seconds)
loading group "collection"... done (took 19.787743715 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.521995907 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.138136416 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132887024 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148398606 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.208275923 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.144698604 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.162728317 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.116355314 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.017664146 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.187189324 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155370362 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.524930402 seconds)
done (took 5.214005768 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.225913163 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.097048756 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106136147 seconds)
  done (took 0.884222917 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079069335 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147049751 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096344845 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079869199 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096878402 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078911083 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096711143 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.0789639 seconds)
  done (took 1.363704401 seconds)
done (took 3.247690799 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.74545484 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286068363 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207660884 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.473387989 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.199977555 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218610996 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.669751882 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.367557065 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.259694783 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.10023705 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143939763 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388474398 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.138139136 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.675334606 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.09076661 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123377915 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177147746 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.473512809 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084270707 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112168522 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116974637 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143394237 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131822889 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093247696 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185947021 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082050241 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194684494 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108764144 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080489521 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.291476175 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200131393 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.681850793 seconds)
  done (took 10.975390085 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.112183176 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134614709 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098405209 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137711544 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137030073 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101383664 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085809644 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098696152 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123815504 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.1796982 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.116549612 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138976269 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.097186779 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083897995 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118327927 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247381942 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122230602 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.106597477 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.10296296 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106514917 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123951028 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.116366136 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.110868923 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094585334 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169863523 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224143497 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113121921 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128107572 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098622366 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113222607 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.14425288 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144841731 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097415596 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081613013 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173332216 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126731122 seconds)
  done (took 5.207980699 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.187991981 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120312441 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16820345 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.16317621 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.140088396 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160117683 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113626991 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.244958543 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.104118633 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.165104404 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.143582097 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116562664 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.0827912 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098167016 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095194513 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.702183468 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.123222995 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.154598553 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.115403247 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103173492 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.084238027 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364166435 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.103026404 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.08036858 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09944521 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065775412 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.159460505 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099518757 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.161160403 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.1204072 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088936126 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135612656 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205571986 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.111007464 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134770857 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096091332 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.080472213 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177960271 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104922081 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079510829 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120666399 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.156342279 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13660707 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136415037 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098111646 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080753912 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.204108577 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.096697053 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.11420748 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.925045854 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.080124166 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182466528 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.104477782 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078592356 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.323593 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116017117 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.078842296 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.095461135 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.240573454 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.186530443 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098586205 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080437362 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096983829 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.08088976 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.42871385 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080560516 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.661689723 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083741568 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.10775552 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082216554 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09618363 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103776437 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086774036 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.11697716 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.07951936 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.09872428 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078541208 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097189187 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081892199 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.108332716 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102446684 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080117278 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.163803733 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078935794 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11375971 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.126908368 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085237172 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095810186 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130052846 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083175561 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097934432 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133084698 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08145991 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109693647 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099544166 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142096209 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.081078071 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.153934852 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.081285398 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126889034 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100045612 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114636779 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112126594 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098796199 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084165797 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.0958857 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077067545 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095767436 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.148791745 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095715362 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.081112376 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099448277 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076616244 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.111447991 seconds)
  done (took 22.545719194 seconds)
done (took 39.418912047 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.326310152 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102518547 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103216687 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10292779 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.10047342 seconds)
  done (took 1.49691903 seconds)
done (took 2.226843883 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.292247204 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173235628 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094802557 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166716635 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094140196 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174329485 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159578624 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112104412 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.218368569 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.077216149 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163687396 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094185126 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.075821335 seconds)
  done (took 2.660963507 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097333417 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117773768 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082433548 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111024804 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.075893298 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111561636 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092462548 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117453939 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109366016 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.084678918 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0929145 seconds)
  done (took 1.821893512 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096249411 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113134935 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082946541 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109832278 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076244933 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110493854 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092742493 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116129166 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109599763 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085316474 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09320384 seconds)
  done (took 1.815670973 seconds)
done (took 7.019751766 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092636486 seconds)
  done (took 0.819812591 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.926042372 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.945049924 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112350966 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.151053475 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.299025273 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.193962515 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.482819125 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128862676 seconds)
  done (took 11.179795323 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.114866759 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102824504 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.104395214 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.097050104 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.10456295 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.083459084 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.102207983 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100304151 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085682122 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.100113229 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.086041357 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101595751 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.099209179 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085942449 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.099619416 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084745969 seconds)
  done (took 2.347575556 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122451566 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118728631 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107280306 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109667329 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087421561 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.104150405 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.106079776 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088668365 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.101565967 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103874383 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090197242 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104655523 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104062302 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079527096 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106377967 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.10849434 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087000273 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.105457982 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106764381 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090553737 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106188171 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096109654 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086976615 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105002005 seconds)
  done (took 3.269765546 seconds)
done (took 18.347790234 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163556981 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109983527 seconds)
  done (took 1.006670259 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096822305 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114289662 seconds)
  done (took 0.943395797 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.100019974 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096462135 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124651806 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.111842081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.0818356 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096885216 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.119718605 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.0805927 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096365908 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.07993539 seconds)
  done (took 1.730385535 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.084532593 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.112550863 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104396628 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096457643 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.107542598 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097441181 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.090235195 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.101109827 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113084582 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078520046 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.104553299 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116925536 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087894755 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.11896481 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107114294 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08549931 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104893892 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100077919 seconds)
  done (took 2.552467501 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081466377 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097841505 seconds)
  done (took 0.921945259 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083060175 seconds)
    (2/7) benchmarking "second"...
    done (took 0.096050008 seconds)
    (3/7) benchmarking "month"...
    done (took 0.083388692 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098862393 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09618381 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078456329 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.096747331 seconds)
  done (took 1.374197759 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.477082233 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136728333 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.253846587 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085352613 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.119954047 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302225166 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098806966 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084884489 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102779533 seconds)
  done (took 2.460179923 seconds)
done (took 11.725479616 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.096174111 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120380788 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11382462 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.467388081 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.107207841 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.097147425 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.160543178 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.256803892 seconds)
done (took 2.162948786 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.152200793 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328710908 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.113615743 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067328186 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.094731839 seconds)
  done (took 1.353113884 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081515586 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10197752 seconds)
  done (took 0.931571695 seconds)
done (took 3.191901437 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.11187189 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098719086 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.077444696 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098463673 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077696305 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.09827085 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.078099358 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.095100069 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080890722 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096136519 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096406477 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.08035653 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097078086 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078155923 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094932606 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.079811418 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094844121 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077763763 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.097162447 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.077680147 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.096508495 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.078062112 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.094358273 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080468028 seconds)
  done (took 2.925514737 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.102042859 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100390417 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105119168 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.08791087 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.104326713 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088688341 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104319611 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09952604 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087850942 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101971746 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102454922 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085990188 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102218859 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086273437 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101464936 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104537774 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.089193962 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101192194 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085543323 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.103431994 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105291638 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081092012 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101725327 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101867313 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.08384861 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100917091 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08296687 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097633354 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102954386 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084904746 seconds)
  done (took 3.637718778 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.087401414 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.096961492 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079794508 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102905912 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077715282 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096453868 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078176767 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095782405 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078952655 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095284267 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079446512 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094630172 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077908477 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095894453 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079129331 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.098857675 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107740921 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077951743 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094976588 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078289323 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097931679 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077770562 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.095142105 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078474721 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.094944148 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077253444 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094856661 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077691926 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.097062394 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078132347 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098423422 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081803189 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094786415 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084730633 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098963667 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077961991 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.098575819 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.093944448 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079063175 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094802554 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077484124 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094959658 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.078253454 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102274823 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.07895739 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097856549 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.0784562 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097548896 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078839382 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099352825 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078413899 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.095084054 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.08026208 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.096550501 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.099680196 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.077464177 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096004066 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077556438 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096474759 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078186962 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094725175 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078023392 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.098237739 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079090259 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111668578 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086070058 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095367477 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079927276 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.096569453 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081740034 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097684058 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111794441 seconds)
  done (took 7.171817795 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085440015 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.109423397 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082519122 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100537957 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078907402 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099382134 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.101903175 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08116951 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100682067 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087554779 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099074528 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082644239 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099813426 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111227453 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080298964 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098296865 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085223753 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094749664 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.080016481 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.099313759 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.079718057 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.099719977 seconds)
  done (took 2.795560295 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214984802 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.108334134 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143901778 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107905132 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.084487558 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.106358426 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102613145 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087464337 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102482418 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083731107 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100563101 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103230814 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.08372851 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100925139 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100577233 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085526209 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102368264 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084897771 seconds)
  done (took 2.664156884 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095623338 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099863506 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103055653 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099321306 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099634274 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084453703 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10504582 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10874385 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084132961 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099246304 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090668366 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101589119 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100739679 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081197883 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101382894 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081152947 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100619136 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081328071 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.107911243 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104339367 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.104114084 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091097412 seconds)
  done (took 2.887740454 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099523739 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101411492 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118903514 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084436929 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095411207 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079972424 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106314973 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081202484 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106345525 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100570715 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082423404 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097552509 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088525782 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098214284 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103884251 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081193028 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100783274 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081653084 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101657864 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077774494 seconds)
  done (took 2.649582369 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106110153 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.103073073 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102623509 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09514911 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102514692 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.085477913 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112810257 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.103089409 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.085241247 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.127869636 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103411739 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084825892 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110799876 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.106203343 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099738895 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092543571 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108768188 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109225909 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083718754 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100080837 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.125153351 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083221728 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.109258024 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.210866933 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083212756 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100537482 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100489804 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089441473 seconds)
  done (took 3.691947334 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083006695 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099112703 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.078566152 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097078137 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079063429 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.09702562 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079200567 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096734863 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08165799 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095925938 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081396038 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098723954 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081249579 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098802639 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08153665 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099168473 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083428833 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096520485 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.079746334 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097110331 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.081636086 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099315041 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080724366 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096072919 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079235125 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.098520309 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079557842 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.09603276 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081220849 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.0955846 seconds)
  done (took 3.439528973 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093976178 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107601517 seconds)
  done (took 0.970319435 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08143643 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115778613 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079189684 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10269193 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086633079 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.099312276 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108037133 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087339871 seconds)
  done (took 1.529596964 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098760311 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111259198 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.083913016 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112346507 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109270842 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095810414 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.160101044 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100973847 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087296046 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09698067 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113013383 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081064001 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105113007 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081986131 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.10486635 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08756158 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.096945755 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.088297739 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.101832947 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098057723 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083451775 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109893133 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085087213 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097263872 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.083249556 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110245978 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.1091292 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083637729 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.102667898 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108601581 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087556164 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093554099 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082141541 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.100242411 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080125613 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.108296866 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112375242 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084948686 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108310225 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084134972 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110305632 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095475383 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.087224144 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105882702 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092497762 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.100179212 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083181012 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.095281275 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.096976184 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084086929 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.095166686 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082040857 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094046038 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089663131 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.103850758 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112581117 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080499254 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101675432 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085114958 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.103238174 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088608829 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102350816 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084179816 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.099311746 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106199964 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086384362 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107319886 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078149242 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.093915759 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.080380872 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.108750987 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122424547 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.09048098 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.101794759 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083408863 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.097589174 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102897172 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.08403358 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107621088 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.090370634 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100253215 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106339976 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089857196 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100630108 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084757857 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.107502631 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097618697 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.08449651 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098061157 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097699026 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.098850717 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.079826979 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.097333467 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.108395193 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.08572613 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099932314 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080388693 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108206855 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.079776021 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101635681 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084244493 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101280606 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109386043 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.088837015 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10669272 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.106780914 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089340407 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100254643 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085864107 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096569877 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083507304 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103104162 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107350343 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.076821766 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.103274199 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084102543 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.101035711 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.089573329 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098799642 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.083255434 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108034731 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.10707111 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081358083 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.096746288 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085371526 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101134564 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.085907004 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.107777276 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.098889885 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078082428 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095276033 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.087270374 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101280529 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086845159 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.106055705 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102947441 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076862586 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09845698 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.086939127 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.107657587 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.100431096 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082380461 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.105401486 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08318375 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099519884 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088012806 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102654187 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081781096 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.104030939 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.102108255 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.078094511 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104417443 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085443215 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098930766 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085762504 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103781399 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.10356094 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.083875294 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.099226836 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.089382748 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102416707 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081082077 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100087115 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.098905663 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092441522 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102710567 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078534189 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09818405 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090374765 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097786819 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081741708 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.09973348 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103405546 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.084234744 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098431803 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082704401 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.102349956 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.112791676 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087635617 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102087447 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087791008 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.11011123 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.08297412 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102661852 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.100380501 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.083666579 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101509691 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090533841 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.106373288 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106970893 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085177365 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.097559904 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.088513625 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107832562 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08215902 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.099338579 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081949846 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.103559089 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.107071998 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086458973 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101893669 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081501731 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101389128 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105490614 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085301875 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100957157 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081892011 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105753414 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.081754058 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107423425 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102127382 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092531897 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10483067 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078241154 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105343438 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099278372 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.089597076 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.096655877 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080831512 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100048667 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.084862721 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.100768054 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086691204 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095150335 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090630856 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109245729 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10109847 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082207985 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101307792 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091906043 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.10398579 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086855071 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10448496 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107222499 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09721998 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100384004 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086595432 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.10992834 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.101584715 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077224116 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.107026302 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081822275 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100121617 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081642186 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.098725877 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086071189 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109803682 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.105439031 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077306886 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.103826791 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.08179587 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100191515 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078873224 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.107670675 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104662436 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.084314951 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110271015 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.085354295 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102537372 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104636025 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.083763702 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101521897 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08462118 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104825464 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083893287 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.103726264 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.082268105 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.102912442 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100292455 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080751042 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.10294336 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08298515 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.101787297 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089475179 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.103194824 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083453175 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103589451 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.102467064 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083868988 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103263779 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.083213079 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.105588078 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08434133 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101778777 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085665477 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09598782 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108668047 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082920407 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109931447 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.083121036 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.098441149 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.088523089 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.104583118 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.107370203 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.084437136 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.10316836 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085499818 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101063464 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085652236 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109767093 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099651592 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092317494 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.107629069 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084458743 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.10430478 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083285213 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.103587557 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100381016 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085532227 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.102526019 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.08331005 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100944869 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.088054266 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104165989 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.082956293 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10323153 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.103355796 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084231484 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102859442 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077322216 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.10122298 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083588163 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.102152329 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090725043 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.102864957 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.10492062 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081700993 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102958675 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.082201597 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.098903689 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.091694356 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110933268 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102599714 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.091633893 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100703134 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084545398 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111037248 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095778564 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081486447 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099172696 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.081045009 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109935062 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.084104084 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.109928384 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.101402621 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083262903 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.09825774 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.08422697 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100452141 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077541599 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.100833782 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086533902 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104011004 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081601886 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102142831 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104114243 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085846133 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108564604 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.083320052 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.103626612 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.083766338 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098857758 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.081752814 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101382397 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104724343 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084707299 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099894687 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080639057 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101674474 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085630305 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.110804054 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.083507896 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103792549 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090498729 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101688945 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10423534 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087350839 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.096459616 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.086331367 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101822462 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.082722179 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.100590333 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105780511 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086677862 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.1030031 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.090820082 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.10182457 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084321987 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102379378 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099627978 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083189306 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101897088 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083164033 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.101897148 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.085305165 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110611856 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081029107 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104639728 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101843581 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083511946 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.106499684 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.08503353 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104147984 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110137456 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086097086 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.10337939 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090273301 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10600483 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087023588 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104011065 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103083515 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09001484 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.101103447 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.091768738 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.10199665 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.08404946 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103068671 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.081092763 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101463422 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101633029 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082969441 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.107763418 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.084425769 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.101330127 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.082185927 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.099546358 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.085114824 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105967311 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109782425 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.086653788 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105315928 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.079813906 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.09953394 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084910242 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099825997 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.084800236 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105039401 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108000509 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.085516692 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.102571844 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.082202244 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.109710224 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107890898 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.088496851 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.100256698 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089373476 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.103495944 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.086100226 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.103811385 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083721386 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104368744 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107913154 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.085076954 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.101807187 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092133144 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.106854178 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084447268 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.104212931 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.103248522 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.084284272 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.098288482 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.085059369 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.103910836 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090588254 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.10495074 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102360343 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09399424 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.101286115 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.083891168 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107096527 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08277489 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108931022 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097723639 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.084757788 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10293039 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.085691093 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.097610739 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.082537772 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.100293765 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.086376916 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.102703573 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078751399 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111842335 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109803777 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086726411 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101323756 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082283711 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.098152556 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.078999863 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101886261 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084661981 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104658261 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11173188 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082999587 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.10194416 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079833385 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10247895 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086493316 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105798195 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080604577 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.098529358 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.1009562 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086313111 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.109458648 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082879178 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.102313658 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087390755 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.105677525 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.081781827 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107473621 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.099149192 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08852225 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113937653 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085457942 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.104046597 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108086063 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09321333 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103952566 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079699745 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103929499 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.085880857 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103754482 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.103907418 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.08527963 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116703016 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087719539 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.102489762 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082159966 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.106101135 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.10178691 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.09165698 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104698328 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084982527 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107934106 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085339625 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.112877087 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105120109 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089785237 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.1053273 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086031673 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101804359 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104113409 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081898041 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101230471 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085626846 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.104684062 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089516055 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.111056749 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.102207687 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.092865292 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.110983471 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.090078117 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099794889 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.083180686 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102357219 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.079030871 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104028174 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.101146496 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08206671 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100791837 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.083108216 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103756284 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089238167 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.104506569 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.085416456 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104041724 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096773429 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.085409982 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105559719 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.085486027 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099485425 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084471114 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.105095799 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.090167172 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.110448118 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.103291481 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085449853 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105073227 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084687857 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098435968 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090406104 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.102308378 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086587691 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.103180017 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083837085 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.104777967 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106674492 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089544722 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.105044405 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.085868517 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116026056 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105988767 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081506734 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100591897 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089703126 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101344934 seconds)
  done (took 57.806749215 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149647215 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081869221 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098577225 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080278321 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113674504 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099603883 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079979291 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100000533 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080574742 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102030247 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.080272234 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09914058 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108744554 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124558877 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093171762 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103870051 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098005856 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.081093619 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09828433 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081003931 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109571181 seconds)
  done (took 2.881839452 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.10783818 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116971813 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114400498 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119458442 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090322952 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115600138 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114011714 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115571137 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10004374 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111115499 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118369925 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115148063 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091327719 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110330137 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110855614 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093392211 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119632066 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110633422 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116844587 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094988439 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113490928 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114637264 seconds)
  done (took 3.233498257 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086973011 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102308091 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085266484 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.09793776 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084280782 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.09809115 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088822487 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100690518 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086817734 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102389461 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081798634 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.102631326 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104395829 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079474317 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102225603 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082276647 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.1523658 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107239481 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083685904 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104984921 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098094283 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086295075 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098676985 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080314819 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.102027405 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089084705 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104063937 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081749892 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103543302 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082202663 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103590943 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080480055 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.104378176 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103110133 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.082298865 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101994352 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084586772 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102543547 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079018769 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100687168 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084480418 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099285421 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.083787181 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104491972 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082467411 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101783664 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084574236 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.103680872 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098059965 seconds)
  done (took 5.465898509 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.108150343 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161017217 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086346682 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143726381 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121403053 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.113216416 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087395928 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142084459 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.102234087 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.083289626 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122585809 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119945637 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104697155 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089681486 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111105118 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.103906905 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086837451 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.102734516 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108769535 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.083466447 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.10910111 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090207907 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.119372726 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118209246 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108713788 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083530801 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104371198 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109305665 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098570688 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109209859 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109369664 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09058672 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121206235 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109824943 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103142236 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087304137 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122108063 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103804074 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087518598 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101390242 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086761952 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109976764 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109574757 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121919751 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085011401 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109098015 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084837076 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.10072575 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117720184 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087621451 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.113493372 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119997793 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107443278 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.085190867 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109628671 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120698321 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.084438091 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102335148 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.107071676 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.09787886 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10156678 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107728865 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.09952095 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106558183 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112491328 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.098886729 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.109922857 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108518202 seconds)
  done (took 8.140554035 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096414884 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.111816341 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120911323 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121269009 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09122658 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111860865 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111487866 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091770286 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110487653 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115999505 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110620346 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133908672 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086546753 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11581044 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11126722 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092011228 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.111392262 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110675239 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090975263 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111624061 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111007315 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119578784 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091393408 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120169012 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14160749 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106032139 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090454493 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.111416048 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121314573 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110845238 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124900335 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.09149293 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111405582 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12157349 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123569235 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.09109533 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103565459 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11099521 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.09213391 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112285615 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105223438 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.120773238 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092079252 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106067598 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.112014157 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.091266672 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.12142719 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123807023 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113969083 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.096667846 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.111655644 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121538686 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111539021 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091038935 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120894785 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.146962199 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.120708223 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122058763 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110568081 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.120414094 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100469315 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128318364 seconds)
  done (took 7.686883645 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.110736108 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115679738 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119222572 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100042141 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082212141 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109329095 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082030803 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.1021702 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114274742 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095026041 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116997661 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108933387 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112299918 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097437882 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.109509653 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112627968 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.08930109 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109940733 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.114856751 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109386556 seconds)
  done (took 2.94918564 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.096343772 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124862921 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084957332 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112969607 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.107946784 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091479691 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.106780965 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10696941 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085740955 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.107728743 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096935849 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117568719 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106076884 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091182643 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.116278524 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111060932 seconds)
  done (took 2.499980145 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.098739509 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116725867 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119864518 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084583035 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104717732 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080216132 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105351181 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100517577 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081310646 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121439458 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084982117 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108863049 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104618025 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082623546 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101804293 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087792423 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.100819595 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082799619 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.105569157 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.121122928 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095568523 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.10388316 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.105215555 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087200411 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.105100171 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090262331 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106617837 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10305328 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083556258 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105565269 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085410727 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.11333168 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101245863 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084124517 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102866594 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083072369 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.105020051 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084900335 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108778253 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104730543 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083326047 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104531922 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085481566 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106150778 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081030887 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106279786 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100287501 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091230321 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102884217 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085288407 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.10515209 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107766258 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086806597 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115505818 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089238581 seconds)
  done (took 6.247071346 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101439956 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108768412 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.081319768 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10254156 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087949489 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107404227 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107775676 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088122546 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107111673 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083491884 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.108255157 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089556852 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107545631 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108297963 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086714686 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108202349 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080416215 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106338801 seconds)
  done (took 2.617946652 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092028286 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104803224 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092966301 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105492097 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.085569833 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108069663 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079932836 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.104162349 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103324382 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085367795 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105142266 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088133564 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103631698 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087993983 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105289957 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083883115 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107820117 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10316694 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085512528 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100420704 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088408265 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103717442 seconds)
  done (took 2.964485637 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118855474 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124891677 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092383967 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.228407953 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103261424 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131852106 seconds)
  done (took 1.640215785 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111231832 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120322141 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106752096 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10729952 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115801042 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107326873 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087575548 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108812306 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117859087 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10206319 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107841302 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117962259 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117728604 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096504898 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115061342 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114537557 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107552545 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089089302 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106095664 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12885845 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08779541 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118125632 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108866339 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087505994 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108332393 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117949435 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117698661 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.123012547 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088203482 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118441811 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114343226 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088141168 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118337763 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123286218 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109252525 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098234945 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108235321 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129051953 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114066085 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09709817 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109977127 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115144521 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097895201 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114145454 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118911785 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107348832 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094067135 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108563611 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108365571 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135543817 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.094816492 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11758698 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115209344 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118605086 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11814528 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137110943 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102609454 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117275103 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116288659 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123616134 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118092387 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095052359 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118067213 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123481541 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115580946 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117486527 seconds)
  done (took 8.162243731 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106171493 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.1265591 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109346062 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123310892 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097719361 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108562886 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109265593 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087926378 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108646172 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107369126 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152692428 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089043456 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118520289 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.1179464 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10890776 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088781999 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108675124 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117666072 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086935023 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135422074 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108513382 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117963582 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117773198 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09896295 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122526518 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115490727 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10855696 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089030832 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108579045 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107433311 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094251021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.10899306 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117906611 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087214191 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119089546 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109259657 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087721287 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115779236 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108678551 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115018837 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098550624 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128299565 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109204823 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108317502 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122896479 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088688307 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108982214 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087447043 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108196418 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107973726 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123142073 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10192658 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123656857 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118847179 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108340804 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089132267 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109231552 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109333622 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089130677 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115876536 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117955799 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108332791 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135897062 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0889416 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108760783 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119178459 seconds)
  done (took 8.050716985 seconds)
done (took 155.460668402 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102235664 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13710423 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095768094 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168222013 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107159013 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119549504 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138878207 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09789111 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.1073072 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086428713 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106886137 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087733894 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172786512 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106911168 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086462803 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109019301 seconds)
  done (took 2.675222566 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.202698569 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255292889 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102481373 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.10655749 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089904753 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.110621014 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.105279548 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091236518 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110075919 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086296906 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.1092324 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0870829 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.105867298 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.086099779 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110511791 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088723003 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106677427 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088061809 seconds)
  done (took 2.895164236 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.117029371 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146548225 seconds)
  done (took 1.124914969 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.123555432 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.1812593 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.307508306 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156118898 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.139890254 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.105914811 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156752995 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132563274 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197620508 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123326104 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123007724 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097771748 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141016413 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116928539 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095062807 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119102094 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142478756 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114443867 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.095675491 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116917053 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137835734 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085950389 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.116302201 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093132318 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181378977 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.12047973 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.106167263 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08579414 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.11694743 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094421184 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114292518 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126142073 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118899694 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.155988784 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10277558 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177885129 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097469992 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112922867 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115251638 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092011497 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119086163 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118942758 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.104128124 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.119130967 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107772172 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.098107337 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106023229 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085513286 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116367397 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118570886 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094490323 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.113943703 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.157354043 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.11993359 seconds)
  done (took 7.569885177 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799549843 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.164627425 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090753274 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.894237978 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.139175242 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104872877 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.789272637 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.133710181 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234132362 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.764207055 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135235959 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.123090347 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230674516 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.23839079 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.929786844 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.310395623 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.680362552 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.10305353 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151472255 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154189299 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120218154 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139437526 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131077351 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.454529953 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.095514009 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112512799 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.117557866 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.099728248 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159091136 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126914327 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114432889 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.180070022 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.269195777 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.186858705 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.11618951 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089352657 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111783225 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.171440223 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.269918133 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.219083515 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.182179346 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087608543 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111604286 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.122756073 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.1118126 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109956139 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165760708 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195497267 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174638787 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093910975 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12229472 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.121006442 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121143499 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.167370958 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121487864 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.290780785 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325833056 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112623366 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122534977 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106060694 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26580883 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123576802 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225333404 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.117434796 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.217514354 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111412985 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.787889191 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.194005558 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08996862 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.119155449 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119660275 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095040424 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.123102762 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171458709 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.393394222 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.125818787 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.093165964 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112505467 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.205387871 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125909495 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111613166 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.164055831 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116545075 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.099833053 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.126106643 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123319827 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.172375628 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230047115 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.125224816 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120132431 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094453456 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125694026 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117432902 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.21265555 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223307553 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163808268 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211117788 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123679096 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.186611611 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.169089533 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098873112 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.195109098 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.09846138 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126951943 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124372039 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21853463 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147616059 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122743236 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09492402 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119391782 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150312192 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.127541298 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.097809919 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192486406 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484227983 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168187226 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109832475 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127807015 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098926163 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.184724731 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096670931 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265751832 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122706777 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170813288 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120606149 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.088049557 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121180797 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164457214 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123774147 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121330013 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.101924487 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119529243 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.232198786 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222063072 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.123778407 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.222871545 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185556431 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119890984 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.173126171 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12372458 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167955821 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.120850428 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122393028 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.095998113 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.769845058 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125614772 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.099386188 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.117009213 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.19708144 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112007686 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102468484 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.1255737 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.108762851 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.755542087 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127960009 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122139741 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.10229643 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120143678 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120754093 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117738806 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.095092684 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162642984 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232228006 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122425612 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.120327042 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.104010412 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.184519254 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.095387231 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125883212 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.125371261 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.125833383 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.101219472 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115523115 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124940689 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.173118615 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.163123233 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.223840465 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.599950619 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.091171539 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.126280338 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232160641 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090253956 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.291756286 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120628313 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228002907 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.16658909 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122052514 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.321231102 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166976753 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.198450332 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128103832 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.17567961 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.086691399 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119941835 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164394373 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113057051 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118752819 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164709289 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125733274 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101982388 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.959922677 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112577003 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.226688669 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109099176 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174564322 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117254757 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100354355 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294746766 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111999806 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107967587 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188783108 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09405283 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126646671 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.717741915 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.104333371 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123145262 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119432953 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225473953 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.165170544 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119400027 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.098679683 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123032719 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165607645 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.207652985 seconds)
  done (took 44.312849615 seconds)
done (took 59.425754502 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.276457476 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.214337845 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.259279234 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170129991 seconds)
  done (took 1.884906665 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.173593201 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149040353 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120586242 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108899443 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150417457 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085615438 seconds)
  done (took 1.672703074 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.365698633 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279204252 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245211394 seconds)
  done (took 1.781563841 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.291492506 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252876211 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.355102904 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42260303 seconds)
  done (took 2.330558041 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210764901 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131484939 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112008306 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104022048 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.202966424 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.25314067 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14164403 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.206286475 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12423717 seconds)
  done (took 2.426424235 seconds)
done (took 10.985342655 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.254477355 seconds)
    (2/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.118036496 seconds)
    (3/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.127300028 seconds)
    (4/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117381208 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.248845385 seconds)
    (6/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.169610617 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.223635249 seconds)
    (8/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.255638686 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127020749 seconds)
    (10/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.213088964 seconds)
    (11/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.180294018 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.124345554 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.094572494 seconds)
    (14/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.133713809 seconds)
    (15/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120316748 seconds)
    (16/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.187679731 seconds)
    (17/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.092087614 seconds)
    (18/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.228072758 seconds)
    (19/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.202034024 seconds)
    (20/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163534587 seconds)
    (21/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.174430323 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.123407416 seconds)
    (23/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.203326928 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.093703172 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.134475952 seconds)
    (26/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.125778797 seconds)
    (27/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.184729226 seconds)
    (28/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.176179879 seconds)
    (29/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.134170047 seconds)
    (30/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089893296 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 0.226422191 seconds)
    (32/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092417532 seconds)
    (33/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138298666 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096145026 seconds)
    (35/286) benchmarking ("sort", Int8, false)...
    done (took 0.2109543 seconds)
    (36/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.098820163 seconds)
    (37/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.124298916 seconds)
    (38/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086730161 seconds)
    (39/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.171086109 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.149256244 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.094155829 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.117690826 seconds)
    (43/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.150080823 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109686003 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.126745736 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.087282891 seconds)
    (47/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.168903681 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088943148 seconds)
    (49/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.122443358 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.134855797 seconds)
    (51/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.175578402 seconds)
    (52/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117321936 seconds)
    (53/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.113154218 seconds)
    (54/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.160903227 seconds)
    (55/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.12243905 seconds)
    (56/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.200926521 seconds)
    (57/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.232506169 seconds)
    (58/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.098991253 seconds)
    (59/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.140102605 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.140218053 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.087996316 seconds)
    (62/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.120148225 seconds)
    (63/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.096301072 seconds)
    (64/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.11302726 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.135947861 seconds)
    (66/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.08724893 seconds)
    (67/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110383073 seconds)
    (68/286) benchmarking ("sort", BigInt, true)...
    done (took 0.234690161 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 0.088022764 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.185804966 seconds)
    (71/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.192894793 seconds)
    (72/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.121792728 seconds)
    (73/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.118383825 seconds)
    (74/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.188905576 seconds)
    (75/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137035491 seconds)
    (76/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.093526642 seconds)
    (77/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117009485 seconds)
    (78/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.097807379 seconds)
    (79/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111779429 seconds)
    (80/286) benchmarking ("sort", Float64, true)...
    done (took 0.232385855 seconds)
    (81/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.120298598 seconds)
    (82/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.185996644 seconds)
    (83/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.119044038 seconds)
    (84/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.155206744 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.22686861 seconds)
    (86/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.111611193 seconds)
    (87/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.136289312 seconds)
    (88/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125668841 seconds)
    (89/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067854934 seconds)
    (90/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189369871 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.086667639 seconds)
    (92/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.100679088 seconds)
    (93/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.166739997 seconds)
    (94/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.09924194 seconds)
    (95/286) benchmarking ("sort", Float32, false)...
    done (took 0.174529733 seconds)
    (96/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.185731595 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.13809711 seconds)
    (98/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.134252255 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.135074664 seconds)
    (100/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.175660041 seconds)
    (101/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.15172351 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.135435829 seconds)
    (103/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.111199408 seconds)
    (104/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067760008 seconds)
    (105/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.124103099 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.114959782 seconds)
    (107/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.216597091 seconds)
    (108/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.151703819 seconds)
    (109/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093371026 seconds)
    (110/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142339403 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 0.182544293 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119821137 seconds)
    (113/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.162279954 seconds)
    (114/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.111816979 seconds)
    (115/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172607952 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.098454646 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.1331846 seconds)
    (118/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.219161894 seconds)
    (119/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.067374687 seconds)
    (120/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.070121655 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117239716 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.09747127 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.117545333 seconds)
    (124/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.122137256 seconds)
    (125/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092555926 seconds)
    (126/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.112175648 seconds)
    (127/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.067700706 seconds)
    (128/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.14458562 seconds)
    (129/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095377849 seconds)
    (130/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116390759 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096082307 seconds)
    (132/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116270305 seconds)
    (133/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.068117191 seconds)
    (134/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066581983 seconds)
    (135/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.112459318 seconds)
    (136/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.124165881 seconds)
    (137/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.120286958 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086047926 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119179984 seconds)
    (140/286) benchmarking ("sort", Int8, true)...
    done (took 0.224471451 seconds)
    (141/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094731624 seconds)
    (142/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.114968874 seconds)
    (143/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.07231564 seconds)
    (144/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138132085 seconds)
    (145/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136002419 seconds)
    (146/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.09713525 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119531796 seconds)
    (148/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.151944357 seconds)
    (149/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.068546534 seconds)
    (150/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076172525 seconds)
    (151/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116252144 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086489887 seconds)
    (153/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.106448482 seconds)
    (154/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.148632494 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.109853632 seconds)
    (156/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.175416422 seconds)
    (157/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151329737 seconds)
    (158/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.090784014 seconds)
    (159/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.076503918 seconds)
    (160/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.069551878 seconds)
    (161/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.091717656 seconds)
    (162/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.102371769 seconds)
    (163/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.100091077 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.163218647 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.09021958 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087537398 seconds)
    (167/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.13663815 seconds)
    (168/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.067257336 seconds)
    (169/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.09065857 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094267893 seconds)
    (171/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.078053624 seconds)
    (172/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124187273 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109558217 seconds)
    (174/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067417804 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120762405 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066747215 seconds)
    (177/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181413953 seconds)
    (178/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.088381382 seconds)
    (179/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.112188115 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086871199 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134782834 seconds)
    (182/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069176359 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 0.224370477 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109958502 seconds)
    (185/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.085923831 seconds)
    (186/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.185253559 seconds)
    (187/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138094657 seconds)
    (188/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.119837176 seconds)
    (189/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.140371923 seconds)
    (190/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.137321654 seconds)
    (191/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.090812526 seconds)
    (192/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.120154214 seconds)
    (193/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.095255108 seconds)
    (194/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.106018369 seconds)
    (195/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.070641917 seconds)
    (196/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067003329 seconds)
    (197/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.090476384 seconds)
    (198/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.068113933 seconds)
    (199/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.067723541 seconds)
    (200/286) benchmarking ("sort", Float64, false)...
    done (took 0.172262933 seconds)
    (201/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.092289314 seconds)
    (202/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.068309912 seconds)
    (203/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.093281234 seconds)
    (204/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.111614636 seconds)
    (205/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164665156 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.093237919 seconds)
    (207/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.093038941 seconds)
    (208/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.067606873 seconds)
    (209/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.118585267 seconds)
    (210/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.067733827 seconds)
    (211/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.077472228 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.108647498 seconds)
    (213/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.068280773 seconds)
    (214/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06675285 seconds)
    (215/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.157238802 seconds)
    (216/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091326771 seconds)
    (217/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.067862721 seconds)
    (218/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.307049239 seconds)
    (219/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.206476729 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.11037255 seconds)
    (221/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.088476102 seconds)
    (222/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.092868634 seconds)
    (223/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067975549 seconds)
    (224/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067003771 seconds)
    (225/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127010275 seconds)
    (226/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.16611796 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.087492032 seconds)
    (228/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.115826794 seconds)
    (229/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.086815114 seconds)
    (230/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.100493278 seconds)
    (231/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.115583522 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.184987425 seconds)
    (233/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067893948 seconds)
    (234/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.090895268 seconds)
    (235/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.06779522 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087441777 seconds)
    (237/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117092729 seconds)
    (238/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.067369824 seconds)
    (239/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.107142179 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.086757729 seconds)
    (241/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.118973447 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093944112 seconds)
    (243/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.11143145 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.086858162 seconds)
    (245/286) benchmarking ("sort", Float32, true)...
    done (took 0.23210686 seconds)
    (246/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.09015217 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096191867 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111028926 seconds)
    (249/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067724955 seconds)
    (250/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.077639148 seconds)
    (251/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.092932669 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067423137 seconds)
    (253/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.118883137 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.094460815 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.111093796 seconds)
    (256/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100920581 seconds)
    (257/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.108724512 seconds)
    (258/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.095318566 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.118546589 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086461412 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122903662 seconds)
    (262/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221525074 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109404681 seconds)
    (264/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087738254 seconds)
    (265/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.123425807 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095068732 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091927362 seconds)
    (268/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.094108117 seconds)
    (269/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113288907 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067989627 seconds)
    (271/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078422133 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.117328625 seconds)
    (273/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.157740265 seconds)
    (274/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.096668386 seconds)
    (275/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.113040101 seconds)
    (276/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06844867 seconds)
    (277/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.112654581 seconds)
    (278/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.112113039 seconds)
    (279/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.112078122 seconds)
    (280/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.086957453 seconds)
    (281/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113059977 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093783824 seconds)
    (283/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.154450962 seconds)
    (284/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.08734789 seconds)
    (285/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091718544 seconds)
    (286/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.067479955 seconds)
  done (took 36.198913767 seconds)
done (took 37.089877004 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104638028 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148942878 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09719716 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136407399 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124398198 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091361823 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119594824 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.098018213 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123430905 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126294738 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098519277 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094367874 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096606111 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120925452 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0967306 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.138872524 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123716246 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094262194 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119298276 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085558364 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118859709 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086201436 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.111960975 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070178107 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.121803198 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093297278 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116727561 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120405398 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088018273 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110482317 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092433 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117530079 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08649863 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123878737 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093968572 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118999175 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097033011 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121300754 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112635138 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087030034 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118163553 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086030547 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117481147 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.09525742 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116072185 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.09291664 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.11949609 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.100147884 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139881311 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115291934 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095001961 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122019818 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097312699 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117687732 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.091764837 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119269737 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.092114114 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139721655 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119991222 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092268141 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.118288835 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095314067 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.116899115 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094950886 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119265598 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121820567 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098240356 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.11676274 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.09720724 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.11724648 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087168385 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119315173 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089937552 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110106633 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096033047 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122813969 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110163639 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092946607 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118180618 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092202342 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110396446 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089512856 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11273673 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093436057 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113537114 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070329037 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.11489533 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093373313 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110496468 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.096151182 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117150909 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094067859 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113503414 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099079197 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111272398 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.09310192 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112501267 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08776041 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113886819 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091355951 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111102079 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.0900225 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120956132 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.113190057 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093092581 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123647011 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.087765271 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117536425 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087339549 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111319442 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102871942 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122201895 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086947909 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116735266 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085944144 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.118988831 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086829173 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111086686 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.110505227 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.08745266 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.11767331 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087455532 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114198007 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095177258 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.126368717 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087728431 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115680262 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090660574 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110821552 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093344047 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112513785 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08762186 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113611892 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079132769 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113923849 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088055511 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119156368 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090153204 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120718722 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089755863 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120787512 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.09239406 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.117250029 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117106068 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087696985 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074964697 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116999128 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090195019 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.11409142 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087511496 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113789318 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.087835422 seconds)
done (took 16.996512815 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.090728156 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184603233 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151572333 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142574382 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107901589 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11304265 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.122354444 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119259236 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113557679 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143780668 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110759778 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.131976765 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148927288 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086862438 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.112694683 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091940924 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113650975 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102867015 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146554861 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133190696 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165381825 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086768651 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147505097 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135322245 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121229814 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114634127 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112505493 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091720939 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115711533 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103488791 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132495816 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11526784 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088689214 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134576985 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105384643 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120526987 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088247104 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119585057 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112847528 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.087925305 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14209113 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134260178 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09333098 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118609921 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092096374 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1155043 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.090162414 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121283888 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.099044377 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.116881954 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127095726 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157235776 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091908785 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123097406 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087046265 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123087045 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121924941 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091129834 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113050073 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090486797 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112958162 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.092111544 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127452241 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142481869 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092647668 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122293875 seconds)
  done (took 8.649304335 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.108033724 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140440904 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.106343933 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.130923404 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111774582 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088709713 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112866775 seconds)
  done (took 1.749690195 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090850305 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.13527182 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111770857 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136500975 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133092599 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.11229557 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124297849 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.089493946 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13324221 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.090150069 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134395669 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151128238 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090560461 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121786441 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.139148985 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088538596 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.13827795 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089001172 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118052755 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.113751594 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117218947 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136493786 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091982451 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113886633 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103923542 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114404657 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.16395641 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095503822 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115232118 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092830005 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112203022 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.152605883 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.104139247 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125528327 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089638336 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.131233197 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128673931 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087837734 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.126868469 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094579273 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127685633 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.090186527 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116051906 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.087934919 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119814436 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.099791114 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.119038395 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.132037349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092830028 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134638124 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089635943 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127725506 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089971166 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118761071 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.091003934 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119607545 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.098964086 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114565289 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134190211 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090601697 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131843719 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.106228132 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128338336 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130694837 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092522141 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128220824 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103738428 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118004612 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091735969 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118243534 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.106350495 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.112667631 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116416448 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100260711 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116212784 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112699298 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138521797 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091315123 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125299057 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114646864 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090426097 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11474893 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112679228 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118652044 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089825747 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.118048073 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092862315 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113685198 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.089411639 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.118704441 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088182637 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116268519 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.09284546 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115099206 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092505591 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.132460395 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115778872 seconds)
  done (took 11.887314445 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092274418 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11504748 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091840074 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115177779 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091403925 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.1162253 seconds)
  done (took 1.578739819 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119850904 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118561761 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104518139 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121146027 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156595442 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.104898081 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130665641 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.12471697 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.109455593 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.12734635 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130090461 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105536424 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135911113 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.122443778 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104325833 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121073779 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104054857 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125149822 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127778707 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097149655 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138029956 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121704509 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097848328 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132576582 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118588471 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096929936 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126725398 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104045764 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128319132 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123936549 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095873769 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118657789 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095726967 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123768872 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130777374 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09640092 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121481161 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.120100282 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100973145 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118586885 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.105773774 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122355203 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128373 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094926579 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124999637 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12174227 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094734375 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12652045 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.104270498 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119672953 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123258441 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096456375 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.120030069 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093913245 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.12354022 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124311106 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094899798 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130498809 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122248354 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.097377369 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118656273 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.0936879 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124648276 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118614878 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105183874 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120283079 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121565707 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097459997 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123233906 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096402842 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119974769 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093811419 seconds)
  done (took 9.267979151 seconds)
done (took 34.084049377 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.692759702 seconds)
  done (took 1.644571867 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815419703 seconds)
  done (took 1.772099448 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.817016592 seconds)
  done (took 17.813687157 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.497555171 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.578256885 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.998345715 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17994415 seconds)
  done (took 3.218385121 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.940709104 seconds)
  done (took 1.930464565 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.285629414 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.235426262 seconds)
  done (took 1.492297545 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.775870732 seconds)
  done (took 1.76043323 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.362479581 seconds)
  done (took 2.3328808 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.329752577 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.183994719 seconds)
  done (took 1.496533313 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551374692 seconds)
  done (took 1.528850954 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.960786232 seconds)
  done (took 10.940802638 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.26960302 seconds)
  done (took 1.259898903 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304790575 seconds)
  done (took 1.282624503 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.468510591 seconds)
  done (took 4.44855581 seconds)
done (took 53.89227486 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100769069 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128482639 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101658992 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124652972 seconds)
  done (took 1.4265181 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102663058 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121543473 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101640837 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12085112 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.127425703 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096474533 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12373876 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101926384 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121286478 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.097056686 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121933333 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120301704 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099164183 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123821267 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094510396 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125019599 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.100025223 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121606217 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125493719 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097246312 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119559195 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098795247 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125589568 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094836993 seconds)
  done (took 3.666404859 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.103206002 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11983054 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096627452 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.11889057 seconds)
  done (took 1.432005487 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101810137 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.132648657 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106514734 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125990268 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.132760131 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106274519 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.11814904 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092935912 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121132681 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099881829 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116326695 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140101385 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107573266 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125238451 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.102997737 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.115603931 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091128523 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.13207954 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125567312 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.10161866 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.118918988 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100564788 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.115939147 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.110441471 seconds)
  done (took 3.729199256 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.172610598 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127668894 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140106168 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096252755 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161229013 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141422708 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088670478 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142086837 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088642272 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132338487 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118713281 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134530873 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.1309766 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.089096587 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114603823 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.088717011 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12912038 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129736753 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091752739 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129053816 seconds)
  done (took 3.443594794 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100406913 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118197324 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088947671 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116834085 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100256008 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121410822 seconds)
  done (took 1.638425758 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093232793 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115313306 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090418989 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11514834 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094432525 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115974879 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089014267 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115686557 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089731232 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115304433 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089502775 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113730322 seconds)
  done (took 2.23034308 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.509289131 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119257062 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120787307 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089293227 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122239447 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.089424239 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.129784195 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093335971 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142015629 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089470649 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116170203 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094527693 seconds)
  done (took 2.705994416 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241007842 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126660937 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28510719 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.368551281 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157817187 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16469771 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.277736607 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162052777 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.199079473 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.15114618 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231759123 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199750048 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152922297 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193077681 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138406923 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145809945 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191248791 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.251846421 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153053714 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212822199 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.208262533 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168210489 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180510467 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153406414 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112387831 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193783761 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.095866392 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130587859 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235044456 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181008068 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192668644 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162645103 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148490718 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238553877 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252015906 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197991087 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.279695822 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134882859 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.167213672 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.14355334 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266140185 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139288186 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236121206 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156463883 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105524676 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221918214 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166554418 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.178014737 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146469931 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139721581 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199898458 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244727436 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.194501311 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138802575 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300986357 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149252857 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.159743161 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190767458 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25381071 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227971035 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190374021 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.121056102 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.189221597 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191786743 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212904009 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.154036048 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183659221 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148650303 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185031952 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.190227748 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167670296 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206219257 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.180565909 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140504901 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172909976 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174622769 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174478606 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262379069 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185931313 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.123440049 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171198419 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149741379 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131828557 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168581392 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126555491 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215335392 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144579226 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.163996086 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209075514 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160573686 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162079563 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22236657 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.184597198 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149472951 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084490332 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154121596 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156016329 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178304063 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141008332 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160348022 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15758455 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131610234 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171733313 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097406281 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21283692 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092478151 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17422651 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2112531 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100850131 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161991058 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154655558 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151674088 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178282251 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199517598 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141096837 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134388748 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211508554 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180782016 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141143356 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178590472 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.231616644 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.1185751 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150994474 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228842616 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245360472 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113340029 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230283204 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153715314 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108202874 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.134570357 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182297091 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156336998 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162610401 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134007023 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.184768721 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234471718 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.099633133 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140287759 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197673595 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134167298 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132777239 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156136694 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148027641 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.11152516 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.144165038 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.145956838 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176619015 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180939956 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15542371 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167954922 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150701153 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253401749 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141020501 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151417543 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123231239 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.122367414 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193796595 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.226842085 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.104894518 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234159555 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.173083517 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225611159 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170515936 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107823435 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176814034 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130988587 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120801542 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194492459 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168293515 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16262463 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196627934 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224374324 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.1809274 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.211490233 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167213675 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176196191 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.165454317 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156910159 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.111490627 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162398677 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159554998 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.12465567 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.140446901 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.107964285 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149801523 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142980528 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134365607 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198698722 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171142726 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.216994265 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160085193 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149413505 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180719196 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.101522356 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204393169 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.180384242 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146646779 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.20014848 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194905525 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21479989 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117560732 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23029401 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120894248 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100095818 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142433834 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172782404 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135008239 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108583726 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163380993 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.208162121 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183232609 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173287333 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232355551 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178130315 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192638396 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095651433 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.171322855 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185948303 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205054269 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.156834299 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139579308 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.152469254 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179306209 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156222175 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257729547 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169951598 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176063414 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234374819 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.124949253 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132623095 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151163529 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179017757 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154243827 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177522133 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148038097 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139882786 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162085456 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.102754122 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189169402 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186968176 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164883846 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188100556 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150389024 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213878042 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101251698 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162263803 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160727874 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167802848 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109132824 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177082684 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202808064 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148169382 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166757714 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217858416 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103980568 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.308432213 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236463712 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196150027 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139571968 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15589029 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162389543 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163834881 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172471657 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180248608 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159218691 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189328021 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16073531 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136859578 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13941671 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123111143 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15263818 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133644965 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149877111 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177674699 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.139684636 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189767126 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155420567 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16145415 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172819845 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151946359 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145677993 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12289155 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245733658 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184820074 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.242768703 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151122939 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180468202 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208273792 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127520001 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131711831 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107331318 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179536921 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136941976 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192551837 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.215135181 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200708833 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208735465 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180881232 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139742326 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093922703 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159364328 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171739147 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23032851 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148907852 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.120835293 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232179639 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.110223652 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133106881 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167482036 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.290527983 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145110389 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223712036 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080736741 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283083426 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125781414 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105905251 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164011048 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237085874 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137262685 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.152676089 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168094386 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161713701 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16374965 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150459603 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218255983 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212541123 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22877581 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186144409 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.105267627 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158025457 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204144501 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195421447 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157082671 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.139643952 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20790888 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196389507 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.223266168 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114840404 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197075988 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168943759 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158034304 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188034783 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134957498 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21008932 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13606611 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193325055 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153632537 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139482288 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177687638 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.215571633 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11464491 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215223404 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184683186 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135966496 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106874488 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19468711 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179347405 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154266486 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101052949 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210655594 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098925908 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220118712 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235776127 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134487249 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15665859 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147117473 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109289317 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154764627 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159075335 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139990424 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164523067 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204921358 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13596609 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191034381 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230740543 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172954903 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172979121 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14696767 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693689799 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131137894 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196951173 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149617397 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207765871 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152378356 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173894214 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160905013 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170063744 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225105822 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162776666 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234519803 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194697271 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179910645 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133494252 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159224711 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157157853 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145339432 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153444356 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171072824 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161867617 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.145796351 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180601006 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165260298 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135285756 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113559338 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228218246 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121030264 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215030808 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182200539 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110466964 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202417373 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189069782 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134005803 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.1827821 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237423527 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114537336 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149942603 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135400708 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.152648978 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26337018 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097342716 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219954701 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186096905 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160241197 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169764442 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147760758 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192971933 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158023304 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21448541 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115906263 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159225814 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159133053 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139136955 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131331582 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156481246 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169565679 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.122066511 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188843804 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139691626 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195498737 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.125405734 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145845726 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285574538 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178926431 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246909549 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108774956 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137640218 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16533567 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15218014 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177783467 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179171901 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137413365 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136380045 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136488453 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129460657 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11217043 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157111546 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192060271 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191968998 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208425424 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.136218353 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.276884542 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113891079 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156277126 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.11485417 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105170493 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149915106 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147223534 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156258302 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194541789 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.262264136 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147868937 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132268873 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122246957 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.127813012 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136135775 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164297362 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166352551 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181084535 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144965152 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.081753141 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156939587 seconds)
  done (took 82.893187302 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.169252662 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.133059463 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146876783 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202158601 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176474406 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270026096 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210475936 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.252478798 seconds)
  done (took 2.648872127 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.098776077 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.146300128 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156920784 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133287569 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091918777 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119632705 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.343973204 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132557284 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.116793696 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121739301 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174485739 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094881675 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.549196827 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091389901 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120706192 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.108697272 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092144593 seconds)
  done (took 3.771361305 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.225150446 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.497756222 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.00925328 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.195131581 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.160754104 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.118320766 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.704097408 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095225858 seconds)
  done (took 12.097086445 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.118158715 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.136957756 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123762679 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.153425427 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.14077356 seconds)
  done (took 1.772403665 seconds)
done (took 124.432541732 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.101418954 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128325286 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098371271 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131191666 seconds)
  done (took 1.540886593 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09845897 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071653881 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.100602121 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075024156 seconds)
  done (took 1.435765372 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.190296704 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.167448447 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.384081099 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072755486 seconds)
  done (took 1.580069873 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.119599012 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132208161 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104994051 seconds)
  done (took 1.458605363 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109926658 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129321909 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103232154 seconds)
  done (took 1.439263644 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108875628 seconds)
  done (took 1.207764208 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.110798229 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137981883 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.10970181 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136549159 seconds)
  done (took 1.587829078 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.101462799 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127456099 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109638799 seconds)
  done (took 1.433049394 seconds)
done (took 13.133436956 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.10941259 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.419133673 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412340074 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.110538689 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721240502 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380316456 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.032403174 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146788755 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165412577 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093307268 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139056194 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67161097 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.024988554 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.373415734 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984090261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.371763472 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.685976184 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121127844 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092120725 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121864091 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.01583518 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092168904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121827172 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092463155 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704990766 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.397254089 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122636128 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.371405988 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093464017 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125884735 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38235533 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.12308137 seconds)
  done (took 16.907256002 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09948208 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173383204 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098934293 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.122956017 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123821985 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095825345 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124413283 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093898513 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179056239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122427362 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110427892 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121413565 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125989969 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094974127 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141400178 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095443815 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.124698129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092797228 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122425585 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094666888 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140181896 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120509974 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09442909 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.120796014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09434441 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136388923 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094887893 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121896448 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120717114 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099372276 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127192974 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09540479 seconds)
  done (took 4.819795492 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.146286654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.182976958 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.128575917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126763675 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170090593 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124140732 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199632853 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118083172 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183475988 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122955778 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139864035 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093745995 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157346269 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122230488 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115054139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121146691 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.09730066 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122183073 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092619236 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123358722 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.14001457 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093296456 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.121982671 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093394786 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123467626 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.109599121 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124125032 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120988837 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094917517 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126915425 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099433893 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124464471 seconds)
  done (took 5.165393997 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.103503268 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126253152 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109873776 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138595704 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094923174 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125396467 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097977412 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124996701 seconds)
  done (took 2.02278435 seconds)
done (took 30.014934571 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115104147 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12761982 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107446421 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135099712 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.104017356 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.131984863 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092436658 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134206541 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.134160734 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10283919 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.136915521 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092892358 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.12276205 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092275812 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.134932322 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098276643 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132799044 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102773689 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134671102 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132261827 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094483511 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133306647 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103200785 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132854497 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.10461642 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133456022 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137444121 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.10043486 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122753414 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095088021 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124028944 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104045444 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.12484778 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105674602 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127312917 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098389279 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12370919 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095116704 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.132878594 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133380933 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101298362 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.13301106 seconds)
  done (took 6.021530525 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112356809 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139603711 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105937107 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081630426 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.1173473 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081050547 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.13730524 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079721889 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.109997978 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108180899 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074626375 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106441442 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.07916991 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101088456 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077522379 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075902981 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108376073 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076015478 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076391386 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105532137 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080351323 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073343596 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108605134 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079345309 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074868663 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.110116289 seconds)
  done (took 3.587743199 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.104495623 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134400108 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113608939 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184098433 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160740507 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099860925 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132930784 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139902593 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109083639 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120616978 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096961459 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.149447089 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111055021 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130277752 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.093773271 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.138713719 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136834899 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094416547 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128795002 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112817538 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139714081 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.104461117 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141451254 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13353896 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093261514 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123902261 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097117564 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135474819 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098402073 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131096845 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.097046301 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125220528 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12353688 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104921559 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.125943514 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094533556 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14190222 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103318189 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.131070213 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.121828443 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101077814 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121845527 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114257656 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.161367875 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091463739 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129439785 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.124384213 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104807512 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.120873997 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111931818 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131743301 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09245364 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125393046 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09187356 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122056106 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106809003 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124200256 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095513442 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132375122 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.127710385 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106216745 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125461851 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.10909374 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122789671 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.100638788 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.121648393 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.093681548 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.121258093 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.143768546 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.095844473 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163110395 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094114899 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124925612 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102308879 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131009354 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128932018 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094300551 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137880499 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102708217 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126080144 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102676373 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125872991 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095868683 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.140195504 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.123583358 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095614948 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.122581039 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.100533797 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124330164 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094761947 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137763321 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092349205 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.12597585 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.111230534 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123196606 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123234292 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.100927071 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126277497 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093532569 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136079157 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.099000976 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123376873 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.13245967 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093673277 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124874536 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104374979 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.12761658 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092993037 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.128416155 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099823692 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123465148 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.09482781 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126230633 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.095695686 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133091437 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129647094 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.098668819 seconds)
  done (took 14.880093495 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.232746678 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216656567 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207521382 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.293203676 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136319757 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.115544583 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.212153943 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156261514 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124203258 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16089958 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.172216937 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.182324531 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139750952 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.212749421 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.170846934 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093740414 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143672317 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135260033 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.246768661 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.259826029 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.145272969 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102201854 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.165391259 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16140501 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138311041 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133181001 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111034565 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.135665892 seconds)
  done (took 5.833492078 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.114470476 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156221085 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098750247 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145319583 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150166729 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093697589 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128922828 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095379298 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135947344 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136191642 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.094292416 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129992476 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.101315668 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133265229 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123640326 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103498004 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.132758889 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095113418 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126586981 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097531635 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.134184684 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.102909584 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.127654311 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.121926966 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104123093 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122338708 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086835472 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143217869 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122742423 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116349569 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121528061 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102938108 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137065141 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.094652335 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123343494 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095451719 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.126307126 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095519427 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125826246 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092302268 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123103725 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078405172 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122864744 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137395601 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.100757473 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080685069 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131019431 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129652878 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095891124 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.12140074 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097904612 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126922141 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097767323 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13115746 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.097544456 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.125162871 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096589753 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.11652363 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100793628 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125841944 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085077299 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122126942 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099821913 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119137426 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102533967 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129018001 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09253388 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126733808 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.0987129 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129855498 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096101151 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130989407 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.091375344 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.12582106 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.09655328 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129550363 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.125838038 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.093026055 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.122364866 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.095160013 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075229743 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123558523 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074577087 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126665477 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092211576 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123200955 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095911336 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131154715 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139423485 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096032342 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132777251 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094689938 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123742529 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.097581813 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113383686 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096734184 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140804614 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142036566 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094887459 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121792505 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108093582 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126202184 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09333596 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106479578 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10294478 seconds)
  done (took 13.042199772 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.134810948 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.15454943 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126016337 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.112306105 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.157030242 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157861094 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.101023862 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130728132 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096571993 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.141922287 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094298182 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132487179 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.094628298 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137845122 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157234847 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104322483 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126182577 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107630326 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129399022 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16973409 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112613798 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143349066 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.111002578 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125450394 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128791741 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.111017301 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161448756 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108120216 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.137012216 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.14329829 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108351952 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161605376 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.14326556 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098950265 seconds)
  done (took 5.502682034 seconds)
done (took 49.9676914 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.217667993 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.43882693 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.201497155 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.169628827 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.247603394 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.2258602 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.208567413 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.211672656 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.768872514 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198718028 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.438241555 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.764810338 seconds)
done (took 60.219726749 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.238820944 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.347931925 seconds)
    (2/2) benchmarking "String"...
    done (took 1.51223195 seconds)
  done (took 3.982350137 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.795213062 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.136858234 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.456512212 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.191946308 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194046524 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.483748341 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.912395284 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.561495288 seconds)
  done (took 28.058084999 seconds)
done (took 42.203527413 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.19379394 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.251843213 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.224879587 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.172301546 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.304643033 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.235279717 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.46875186 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.443009231 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.204463761 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.172677168 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.219005066 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.194318758 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.211303274 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.511728365 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.206169437 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.192110697 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.241166761 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.696882977 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.598188868 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.195025575 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.212173702 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.196244287 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.217028061 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.208272975 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.239385603 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.194825396 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.208318214 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.199697698 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.710442429 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.197563965 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.205514959 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.648774308 seconds)
  done (took 191.494832239 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.19541749 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.349050723 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.373761649 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.232475491 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.62383311 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.394288408 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.326112944 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.70050531 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.213469582 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.211557025 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.442635344 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.194705533 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.515290173 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.16615501 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.235799587 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.259687613 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.411562113 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.501164848 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.244920581 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.324087593 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.19626032 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.440897815 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.50971738 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.381737488 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.25344264 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.211079565 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.19789761 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.240292052 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.404779375 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.34699103 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.218911612 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.237572108 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.795518958 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.046491899 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.210155602 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.213695405 seconds)
  done (took 149.948481797 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.19116718 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.192791239 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.193910512 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.222274983 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.191414368 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.735123157 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.75277605 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.69612136 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.552848131 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.516974734 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.433948358 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.193927678 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.286152553 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.204513383 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.19474308 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.209414718 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.236203777 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.192265221 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.192950401 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.751459965 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.20798135 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.275111836 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.380681534 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.208943967 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.226207105 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.585476279 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.191983591 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.226518528 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.519783949 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.240245563 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.195389673 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.557752766 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.216015957 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.305833798 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.194323552 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.225946553 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.194714793 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.474646596 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.194719238 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.193071028 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.198682703 seconds)
    (42/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.195096112 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.857061857 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.198547827 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.738214401 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.194974013 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.119724925 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.194487231 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.196514194 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.40135022 seconds)
    (51/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.200391671 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.830698191 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.210877519 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.192948586 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.19693745 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.195193725 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.195745075 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.224951616 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.406109166 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.288442758 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.209954642 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.195798916 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.224596136 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.194208986 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.242455384 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208746881 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.181021461 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.266541165 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.305385275 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.744112683 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.198882531 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.295506912 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.315926563 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.197022202 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.197724529 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201003496 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.199159491 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.306523428 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.196440282 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.582673527 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.365975113 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.213151553 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.475415955 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.295414967 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.19772302 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.581205825 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.199355913 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.198872449 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.918515641 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.292475992 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.195898169 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.199341964 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201205872 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.585752286 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.743871632 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.427934614 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.199717388 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.634450736 seconds)
    (99/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.201237472 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.6044156 seconds)
    (101/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.720514645 seconds)
    (102/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.86752295 seconds)
    (103/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.202935404 seconds)
    (104/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312366182 seconds)
    (105/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.368745033 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.212577936 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.202184491 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.200197821 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.476702518 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.202432572 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260130713 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.197839512 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.201081442 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.597470763 seconds)
  done (took 363.540602089 seconds)
done (took 706.107689251 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.788739819 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.782734766 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.890493899 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.776540673 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.737755862 seconds)
  done (took 10.099973563 seconds)
done (took 11.224251354 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384114881 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.379965252 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.25695722 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.382945998 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.231117318 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.398945825 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.357918376 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.221308948 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.301187942 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.275237783 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.299007518 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.248002272 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.236017058 seconds)
  done (took 18.097155877 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.516208424 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.511423148 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264211031 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520619006 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.241109977 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519660369 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.407319826 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.413253169 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.420781632 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.232454105 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217994182 seconds)
  done (took 16.392371557 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.560951339 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.52206943 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.266407047 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.542711487 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.242184113 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.539381234 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403626289 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.416827124 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.416569643 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.235725985 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217978963 seconds)
  done (took 16.491880029 seconds)
done (took 52.110462247 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.212267566 seconds)
  done (took 2.338610581 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.246107945 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.408977546 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.227061466 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.221226233 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.21300473 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21386329 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.22076965 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.212146381 seconds)
  done (took 11.090833611 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.208694235 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.211329147 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.211116237 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.213513892 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.212982158 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.211472495 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21393741 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21184937 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.212046158 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.211032352 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.213019641 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.213433909 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.210997741 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.21346553 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.211516651 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.212957884 seconds)
  done (took 20.520566123 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.212968743 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.210770568 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.209184652 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.210916127 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.210400287 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.212253778 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.213386609 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.210998623 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.211100517 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.210808145 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.212490305 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.211479646 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.212913355 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.21153141 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.211804976 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.213587906 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.212042984 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.211675888 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.216629139 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.213361976 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.212564851 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.214186829 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.212771428 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.213330671 seconds)
  done (took 30.22344631 seconds)
done (took 65.300384875 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.812823533 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.815413243 seconds)
  done (took 6.756550658 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.214672776 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.214735906 seconds)
  done (took 3.561847006 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.215041069 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.214444144 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.215383109 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.213773447 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.216123831 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.216412859 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.215154815 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.214772936 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.215991099 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.214840179 seconds)
  done (took 13.28252362 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.215200709 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.216356303 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.212989971 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.215954451 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.215716577 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.214390055 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.216447282 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.215844837 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.21764291 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.214590368 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.216707504 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.214431841 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.21481521 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.214192942 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.218902331 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217084244 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.21505739 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.215942389 seconds)
  done (took 23.013735857 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.21825973 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.219670363 seconds)
  done (took 3.570617856 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.216979243 seconds)
    (2/7) benchmarking "second"...
    done (took 1.21638723 seconds)
    (3/7) benchmarking "month"...
    done (took 1.217303085 seconds)
    (4/7) benchmarking "year"...
    done (took 1.216598371 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.216729575 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.216980791 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.216469414 seconds)
  done (took 9.650313286 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.21997701 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.401183557 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.482928352 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.825118655 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.220565459 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.223757406 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.07827243 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.223368256 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.224862042 seconds)
  done (took 14.033738725 seconds)
done (took 75.000938651 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.239993326 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.222993724 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.513925713 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.215870728 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.227186077 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.555981806 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.231789356 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.336964656 seconds)
done (took 37.680887777 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.235776804 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.192352406 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.915703921 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.199661662 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.25355752 seconds)
  done (took 18.695936168 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.215868449 seconds)
    (2/2) benchmarking "read"...
    done (took 1.544410392 seconds)
  done (took 4.894556822 seconds)
done (took 30.961121574 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.218068699 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.221997209 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.21887067 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.223099776 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.220258224 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.221721331 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.219426901 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.218278037 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222474754 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.219896756 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.222127321 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.221309045 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222522587 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221448208 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.219406752 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22170387 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.218898649 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220268002 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.222465427 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.220755567 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221692852 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.219845211 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.219541545 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.222206031 seconds)
  done (took 30.432619683 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.223099218 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.221379222 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.223023051 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.222228371 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.220368759 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.222521106 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223632179 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220774549 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.222112639 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.222659608 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220837014 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.22109013 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.223605586 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221415439 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223039745 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.220903672 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.223657729 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.221505696 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222880543 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.222006557 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.224778181 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221465105 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.220481716 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222882605 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.221029876 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.222258886 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224687455 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222010601 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225528129 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222436068 seconds)
  done (took 37.807573105 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.228925452 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.232787932 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.224200622 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224913592 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224244673 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.225040042 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.224806784 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224774587 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.225068392 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.224400571 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224923023 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224443972 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225051089 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.22600221 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.225336913 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225647315 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226275695 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.223580423 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.224972101 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225449048 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.226240895 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226268648 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.226770148 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224549028 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225332425 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224935218 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.227151736 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.225394512 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.225221445 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.224887994 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.226373493 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.226613991 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226886935 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225565896 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.226619478 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225874157 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.230600235 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.233630748 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.225761367 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.227411839 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.227162302 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226448538 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226555464 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226426014 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.226529159 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.227689667 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22670399 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.227273442 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.2272553 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.227135505 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.228153026 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.227835771 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226727236 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227476204 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.228012991 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.228320996 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.227424314 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.228472811 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.228028219 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.226292249 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.22920106 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.226825889 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.22858089 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228716175 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228405481 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.229735326 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.230079486 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.230036745 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.22869157 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228819604 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228544073 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.229196003 seconds)
  done (took 89.476056884 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.229049437 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.226788312 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225035728 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226185575 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225335302 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228035937 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226393388 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228903089 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225911318 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229308063 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230174181 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.22750951 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227723325 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.231072887 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229087118 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.227468229 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228626446 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226692484 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229072945 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230810744 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228798041 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.228625754 seconds)
  done (took 28.159145093 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.230200784 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.232324665 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227274176 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231311247 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.229783981 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.232102502 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.22981064 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233595827 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230156305 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229344811 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230142151 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231766664 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.230303171 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228348079 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229775926 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229033164 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.231295633 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.230401699 seconds)
  done (took 23.291797607 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.229560291 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228698626 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.231005955 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228191957 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228952172 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230614536 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229546943 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.230517565 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.231671461 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.229596487 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231892957 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232144522 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.233104555 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.230307596 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232692565 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229353876 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.232746089 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229597607 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232303146 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229092502 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229031844 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.231197161 seconds)
  done (took 28.217248135 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232849198 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.232352011 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.230452334 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.230985755 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.230989091 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.233170677 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.233503895 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.230922689 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.23362176 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.233007085 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232067807 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.234394949 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.233328935 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.232486307 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.231896031 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231790711 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.233840722 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.232448643 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232576716 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.231221351 seconds)
  done (took 25.793427286 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.233541147 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.233570361 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.233820513 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234002496 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.23555814 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.235028294 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235126384 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.234908674 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.234410412 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.234288414 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234855609 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.23484337 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235229465 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.23496969 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.234135414 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234443828 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.233339219 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235289685 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235490512 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.23468536 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.234844969 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.236137185 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235466866 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.236541222 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.235004831 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235214722 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.23608048 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.235530838 seconds)
  done (took 35.724308993 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235916145 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235857935 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233275337 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.233006065 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.233704284 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.234429081 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.239567902 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.233448115 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.23617309 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232903224 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.236372189 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.235562921 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.23772582 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.236982969 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240743916 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236502253 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234206895 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232297138 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.23139415 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231721526 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235725384 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.237056138 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.237033102 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.231019715 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.230118085 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.233754287 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.23178975 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.231990636 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.234403657 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.231027951 seconds)
  done (took 38.185905122 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.253139607 seconds)
    (2/2) benchmarking "in"...
    done (took 1.251047578 seconds)
  done (took 3.651112879 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.231701147 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.234189569 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.234173264 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.230931592 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234580544 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235222067 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.234397173 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.232410044 seconds)
  done (took 11.014604271 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.234778827 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.232970402 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.233808083 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.237355161 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.235426513 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.234688693 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240363301 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.252146865 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.234294161 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.234255923 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.241292856 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.24126427 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.237622878 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.233609648 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.233175338 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234726404 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.233162846 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.233862436 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.236260928 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.238707397 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.236565445 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23722202 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.237479878 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.23254858 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.236598476 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.249399126 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.256373548 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.236520792 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.235507019 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.238454761 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.234803857 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.23293022 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.235697965 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.235970133 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.237793236 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238645322 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.248125587 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.25371833 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.242381128 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.255226053 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.238626405 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.234783635 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.23764512 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.237933643 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.24079976 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.23908596 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239157628 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.237211934 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.237648596 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.240808113 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.246168844 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.237952591 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.236779932 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24057399 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.238060105 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.244835413 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.25637022 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.240641472 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.248863881 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.250578772 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.268938857 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.260572655 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.241053335 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.239757481 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.248863474 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.262142459 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.246552233 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.253493417 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.238442663 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.23988677 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.246256847 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.26795644 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.26120823 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.240017929 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.240023733 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.240038509 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240012074 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241165662 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.24577487 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.259513355 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.239679027 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242696264 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.249503452 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264673271 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.240947023 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.238614223 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.239055788 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.239068179 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.239455316 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.250451929 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.256340782 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.24005437 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.239092352 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.240025252 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.239697277 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.239538807 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.239225353 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238508471 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.237597475 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.240131093 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.239681357 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.243452831 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250203319 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239582069 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.241174426 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.245493742 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.26044843 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.23991397 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.246057243 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.240934114 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.239978537 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.242617591 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.24593591 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239573069 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245194208 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.250589152 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.241262003 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.241149207 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.240322602 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.244319983 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25051368 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.269373793 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.242090134 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.242676391 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.246722958 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.253242954 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.241208761 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.244682062 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.24232657 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240175841 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.239936364 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.243393082 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.243531783 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.242591695 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.241572925 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241284651 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.241588941 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.24283742 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.243189773 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.243167104 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.243678667 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.243339813 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.242701443 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.244655035 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.242594165 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.244478782 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.247877403 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.260974329 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.243705915 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.243935921 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.242366655 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24503555 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.244807648 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.242761205 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.243950846 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.246009666 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.243950995 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.243650608 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245563811 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.246141448 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245039553 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.245591801 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249593523 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246373883 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.249153738 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.244353148 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.243624974 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.246851796 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.245378939 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.243921357 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.246338986 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.24455483 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.247896648 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.254696135 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.245781706 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.245071887 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.246505326 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.245006922 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245479441 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.24560623 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.247103371 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.25429197 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.244654543 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.252809622 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.263779183 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.245451871 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.246706731 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.245360009 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.245401539 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.246163976 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.24806862 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.255708478 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.258673293 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.269474643 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.247247394 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.252565777 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.247232253 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.250983821 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.248679478 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.246473375 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.248164217 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247181405 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246417735 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247647087 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.246741636 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.246380118 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.244317915 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.249182483 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.246541682 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.246469073 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.24902577 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.246288519 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.247321331 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.246218108 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248215597 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248314753 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.24719108 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245713315 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.247317858 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.247295997 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248669605 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.247655384 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.254795891 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.246181953 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.248993858 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248927301 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.248481373 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248653033 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.249355395 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251749805 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.247755295 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.254851375 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.262769189 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.249551751 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.254530387 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.26285559 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.24790521 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.252694909 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.250407485 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.247767887 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.251706645 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.259857825 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249369855 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249390783 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.248620943 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254418455 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.250690084 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.256942424 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.26744231 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.250075809 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.252710854 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.251779799 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.249286045 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.255919963 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.248532727 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.247315414 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.250969318 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249425242 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.249910228 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249328909 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.24912582 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251389803 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.245654613 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248858252 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.255129889 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.249520835 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.247424227 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.248605333 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.247385245 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.259093246 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.245400935 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246042221 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.244843785 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258510412 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.270822255 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.252852137 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.267374757 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.250409161 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.249169442 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.265661714 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.247242031 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.245412644 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.244799367 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.244298083 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.243368341 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.246942787 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.246511805 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.246821215 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246386689 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.24703434 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.251462307 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.245227865 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.245855736 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248394372 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.245848368 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.247300718 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.244163152 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.24742598 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.246707866 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.247790996 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.244367382 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.248204988 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.250591483 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.26273624 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.246475615 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.2456537 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.246057222 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.247123991 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.247891211 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.247988144 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.247601618 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.254623743 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.248084307 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.254443967 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.247395542 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.253438774 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.247456053 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252757299 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.2548786 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.24502571 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.243308504 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.244798022 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.245818767 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.252157123 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.264157511 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.250460227 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.251972088 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.24558202 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.245392368 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.246769734 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.247027436 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.243142762 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.246867625 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.257513683 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.26508764 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.251305273 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.246364034 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.244831664 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.246122257 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.246077304 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.241458377 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.249609504 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.244889085 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.243496446 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.244869138 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.243237623 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.244030514 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.24275078 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.245743223 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.244844392 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.246671062 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.252462708 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.264103815 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249026853 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.24742776 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.253566494 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264012942 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254953301 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.264087465 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.246831077 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.247285422 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.247058275 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.248946599 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.243860499 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.24641277 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.247758091 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.244875087 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.251048339 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.244760977 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.246292984 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.24454418 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.245298718 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.245993938 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.259242865 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.268221873 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.248370617 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.251759845 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.245153222 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.247384943 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.248354033 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.244316892 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.247193932 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.247173356 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255874037 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.255240976 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.246417399 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.247594851 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247435321 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.247722409 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.251742057 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.247037788 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.246586603 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.246296261 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.246180923 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.246256369 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246378836 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.24847078 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.245907796 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.247997262 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.247143123 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.256054332 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.265148211 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.248746507 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.248298544 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.251123507 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.250160853 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.245588861 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.24881982 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.246517102 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.247252396 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.247938589 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.253485874 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.254098791 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.248647788 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.248454587 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.247313227 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.244903537 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.248888802 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245762714 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.24837085 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.249146919 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.250597507 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.245888814 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.248552478 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.247201325 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.249725808 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.246524612 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.24868353 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.248280742 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.257588775 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245174621 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.244359276 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.247820266 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.249047774 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.247316825 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.249625817 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.255714914 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.273359959 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.258754605 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.257698518 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.254339118 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.248342095 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.25224914 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.257704647 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.249304553 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.253675318 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.250062741 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.250773426 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.248625142 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.252195639 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.250847154 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.256884592 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.266289112 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.247202127 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.260615645 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.268667433 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.248393735 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.251281386 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.254237832 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.249961944 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.248237121 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.251590539 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.251614413 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255735905 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.270191263 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252139241 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.252716102 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.250389608 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.251990438 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.257058308 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253136049 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.251665643 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.249481688 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.251878116 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.253030846 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.252724984 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.247636439 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.251380343 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.251339735 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.254190391 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.258815585 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.251879148 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.254025401 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.251892832 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.251005846 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.253315118 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.253184286 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.248678317 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.247644534 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.253486013 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.250196075 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.253000802 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.255115901 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.249187321 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.251853406 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.254619192 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.252221968 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.253537115 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.261086405 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.261498714 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.249902382 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.249673131 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.250759293 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.255445496 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.253524973 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.25455806 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254490971 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.254299865 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.256064722 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255147069 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.254267732 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.256456027 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.26929877 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.272118725 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253485301 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.253916434 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.255595988 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.255754769 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.25086775 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.255595548 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.256750695 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.257345039 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.26337328 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.255689517 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261073461 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.273818098 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.254939797 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.260221599 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.25683133 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.261697154 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.257876395 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.256082402 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.255563786 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.255702937 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.270696537 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.258064884 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.263918689 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.284036755 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.276050023 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.256780011 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.256610693 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255468738 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.255685946 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.25971066 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.256074184 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.258733685 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.255100176 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.25748009 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.258230924 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.26307076 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.257633481 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.259922265 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.255332559 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.252428409 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.254656469 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.255001995 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.255374419 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.257133698 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.254697819 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.257907383 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.25689481 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.257713546 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.266927527 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.281615559 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.256708868 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.256259615 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.256110208 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.258039673 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.259715829 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.268572922 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.266481915 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.258693392 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.257651795 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.25899787 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.258787795 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.258834516 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.259271636 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.258983349 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.258848209 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.256999881 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.270694033 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.283007908 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.262393019 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.258566564 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.258412734 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.258251213 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.257316392 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.259706135 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.259853761 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.260454724 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.261080219 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.26206919 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.260507126 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.256847843 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.257984966 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.269438004 seconds)
  done (took 745.988614174 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.259721012 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255398881 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.257056427 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.257270923 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.255614779 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.25818618 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258896036 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.256610668 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.258627185 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.255294774 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.259710761 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.25908265 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.257247956 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.260428489 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.258047967 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.260338301 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.258474564 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.259108939 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.25677514 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.259002138 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.256644746 seconds)
  done (took 27.586080877 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.262173113 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.260722461 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.258815742 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.260704281 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.258981684 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.262424592 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.258418886 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.261411359 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.261488706 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.259424119 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.260818782 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.262604477 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.25967675 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.260150832 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.259551809 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.262981361 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.263646021 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.258299124 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.262504478 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.260807309 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.263068308 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.261260713 seconds)
  done (took 28.907768123 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.263024148 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.262593207 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.262036462 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.260193876 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.260124571 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.258162707 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.262145046 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.263949243 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.264669542 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.260474711 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.261933802 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.263491718 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.269391835 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.268948806 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.262821822 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.265973021 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.408987165 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.262537058 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.263297785 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.263065377 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.26132498 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.267579629 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.277603676 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.262213639 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.261698632 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.265402055 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.264641005 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.265384543 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.260887236 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.263651135 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.268883183 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.265253877 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.263727814 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.266537896 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.263828698 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.263601617 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.268230386 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.263753254 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.262357316 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.266243686 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.272468176 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.282943181 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.265498151 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.269563895 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.284358425 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.262306449 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.266904883 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.271409089 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.262224467 seconds)
  done (took 63.319836954 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.266337352 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.262561267 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.261165042 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.265648111 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.26742636 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.262828587 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.265110584 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.266249087 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.262516554 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.263355553 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.265755168 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.261513168 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263829834 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.266983462 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.266078914 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.265065272 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.26394013 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.263990968 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.264525399 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.263860947 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.265059224 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.267212762 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.266908892 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.265612501 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.268103263 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.261217714 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.263580046 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.267010423 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.262121228 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.265942465 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.266855735 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.268731176 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.266695166 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.264726978 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.261286644 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.26693319 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.26744143 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.264104831 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.26560064 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.262834117 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.266608294 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.268201548 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.267816098 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.267941859 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.264978405 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.265993505 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.266224094 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.26686169 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.267018943 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.268938714 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.269039682 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.264546875 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268584966 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.266148034 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.268225 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.268172158 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.26697513 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.267613161 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.270112562 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.267602359 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.266405696 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.269723461 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.267595989 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.269965498 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.26891357 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.267322661 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.267540716 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.267202426 seconds)
  done (took 87.262971989 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.268336102 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.267439841 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.267621437 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.2691221 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.26889488 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.269641659 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.268251981 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.270186458 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.268854307 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.269578156 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.268908739 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.269416736 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.268975527 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.270777209 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269253811 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.270663116 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.268272194 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.271115381 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266532616 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.267764379 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.266204889 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268745309 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.269583486 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.269217587 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.270866565 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.270600528 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.271379406 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270121793 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.270025277 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.271568767 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.270256694 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.270416239 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.271679133 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.269953714 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.271794434 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.271522324 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271563448 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.269641077 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.272105527 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.271854415 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.270782276 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.271814734 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.271104762 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.268532601 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.269190335 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.268541653 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.270150561 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.270863799 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.269506345 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.268229276 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.273625845 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.270913446 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.272290678 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.271711705 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.270734107 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.271987516 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.274032993 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.269705873 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.272350575 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.271609273 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.272768661 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.271609876 seconds)
  done (took 79.930257653 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.275786803 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.273774377 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.268663109 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.270633556 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.272199097 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.271062457 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.272562141 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.272846479 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.272188526 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.273905835 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275932864 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.272846493 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271683419 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273942691 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.27260795 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.272770182 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27360198 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.273741176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.273637858 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.273219842 seconds)
  done (took 26.638123172 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.273839677 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.276526737 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.27390001 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.275620464 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.27625893 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.27393983 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.275983638 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27534332 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.271985666 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275048376 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.276252212 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.276581904 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.273806638 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.273183956 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.276913515 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.27325489 seconds)
  done (took 21.579494713 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.273768562 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.273404522 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.274644186 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.274088392 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.274615701 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.27156051 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.276107584 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.27341918 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.272693914 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.277790069 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.276487793 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.278507461 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.278450399 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.275540437 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.275680682 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.276414822 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.274685509 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.27384602 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.277219422 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.277374132 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.27577763 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.276384155 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.279037085 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.279200136 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.277098782 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.276776959 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.277178679 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.275354318 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.275745427 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.278976554 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.274140059 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.275499479 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.276345972 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.276967002 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.278516475 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.275687078 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.279303577 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.280137441 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.279133124 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.279861356 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.279981265 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.277820881 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.280388543 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.279342638 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.276782252 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.277832518 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.277150463 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.276885287 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.276296217 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.276351941 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.27866266 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27747972 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.280021115 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.281073024 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.279248424 seconds)
  done (took 71.412586491 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.278249117 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.278790846 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.277212162 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.280139422 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.281037018 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.277414943 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.280645532 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.279381293 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277775534 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.276176729 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279520579 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.281446414 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.27825813 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.280023755 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278494422 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280320837 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.277417804 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.277101859 seconds)
  done (took 24.203878612 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.279768977 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.278193508 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.282667727 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.276329572 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.280084323 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.282520567 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.278859454 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.280752587 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.28194806 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.27931231 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278632323 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.278965126 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.281539595 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.28208406 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.278730176 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.280683834 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.281829191 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.281322727 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.275346375 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278643456 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281665687 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.282526187 seconds)
  done (took 29.3476692 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.27904195 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.28022585 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.279247584 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.297022833 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.29740378 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.303006725 seconds)
  done (took 8.923634619 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288872793 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281481388 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.280679682 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283723379 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280659053 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278439373 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280154745 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280185998 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280539803 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280171674 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27839315 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280201995 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280498051 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279265205 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281371632 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282111728 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277190132 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277450146 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279018142 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28205195 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278010907 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281839762 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279097269 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278540745 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281347228 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27896002 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283603531 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280274143 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281942948 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281443186 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.28362193 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280348398 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281962877 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279962549 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.286163801 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285293293 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.282425749 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285564884 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.284701137 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282766447 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.284965753 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.285496575 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.284924839 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28095091 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284265872 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.282950473 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284064058 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281944106 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.283259957 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283028222 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282967884 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.284167077 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283301311 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282922714 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.285081175 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.283118377 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.282258307 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279781421 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283638935 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.280550575 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28230213 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282938038 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.283391144 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.285171585 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.288243505 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281609689 seconds)
  done (took 85.829657831 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284310051 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.285297902 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281924557 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28298459 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.285787517 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281192032 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.284863908 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.284894193 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282981018 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.285004249 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.284985229 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.286696398 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281291304 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.282951807 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284005993 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.284581455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.283258737 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281199617 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281890531 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.287333016 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274990414 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274582521 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273569799 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.273379738 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273137919 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275678381 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275177132 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273118032 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.26936077 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.269579168 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270506088 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.271519654 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272039143 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.271887381 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.271414619 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271819246 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271523563 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271984073 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272645253 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273102385 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271701296 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.274080145 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271471979 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.270076188 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.272129087 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.270656269 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271792345 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274766579 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.272246592 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272994728 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.272182229 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27318523 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.271830798 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272708614 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273621628 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274301785 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272785913 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272214745 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272423228 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276202723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274104306 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276178857 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27613617 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273956351 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.273281868 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272919935 seconds)
  done (took 85.422372505 seconds)
done (took 1739.242454506 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.43749728 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.39199255 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.276326741 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.270451867 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.271998614 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.291451316 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.290211752 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.272174266 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.276983641 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.274423845 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.277537043 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.460194051 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.269077105 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.272888456 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.274579562 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.368677388 seconds)
  done (took 42.161469953 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.301766754 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.277687977 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.385049003 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.293438572 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.303534698 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.452051874 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.327072103 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.275629873 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.434633577 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.317489392 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.720302199 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.300894264 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.27777079 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.311339173 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.293132542 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.448775487 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.510187466 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.725061561 seconds)
  done (took 29.140652754 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.689816267 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.28696665 seconds)
  done (took 9.163298804 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.296463015 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.278928588 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.283229806 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.280393198 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.272542459 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.26964543 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.277780962 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.27514284 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.668664604 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.394118291 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.279726676 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.288571167 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.297016185 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.283815923 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.282095812 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.315156438 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.478941595 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.278000073 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.280569471 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.284022225 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.278739106 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.364020411 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.319894888 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.276873325 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.397735053 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.628460079 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.286103989 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.2863627 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.468336117 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.28031892 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.28170534 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.281307723 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.28449691 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.166629884 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.698843872 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.296835411 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.300772805 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.293231701 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.279373763 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.421676383 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.284917474 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.290530093 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.276851088 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.709063184 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.405153258 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.388045456 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.391070102 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.295333888 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.285439735 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.343163444 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.285535373 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.286491765 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.324565528 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.034784298 seconds)
  done (took 108.058246132 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.296090134 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.662956366 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.442658196 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.284854677 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.885713036 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.90882199 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.28719052 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.541807086 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.326022269 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.274363741 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.560999041 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.753738533 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292969856 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.298984422 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.921977645 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.328980862 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.272526766 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.986817187 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.289498817 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.279034004 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.759964473 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2751603 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.274590729 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.54754156 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.311707946 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.709052913 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.579874426 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.689625982 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.288838191 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.275657321 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.716373024 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.289469585 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.292688188 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.278909041 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.529411972 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.609897808 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.603451128 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.293468254 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.299387689 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.27901504 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.309899857 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.702374308 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.607952486 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.291583664 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.277200095 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.707765563 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.291144861 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.281208727 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.282354869 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.475208817 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.925820052 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.275512946 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.576489213 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.283065724 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.570102712 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.343569531 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.362293637 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.738828223 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.290971311 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.328926339 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.325592796 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.277536012 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.284009425 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.277983033 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.281563129 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.602623592 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.495724157 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.280121092 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.600760713 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.728191845 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.297387359 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.774963427 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.13784643 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.293259984 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.333811063 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.278854774 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.817120614 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.749616799 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.320014751 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.278048586 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.595477538 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.294594245 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.549596055 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.290951819 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.284022453 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.79200481 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.282315094 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.33816673 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.280282916 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.29336254 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.909517163 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.289625363 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.541029016 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.330235828 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.278938971 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.285876408 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.307292747 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.279371471 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.301204194 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.284155156 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.775082428 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.29979699 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.385816989 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.295159837 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.28595379 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.280714234 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.280853373 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.280836634 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.495555519 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.804066993 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.29504428 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.284396476 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.289216221 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.279786463 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.55512009 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.279850098 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.567609181 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.301493616 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.280633109 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.284938724 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.970923363 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339122596 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.292028853 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.286179918 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.150203982 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.485971789 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.295742433 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.281906532 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.28056437 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.302618467 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.423308186 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.299550504 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.312878744 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.284724946 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.960716686 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.329899971 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.301143025 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.569501207 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.28636898 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.05438382 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.301202345 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.282674813 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.579196303 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.537820685 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.420185448 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.28501248 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.299989193 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.946902501 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.327630524 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.417212462 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.298267868 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.356733668 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.479351742 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.489999082 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.284390509 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.884320964 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.285072321 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.489554752 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.28576796 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.587273457 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.74753772 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.30146466 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.285385049 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963030166 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.001614597 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.088411706 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.287570456 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.545893859 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.220016106 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.776875338 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.284967456 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.285770755 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.72594368 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.282066993 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.290682036 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.283954403 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.284463713 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.429860601 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.456878636 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.927066327 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.293113008 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.712254247 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.31535459 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.284896464 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.307001644 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.285307814 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.628821444 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374667118 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.28379326 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.295164268 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.287903312 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.285615327 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.736272456 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.200058208 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.287022922 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436850179 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.887764929 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.302858979 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.283588508 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.975448431 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.534083148 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.773679331 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.342734568 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.57015421 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.298928258 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.320263731 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.832982077 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.352630536 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.738547625 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.296764255 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.291909913 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.856275581 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.307140799 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.38407244 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.285951762 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.286428546 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795691341 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.302635036 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.28995191 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.433570597 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.303776169 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.551102499 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.285542012 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.309836574 seconds)
  done (took 1097.787529543 seconds)
done (took 1287.495874662 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.285170721 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.294313974 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.271707371 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.292736369 seconds)
  done (took 26.345900472 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.307750131 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.294777481 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.296479486 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.296010383 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.299494334 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.296640033 seconds)
  done (took 8.997188807 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.354744669 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.29599879 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.296243488 seconds)
  done (took 19.154016637 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.488451772 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.506978885 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.604973463 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.340470016 seconds)
  done (took 10.14704641 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.295776239 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.299977363 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.299794593 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.29847912 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.311210672 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.308141304 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.300580688 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.30199952 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.308609356 seconds)
  done (took 12.932551076 seconds)
done (took 78.776683983 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.63537087 seconds)
    (2/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.277028773 seconds)
    (3/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.339756011 seconds)
    (4/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.316139603 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.695873547 seconds)
    (6/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.320858701 seconds)
    (7/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.298423293 seconds)
    (8/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.278170216 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.533246264 seconds)
    (10/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.284586016 seconds)
    (11/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.27199524 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.354894224 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.320105728 seconds)
    (14/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.410702763 seconds)
    (15/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.300470376 seconds)
    (16/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.019808734 seconds)
    (17/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.316634056 seconds)
    (18/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.270520882 seconds)
    (19/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.490631152 seconds)
    (20/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.311594518 seconds)
    (21/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.318955705 seconds)
    (22/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.301490151 seconds)
    (23/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.54891569 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.035817691 seconds)
    (25/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.992034264 seconds)
    (26/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.30593602 seconds)
    (27/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.802983874 seconds)
    (28/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.345396786 seconds)
    (29/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.593153455 seconds)
    (30/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.279281055 seconds)
    (31/286) benchmarking ("sort", Int64, true)...
    done (took 6.308740572 seconds)
    (32/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.531754484 seconds)
    (33/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.389543889 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.396083185 seconds)
    (35/286) benchmarking ("sort", Int8, false)...
    done (took 4.306772871 seconds)
    (36/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.305069956 seconds)
    (37/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.418796494 seconds)
    (38/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.301974901 seconds)
    (39/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.279502759 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.314907134 seconds)
    (41/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.408017725 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.550558304 seconds)
    (43/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.632066431 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.644693247 seconds)
    (45/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.020933009 seconds)
    (46/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.117454049 seconds)
    (47/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.063178021 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.369238431 seconds)
    (49/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.377838871 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.692500929 seconds)
    (51/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.460636413 seconds)
    (52/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.326534099 seconds)
    (53/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.311268359 seconds)
    (54/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.402825585 seconds)
    (55/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.378181501 seconds)
    (56/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.762633843 seconds)
    (57/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.297635535 seconds)
    (58/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.315002499 seconds)
    (59/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.054808167 seconds)
    (60/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.298755405 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.296067689 seconds)
    (62/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.397490857 seconds)
    (63/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.392656988 seconds)
    (64/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.36103461 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.167463691 seconds)
    (66/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.290871748 seconds)
    (67/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.400969679 seconds)
    (68/286) benchmarking ("sort", BigInt, true)...
    done (took 6.294530308 seconds)
    (69/286) benchmarking ("sort", Int64, false)...
    done (took 5.459554519 seconds)
    (70/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.293195545 seconds)
    (71/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.244332181 seconds)
    (72/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.325504067 seconds)
    (73/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.472013169 seconds)
    (74/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.277321814 seconds)
    (75/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.723610443 seconds)
    (76/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.403537075 seconds)
    (77/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.323183013 seconds)
    (78/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.298071346 seconds)
    (79/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.363197394 seconds)
    (80/286) benchmarking ("sort", Float64, true)...
    done (took 6.295878026 seconds)
    (81/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.47303873 seconds)
    (82/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.283047301 seconds)
    (83/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.387772474 seconds)
    (84/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.866368734 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.950990954 seconds)
    (86/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.650932262 seconds)
    (87/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.592457265 seconds)
    (88/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.008603089 seconds)
    (89/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.294603765 seconds)
    (90/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.404292636 seconds)
    (91/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.179910665 seconds)
    (92/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.273117085 seconds)
    (93/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.300758526 seconds)
    (94/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.309871502 seconds)
    (95/286) benchmarking ("sort", Float32, false)...
    done (took 5.289104054 seconds)
    (96/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.287487567 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.813098761 seconds)
    (98/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.277678774 seconds)
    (99/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.680767621 seconds)
    (100/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.349452253 seconds)
    (101/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.311391876 seconds)
    (102/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.515305035 seconds)
    (103/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.427732586 seconds)
    (104/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.095312127 seconds)
    (105/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.431080507 seconds)
    (106/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.55633797 seconds)
    (107/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.285840036 seconds)
    (108/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.65870776 seconds)
    (109/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.311687125 seconds)
    (110/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.080801975 seconds)
    (111/286) benchmarking ("sort", Bool, false)...
    done (took 1.81070867 seconds)
    (112/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.331040672 seconds)
    (113/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.494386616 seconds)
    (114/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.347728002 seconds)
    (115/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.223410205 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.939842426 seconds)
    (117/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.559387124 seconds)
    (118/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.094040282 seconds)
    (119/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.654656342 seconds)
    (120/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.293885138 seconds)
    (121/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.017205556 seconds)
    (122/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.191271401 seconds)
    (123/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.585053053 seconds)
    (124/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.322685096 seconds)
    (125/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.424947733 seconds)
    (126/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.362891906 seconds)
    (127/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.278179309 seconds)
    (128/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.895075797 seconds)
    (129/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.333748326 seconds)
    (130/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.327090407 seconds)
    (131/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.412978965 seconds)
    (132/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.620112543 seconds)
    (133/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.532674084 seconds)
    (134/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.058345263 seconds)
    (135/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.685595047 seconds)
    (136/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.313512594 seconds)
    (137/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.307147649 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.086028906 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.33512875 seconds)
    (140/286) benchmarking ("sort", Int8, true)...
    done (took 6.30145142 seconds)
    (141/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.408695602 seconds)
    (142/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.366562427 seconds)
    (143/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.293964081 seconds)
    (144/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.303091843 seconds)
    (145/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.336540917 seconds)
    (146/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.325328893 seconds)
    (147/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.31992659 seconds)
    (148/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.519915615 seconds)
    (149/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.300333396 seconds)
    (150/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.645850589 seconds)
    (151/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.330100641 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.139583741 seconds)
    (153/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.790733327 seconds)
    (154/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.077178138 seconds)
    (155/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.654975009 seconds)
    (156/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.110737214 seconds)
    (157/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.513572158 seconds)
    (158/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.285469048 seconds)
    (159/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.63918445 seconds)
    (160/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.305308798 seconds)
    (161/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.302831509 seconds)
    (162/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.407706105 seconds)
    (163/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.564287352 seconds)
    (164/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.287791864 seconds)
    (165/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.47142241 seconds)
    (166/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.935007905 seconds)
    (167/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.555014102 seconds)
    (168/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.287886638 seconds)
    (169/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.285939183 seconds)
    (170/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.344874161 seconds)
    (171/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.284782857 seconds)
    (172/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.420714513 seconds)
    (173/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.887225914 seconds)
    (174/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.281004186 seconds)
    (175/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.342457709 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.736847746 seconds)
    (177/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.404584208 seconds)
    (178/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.353993959 seconds)
    (179/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.304113972 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.709283076 seconds)
    (181/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.680308592 seconds)
    (182/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.286315085 seconds)
    (183/286) benchmarking ("sort", Bool, true)...
    done (took 5.383286954 seconds)
    (184/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.378891386 seconds)
    (185/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.425280618 seconds)
    (186/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.3019872 seconds)
    (187/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.341739106 seconds)
    (188/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.656591754 seconds)
    (189/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.150677606 seconds)
    (190/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.349933164 seconds)
    (191/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.390344916 seconds)
    (192/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.958764275 seconds)
    (193/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.522664653 seconds)
    (194/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.779760504 seconds)
    (195/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.285380531 seconds)
    (196/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.504067292 seconds)
    (197/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.294683714 seconds)
    (198/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.28741861 seconds)
    (199/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.813444194 seconds)
    (200/286) benchmarking ("sort", Float64, false)...
    done (took 5.604450298 seconds)
    (201/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.300351109 seconds)
    (202/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.285201361 seconds)
    (203/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.334016424 seconds)
    (204/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.300636018 seconds)
    (205/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.289962797 seconds)
    (206/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.330436245 seconds)
    (207/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.283975866 seconds)
    (208/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.287220258 seconds)
    (209/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.390880218 seconds)
    (210/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.286526008 seconds)
    (211/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.02124308 seconds)
    (212/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.352717904 seconds)
    (213/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.677680996 seconds)
    (214/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.699294069 seconds)
    (215/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.492904443 seconds)
    (216/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.987623884 seconds)
    (217/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.894994801 seconds)
    (218/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.64285183 seconds)
    (219/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.119107835 seconds)
    (220/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.904564126 seconds)
    (221/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.310413357 seconds)
    (222/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.319503422 seconds)
    (223/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.81496494 seconds)
    (224/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.384160605 seconds)
    (225/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.619594511 seconds)
    (226/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.332694088 seconds)
    (227/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.043864834 seconds)
    (228/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.741136826 seconds)
    (229/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.512555929 seconds)
    (230/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.562961403 seconds)
    (231/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.244320365 seconds)
    (232/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.120435496 seconds)
    (233/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.299884523 seconds)
    (234/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.524679745 seconds)
    (235/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.805271259 seconds)
    (236/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.507040045 seconds)
    (237/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.346928553 seconds)
    (238/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.298337491 seconds)
    (239/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.790956006 seconds)
    (240/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.707894046 seconds)
    (241/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.332423077 seconds)
    (242/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.335152534 seconds)
    (243/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.365389185 seconds)
    (244/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.893399836 seconds)
    (245/286) benchmarking ("sort", Float32, true)...
    done (took 6.307045841 seconds)
    (246/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.975536921 seconds)
    (247/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.711135338 seconds)
    (248/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.207906769 seconds)
    (249/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.388660608 seconds)
    (250/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.060811837 seconds)
    (251/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.289911535 seconds)
    (252/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.896970227 seconds)
    (253/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.322745175 seconds)
    (254/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.026012724 seconds)
    (255/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.13069511 seconds)
    (256/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.626976565 seconds)
    (257/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.391604397 seconds)
    (258/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.320384234 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.389123024 seconds)
    (260/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.390191783 seconds)
    (261/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.454734475 seconds)
    (262/286) benchmarking ("sort", BigInt, false)...
    done (took 6.310648561 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.431961238 seconds)
    (264/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.306900334 seconds)
    (265/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.443280635 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.110607335 seconds)
    (267/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.295535261 seconds)
    (268/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.393793006 seconds)
    (269/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.388040076 seconds)
    (270/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.285638753 seconds)
    (271/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.291957792 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.417828761 seconds)
    (273/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.423011784 seconds)
    (274/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.335469807 seconds)
    (275/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.472252845 seconds)
    (276/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.806160807 seconds)
    (277/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.358151074 seconds)
    (278/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.145555121 seconds)
    (279/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.322722967 seconds)
    (280/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.113689396 seconds)
    (281/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.376374335 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.33354448 seconds)
    (283/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.528053488 seconds)
    (284/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.768492786 seconds)
    (285/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.294254526 seconds)
    (286/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.902599911 seconds)
  done (took 924.480620669 seconds)
done (took 925.69016989 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.341223149 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.342661452 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.320982598 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.341403201 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.437562332 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.349504657 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.330564136 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.321083865 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.367850847 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.366337265 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.328382206 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.34691196 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.328812177 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.328595903 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.315164876 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.339408662 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.326466558 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.327275996 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.346139636 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.33214596 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.343814491 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.327143492 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.3691862 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.347090311 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.320675991 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.326346208 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.332639894 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.347722005 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.444288522 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.331763742 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.324482729 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.337227249 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.330784991 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.316182119 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.316399403 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.35332839 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.343266629 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.334179506 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.328827617 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.36191561 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.711402109 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.340812776 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.332348979 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.322586101 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.324787542 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.326707143 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.329519112 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.332060421 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.344484122 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.342944736 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.693421955 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.354754934 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.334244948 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.324023247 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.332158127 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.332989928 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.324168275 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347725686 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.348771024 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.344804652 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.307574352 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.326854845 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.324506746 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.348419244 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.335796386 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.736898872 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.332005154 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.326860002 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.708088903 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.343055728 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.733586707 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.352574625 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.326157056 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.34098647 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.361016106 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.326573575 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.318744124 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.325652855 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.340431316 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.333571043 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.334363957 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.347581562 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.328830821 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.328384136 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.346308355 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.353811582 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.337214725 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.329582022 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.332000802 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.348006565 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.341951074 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.341690336 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.330048212 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.319184624 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.335734972 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.329400288 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.333253562 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.339119399 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.331601368 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.337997663 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.706956398 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.368100939 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.325651264 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.320964589 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.32535714 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.34951797 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.72663076 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.353660195 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.35034187 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.371770861 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.325001738 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.331235622 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.337882066 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.351049892 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.334396448 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.329329703 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.323736067 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.316215705 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.703271218 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.360138945 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.330664245 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.332447422 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.35102852 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.328742973 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.324946546 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.344708551 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.336452084 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.350813431 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.455715063 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.341495236 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.367480881 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.333155016 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.32919778 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.349589025 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352840864 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.364995793 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.32841268 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.352119238 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.349264945 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.323275599 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.343320604 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.338605198 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.328179727 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.336367821 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.31944794 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.354032942 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.349991547 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.349950965 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.358193008 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.456180476 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.328923738 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.332751983 seconds)
done (took 223.980127562 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.387970645 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.323288117 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.420397777 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.323602292 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.426527826 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.430076086 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.327035046 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.323256391 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.326094886 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.709385158 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.327954631 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.328556462 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.321384392 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.329527832 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.408455358 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.328631601 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.327611774 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.727009912 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.328691427 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.400420042 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.328721675 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.32913749 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.327360495 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.707396166 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.324203173 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.323782853 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.400191992 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.330607843 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.67463575 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.326185303 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.326220631 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.678520061 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.423291142 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.350431713 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.341094156 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.335512255 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.426121718 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.347659365 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.412737036 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.409432138 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.417611199 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.367440643 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.321440194 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.330406238 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.338407697 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.328284231 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.330091373 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.359675746 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.322685519 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.329240399 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.701658074 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.341724325 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.328875183 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.331376719 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.327936531 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.362218301 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.332061975 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.331985909 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.424037474 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.331875943 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.392122995 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.71320018 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.713738856 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.332330785 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.331526436 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.32966481 seconds)
  done (took 148.257340527 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.39492968 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.406250774 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.438817954 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.350756556 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.379831027 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.448565378 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.345628716 seconds)
  done (took 11.001915261 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.337153681 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.336924901 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.385421084 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.382769901 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.331017819 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.509478094 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.332870826 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.341140634 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.332836509 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.380659934 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.331484112 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.336898754 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.341152558 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.332051263 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.379862933 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.34614698 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.447757391 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.334023722 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.336017205 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.490412867 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.332699251 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.340500828 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.385407856 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.343871299 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.333455545 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.337139986 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.180630261 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.336363757 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.330450804 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.33393821 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.330019869 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.428035391 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.335620681 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.329241143 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.332092117 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.451067588 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.33455519 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.333214561 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.332324499 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.331367162 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.33549458 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.337525288 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.333017278 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.333936421 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.337156901 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.359719712 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.335518479 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.335444356 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.336352019 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.334024217 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.383121235 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.338844926 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.331406952 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.332233771 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.391517627 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.342385051 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.337326572 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.333802739 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.337532427 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.335125663 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.49259066 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383186861 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.33593831 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.379133549 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.337575937 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.336763378 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.33355811 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.333487502 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.384874463 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.336318258 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.384412448 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.337304275 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.525107271 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.359343746 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.340999915 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.337088458 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.336879034 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.337902973 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.327851083 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.343671167 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.334806202 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.336205312 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.342033555 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.337787279 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.333344376 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.530730262 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.446065813 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.335357107 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.348429667 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.345650045 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.338986631 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.390128197 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.340095594 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.337082993 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.390756118 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.452193801 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.390792651 seconds)
  done (took 153.83213554 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.341336653 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.346179565 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.339308295 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.354390418 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.338399996 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.339838625 seconds)
  done (took 9.295146519 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.340505697 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.343386958 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.34049976 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.342841426 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.341917293 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.338915011 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.341259434 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341847283 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.346088582 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.343534504 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.339843241 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.345388135 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.344030845 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.340970161 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.341152608 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.341975643 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.339209872 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.338012902 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.339726323 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.341761491 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.444302576 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.34042475 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.338734961 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.340037689 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.348341311 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.344965465 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.350622066 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.340858494 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.339921982 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.348865096 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.359416817 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.346220876 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.343788283 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.349806685 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.349963178 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.341775894 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.348208482 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.346475649 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.340338554 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.343904289 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.348278882 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.341796309 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.340465633 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.343317252 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.342126023 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.345795076 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.356219824 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.351629156 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.344804728 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.344993609 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.344292679 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.343922064 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.344976888 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.349155276 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.345441536 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361097015 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.356507982 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.3463059 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.345667985 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.346389957 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.343601387 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.343239975 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3506803 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.351284865 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.34405204 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.3501501 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.347193277 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.350376568 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.344288859 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.343012046 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.349889222 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.342505068 seconds)
  done (took 99.190932987 seconds)
done (took 422.807742453 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.644810929 seconds)
  done (took 7.893953737 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.375152201 seconds)
  done (took 7.62488217 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.255528054 seconds)
  done (took 21.509998625 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.393323744 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.447197131 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.340350577 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.340241283 seconds)
  done (took 26.77041708 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.513724862 seconds)
  done (took 7.761574881 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.333918319 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.335664163 seconds)
  done (took 13.917028976 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.905991515 seconds)
  done (took 8.155141186 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.382302842 seconds)
  done (took 7.637144011 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.351749609 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.354393876 seconds)
  done (took 13.97128127 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.319939981 seconds)
  done (took 7.5705692 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.860397447 seconds)
  done (took 12.112017135 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.338186821 seconds)
  done (took 7.59126039 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.376984098 seconds)
  done (took 7.622706391 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.127230502 seconds)
  done (took 9.375466635 seconds)
done (took 160.764349436 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.337701303 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.344699688 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.339720595 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.339836217 seconds)
  done (took 26.604962799 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.378284306 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.381624123 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.384694384 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.393687381 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.386303403 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.382093045 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.376833242 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.374995115 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.391869954 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.385440563 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.385408668 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.387643527 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.381612742 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.37575671 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.384382793 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.385407336 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.394510886 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.384738829 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.376610169 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.383767376 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.351341441 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.390099079 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.386438434 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.346147794 seconds)
  done (took 34.401942946 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.869536014 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.420306063 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.504258997 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.395481641 seconds)
  done (took 7.442313188 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.40193524 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.402986034 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.411670121 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.456194227 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.479778486 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.413307519 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.377688936 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.371561001 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.354712903 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.404019813 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.479298838 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.420805419 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.492244276 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.351601537 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.534565147 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.34874958 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.351075789 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.397970156 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.451825912 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.489236677 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.351855843 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.400646599 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.401681998 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.420657262 seconds)
  done (took 35.21689635 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.350735024 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.369994585 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.351641308 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.349364753 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.356446375 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.350245508 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.350279494 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.353429714 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.348230867 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.355323481 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.350280911 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.361924815 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.348058339 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.35101559 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.357786287 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.351520573 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.352490882 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.349333605 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.349297691 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.352750147 seconds)
  done (took 28.31219898 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.33753334 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.294278904 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.696331072 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.595517643 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.343447825 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.347703295 seconds)
  done (took 28.868592221 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.417019836 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.56338138 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.34938407 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.69467837 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.788972249 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.366753553 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.351939406 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.586490171 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.884344302 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.88374796 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.41161596 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.423097799 seconds)
  done (took 19.974620721 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.35494614 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.346751341 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.354129124 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.36876628 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.40604663 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.373110484 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.359685631 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.345736931 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.410058619 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.425733041 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.375690363 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.407227418 seconds)
  done (took 37.7820746 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.465333779 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.398602038 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.283613011 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372286196 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.086312873 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.559391117 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.377662451 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.082577862 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.370661809 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622522481 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.343489847 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.489664991 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.602664405 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348074247 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372221022 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.295131103 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592120559 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.814592892 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34903049 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.257163953 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.37952312 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.347326937 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.365071327 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.57436522 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.583240174 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.321403724 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.608359761 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.121092122 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.631228383 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.367173302 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361169268 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347953642 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.622993366 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995446164 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462785976 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549901223 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387168647 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.918103778 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.339662909 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.271195474 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359418156 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.359227146 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.361414277 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.349230786 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.284651104 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.359763822 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.082611718 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.369654047 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.062624757 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351113322 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.596524176 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449292155 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.35349848 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.916268942 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364038825 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.361187002 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.353277359 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434631812 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955770651 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.494763123 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.368428939 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.290886073 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.352200224 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252492773 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964043143 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.369678567 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.355130546 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349091732 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.28702324 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.255460565 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.374329775 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498430832 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.375914449 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.00115194 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02707704 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.37545089 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.304741763 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.879002025 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.347197806 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.288999472 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575812703 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.126092306 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.286910971 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.295464542 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.286311016 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.030883235 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365332784 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.867220431 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378702119 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.092695864 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.580046414 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.390402624 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373854526 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577194602 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.230059634 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.351853907 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.350632573 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.487266076 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.371853298 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.077635646 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311497581 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.355064733 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.606170518 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.563926925 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.348069874 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.319476666 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.846496821 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373037218 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.369811374 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353139892 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.563941972 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.939048359 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.385831747 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.515095048 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.372598874 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.129738551 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072417122 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370407219 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.364551281 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.353823034 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.639003054 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.090892263 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.520057112 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.421543644 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.361605055 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.356575725 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.331124576 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.207427664 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.237722321 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.543381358 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.378080452 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.366132146 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.355004892 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.304039794 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.355608984 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357501017 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.135169456 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577758499 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.362523485 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.635387097 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.285916674 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504159924 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.362785628 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.578914682 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.523297745 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.382210604 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.618712402 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36231955 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.366757346 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.368829207 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375673551 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455367701 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.378755869 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.359741008 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.615554203 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.357884376 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.357773357 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.433291535 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.135295604 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.356985448 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.358968768 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.377286606 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923985888 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.354276205 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.359084168 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.246530012 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.37194695 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.419607897 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.361321275 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.565349038 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.540896578 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.387385957 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.361687774 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.364985943 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.585056865 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.363827467 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.277185611 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.440617771 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.831647192 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.944219778 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.392016423 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.296318333 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.065164649 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.052036128 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357814223 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.554905821 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357594719 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.56423489 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.393886729 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.356284738 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.939380937 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380691374 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.294002035 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.369991016 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.369229337 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.35795447 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.357582971 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.542345056 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.542011917 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.362230765 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.373935409 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498998921 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.372025538 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.29060818 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.87191061 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.362893012 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.35729453 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.131003674 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392101671 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.289449891 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240827505 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640190119 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372521204 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608473349 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.378080573 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.396778427 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.35479229 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.364871881 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.36915551 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.378905942 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.381796588 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.368516598 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.293545629 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.802535321 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926791851 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072735637 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896212497 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.68555348 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.390002971 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.294884103 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.084938608 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318652913 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.017570137 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.595116305 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.111598745 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.331165705 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.840432881 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.558685809 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.120708582 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.618182312 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.596689528 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.658451119 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.391761861 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.622306893 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.575705086 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.394675313 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.375284941 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.295708643 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.640635564 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.927691708 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.381545743 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448073824 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.091358743 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394897909 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.145973887 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.374417589 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.056365778 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764565871 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.930003866 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.74863465 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.368977226 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.369928521 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.239375807 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.384599854 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.885545783 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.973353814 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.389290078 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.841843261 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318838441 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.570680268 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.395923255 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.357250656 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.865904236 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.372296127 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.62299431 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.611543623 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.303509257 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.363382867 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.896542911 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.234133406 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.365565538 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363211186 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083717959 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.372526417 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.647602826 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.374764054 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.551740612 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390278041 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.294709778 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299522447 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.056810644 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.368874121 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.339468643 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.838451232 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.373820407 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380926714 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.382273109 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.218547796 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.618060519 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.376188284 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.931674554 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613250324 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.360051403 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386674841 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.368930116 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365237665 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.347802229 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.260337735 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.597740558 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.426457012 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.594069863 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.759957996 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.27139589 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.403107687 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.58480456 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.245576445 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366701063 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622285459 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.099577561 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.367692985 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061631777 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41141929 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373790573 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.385798867 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.38350025 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.382678771 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.453017353 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572704871 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.397189676 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.374745443 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.764483561 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.400388223 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.375442714 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.379008613 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.462270862 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.56615529 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.568551863 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.148683927 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.933315527 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.103983005 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.955232637 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.64154046 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.374182196 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365303391 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.301651887 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51483857 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.889594013 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.641892783 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498371879 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.363884085 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411154451 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.366104489 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.390206017 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.604627286 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.644174802 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.239482922 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.364496132 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.035781655 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.253009831 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377601889 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.577305956 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84804698 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922357937 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.489245108 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.368819223 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.106021668 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666056242 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.456546189 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366956978 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.956123946 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.369556503 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.072678404 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.379052879 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365197166 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519852901 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.616763464 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.028656409 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.403268199 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.522715402 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.138833201 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.33310538 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.631275351 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.821534285 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.58479869 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961839802 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.073332912 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637377562 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437032081 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.57846768 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.498097586 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.512752373 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.367961607 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.255510304 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.366909229 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.209696035 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.076151336 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.376488479 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939818351 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655945473 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.370976959 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.364613185 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.397255718 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.376550602 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.590496413 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.062851431 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.599571992 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.377361854 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373963596 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.359586696 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.941603994 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.645454145 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.311050948 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.371971463 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.607236716 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.628752621 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.393185956 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.820837626 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.080618206 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.916077677 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.354843049 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391168317 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.370998301 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.060929813 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.950023265 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.593043428 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871779897 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.031985357 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.380767156 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.651401488 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.375793354 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.376714792 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.652800889 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.372858959 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.371272152 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.5896823 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.961395745 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.146527857 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.387514682 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.360496333 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.312154565 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.596450021 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455190562 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.314871815 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.37042435 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.778536264 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398340411 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503006488 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.383348378 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.381542832 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370940998 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.151087428 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.652640958 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.376060054 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.356610104 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.365259443 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.392241965 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471025233 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.94952531 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394250834 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.046601031 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.720934312 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.62669146 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.370267921 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.35597023 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.375527771 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372722622 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.089641209 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.34183185 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.371451581 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.921401952 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.381652888 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.390136139 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.375392182 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.587792241 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.583964046 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.385681085 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592931987 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396332341 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.39348509 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.272305313 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.138634188 seconds)
  done (took 1668.853284996 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.394998437 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.417666975 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.403537649 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.379014391 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.432121696 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.449697293 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.47266304 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.474144322 seconds)
  done (took 52.705288139 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.384049083 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.534964148 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.403695042 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.382768696 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.381504049 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.382321012 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.835065862 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.401504812 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.381575304 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.382502317 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.374429215 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.386563911 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.021361946 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.385889921 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.372697751 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.368532115 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.388222289 seconds)
  done (took 66.056744762 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.384740745 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.735509654 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.046935873 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.388557466 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.407870928 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.385675234 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.880140121 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.39188766 seconds)
  done (took 58.904712225 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.389249755 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.389058068 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.390924352 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.389723751 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.391224696 seconds)
  done (took 8.232848818 seconds)
done (took 2074.609742578 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.377441121 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.38104496 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.378595073 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.379963354 seconds)
  done (took 6.801263195 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.353886503 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.08565114 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.355133376 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.370647605 seconds)
  done (took 18.449646066 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.382695378 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.390102737 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.050426316 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.012219509 seconds)
  done (took 5.349817836 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.128102732 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.143967502 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.12790849 seconds)
  done (took 7.69136564 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.377536596 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.389111018 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.38304167 seconds)
  done (took 20.441284727 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.668766032 seconds)
  done (took 2.958517565 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.526196383 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.576023248 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.696101912 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.715578525 seconds)
  done (took 7.806536991 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.768518906 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.763715178 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.571675114 seconds)
  done (took 6.39389393 seconds)
done (took 89.949928477 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.123007316 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.383400951 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.581356886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.091751069 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.606993165 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.583385003 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.598731943 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.058994039 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.656669445 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.601758214 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.096254168 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.610007175 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.547906414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.381383746 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.550386511 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.626117922 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.65286892 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.174767975 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.780013431 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.980122813 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.599928701 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.7340319 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.925709806 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.806521426 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.676139625 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.534907199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.328851081 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.384529685 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.957319331 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.402258288 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.550447383 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.155417126 seconds)
  done (took 191.034038299 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.380550058 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.381909589 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.382413026 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.381281386 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.394608983 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.381323153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.384498239 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.406474962 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.383959866 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.394760701 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.395781231 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.381846493 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.39946586 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.400358948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.399172293 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.383298783 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.382424636 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.391097251 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.410928129 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.383849223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.381197737 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.39777468 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.384101881 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.399838914 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.38825929 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.400369514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.388069031 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.382638868 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.404686961 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.384676424 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.389837901 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.393353952 seconds)
  done (took 205.790914798 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.391940113 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.390107008 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.382720437 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.390260086 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.391513558 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.407249217 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.384952896 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.382281882 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.39819979 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.397392941 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.385886937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.398269644 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.385035056 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.383159253 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.388844559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.38503044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.399617698 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.392270011 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.392353839 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.400772153 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.387827661 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.384251004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.385842783 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.385229296 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.420013718 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.387803646 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.383952127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.386017394 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.415808828 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.399997046 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.392095877 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.392904324 seconds)
  done (took 205.846067011 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.584948218 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.392766515 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.39502225 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.32796372 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.393591654 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.392217131 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.387294505 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.593051473 seconds)
  done (took 14.762864248 seconds)
done (took 618.725896474 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.687233782 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.397143386 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.594837531 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.420527494 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.184847858 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.431568943 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.416194887 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.584936386 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.323010485 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.588409804 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.646756463 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.435390569 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.784411387 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.417851842 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.666816678 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.521818565 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.319928955 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.449153616 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.729086628 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.952609955 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.674691184 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.908407618 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.606473232 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.315631778 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.797300954 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.880991762 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.134797775 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.307605272 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.437204491 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.735038597 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.996302686 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.373033618 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.472113477 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.479906703 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.539333251 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.519590161 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.369281269 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.472022863 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.618414077 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.673613652 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.953197405 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.132485798 seconds)
  done (took 94.246535691 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.380836383 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.379275641 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.37999559 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.379699664 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.377198801 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.380072799 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.381979779 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.379661121 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.380421206 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.379411726 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.378963864 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.38161267 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.379421114 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.381782434 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.380036135 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.379245216 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.37813201 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.382628853 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.380542875 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.380288301 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.379732672 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.381150325 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.38184572 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.380272193 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.379740008 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.380070746 seconds)
  done (took 37.186435747 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.399728156 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.642581793 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.811427603 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.4130464 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.397912525 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.405935397 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.477634291 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.40883914 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.402206938 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.403265926 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.569338842 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.411681499 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.43460542 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.832707978 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.411856484 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.400641198 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.398449917 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.399535227 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.652610508 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.415018234 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.49617133 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.408723049 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.4751093 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.415280167 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.421517409 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.403607756 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.405264429 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.958859267 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.424533637 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.571246838 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.173221885 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.48238629 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.919647591 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.840799628 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.175946628 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.411179787 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.402355574 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.573901567 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.412562264 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.402343033 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.474728524 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.409612244 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.813719802 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.064180773 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.426240102 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.405196776 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.979534962 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.594933214 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.648651404 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.418114042 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.841556724 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.412660649 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.407457612 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.404554141 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.64056705 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.413477201 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.404738702 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.963109833 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.431274584 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.478540075 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.41219935 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.406250832 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.659106005 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.40716211 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.647385762 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.40692941 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.414086765 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.427381014 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.82397268 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.413854946 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.079919866 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.426480537 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.406225393 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.571642738 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.656757913 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.022895683 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.430071389 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.66639274 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.93891729 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.501558162 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.416794087 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.959558219 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.506454466 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.416767797 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.410712295 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.41184108 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.407617256 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.450167572 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.478843626 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.021599078 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.094825106 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.994633655 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.509699504 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.425480139 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.405504565 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.974286466 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.436155346 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.406456683 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.810577357 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.090087986 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.430348948 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.418345538 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.086461762 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.431424069 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.484825992 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.415854973 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.824944864 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.417388537 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.455671961 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.409637794 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.412360251 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.42876399 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.483114149 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.421306228 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.408304675 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.059346003 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.605807074 seconds)
  done (took 184.942467052 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.406530877 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.399683495 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.41731398 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.399099086 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.403976458 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.416022232 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.400539879 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.403846454 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.409420264 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.403153707 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.405389311 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.40172156 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.404946994 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.409579895 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.411482324 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.410163718 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.057634411 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.404336364 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.402751433 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.416783558 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.198956907 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.412820627 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.40191942 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.419669564 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.405582433 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.400287932 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.411335896 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.40278438 seconds)
  done (took 154.150333955 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.414486125 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.967134241 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.427693604 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.540761952 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.430620968 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.406701633 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.536524681 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.473489663 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.435238341 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.413214808 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.410306727 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.706807175 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.421104769 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.920844465 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.602132789 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.561880884 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.925926248 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.435374227 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.410534012 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.409778949 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.540097745 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.413329668 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.713044487 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.973256 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.43817556 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.966448836 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.399660878 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.410453037 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.409672635 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.969014715 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.434761121 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.711948655 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.494223805 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.477376087 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.992623017 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.94403276 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.946342741 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.564708279 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.41933737 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.408712392 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.412731551 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.393691727 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.963734702 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.432271347 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.414039492 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.950603503 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.430974824 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.414464551 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.421176549 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.412736964 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.469763882 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.497086091 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.734847407 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.967323403 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.503445239 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.431275034 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.54013045 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.796750143 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.41658695 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.921570443 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.402736916 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.972292141 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.433208236 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.397923419 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.416744136 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.421674349 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.561956597 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.551342311 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.929769568 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.437416124 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.924211158 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.585188747 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.42313964 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.415370858 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.418984993 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.977311737 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.93800817 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.583589537 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.55385387 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.607954302 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.406024816 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.415411392 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.397276472 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.491823078 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.422018316 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.976964382 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.93743371 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.434346095 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.422336206 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.416926731 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.419307856 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.587560852 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.996608369 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.504712863 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.910893871 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.733612011 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.718295196 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.417416512 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.475849541 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.43895399 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.717386296 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.416134687 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.47170609 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.860700597 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.716998483 seconds)
  done (took 167.979841535 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.648335649 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.583065795 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.503413319 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.557258941 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.01179619 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.977923089 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.6790243 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.540835174 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.525329854 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.677520233 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.563585328 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.503106836 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.627119879 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.493442184 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.159656257 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.49342208 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.530335861 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.563226316 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.571446609 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.429818763 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.075445354 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.693814111 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.595475558 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.26174149 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.506353927 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.183715078 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.970305609 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.986538057 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.594274363 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.713953432 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.9490044 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.538169761 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.379621526 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.10420296 seconds)
  done (took 67.511344337 seconds)
done (took 707.314613658 seconds)
SAVING RESULT...
DONE!
