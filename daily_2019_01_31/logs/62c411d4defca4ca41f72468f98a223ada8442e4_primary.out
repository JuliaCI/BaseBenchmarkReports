cset: moving following pidspec: 5133
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.388456955 seconds)
loading group "string"... done (took 0.577480088 seconds)
loading group "linalg"... done (took 7.375802703 seconds)
loading group "parallel"... done (took 0.170322926 seconds)
loading group "find"... done (took 1.158041098 seconds)
loading group "tuple"... done (took 2.080087025 seconds)
loading group "dates"... done (took 1.307869393 seconds)
loading group "micro"... done (took 0.241743113 seconds)
loading group "io"... done (took 0.964098944 seconds)
loading group "scalar"... done (took 40.942020997 seconds)
loading group "sparse"... done (took 13.14339405 seconds)
loading group "broadcast"... done (took 1.004515523 seconds)
loading group "union"... done (took 14.081588828 seconds)
loading group "simd"... done (took 4.793352916 seconds)
loading group "random"... done (took 9.790548531 seconds)
loading group "problem"... done (took 1.974112204 seconds)
loading group "array"... done (took 22.334785522 seconds)
loading group "misc"... done (took 2.012891777 seconds)
loading group "sort"... done (took 3.416236159 seconds)
loading group "collection"... done (took 19.615703349 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573179544 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.15653307 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.148566668 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148534899 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.195960064 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143155119 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.157998484 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097665722 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.958386757 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171102292 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.151410789 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523332463 seconds)
done (took 5.170925092 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.220284605 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095210894 seconds)
    (2/2) benchmarking "String"...
    done (took 0.103180429 seconds)
  done (took 0.886794875 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078026206 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147531324 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.098682451 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07941291 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097056697 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078839991 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.096955206 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.094567952 seconds)
  done (took 1.387887683 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086895354 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.098949991 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08271379 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.098115863 seconds)
  done (took 1.058911102 seconds)
done (took 4.333982526 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.721551729 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272758186 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.203076531 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.46103537 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.201865622 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.220298378 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.680038376 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.340279016 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252973622 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099737741 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.134016779 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.391493748 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137539653 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.685419834 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091567208 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.12694221 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179913083 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.440378282 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.081694345 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.108817213 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116019419 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14233107 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128321112 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.089586693 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184697252 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081493555 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.192707334 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107608642 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080967161 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275201859 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200507047 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692275351 seconds)
  done (took 10.856551243 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.111639263 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133512463 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097517612 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137779712 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134768839 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.098343372 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083815042 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.095959315 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122061652 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17539525 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113610301 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135791259 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.094812757 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.081744459 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.114207025 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.243359463 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.118302375 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09914397 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.099859704 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087632373 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137736083 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111003933 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107887677 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093959672 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.164860393 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.221200411 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.113149252 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126167859 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098706955 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112731549 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143329238 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14443343 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096103791 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.081600806 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174430671 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.12599821 seconds)
  done (took 5.143798187 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.095234972 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189762946 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121005648 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.168035977 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080576745 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143213998 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094386483 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.112207374 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.254301395 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.110922282 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.4902311 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140850832 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098918891 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098445193 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081958652 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096303159 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.45811512 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.155984575 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.133824993 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095358867 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104476335 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.099107695 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363373355 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.081591391 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097288877 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08265469 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.081749096 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163603274 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085939448 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.205815832 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120218646 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08135154 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133535205 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204024734 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10902314 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.13336263 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09465856 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.110116086 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098378938 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.176194152 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104697467 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.079670119 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120388603 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133024344 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116791193 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098540328 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.095134798 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.195174316 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.078941208 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1124611 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.941035429 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180700656 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.108355755 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098402654 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.307499071 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.09901245 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097584952 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077022916 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.274239386 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.195809781 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.10228072 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096491879 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080415479 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097558686 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.377838936 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.080679914 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.712073891 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083669062 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107766822 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.105273393 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096775928 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098824469 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078106903 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10340623 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086013952 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.114948367 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078985436 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100118972 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078240801 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096836496 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.081084508 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.10800304 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.213417424 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.09773758 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.078447562 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096066769 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.116277627 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109958091 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099606334 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094491377 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113437631 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097763585 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097524502 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.115911924 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098665352 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.105901599 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082483667 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141153773 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096782767 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.13790977 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093964255 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.124977722 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09847722 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113116733 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111081659 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.09768662 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.168711329 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077324091 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.094816894 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079412298 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095515805 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079606896 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.098492524 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.075690399 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110219589 seconds)
  done (took 22.596264614 seconds)
done (took 40.384140045 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.331201788 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106710122 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.105969277 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.108595333 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.103347433 seconds)
  done (took 1.529542478 seconds)
done (took 2.274646162 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.167719563 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116767815 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097928219 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.130389993 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078042182 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.136024819 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.133674527 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.096468221 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.133068666 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.092734581 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.127245185 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.077197352 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093830639 seconds)
  done (took 2.253753085 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097091621 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115473231 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084774151 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.11229674 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078007795 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112643562 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093356046 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120143113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110431623 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08647187 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094806361 seconds)
  done (took 1.843316683 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096216376 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11386849 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083828569 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111271972 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077580291 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111332744 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093657614 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118118761 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111063092 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086614703 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094184645 seconds)
  done (took 1.838284393 seconds)
done (took 6.669743289 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091584435 seconds)
  done (took 0.828126713 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.917033328 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.519755315 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.111325707 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.148616864 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.315385478 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171085725 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.467311409 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124373126 seconds)
  done (took 10.718601766 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.144212279 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.083965818 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.100158266 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.081013844 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.103045553 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.085781318 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100356325 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.099885325 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083389365 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.096955753 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082310552 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.099434892 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097144879 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.082678601 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.097049781 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08483709 seconds)
  done (took 2.330720747 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118141683 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.115762541 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104554259 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106313603 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08627027 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103067027 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.10450634 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088198823 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100124044 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102228689 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089686421 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.103425045 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.102141473 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078884424 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104048832 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106014433 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.083998286 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104931896 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.104701288 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.08909662 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105066575 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.093497438 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086096982 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104414617 seconds)
  done (took 3.236002327 seconds)
done (took 17.853801607 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.157331098 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106803654 seconds)
  done (took 1.009960219 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.097058545 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113658305 seconds)
  done (took 0.961201227 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099196439 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.095588934 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.121215512 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109432265 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.079337756 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095608765 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.117937052 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079152764 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.094619434 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.094783439 seconds)
  done (took 1.740206022 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083318498 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111318958 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101800497 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.096167145 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106620291 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.096142674 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089501358 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100466143 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.112009397 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.078377833 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10290806 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.116052339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087124047 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117163797 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107286408 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.100602564 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.086557425 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099310357 seconds)
  done (took 2.544263368 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081492387 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.099324177 seconds)
  done (took 0.934396503 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083175304 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095185576 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081643757 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099146814 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.095099667 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078332146 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095224566 seconds)
  done (took 1.380688335 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.435897943 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135564349 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262826201 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099484404 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.101670463 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.293866362 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096093068 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083701448 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101375155 seconds)
  done (took 2.420748419 seconds)
done (took 11.741952875 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095043436 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116704942 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113926308 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.455189005 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106394741 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096566613 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146640877 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.248669849 seconds)
done (took 2.139057575 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.144845386 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.562725377 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.419227827 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.234299162 seconds)
  done (took 1.977664541 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.399613094 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.09930594 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083872886 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082138676 seconds)
  done (took 1.429210153 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080971866 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100234837 seconds)
  done (took 0.945493057 seconds)
done (took 5.261998267 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081372994 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.131906454 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.079098519 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.095473197 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079256108 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.094519246 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.076550126 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097166081 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.079352945 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.095297593 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096425971 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.078700423 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095597886 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.077269271 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.092896445 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076731268 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094653196 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076967592 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.092920435 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076798807 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093090896 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.079130889 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.092562358 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077108721 seconds)
  done (took 2.911141613 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.10069662 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097968029 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.101353057 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.084991353 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.100420108 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.084905812 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101413735 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09552174 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085566423 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.097882471 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101279238 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.0830247 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098625255 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.083849616 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098308916 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100693694 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085814026 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096507627 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082143779 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.09981185 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.101211609 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080542799 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.099882762 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084253319 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.099844694 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100153023 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082497137 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.096478449 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101656546 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084018886 seconds)
  done (took 3.57879318 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086805324 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094461637 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.078291053 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101035351 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078914262 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097494269 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07804306 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095714004 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078679897 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095016954 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080556649 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097147854 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079247421 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.096646806 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.079149131 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.097481574 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111147602 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077419062 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094946748 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078034879 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.097914142 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07715411 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094354921 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077246707 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.093870138 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076579197 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.095720813 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077622538 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.094922641 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077654209 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.096599307 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081069087 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.095761951 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103352193 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.082903759 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096284092 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083133353 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.095744222 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.079766721 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.096357129 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.078906864 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096786664 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079241955 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103368573 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079122381 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098662432 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079380854 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.098628066 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079936076 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100546468 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.07824453 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096715248 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098452316 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080630866 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100942645 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07956967 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097454715 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079077501 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.097562171 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.079060438 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096030135 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079295818 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.099166406 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.080701334 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112452984 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085812172 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096750149 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098913389 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.081673208 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.098403614 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.081402248 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111258439 seconds)
  done (took 7.226056601 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.132191472 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124719703 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.07966866 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09707982 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075403894 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.094773614 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.08136183 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.095475917 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097410549 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084633579 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097696242 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.082364538 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.09966144 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.095552701 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.096162458 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.081041159 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.100801868 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093159171 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078455221 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098192062 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078280157 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.09799227 seconds)
  done (took 2.83455136 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.20726197 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.102189423 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141478793 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.10607425 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082874695 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105849452 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.100262426 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083670802 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101336058 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083651522 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098867432 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102324898 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082293089 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099055922 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099974303 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08202128 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100757902 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.082942206 seconds)
  done (took 2.636338809 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095137072 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100129145 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.100193907 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099437392 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100193252 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.196046273 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102893793 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.105273296 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.082490059 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09663569 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090075965 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100240207 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.0829154 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097649086 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100628552 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080375629 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.099991219 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080735828 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109174826 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103630441 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086704776 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10625636 seconds)
  done (took 2.994274549 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098039981 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101074159 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118284669 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084379903 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095073659 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080731407 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106626542 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082173662 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.106657628 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.102247447 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082101035 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098784425 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087864081 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100412135 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105302416 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082765522 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101806494 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.082650984 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102463744 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078454213 seconds)
  done (took 2.674734737 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103463386 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101590287 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102066494 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091093736 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098484321 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.081178098 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107504848 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.098967185 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.08180571 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.123110932 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100362275 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.081912079 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108154425 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105167996 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.098588056 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.090712812 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.107315037 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.107960167 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082404863 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098697056 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12345312 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082024449 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.107069185 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.098904145 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.081329345 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.098560085 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099503759 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.086683888 seconds)
  done (took 3.529480302 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082703037 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100379344 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.07965303 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097520765 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.07942402 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097785579 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079813191 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096249338 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081448308 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097852581 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.082476226 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.097350296 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080989922 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098861433 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.081641822 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098661846 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080076821 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.095668641 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08033252 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096877193 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082210143 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098451618 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081282145 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.096535613 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078793989 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.099772654 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079320775 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.095855878 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080357187 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09527577 seconds)
  done (took 3.456537806 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092562496 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106950942 seconds)
  done (took 0.98232567 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080410243 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116146291 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.0800376 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104811884 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.086968917 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101565283 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108299488 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087693366 seconds)
  done (took 1.548727369 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.098369669 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.112462151 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085029161 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112328318 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.108184483 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097371144 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170533847 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100200032 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104958884 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079585828 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.111971631 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080340896 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105635519 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081389765 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104821345 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087157964 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.095474404 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.103937927 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.084905426 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097178402 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082851665 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107851002 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103916261 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.078378355 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100168092 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.090794714 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111304317 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.10143654 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084524885 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106574711 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087535853 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092606333 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.080829712 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099938502 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079098009 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.10773143 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115752691 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085004401 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109118847 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100373375 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092141069 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09367267 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086879159 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105090022 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109689215 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082529959 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.099523211 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076769371 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099556708 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083896822 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.09422184 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081979351 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.093167701 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.106031888 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084652086 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110179191 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08032967 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100720287 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084068335 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102995617 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.105227912 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083509792 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101514231 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081411832 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109102876 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08623874 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108420499 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094401564 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075726807 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.096645509 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091507243 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122462952 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.106047609 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083004881 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099893319 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079210588 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102630605 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100091706 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.087801699 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105518767 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.083182377 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106901546 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106868547 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081231987 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101477198 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089873949 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097500211 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.10143381 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078901077 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116640708 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080647359 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.096744615 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079143085 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.110281699 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.102159373 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.081283408 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.097206963 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08931142 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093347965 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082501374 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101068639 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10049249 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.092800526 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10484541 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105524985 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090692064 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.105881363 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082361218 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10326347 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.077843818 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100680953 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097665337 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.089099812 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.092797954 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084135441 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.099521474 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.082139925 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108534989 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098017632 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082988913 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107834958 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087784982 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.097931061 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.078338225 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.102613808 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081091272 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10278333 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108343913 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.080963728 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.094545565 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.07761192 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103078517 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081073172 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.102793786 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10543922 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08449612 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.093976525 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080026226 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.103874635 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109746963 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082476197 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.099891411 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088027113 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.099752814 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.080863886 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.105521542 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101604926 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081046609 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105832551 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082482519 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094703965 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084802566 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102136604 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.097667853 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086223625 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103294152 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.08396879 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100293451 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.080840796 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105007297 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.099657557 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080988787 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099620025 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.080465852 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111574416 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102589651 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.076889914 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097413975 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.08949011 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097589853 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081766086 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098762037 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084545223 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100919762 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.097596998 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.080734671 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101894945 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094104319 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104588223 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100758542 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.088059203 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110705102 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082057009 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.102329144 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081548328 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.100413778 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.100495897 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090534277 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105115669 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087175673 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.102414815 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.096405496 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.08805973 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.107862374 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.080992627 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098178099 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081588046 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.10363814 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105907605 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.08680658 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101150326 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080728888 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.100614758 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085867711 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.103123983 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.099544923 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081863806 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.104541921 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.080958992 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.106370033 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101296977 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092334181 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.102460346 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077528484 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10429228 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.097448556 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.087370802 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095199352 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080052205 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098111925 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083945215 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.09866424 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084351474 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093549764 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08956098 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107884417 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.100157533 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081346565 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100345843 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.089486576 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.100742639 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085873463 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10325821 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.105824198 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092765374 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100020093 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085651464 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.110738483 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100048922 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07613327 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105571436 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.080916498 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099111467 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081196104 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.097996377 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085197577 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.109288112 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107150702 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.07641561 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102468427 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081154791 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.098963818 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.076904555 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105125298 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.1026121 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083013264 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106514568 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084290413 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.100854473 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.103276355 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08183905 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101235576 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.08404775 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103419 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.083465031 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102772718 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.080967461 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103517441 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.099015254 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.080816017 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.100598702 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082108838 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100636737 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.08814872 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100063962 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082280365 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103095759 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101789028 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083430702 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.100570317 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08196051 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.102908696 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.082456175 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.099264234 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.103438673 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.076657557 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107796701 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.081778089 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108585547 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082440878 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097119652 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087338037 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103617838 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105689447 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083051049 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.101314105 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083643921 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100131485 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.10285106 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088589035 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.097961572 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09371667 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109798834 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101081554 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.086239466 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.099943883 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084464843 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.099651543 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.08319809 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101145203 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082991105 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.100391639 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.1049547 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.085372889 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.101246796 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084654303 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.10169894 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083061949 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.10219282 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.076964424 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.101235901 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.081783572 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.10087941 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111439513 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083508276 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.099681626 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081407952 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102197263 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.098999392 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.079468602 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.108369936 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092049642 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.100926899 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108313513 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.081714731 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.101775381 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093370526 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095461172 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080626158 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.098152875 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.079934617 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108109765 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.100894056 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092235931 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100744461 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082161228 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.097852757 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.082657278 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100070138 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.095274829 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.0801104 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112850331 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.082222919 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100238524 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083400762 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104045742 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082834192 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111976837 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.099943994 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083326317 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101327662 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080328309 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10089417 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.084792048 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107776034 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.105460282 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083241593 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101827985 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085538165 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104494283 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085862064 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102774646 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085841541 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111771084 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081927164 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103540652 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103895659 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077171297 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.103445607 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.082571769 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.101091072 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.08159888 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105312632 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.104122885 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.083568899 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110509 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.082588599 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101972125 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082242483 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.098780906 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.100954453 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.082518529 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101643283 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082139075 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102450177 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091262886 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.098838186 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.103400471 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082162385 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.100820849 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.089560177 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102401422 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086299229 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.108544864 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100869163 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084545577 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108868601 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086671918 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103940153 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101965591 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.083785427 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106864141 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081819755 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.107777035 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.082936492 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.102013409 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.103212775 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.079919384 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100679781 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08226605 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100062241 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089135108 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.101972568 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082063266 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.100208499 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.098972352 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.083413475 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105475968 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090729479 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.103942354 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086612954 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.096459876 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079293323 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102933585 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.098708644 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085454736 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.104761188 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089765339 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104005433 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083072015 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100664757 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110822856 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089562308 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.105015617 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.081444757 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.105242764 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084116337 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104515061 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.1025727 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083966828 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102887197 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086826671 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.102823203 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.083264185 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109944843 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104791818 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.084656049 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103197858 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.084221277 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102022343 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.07880035 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102417622 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.084903339 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107719184 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103413763 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083953556 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113527897 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.081551502 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102527885 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105166879 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083723082 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106709599 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078664847 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102999482 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084528057 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104036153 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078442736 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101375543 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081632825 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.104295668 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.101039464 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.078767497 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.113338086 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.093033211 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106771451 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100920272 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.083362559 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.096600859 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.079075152 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.100733156 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085013437 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104860014 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.11304691 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.082359404 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.100528856 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.079815807 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10200123 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.086863431 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.104802067 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.080622688 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097374088 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08262499 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105196208 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.107308783 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082581269 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.101507846 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.087426946 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.104115778 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.08195432 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105287692 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080152165 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106202582 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115415479 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.084752626 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102446366 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.108682833 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092399537 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103812784 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.079153073 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103214895 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086228524 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103266477 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.084579474 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10421748 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11865407 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086318525 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101754524 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.083312923 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105137597 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.100873058 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.092947266 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103523334 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084640655 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.107141981 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085603235 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111663468 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104769821 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092106597 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105682018 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.105487095 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083752231 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.101457626 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081716378 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.101102944 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085622425 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103500817 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107138742 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.091867842 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101805312 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095401527 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.112483888 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103730482 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080397168 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.101503907 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.084045294 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.098413693 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.08496546 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100044596 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.082420771 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.101138695 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082505423 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103028096 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108453298 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085400139 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.103809512 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.083304225 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.09661373 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086318117 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105883423 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084505135 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.099871264 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084086312 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.104255094 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.106057764 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087664285 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.100763478 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085580837 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.104435463 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084375868 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.098059174 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109382349 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082765523 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.105096767 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083681456 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102295263 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085244906 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106386909 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108079254 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.086303223 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.10465901 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.092558908 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.106588582 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.081326782 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.099805911 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.108103184 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081860007 seconds)
  done (took 57.466496558 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148012907 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080079614 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098015776 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.078849471 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111911446 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098675657 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079649301 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099121597 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080964706 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101907455 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079290524 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098703304 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107278018 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.12387167 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092973416 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102124371 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097302823 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080340221 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.097989884 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080513954 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108679388 seconds)
  done (took 2.882090935 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105934281 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119533127 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11402789 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.11761975 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089141425 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.113832387 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113731955 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11413604 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.09824538 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111078414 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118226211 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114168344 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090859969 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110910694 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110213385 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092464248 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.117592815 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108639108 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.114659731 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.094505871 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112597985 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11460282 seconds)
  done (took 3.228959605 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.086141068 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103160331 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085586604 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097093152 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083115059 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097453735 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088217652 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100467934 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086356252 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102350099 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.101151158 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.081974649 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103529651 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079197375 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101924517 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081017964 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151037768 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.106392243 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08359525 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105050979 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.098680699 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085824675 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098034294 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079348171 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101746196 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.08769615 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103932417 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081099544 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.102641009 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082590553 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103073056 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.099613971 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.0856479 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103383731 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083030266 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101126572 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083904473 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102655318 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079077206 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.100704159 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083353183 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.098447299 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084146228 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104725514 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.101447338 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.081447633 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.103670524 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083765775 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098074115 seconds)
  done (took 5.463447554 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105279963 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161340268 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.085673367 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.141683084 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.119851751 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112155404 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088284552 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.141452101 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.101469225 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086231299 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.121784341 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119793639 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103720191 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088860384 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.106168352 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.102541783 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084814332 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.1020096 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088293572 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.102273678 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.107153519 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090665836 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.11938095 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118079709 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.106802795 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082508944 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.101456225 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.0895825 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.118115708 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.108662935 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.107907625 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.089547129 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.119051415 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.108714663 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083111626 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107067493 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.120324296 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.08462603 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105563247 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.101316993 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.087052009 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.107753815 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109645002 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101986821 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103675938 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.107848727 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084633119 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.099822268 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.118184424 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086431652 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11076525 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119827038 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088065182 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.103832295 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107973313 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.099006768 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.10311965 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.100487533 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087335048 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.116534511 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.100207308 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.08869804 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118363394 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.105432041 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.091961157 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.11938095 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.108501534 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108324375 seconds)
  done (took 8.096966928 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.095482195 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110392323 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120188319 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.119667933 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091611541 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.109579644 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.11006968 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.09073427 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110483539 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115258852 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110891589 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.132796559 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086296733 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113824056 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.109935154 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091624291 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110945423 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110972266 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090662824 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110960773 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.110931472 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119525837 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091396192 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119566136 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.141675439 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105560172 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091395744 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110859615 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.120136601 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109950367 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123771983 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.090601136 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110511604 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120411982 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123124986 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091343852 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.102962202 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109851207 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091281637 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.110644973 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105281144 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119876742 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090579368 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.105260522 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.110129396 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.09129421 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120673514 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123266406 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.113811082 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.11532551 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.09088778 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.119266733 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110197318 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090790695 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.120553859 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.145763761 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119582723 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119256003 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110071818 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.119982674 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100011869 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.127271441 seconds)
  done (took 7.651267975 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109301783 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.113982241 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116135358 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100166538 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082281678 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107683717 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083123446 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.101858978 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.093855226 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.114237785 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115985542 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107851677 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091865319 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116727737 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108272028 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111022116 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088345855 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108771446 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.113295221 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088941209 seconds)
  done (took 2.923964691 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.097374196 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127155327 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.088269145 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.116066412 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.109753536 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093722315 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109332017 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106886106 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085607571 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106695869 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095885471 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.116619466 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104600136 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090205643 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.115338122 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.110763556 seconds)
  done (took 2.52675525 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101856762 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116317615 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119975678 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084542956 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.103593473 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.101272157 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.085301686 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100812615 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.080857437 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.120640431 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084907918 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108532683 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104247887 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08371648 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.100521754 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087331842 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099868437 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08204111 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104252607 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118656944 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096533487 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103473401 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106046221 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086353325 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104203141 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090100713 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.105481404 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102123712 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.082952038 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104874202 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085528448 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.112569363 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100988363 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084385398 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103006052 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.08210039 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10407066 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084462506 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108129635 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103605901 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.083416829 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105034834 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084562966 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.105935457 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.10109747 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.086093208 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100304521 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091344622 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103406505 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.08502818 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104611911 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107163559 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086039533 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.115919587 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.107644561 seconds)
  done (took 6.260965984 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101185683 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.107568023 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080107684 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103017193 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08744395 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107156771 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107708963 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.086446473 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.106312248 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082250684 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.105689279 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.087699991 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.106957316 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108127883 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086705544 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108081445 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080501131 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106480016 seconds)
  done (took 2.613907463 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.094834639 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107826698 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092776457 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.104644487 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084491888 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107991341 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080034457 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102822647 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102037663 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085045587 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104757306 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087979825 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103114049 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087023592 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.104618145 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084618489 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107815626 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103002367 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085134808 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100248869 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0875551 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102720393 seconds)
  done (took 2.977101469 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.115459361 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.120340537 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.091048613 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.223640445 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.098951986 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.128227717 seconds)
  done (took 1.63586479 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109855036 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119599494 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105346432 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106846642 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114533396 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10572622 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08741939 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107964456 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116426097 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101262854 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108715938 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116482696 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116408931 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096164343 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114842911 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113316747 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107178163 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087630772 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105107051 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127755741 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086580953 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1173862 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107109877 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086174109 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107726315 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115947042 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117406809 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121915311 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087124619 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116450383 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113585334 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087520738 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116764762 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121876123 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108604351 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096785922 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107272498 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127777627 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113365556 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09668816 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.108275462 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.113360319 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095931251 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113288067 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116678533 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107391202 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09323057 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106931632 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107276362 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135080877 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093319847 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117538991 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.113696464 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116463595 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11750998 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133524094 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101055444 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116002741 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11414696 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122714998 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117062111 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094006408 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116393467 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121958745 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114085604 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120047717 seconds)
  done (took 8.113004994 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101979415 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125243283 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108027548 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121313081 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096920203 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107356334 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106988054 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086818421 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108134672 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107063109 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151342632 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087461518 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117137169 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116359325 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107694075 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086875178 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108656236 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115411036 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087301392 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134250679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106300699 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116257227 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117476694 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096521797 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12164836 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.112967192 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107914937 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086910653 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107138469 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107601068 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092543786 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107465906 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116641621 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.08684901 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11764303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10722094 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107726217 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093904711 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108031288 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113506199 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097093199 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127306508 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10714946 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107632474 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121947286 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087718162 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106894311 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086843562 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108366785 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107130069 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12333688 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103022418 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121648967 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116957355 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10749016 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087815853 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.10862221 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108020234 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087958266 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11429011 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116903221 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107529287 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133665103 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088005862 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108481835 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117678963 seconds)
  done (took 7.988453983 seconds)
done (took 154.962624123 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.215445414 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197933621 seconds)
  done (took 1.277862604 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087172591 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.13511623 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095379953 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.167912392 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085478378 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.139586692 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138394328 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097185702 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.105446729 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085880069 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106063582 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087756758 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.170308308 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084913334 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.105704322 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.107425314 seconds)
  done (took 2.66895664 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113569095 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.253895907 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.120855136 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105052057 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089215164 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.108467508 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084593957 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.110854839 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089380659 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104233494 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087933763 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106850813 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.083307809 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.105053226 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.08889789 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.107990508 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104720258 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088142141 seconds)
  done (took 2.818615991 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112206229 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145181721 seconds)
  done (took 1.125433715 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.240225485 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.160798132 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.226430425 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.471512358 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.277557636 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.35458748 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.197612105 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.208474778 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.163532428 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.208480847 seconds)
  done (took 3.370388362 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.117950349 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181701788 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315834437 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.1544284 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105830645 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.125823413 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156052115 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.129037332 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.12204878 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101096757 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.121405205 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.116549518 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.137148874 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.093701785 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.114361527 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.116690385 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.119836112 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.113043799 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.113468015 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.094843902 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.136234166 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105230242 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.093925369 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.112726526 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.117216899 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.09744654 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10520538 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.084451771 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116171857 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.113413739 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092646497 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124964122 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.117970137 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.150995437 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.121783217 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154248339 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.117259576 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.089998731 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114114745 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.089946135 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.117628977 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117666849 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.124205549 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.09651901 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.104656098 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.096836138 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10516563 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084641727 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.114445795 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.117856963 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.09325115 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.112191364 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151129424 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118627532 seconds)
  done (took 7.331007468 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.784385654 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155765817 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089670809 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.877061357 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112264026 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127406447 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.770488641 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111452781 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.253757209 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750199486 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.131035983 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09712131 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.229756927 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.259161398 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.991139742 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.293188002 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.63777374 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125759401 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151182154 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153874994 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117703873 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11500394 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.131674409 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.42965344 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115885699 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089533299 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11876424 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.118550179 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160335287 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123914474 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093064811 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.199645158 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.250502991 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204006583 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093798202 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111279988 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089834823 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191203515 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241725063 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215239688 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180011959 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.108177962 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090754856 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.121591064 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132617857 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086822058 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.182827569 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.17495739 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168334239 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.114746108 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118251426 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098954891 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.120187513 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164118115 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121725187 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.321965496 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.310854745 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089907955 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121238165 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125829934 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.239547647 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123284837 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226599084 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139057866 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.19108599 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111968584 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.784251759 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170357458 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08926331 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118236211 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.11989726 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.093599631 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120827923 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167597541 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.390417914 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124039611 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114936635 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090114225 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242163617 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.103610411 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111737065 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161995899 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.115957711 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098286867 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125196325 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122466668 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16821849 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.23290109 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124239088 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119486135 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092763507 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124603113 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115480017 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.213635799 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218194497 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.161637533 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207769495 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12209109 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.162732639 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190917293 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.096657535 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193935926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097324658 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124608345 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12238084 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216333778 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145892923 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101591281 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116228843 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118609705 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148743868 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.105212004 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119813833 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168643641 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.479721939 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169022525 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.108237431 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106620306 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120911904 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160336949 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118436011 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259471324 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099731797 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.191919573 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097970514 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109627532 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.11967773 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.161656318 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122062149 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099819397 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122726694 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118916553 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.237370516 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215820994 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098929584 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242188901 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183689809 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11720981 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171611996 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120176417 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166807655 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.11911531 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100886949 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.11606028 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.790405137 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101849518 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.120437006 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115411863 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188217442 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089572749 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124440113 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123544195 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087036611 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786664505 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.126580035 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099282906 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124286137 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118921528 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.098798907 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.11823036 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115980668 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.161288701 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227624493 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11979696 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09741752 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125021099 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.16120935 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115872645 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124979356 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.10253334 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12557958 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121366409 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092957662 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125139789 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167918695 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184207026 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.196796436 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.589566336 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111049725 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.101899407 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227317296 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111591967 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287102705 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098022681 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226383536 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162736991 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120588265 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309679101 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164431735 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188909405 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126853434 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.172348599 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109529015 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095854208 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185825657 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089602915 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118661259 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.161328019 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124807847 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122256224 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95756817 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112218897 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224846667 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109024897 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172478159 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116045085 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097489752 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295184797 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111833563 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128169695 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163880183 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091708809 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124230315 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.750682162 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102165521 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122630356 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118280609 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221662158 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.163366343 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119497211 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097941582 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118713071 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161693177 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.23206389 seconds)
  done (took 43.934745165 seconds)
done (took 63.395013375 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278986606 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217163429 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267790251 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171794695 seconds)
  done (took 1.909556298 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.169394135 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149487406 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121212969 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.10724596 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.149634211 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084631581 seconds)
  done (took 1.675861038 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.366899326 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.276281823 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242530486 seconds)
  done (took 1.789362869 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289123437 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.24500018 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472629255 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.323798009 seconds)
  done (took 2.349743154 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208066532 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.13237529 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110195965 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103454836 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.195342282 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.246452182 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143484639 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201063493 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098483787 seconds)
  done (took 2.381392097 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196241146 seconds)
done (took 11.200397547 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.319134618 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.186272877 seconds)
    (3/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.159088869 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.119700272 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.222740761 seconds)
    (6/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.202288892 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.097558634 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.201096575 seconds)
    (9/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.120668422 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.218455955 seconds)
    (11/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.232397683 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.256793206 seconds)
    (13/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.278653821 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.099169215 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.210181177 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.152789454 seconds)
    (17/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.106736458 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176894805 seconds)
    (19/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.120470616 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.144917299 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079023961 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122212995 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.065617376 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.246167827 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.177939837 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.205061468 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.091805278 seconds)
    (28/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.153305289 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.170912491 seconds)
    (30/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.191139477 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.203413654 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.09404694 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.19847401 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.115197454 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.112820645 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.139927859 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.148918879 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.169501792 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.147880236 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 0.148428872 seconds)
    (41/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.207184742 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.233190453 seconds)
    (43/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.119937062 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.138863681 seconds)
    (45/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183969373 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.240531891 seconds)
    (47/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.188525174 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.115273995 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.097080404 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135775757 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114245282 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.151521737 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.100259369 seconds)
    (54/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.113128623 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.204856052 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.119777501 seconds)
    (57/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090084984 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110375819 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.234289803 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.222920735 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.193434019 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.089349733 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066266841 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.175534518 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109274157 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.097190383 seconds)
    (67/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.066967659 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.181829643 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.185089386 seconds)
    (70/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.11093407 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067607564 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.081871371 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.135565413 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.085569726 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.156281465 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.12125279 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217498413 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.191432256 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.13900238 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.109826709 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 0.086130495 seconds)
    (82/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.137947755 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.178613992 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.097710783 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.164449629 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.13609424 seconds)
    (87/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.159815859 seconds)
    (88/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.103749659 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.133869155 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066129206 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091282388 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.086030898 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.133121442 seconds)
    (94/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.199093476 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.142160291 seconds)
    (96/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093441899 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.151083137 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.096150295 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.258529304 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.167213606 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.091697823 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.09244456 seconds)
    (103/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.122264491 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 0.170944549 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.091807078 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.176425555 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093884385 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.137833563 seconds)
    (109/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.148785933 seconds)
    (110/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.07691529 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.085680139 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.11727858 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093975014 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110173767 seconds)
    (115/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.116747574 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.085732567 seconds)
    (117/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.136300804 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.188176164 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.170153384 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.206466624 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.110182916 seconds)
    (122/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.095935677 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.091802851 seconds)
    (124/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066398437 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.365884597 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.214191181 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.100758051 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119951158 seconds)
    (129/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110779328 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111496882 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.140542166 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.067660154 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.182899548 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.117664279 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066131581 seconds)
    (136/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128309789 seconds)
    (137/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.115595687 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116562811 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.066961718 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.114257501 seconds)
    (141/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.066313677 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.0927967 seconds)
    (143/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.152979316 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068709492 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.17758534 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.20313734 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.173063217 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.08767919 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.117612514 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099819293 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.089409477 seconds)
    (152/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094486809 seconds)
    (153/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.170182951 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.123456345 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.075926738 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.108200552 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.093759964 seconds)
    (158/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.151915095 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067526153 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.067107553 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.189836108 seconds)
    (162/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.091607242 seconds)
    (163/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.068288259 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087549391 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.119197546 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.066627346 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.094388276 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094360058 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.176934492 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.066927303 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.092149487 seconds)
    (172/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075708029 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.184277805 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068362937 seconds)
    (175/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118474594 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.183118475 seconds)
    (177/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066116758 seconds)
    (178/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.12562794 seconds)
    (179/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120194047 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.109851462 seconds)
    (181/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.116177981 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113358384 seconds)
    (183/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.066888769 seconds)
    (184/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.093399819 seconds)
    (185/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114954024 seconds)
    (186/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.177404217 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.066334096 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.133132286 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089104112 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.119371852 seconds)
    (191/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.087734762 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.144996686 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093486585 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135149796 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.092180237 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.114268578 seconds)
    (197/309) benchmarking ("sort", BigInt, false)...
    done (took 0.218604158 seconds)
    (198/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.091524652 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.094815626 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.136606157 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.147741504 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066307752 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.091620263 seconds)
    (204/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108088207 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.066812291 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.178708907 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067392303 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.116020104 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.111786741 seconds)
    (210/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.066495828 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085598358 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108344102 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.085639143 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.136310487 seconds)
    (215/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066919536 seconds)
    (216/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.098883129 seconds)
    (217/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.065782691 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.152329483 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.094787897 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118542425 seconds)
    (221/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123729454 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.095243291 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111202944 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.087501706 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.116886681 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087339178 seconds)
    (227/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.146990001 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092175533 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.116881315 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.133602939 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.067334028 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.117531325 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085211654 seconds)
    (234/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067369161 seconds)
    (235/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.111353302 seconds)
    (236/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.163623292 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.092720334 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.137756828 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066424082 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.135034668 seconds)
    (241/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.125680313 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.110285832 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086762471 seconds)
    (244/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11008427 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.190093378 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086249393 seconds)
    (247/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.091643826 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.086743095 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.132917685 seconds)
    (250/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067453454 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.134130626 seconds)
    (252/309) benchmarking ("sort", Int8, false)...
    done (took 0.190255069 seconds)
    (253/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084838948 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120559092 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.213795783 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.137184354 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.091766296 seconds)
    (258/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.067476623 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.111360251 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086435093 seconds)
    (261/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.091186816 seconds)
    (262/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.093759718 seconds)
    (263/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116172737 seconds)
    (264/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085919795 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110360389 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.087113814 seconds)
    (267/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.111837723 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093241663 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.118668386 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.166494201 seconds)
    (271/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.087064742 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110761401 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.196901794 seconds)
    (274/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.11682068 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101980426 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.113040326 seconds)
    (277/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116018098 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06670332 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.139066178 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.067489679 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.130426254 seconds)
    (282/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066781764 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132677423 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.099475994 seconds)
    (285/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118398645 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.094505971 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.090473107 seconds)
    (288/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067818258 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108769442 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066970325 seconds)
    (291/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076951385 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.107995351 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085731047 seconds)
    (294/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.116786993 seconds)
    (295/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087531472 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.118750107 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066757033 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.115335676 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.089545059 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.09150662 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.087191228 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.091396411 seconds)
    (303/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067019437 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.092308554 seconds)
    (305/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.11816455 seconds)
    (306/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.077424137 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.194607195 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.113979579 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.088307147 seconds)
  done (took 39.778850111 seconds)
done (took 40.679759341 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100804885 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.135707715 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.09620251 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135852743 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123760694 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090766923 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118469911 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.09740745 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123730749 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124753561 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098345187 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09398376 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096518847 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120158738 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.09589889 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.134724133 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123042042 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094328941 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118311696 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085389522 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.118335301 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086061545 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112666382 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.070369145 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.1215051 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093874295 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.116650974 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119519711 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086173874 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110316789 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090171396 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118087666 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086701553 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.12439049 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093414711 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118294944 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096166041 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12027658 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.11130392 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086765307 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118026802 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08649332 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116638007 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.093809138 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117011504 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.091623957 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119018217 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098695847 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.135631586 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113462094 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094859943 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120172947 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.096103461 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120251069 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090508234 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121744177 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.117640527 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.111540469 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119422475 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089662691 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119274474 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094640343 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117178137 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.118992062 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.094845123 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121135771 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.097155096 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116728834 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097190922 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116619576 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086323487 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118287915 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.114004037 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.08729449 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.119544972 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098203652 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.109800966 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092504007 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118267241 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092348396 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109737449 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.088834848 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112343865 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.092853713 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113148755 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070622314 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114666953 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093341344 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.109822567 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.094822823 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117033781 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.093770922 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113368621 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098286569 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110669526 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.115125552 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.087362938 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110493267 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.089087237 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.1137627 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.087042854 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112817528 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095766961 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.111575379 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.092810331 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.122601229 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086797851 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117467148 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086602222 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11059243 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.125175391 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097232796 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.110629992 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089693422 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.109858904 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.093603964 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110018362 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086629179 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111261677 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.086222573 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117248813 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087099504 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113557188 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.094845001 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125736217 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086334586 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114640566 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08864197 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111449704 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.092802266 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111009639 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.08662725 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113020068 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.07754283 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113290345 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087445487 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118264274 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090009104 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119040639 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113542198 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095441488 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116178224 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093041956 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116576994 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085776349 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098514827 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.089202455 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.112808326 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.088647341 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111015702 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.089341319 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110607257 seconds)
done (took 16.922547988 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087557446 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185032652 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.150941832 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143338286 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107546803 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.111305168 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121818563 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118983213 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113686952 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142665711 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110776754 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132271744 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147871937 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087778332 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.1122782 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.09169715 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113164047 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103059069 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146076831 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133517883 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.16449202 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.086498741 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.145726059 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.135355439 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120816778 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114218147 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112688201 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091286077 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114980205 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102740322 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.131969401 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114714435 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.087616131 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134563012 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105682206 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12083478 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.111636874 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095461647 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112284155 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088399141 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140836001 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.133387563 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09232193 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117558838 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091040556 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114262149 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088437152 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.121050409 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123093688 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.091543962 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127236422 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155939332 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091519045 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.121564717 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.11031605 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.098254988 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122676993 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090456629 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.115269048 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090173697 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111972683 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091116438 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.12798189 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141293047 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091950954 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122324773 seconds)
  done (took 8.635800747 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.103784511 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138642831 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129842286 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.10619388 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112313686 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088385552 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112862083 seconds)
  done (took 1.761017688 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.088045571 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.133911297 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.110647778 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.135671734 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132200935 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.125634559 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124113483 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088132983 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131584166 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088896724 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133250252 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.151645571 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089197778 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.119609901 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137854572 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.087481398 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.137562662 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087778109 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116801616 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137011648 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091202107 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134132216 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090052199 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113243342 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102472667 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.113104436 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.163011695 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093762659 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115477277 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091495006 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111462456 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165683406 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102895607 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.124531321 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.113225381 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.103165875 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.127625082 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086206531 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129677242 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.117991419 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.102433102 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114218604 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089628996 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112296587 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.093582186 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124193625 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.089431397 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115208063 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092048041 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.133942209 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090166476 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126830096 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.113771257 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.093052917 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115148386 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094728774 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.124091727 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.089687314 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134063539 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090262462 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132172162 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.130452553 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.102763305 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130215506 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092019694 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128947383 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.127399438 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.091238472 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.11547418 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092111382 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131633919 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086684912 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11625826 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099157179 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115323584 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137699277 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.111604831 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.116124452 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.098877325 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114634057 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089551979 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.115208425 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137472865 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.092022704 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11463109 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092998498 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117421692 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086708046 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.112730541 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092273633 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.112366108 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09069587 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117090021 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090011754 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116923576 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.130359866 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.090195035 seconds)
  done (took 11.829685359 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.089890709 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114456101 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091274604 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114779659 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090950151 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115556779 seconds)
  done (took 1.600267152 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114170104 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118257853 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.104404271 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120191033 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.156161672 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129684284 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.103373489 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124227307 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107955892 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127294158 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.12902756 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105045768 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136329695 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121468626 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103102841 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121077829 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.130542151 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.099794512 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127946189 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096494858 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.13727356 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12207254 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097026584 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132636924 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118859999 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.094847424 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.126489884 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102245111 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127615029 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124167071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096105209 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119062178 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121059083 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098023234 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130113862 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095822019 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121427123 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119927992 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099695531 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118939945 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.130087412 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.095884447 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127339202 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094226353 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124105841 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122173033 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094003475 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126632763 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129049835 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.093848692 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120633566 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.094866002 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118980038 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.118784743 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096436423 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123847557 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.093612944 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129948117 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121884898 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.095570852 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119401979 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093278181 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124066961 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.1186039 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104346163 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119421389 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.121046678 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.096498155 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122727064 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095347518 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119384193 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.117799779 seconds)
  done (took 9.266725016 seconds)
done (took 34.052628031 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.685545156 seconds)
  done (took 1.662853387 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.717444988 seconds)
  done (took 1.695465472 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.728408054 seconds)
  done (took 17.707643042 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.503019241 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.584246533 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.816883355 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.178618832 seconds)
  done (took 3.061128484 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.933201887 seconds)
  done (took 1.934890368 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.244968051 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.230721138 seconds)
  done (took 1.463513828 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772000582 seconds)
  done (took 1.768961201 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.345635808 seconds)
  done (took 2.334002177 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.331699785 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185514933 seconds)
  done (took 1.509070619 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.553538612 seconds)
  done (took 1.546032419 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.825518296 seconds)
  done (took 7.824300737 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.258119979 seconds)
  done (took 1.263107557 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.297648247 seconds)
  done (took 1.292457927 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.496912725 seconds)
  done (took 4.490790172 seconds)
done (took 50.535891351 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098622843 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127228679 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101445843 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124852294 seconds)
  done (took 1.439691611 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.099567321 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12173035 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100390077 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121235759 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126257072 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.095157246 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122817023 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100370634 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120952058 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096967609 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.12063649 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120164113 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09797706 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.12267512 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092057453 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123768294 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098425586 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.120600098 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123346766 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095226468 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119703695 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096753271 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124877527 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094210357 seconds)
  done (took 3.65302864 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100123347 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119116144 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096019688 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118089184 seconds)
  done (took 1.434955433 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.099180424 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.141647704 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138525248 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.099600484 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143149198 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137634415 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.092127038 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117298437 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094004395 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126418058 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090531403 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149617211 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.137502271 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.09925794 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127302762 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088474911 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.117036512 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.136569315 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100760778 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126219975 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093120852 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125754747 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090172438 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.138942317 seconds)
  done (took 3.808796581 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.157419771 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.151250453 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139884584 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095232421 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.15640533 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.1416964 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.090329712 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142081436 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087674361 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130505842 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.119554195 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.132991644 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.129232793 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088535288 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113956182 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.1135988 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.10222092 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129583401 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090403831 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145067844 seconds)
  done (took 3.462404745 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.097540698 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117538347 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.087616579 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116848668 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099566205 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121342024 seconds)
  done (took 1.644572988 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.089956069 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115440769 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090207837 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114722003 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.093724681 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115250658 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088639872 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.114866739 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.089355539 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114462782 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.088490471 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113493488 seconds)
  done (took 2.232970126 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.462072039 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092496596 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.120704166 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.11141868 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.095680602 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115048049 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102404079 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.118909486 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140300131 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088387201 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115108634 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.091800417 seconds)
  done (took 2.658806985 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236409684 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125142499 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291124101 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191605307 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158699612 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172114256 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152176497 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164101959 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225126781 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157185142 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205783681 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221990975 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124178864 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216704703 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111146174 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144269165 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222744981 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217266823 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154760521 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23005668 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200614788 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16601159 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178765432 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151647844 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138144899 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170193544 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.094634085 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129964262 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236100428 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178440706 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214103803 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162306928 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146284438 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213067529 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250265516 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221954416 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188313262 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109178657 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.17036915 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165709555 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.266323394 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138810304 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209569432 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158869363 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130693517 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19294554 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166081228 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.173932474 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149021246 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138019845 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222145189 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213103506 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.217435591 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111508624 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160454782 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16026186 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.166871059 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152573522 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25124331 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199408915 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205971515 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094374708 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147203387 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191430718 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208228911 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.166145649 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181466165 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146965459 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193136677 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186988229 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190001862 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191742599 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182242312 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137850257 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170104905 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173359101 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169813719 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257044024 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203360201 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096060974 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168416998 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150270174 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13014397 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168500202 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.12472626 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240052826 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122503167 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.134820847 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163472557 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160895807 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161363087 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197889047 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219306285 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147111838 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084795077 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156035111 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15532229 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187214218 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140694067 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159180075 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161279623 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129573704 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177004408 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.097271642 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176621031 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117336993 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176062894 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184705383 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126863852 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159181604 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152134782 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.151442762 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176799066 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199659802 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141028722 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133520849 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206403221 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177394839 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149899161 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178764182 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.225782027 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11565414 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149694797 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227239791 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217935418 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14066778 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202547432 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153469256 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13528779 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.13393016 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178832965 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156169239 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16072805 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105125529 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.208671099 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208811442 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125672329 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138179086 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188499175 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133509868 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105845421 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161679044 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148336449 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139011025 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.147254203 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.150401952 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181460349 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179466723 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152876112 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166397229 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151072495 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252006717 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141302011 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.149489055 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.120544486 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120535091 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.192566245 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222850374 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103428507 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231299532 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172747342 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155731898 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172425979 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135156299 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176224567 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103112181 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.119994103 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194002596 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166115066 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162658618 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.222078599 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128131705 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.207699709 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181705615 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173422395 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173392054 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164701105 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158222255 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.138221379 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159301595 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16532425 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.095518527 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.142452534 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.13403342 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157148401 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14230846 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106168385 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226035082 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169013033 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149573603 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159531478 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148735172 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179987197 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.1018187 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202736387 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177455126 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146381426 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197139128 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190655807 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213331184 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11509204 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233170917 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120411348 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098210611 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143032071 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170719694 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134308873 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108279018 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192800554 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180100584 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184353768 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176582443 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163952928 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17572416 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189148452 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122027177 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16939626 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184131747 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175465193 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184403217 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140681322 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.123765027 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176407192 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154849146 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255973626 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166335999 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176858632 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235401554 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.148476065 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104048083 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151356702 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211512038 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152706717 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17645682 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146936763 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115558207 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16026033 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133493846 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159427171 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210141015 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135487216 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215530839 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150313423 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187443375 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127250124 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165824883 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157950627 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165102016 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081946775 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17350804 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230600609 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148202342 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169625843 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191546832 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131259459 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.178220847 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210819902 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221526327 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137117866 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159072565 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131321382 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163431891 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198534747 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176572832 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158721042 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188863135 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157024002 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109426557 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139607059 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149546949 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151278296 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.105401517 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148082974 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.201278034 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.110929611 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214563715 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161598773 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.156426992 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168833792 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.121965287 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.145767108 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151464833 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215211206 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201753688 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211641957 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150496724 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.178961094 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230722796 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098665697 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132948025 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132425787 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176620809 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108789541 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217046654 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.120185908 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157678894 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206554001 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192296726 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138602113 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.092869867 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156141074 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172688847 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165138682 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151511116 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158954726 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205234927 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.141890428 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131181532 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17083496 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129105386 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146842386 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223213514 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080514719 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14839888 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100237999 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133719635 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164811527 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232227435 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.108180862 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.184109191 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169776021 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167976287 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164269633 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150112072 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148974923 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165273836 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199990659 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210285519 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.104424904 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156875474 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174805829 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221948429 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159553068 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113477305 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230986125 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193183158 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195893793 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142070244 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167387291 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166466727 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156471761 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212638433 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107475979 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233018665 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106891693 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224686026 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153927916 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142109068 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174621923 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.147727501 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141227395 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186837487 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174019705 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135813332 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105030545 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193886739 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175515184 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154505126 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099306987 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206164707 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.0977203 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.216453872 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231079525 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134236476 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153423613 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145907623 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107350575 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155186539 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155903272 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138875957 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.162756245 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204264032 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13539707 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19066845 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228938944 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16792814 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173296158 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144463616 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.692826472 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.129628198 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192298563 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152653497 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203851005 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149992119 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17216335 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160596894 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167164457 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222631302 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160059468 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23079024 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19225017 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.176860496 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13196024 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158276777 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161524449 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.143780404 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151849552 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166867656 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158987233 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.151146972 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.177316183 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169546789 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.134117117 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112359931 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225127196 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154482948 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186282701 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179143043 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138504456 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171616577 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185612944 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133466675 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179052647 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2340282 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114185703 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150130285 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134113182 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155845075 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260578196 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.096792191 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226890113 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175916213 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157362988 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166032223 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.146743114 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188603978 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156544479 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175589149 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14522296 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.158355829 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155070739 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137048441 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.129268477 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12593531 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191319126 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.120822102 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158260464 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165149393 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191542702 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122458469 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143577425 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128895198 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214787231 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21428216 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.136602356 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135198539 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133737401 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149894559 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.200816104 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176250003 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.107694154 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13578515 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.136790677 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131891005 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.135623959 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153802122 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155925728 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162250816 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206824803 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135515481 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277839051 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11235616 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154462729 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115369423 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.104506553 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149840213 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146893499 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156460099 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149005533 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256499623 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.118430946 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.1326639 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148375879 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097848544 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134969506 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164271144 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165027324 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175170854 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145456002 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107265719 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157429938 seconds)
  done (took 80.560403941 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.161260804 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.131457757 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.145992529 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.20071424 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175626294 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.269244825 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.208983709 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25288862 seconds)
  done (took 2.630274091 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.093248212 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.145305906 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.151832947 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.133309132 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091282179 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119600045 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.331003674 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133820033 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.091169583 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139674631 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.147347046 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.11752977 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.506083239 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.11804047 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117830264 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083192785 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115995654 seconds)
  done (took 3.717247571 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.463637331 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.715137283 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.47961422 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124198015 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.081514929 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.13425397 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.73886103 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.210450837 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094649182 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.481210671 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.769314704 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.185236752 seconds)
  done (took 18.566683438 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.098471789 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121122717 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107425255 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.135515453 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095836987 seconds)
  done (took 1.64649483 seconds)
done (took 128.450144544 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.103270811 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.401628781 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072047629 seconds)
  done (took 1.598690457 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108090549 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137209489 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108435473 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136520824 seconds)
  done (took 1.590090711 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097807894 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127443257 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108804747 seconds)
  done (took 1.428886311 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.323185753 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.189969208 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.141935312 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106171109 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129431983 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.102249727 seconds)
  done (took 1.430280025 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.096726768 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127714228 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097758586 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.129779333 seconds)
  done (took 1.549472341 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094746311 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071243927 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101713796 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075249232 seconds)
  done (took 1.436365431 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.113305701 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13139607 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104004951 seconds)
  done (took 1.446122333 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129721905 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138419892 seconds)
  done (took 1.365689923 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.105686046 seconds)
  done (took 1.199622237 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.117274024 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169127189 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189311193 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164732989 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227968411 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16720951 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141524517 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.11515267 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.13044211 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.14445417 seconds)
  done (took 2.666180464 seconds)
done (took 17.563484064 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.102714338 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.41902602 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.41354147 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.116908545 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721999492 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380925143 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.030012237 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146601167 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165888717 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093462058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140037497 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.701051746 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.997158592 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.379871694 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.983400697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.472229543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.705121862 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092941424 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12025288 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.093570483 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016701462 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092342996 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122408653 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093550706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703755047 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425852072 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095449416 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.471040559 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.091964881 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126572842 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.410427196 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094692523 seconds)
  done (took 17.108477531 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.09510495 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.173729553 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098977776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138069845 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.123562235 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094284972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125601594 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09302494 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180391924 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122946114 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110501312 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121297952 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125592156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094561647 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142514067 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092287493 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125389382 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092516264 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092722843 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122842529 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111425606 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121309205 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.093901828 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122439227 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094135091 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135984694 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123169368 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.092449141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120493255 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098038459 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127951 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.09416087 seconds)
  done (took 4.838354872 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.139854288 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183739996 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.12911388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127326168 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.16818398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.123394021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199123829 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148074347 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.15489104 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123175717 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140377975 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.09240594 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158019858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123325924 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114103118 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122025325 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096437687 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123083832 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.092538838 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.122854199 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.141011275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092872329 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123909311 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093403228 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123359272 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136805397 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094886653 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12214898 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093544719 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127196122 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100343096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124489577 seconds)
  done (took 5.167694129 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096539968 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128984926 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109160026 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139563164 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095687632 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126075309 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097189306 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125070819 seconds)
  done (took 2.029551415 seconds)
done (took 30.239619758 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.104083791 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.12278071 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.097674254 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135269412 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.097725722 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.13184563 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091495236 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.128930048 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.099301845 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.12662923 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.129890037 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092122719 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124304701 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092776801 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.12904282 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.093252322 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133052175 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.096297681 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.133689862 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132732147 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095136687 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.128828301 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.099161938 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.132275844 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103424496 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.133144758 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.133148092 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.09876666 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123355251 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094819395 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125281494 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103608135 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122442293 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10278025 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.122547022 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.092031388 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.121479459 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.092968811 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133250842 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.099106175 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.12544213 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.129211904 seconds)
  done (took 5.903520443 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107495644 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140406977 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104932337 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081813037 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.116907755 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080435785 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138064861 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079554873 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11175062 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.107303871 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077202316 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106469814 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078464248 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102559457 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077094123 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07526128 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109901019 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075325406 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077216578 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107047646 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.079970598 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073188557 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108918809 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078740346 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105193769 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082181376 seconds)
  done (took 3.595053887 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.099776 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135715731 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112533804 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184814014 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160817848 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099531925 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13314472 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140832259 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108760401 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120795212 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096110172 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150053527 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110487474 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128750994 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091902963 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.136602834 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136421869 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094178992 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127967015 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113064336 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139217898 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.103153899 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.142456084 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133712143 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.09167556 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123148666 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096479694 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135965512 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097869318 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131289544 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.126672792 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.095558389 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.12348951 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104862114 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127128894 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094323802 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142585966 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131896172 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.101917588 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122425335 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095377563 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122871074 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.113457324 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.167294183 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.120805121 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.100799454 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.12916828 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.102425429 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122748189 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110990663 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131672307 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092566201 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125846923 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091861649 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.12229611 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135731223 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094315774 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124631858 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102428397 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124771822 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105181031 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125775149 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.107957516 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.121507144 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129666818 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.092799919 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122951676 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.091627084 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.14395018 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094522595 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164449796 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.123307906 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094091585 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131923829 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.099866801 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128178219 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.092246814 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137481573 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102734158 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125392398 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130491108 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.09633403 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124472338 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.111662207 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124225891 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.094435069 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.124079994 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.098891105 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125365683 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094049536 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136976588 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.122129187 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.096210276 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.140104171 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.092843218 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.124123449 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099292761 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127895613 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092446985 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135778302 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.127638947 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.094217946 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132120063 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.093035851 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125104685 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.102642919 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.136168549 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.120621195 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.097471173 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128829146 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093645945 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.123708246 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.096000012 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124819986 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103223833 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.129667642 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097000466 seconds)
  done (took 14.85712918 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.227159612 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.218231617 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.125433237 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.208620391 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.105312042 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.134184266 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213176895 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155128475 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.092864947 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.1240589 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.09410057 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.163182564 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.156244931 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.169755264 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.1044376 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.122371973 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112525426 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165480681 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.21468141 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.207656349 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144928784 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.131645628 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.095457424 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.124499166 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.094771344 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132325651 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.10943073 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.132387902 seconds)
  done (took 5.214164296 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107750037 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.15621871 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09830276 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144553656 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148673461 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093713708 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127794222 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094389271 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135502621 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13570685 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092651908 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.128763819 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.10090393 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.131981891 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.12365124 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103246829 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133262137 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095701854 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126169901 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097794877 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129990439 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.132971048 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097839281 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.122868264 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.100229781 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121579498 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086188447 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144179674 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123587442 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.11495391 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.122589073 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100884044 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133965622 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09376882 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123240738 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094985211 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125299358 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095364766 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125044367 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091145672 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.121368233 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077704631 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122588428 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.135928944 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.099548753 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109609717 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.098932096 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129094323 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.098675276 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120667868 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096363994 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126288763 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096228794 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130712824 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098423998 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.129198968 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096812296 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.1168431 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100315668 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125790783 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084446277 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122189425 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.097550812 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118645915 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.100730522 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.1285936 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092248673 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.12547737 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097183367 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129084386 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.125185581 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.096710631 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121157789 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.095558857 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.128002361 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098109545 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.127431252 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092523568 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12344118 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.093502225 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105930937 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.09398695 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.104032539 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.096656278 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.12286755 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.092819078 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125409742 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.100548839 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.139184489 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095472572 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129936575 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.12351412 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.093090247 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126225462 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08364844 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126547526 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.108343303 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141898499 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.093242097 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122748806 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.136774113 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.098257879 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122620388 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076467962 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.130418348 seconds)
  done (took 13.015053761 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.115858509 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.14908797 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.096094193 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.137282245 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.150496848 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.116744721 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.131100895 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.100069262 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.125715527 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.110482921 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.123943461 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.102460985 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.12659136 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.131822204 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.116517634 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.131107564 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.095061894 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.132727343 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.101188767 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.159000255 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.136762687 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.108051206 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.134315006 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094701505 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.128654073 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.105537502 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.150370389 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.135451286 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.103402532 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.137983684 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.104676308 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.150419862 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.109863304 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.128553377 seconds)
  done (took 5.319240512 seconds)
done (took 49.012256689 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.223844229 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.437399716 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.211273949 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.13070666 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.245034063 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.238675642 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.238765304 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.207749993 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.718497472 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.208900101 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.464049319 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.861729978 seconds)
done (took 60.323375109 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.327931314 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.346870757 seconds)
    (2/2) benchmarking "String"...
    done (took 1.47499817 seconds)
  done (took 3.966246047 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.562767523 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.228521101 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.503072447 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.20941077 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.227477822 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.655381857 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.885606031 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.57747702 seconds)
  done (took 28.425832024 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.21274682 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.608622873 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.944301489 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.950974984 seconds)
  done (took 18.855904817 seconds)
done (took 61.278002247 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.204445213 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.246843831 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.228061372 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.204002228 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.31885639 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.239222927 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.525527524 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.475646225 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.216617243 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189862851 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.243550359 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.218713163 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.211375809 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.511017563 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.214192205 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.208872295 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.29396375 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.722432742 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.621648322 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.217085215 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.226694007 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.255349971 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.233124992 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.209076579 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.228905797 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.209429755 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.211822246 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.231604353 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.807394693 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.210722875 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.218154656 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.720680752 seconds)
  done (took 192.215969447 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.210665491 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.207752095 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.298769198 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248326561 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.645727037 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.410091553 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.348558456 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.738542128 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.234191657 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.242382467 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.457758763 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.216063026 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.522507554 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.196695171 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.226930618 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.314521042 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.478965535 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.520719565 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.244970605 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.485157442 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.234337196 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.597413381 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.526458863 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.411924457 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.275697231 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.269119411 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.234217279 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.214910631 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.419229419 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.422770172 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.234444365 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.258195698 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.851291268 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.069738406 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.238980897 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.218834983 seconds)
  done (took 150.872416429 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.490497456 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.209878148 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.209399624 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.211584262 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.243725752 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.209213829 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.804338382 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.810231158 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.719951669 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.274288851 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.275389342 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.497502261 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.217247494 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.3079184 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.222428377 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.210128131 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.225562329 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.255797761 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.216281947 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.210354819 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.801042569 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.227937667 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.441895205 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.224794776 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.211196349 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.244297488 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.603181892 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214760704 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.243402023 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.535855265 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.261494405 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210020116 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.576775728 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.384920976 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.327735572 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.216262309 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.250315805 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.21101524 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.213342249 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.48428813 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.212636713 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.213161493 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.218013054 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.854772162 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.216176025 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.806963131 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.215753517 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.176313987 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.219528136 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.214841567 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.581174995 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.792066081 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.23348395 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.213650621 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.21568119 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.213983345 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.213275071 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247052743 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.536709629 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.316915524 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.230968397 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.217099206 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.246211051 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.213298373 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.421279858 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.232884829 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.380655897 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.271931465 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.317420222 seconds)
    (69/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.213716462 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.215142106 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.806480599 seconds)
    (72/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.218280221 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309077645 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.335654408 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.21427074 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.213913803 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.214719361 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.212993414 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.323416355 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.214510393 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.639722717 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.221047088 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.216177211 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.275205707 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.308868121 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.213889779 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.586935547 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.21761176 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.214454087 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.946267577 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.310550506 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.215271275 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.214351999 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.214176087 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.639636123 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.808911524 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.455965396 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.219914585 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.535807794 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.219521863 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.656145626 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.783095 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.874209734 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.219677084 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32304551 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.219812562 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.217125452 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.214976304 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.24417163 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.232313649 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.274444227 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.216693968 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.214224929 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.614284095 seconds)
  done (took 347.277358849 seconds)
done (took 692.994483415 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.910950323 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.856991224 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.994848227 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.874614624 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.857198431 seconds)
  done (took 10.643407564 seconds)
done (took 11.790105048 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.403714817 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.405235222 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27825014 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.404754502 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.244385181 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.423716552 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.384260412 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.236125279 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.31987375 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.29942732 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.317316218 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.271233604 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.244859286 seconds)
  done (took 18.385964315 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.531665961 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.566106475 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.279469001 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.537716523 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.257071675 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.570147618 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417371559 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.435868107 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.430979955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.249599277 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.230891177 seconds)
  done (took 16.653447295 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.534671493 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.535179698 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.283774206 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.578745912 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.258348585 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.533220894 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.418458994 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.438040108 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.434764721 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.250149592 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.231709102 seconds)
  done (took 16.645944484 seconds)
done (took 52.831287665 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.226473874 seconds)
  done (took 2.374682022 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.261764954 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.424756076 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.24306225 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.23132111 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.227404244 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.228658337 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.231848519 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.227385466 seconds)
  done (took 11.226272414 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.227093065 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.225978124 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.225215125 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.224051015 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.227219803 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.227024097 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.227084084 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.226867036 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.224467951 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.222856333 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.224943467 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.227231279 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.226917504 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.225436107 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.224634966 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.228086698 seconds)
  done (took 20.763834112 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.22675719 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.223836058 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.225131527 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.226047958 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.224792769 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.225323728 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.22579027 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.225209033 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.22589773 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.225501527 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.225854073 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.225489312 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.226117624 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.225681792 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.225718304 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.225296844 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.22589007 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.225889714 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.229787544 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.225963847 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.225293778 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.226271618 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.225431314 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.226616642 seconds)
  done (took 30.571231838 seconds)
done (took 66.082110026 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.393785322 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.994003801 seconds)
  done (took 9.537759144 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.230329075 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.229611423 seconds)
  done (took 3.611435585 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.229984334 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.22797032 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.22921501 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.228190116 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.229203025 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.2292675 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.229117741 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.230127838 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.228724279 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.22948787 seconds)
  done (took 13.441906854 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.230034302 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.230417945 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.226327376 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.230801684 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.229761546 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.227408028 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.230461804 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.229081522 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.230130193 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.228685987 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.230087574 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.229889973 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.229950824 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.2276725 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.229821223 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.22793352 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.228169637 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.228516184 seconds)
  done (took 23.276092474 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.231487962 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.229763676 seconds)
  done (took 3.612670784 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.227705693 seconds)
    (2/7) benchmarking "second"...
    done (took 1.228010423 seconds)
    (3/7) benchmarking "month"...
    done (took 1.228018631 seconds)
    (4/7) benchmarking "year"...
    done (took 1.227610746 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.228507955 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.228889547 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.228337708 seconds)
  done (took 9.749595132 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.232475153 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.405066455 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.491588379 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.872321214 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.232829272 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.236147616 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.131881351 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.235021173 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.237232343 seconds)
  done (took 14.227875182 seconds)
done (took 78.605152227 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.252571321 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.243192739 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.45366172 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.241517007 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.244612377 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.525632339 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.284361008 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.351894636 seconds)
done (took 37.749196362 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.234335921 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.993914794 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.991686779 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.233959486 seconds)
  done (took 11.373732229 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.211897333 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.196096793 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.225113934 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.248539314 seconds)
  done (took 18.03634739 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.307052047 seconds)
    (2/2) benchmarking "read"...
    done (took 1.566609084 seconds)
  done (took 5.028574173 seconds)
done (took 41.824184627 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232776511 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.233637133 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.232742225 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.230530762 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.232449652 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.231464637 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.231244771 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.234482979 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.233799847 seconds)
    (10/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.234330049 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.235102885 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.233784931 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.23490015 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.232922139 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.231737218 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.23189901 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234245901 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.233306049 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.231351913 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231848358 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.231573803 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236167346 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.232312408 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.231639938 seconds)
  done (took 30.745956266 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.235923485 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.232189074 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.235997533 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.234817379 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.23319334 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.235406523 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.23577695 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.232708119 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.234440036 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.235174673 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233934876 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.233068824 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.237318974 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.231890452 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.235257426 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.23382794 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.236634403 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233490698 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235388205 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.234723617 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.235992006 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232949793 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.23403722 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.236955138 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.233779122 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233733949 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.236921269 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.234157159 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.238004142 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.236095986 seconds)
  done (took 38.200066481 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.241771396 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.244246395 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.238507998 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.237047688 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.237140571 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.237764122 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.236794041 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.236512205 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.236199624 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.238014276 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.238050181 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.237480548 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.237478287 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.236956178 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.237531267 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.237559514 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.237159488 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.237543907 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.238289738 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.23832448 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.237172102 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.238232124 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.237992285 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.239414899 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.238339526 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.237676792 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.238359095 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.237696232 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.238099468 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.238789322 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.239459497 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.239017459 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.239174336 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.23830846 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.238225868 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.238803055 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.243403929 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.244768672 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.238395216 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.238509654 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.239292505 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.239580665 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.239977915 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23911305 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.238926233 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.238672889 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.239644182 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.239057691 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.238469533 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.239854861 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.239208008 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.237859994 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.238737244 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.239532228 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.238586246 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.240574682 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.239574436 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.240308947 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.240126275 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.240096631 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.240663424 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.240742582 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.240567475 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.240360391 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.240053832 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.240095896 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.239847331 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.240107097 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.240509025 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.240211507 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.241072901 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.241368623 seconds)
  done (took 90.374505378 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.240246223 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.239798489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.237615581 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.239153724 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.239313847 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.240645368 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.238348758 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.241044206 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.238202711 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.242693888 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.241970819 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.240454006 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239252149 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.242282597 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241277708 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.238150594 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.240892047 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.238829563 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.24185091 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.243468622 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.241692556 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.239234038 seconds)
  done (took 28.447949445 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.243423792 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.241985815 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.239392067 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.247746186 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.239760744 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.242281448 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.243199268 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.241722825 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243142986 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.24039772 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240702073 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242815024 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.241474538 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.239629688 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.239888479 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240546434 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.243033987 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.239903237 seconds)
  done (took 23.514978164 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.240739943 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.241768295 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.244496597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.240407035 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.240509848 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.243764819 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.240710782 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.243942691 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.243111904 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.241585942 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.244323837 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.242661097 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.244859351 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241545235 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.244290291 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.241554379 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.245071658 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241594306 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.244791275 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.241053746 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.242186743 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.244380122 seconds)
  done (took 28.505109633 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.245610424 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.245916853 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.242386154 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.242560489 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.24147327 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.245771711 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.246048731 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.242599266 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.245189452 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.244751342 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.242760456 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.246111231 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.243854619 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.244973101 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.243323072 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.244116947 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.246449109 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.244857938 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.245686088 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.243218298 seconds)
  done (took 26.05449853 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.24671128 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.245859178 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.247877271 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248798491 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.248154904 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.247092903 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.248101547 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.247554902 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.247517808 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.247731767 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.247507096 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.247009894 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247342344 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.247573885 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.247753691 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.250914924 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.248418886 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.246805921 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.247211383 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.247956526 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.2472344 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.247196797 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.248822357 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.247319116 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.248255816 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.247525058 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.247084577 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.248093274 seconds)
  done (took 36.102953735 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.248694978 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.248467686 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.245338301 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.246543023 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.246855184 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.246725669 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.246456331 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.246601357 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.248202179 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.246220021 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.249988357 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.24817146 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.249003154 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.248776263 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.248787044 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.250460965 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.250046971 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.248060587 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.247408962 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.247268142 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.249877007 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.250702388 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.251257719 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.24788816 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.247374897 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.249861971 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.248651145 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.248376871 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.250738098 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.247472933 seconds)
  done (took 38.618916262 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.270087877 seconds)
    (2/2) benchmarking "in"...
    done (took 1.268802888 seconds)
  done (took 3.708615639 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.247869356 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.250817337 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.250494176 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.248186556 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.248164202 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.250378282 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.251856502 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.24788747 seconds)
  done (took 11.166055835 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.25175726 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.251168697 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.251396528 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.252150188 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.250889986 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.251701747 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.257730109 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.271771399 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.252656745 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.253748261 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.258480345 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.259982521 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.255474603 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.250776167 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.251374455 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253517633 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.251983821 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.251750451 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.252283423 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.252746924 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252161209 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.253730196 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.255465706 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.249198765 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.254297526 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.263677503 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.276092182 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.252720418 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.253184403 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.256803398 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.252397117 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.251094351 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.253527825 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.253643815 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.253192533 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.254193211 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.262025798 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.272855342 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.260811723 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27369068 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.254700709 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.250811508 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.25475772 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.255494244 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.255160374 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.253502032 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.255051177 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.252220943 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.254755794 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.25753023 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.260471147 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.254158115 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.253276365 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258816786 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.256006476 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.260668025 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.273374554 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.258007277 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.264445276 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.265604622 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.288199231 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.280861213 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257021254 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.25537655 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266719874 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.280179011 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.262286367 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.272546854 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.254970289 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.256972092 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.263261865 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.288605051 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.281995765 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.255342355 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.255913682 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.256795222 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.256808455 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.257470631 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.263573322 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.278785586 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.257656033 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.256150973 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.267782645 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280138209 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.256787504 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.257793902 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.256555644 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.256965417 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.259130398 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.266816363 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.276023312 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.258352922 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.257803839 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.258659138 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.259133879 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.25786521 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.257497393 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.258820639 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.25448826 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.258650142 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.258621475 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.262288964 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.267753855 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.258643821 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.257991585 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.265650096 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.278883367 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.25807698 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.264389182 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.259016336 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.258763524 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.260226196 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.26428867 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.256238073 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.261809991 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.26747561 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.258511712 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.259964616 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.259106972 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.261012935 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.269955522 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.285813386 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.259014469 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.259911539 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.264623981 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.269847349 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25870401 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.262793861 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.260026606 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.258310559 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.258769189 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.261420694 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.260972339 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.260200714 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.26006948 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.261347534 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.257993336 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.260062571 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.260492818 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.262024285 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.261329278 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.261848723 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.262712858 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.263000854 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.261328511 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.263273421 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.268422512 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.280889964 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.262723885 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.262641104 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.259481879 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.263079649 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.261900099 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.261576433 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.262000321 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.263058704 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.261589831 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.262188137 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262861045 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.26196073 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.262391918 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.263271927 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265619602 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.26345521 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.265967395 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.262478284 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.261173832 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.263882917 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.262867446 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.262168462 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.262541968 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.263080402 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.266047017 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.270508179 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.26369695 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.263561262 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.266041995 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.263035034 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.263577102 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.262977085 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.266282809 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.271384825 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.263139384 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.26969177 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.282635109 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.263453967 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.264033518 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.264824044 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.263729435 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.263767681 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.266935867 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.271806565 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277494135 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.290448945 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.26489869 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.267791886 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.264997997 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.26741255 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.268722133 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.264230511 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.26449985 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.264495012 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.264336078 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264902443 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.26672574 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.263813152 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.264966127 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.264726253 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.26475837 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.265534124 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.265832571 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.265282794 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.266566977 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.261968552 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.266651562 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.26419622 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.265003508 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.263133677 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.264397437 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.265067108 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.266982351 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.265085358 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.272044812 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.263501546 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.269071157 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26714719 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.266219779 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.264852294 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.267256244 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.269117093 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.266505062 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.274556488 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.286505198 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.268214926 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273812809 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.285082233 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.266394125 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.268798096 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.267487801 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.264138134 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.269380859 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.275290718 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.266695009 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.267350317 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.26783313 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.266825716 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.267478122 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.273259285 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.285221222 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.268208813 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.268794317 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.268476111 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.266032002 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.269106437 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.26918368 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.269547508 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.270134401 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.268522858 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.268686742 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.268198267 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.268469908 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.268080131 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.267917638 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.271935482 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.275219052 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.273672107 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.268628081 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.271528815 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.269402012 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.273414641 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.269475171 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.268537849 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.268605281 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.282239093 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.295805414 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27567802 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.290741046 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.270156647 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.274747082 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.291584108 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.274260532 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.26966039 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.270674189 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.269662137 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.270132143 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.267421185 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.269734638 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.270276497 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.272150121 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.272051215 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.273634012 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.271206654 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.269983855 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.271235377 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.270319952 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.27177391 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.270444572 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.272019581 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.271880637 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.273401887 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.270320082 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.271874944 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.277949874 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.291169023 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.272257504 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.272392437 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.271626768 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.270828724 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.27334513 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.27148968 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.276626744 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.28026665 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.274506247 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.281974292 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.275610041 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.281337681 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.271819946 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.276369522 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.279749214 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.270162213 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.271184079 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.272446927 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.273322613 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280318697 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.29348587 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.274603688 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.276367443 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.273697555 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.273992161 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.273440208 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.273775343 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.273213426 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.274532964 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.280380561 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.293333885 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.275220302 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.274880159 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.271379796 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.274483078 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.274116743 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.272756441 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.277433499 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.273541666 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.275749333 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.273967251 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.274800776 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.275911149 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.272797822 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.274529081 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.27227508 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.274896236 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.280984151 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.294969399 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278057362 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.274861455 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.282875601 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.29551135 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.28119951 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.294845831 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.27572044 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.276062116 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.275807827 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.277256078 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.274658833 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.274711668 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.274755481 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.27703273 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.279253077 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.275787931 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.278372121 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.276461474 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.275712386 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.274993801 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.286295249 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.300015325 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.277681107 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.281053762 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.274738575 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.277338208 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.281336267 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.275974516 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.276621455 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.280562633 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.287450691 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.285150473 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.277558546 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.278507753 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.277216963 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277683423 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.27707533 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.277701961 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.277865219 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.278698532 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.278955516 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.277356052 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.280842583 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.277597082 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.278570988 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.280014306 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.279095034 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.287831499 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.29821242 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.279610454 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.27858837 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.278623477 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.278364338 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.279206052 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.278358972 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.278893599 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279161272 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.280839247 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.28688212 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.285148097 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.280690576 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.278351014 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.279247423 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.280603504 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.278383378 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.280646718 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.281037349 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.280793235 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.281906525 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.281900582 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.281480354 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.280763331 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.280130527 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.280022745 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.279774426 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.282786479 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.287631551 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.280731866 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.278506564 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.281804897 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281540947 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.278947376 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.279948406 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.287582037 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.304449381 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.290981527 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.289743687 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.283844543 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.281488179 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.282457838 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.288198641 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.27909765 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.281769923 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.281561087 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.283164414 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.281576081 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.285139586 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.281256275 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.286867143 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.301611312 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.281186599 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.290110711 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.30283564 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.282057115 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.28358766 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.285367418 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.282035878 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.281119801 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.2836867 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.281969848 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.288319691 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.303190929 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.282458563 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285949471 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.281042135 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.283678788 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.286928021 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.282721148 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.284764366 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.280700005 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.283710631 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.284198711 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.283340624 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.281982264 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.282205555 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.282869408 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.286106345 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.290209429 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.281795116 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.285361232 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.282754188 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.28666359 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.284037983 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.285431505 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.280810147 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.281728565 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.282746828 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.283874772 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.284791621 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.286282139 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.283062144 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.285151926 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.285074689 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.285113861 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.288613376 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.294663257 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.29223388 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.282035036 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.284532726 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.285113181 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.287962227 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.285447221 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.285503328 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.28598297 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.287041767 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.285851321 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.285466528 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.286019 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.28946749 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.30111933 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.30629961 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.286296115 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.285747204 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.289087864 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.285024129 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.283419971 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.287030197 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.287420684 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.291753698 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.294831398 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.287419599 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.293200749 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307442801 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.289033885 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.290248794 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.290087804 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.296673431 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.291089746 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.287924444 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.288567926 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.292569293 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.30388592 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.288508643 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299918865 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.317628509 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.308755024 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.289427349 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.287566823 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.287414575 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.287582573 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.290025087 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.288529044 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.28953034 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.288679691 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.289420342 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.290479527 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294681781 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.291931006 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.29229225 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.289984426 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.289053518 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.293078048 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.287182999 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.289435226 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.290061441 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.290520287 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.291656316 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.291353435 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.289607701 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.30348308 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.320346536 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.290570769 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.289169093 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.288464984 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.293891504 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.292912257 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.299307408 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.299622119 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.288920898 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.291150415 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.292734594 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.290316096 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.289777925 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.290934698 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.292236972 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.290921295 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.290857696 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.303425123 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317981098 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.295719482 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.292368265 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.294713658 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.290947111 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.291526171 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.29152003 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.290523089 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.291745571 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.292619761 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.293718422 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.291602367 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.290598002 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.295304337 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.298077392 seconds)
  done (took 760.769668244 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.29008885 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289743874 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.290525139 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.290979294 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.289567675 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.288922197 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289270943 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289072612 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.289731023 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.290672879 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.289837388 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.288446591 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.290493317 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.290972618 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.290942658 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.290918615 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.293058927 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.29079084 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.292120381 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289205742 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.290108487 seconds)
  done (took 28.307552759 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.293254691 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.290569387 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.290431633 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.292498182 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.290019672 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.295023794 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.292331704 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.294144093 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.294577502 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292904955 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.293776296 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292848043 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.290386493 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.291693013 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291698631 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.296185663 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.294260614 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.2940648 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.295899659 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.292139652 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.295274252 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.292277369 seconds)
  done (took 29.658519957 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.296364646 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.294417614 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.294194755 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.294015205 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.296176657 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.292423854 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.297642154 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.298232359 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.297316871 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.29801642 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.294533624 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.296449287 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.303814771 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.302530285 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.299785522 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.296180683 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.441422657 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.299058648 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.296349968 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.297263491 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.294425814 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.301858693 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.316768115 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.295812116 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.294785909 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.297785991 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.296569791 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.299658123 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.296946152 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.297832704 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.299676549 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.297178048 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.297072256 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.302923376 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.297449602 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.299261616 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.303296059 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.298742205 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.297141932 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.298851372 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.310572977 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.31874012 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.298153623 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.305309931 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.323421634 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.30025819 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.30288063 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.306995282 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.297884155 seconds)
  done (took 65.051084141 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.300463756 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.299821415 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.295773761 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.298132667 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.301630812 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.298867448 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.301241901 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.299348945 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.298426795 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.299316 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.300193409 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.296849829 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29608982 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.301003909 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.301211423 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.298140209 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.299274421 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.29610025 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.296510049 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.296856205 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.29933197 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.301277436 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.300749193 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.297313092 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.299341527 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.294734465 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.29985977 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.300144139 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.30028413 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.296785919 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.299909583 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.301036675 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.300225314 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.299509787 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299229216 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.302773468 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.300658446 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.29866439 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.301290662 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.299327502 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.301922774 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.30165459 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.300884653 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.299590134 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.299098013 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.296920175 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.297494231 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.299966335 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.299252229 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.302341636 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.302240425 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.298900058 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.301069322 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.300834488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.300326522 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.303543485 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.301723542 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.297479226 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.301130261 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.298061773 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.298055778 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.300940248 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.298862699 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.30148788 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.301233256 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.300665528 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.298814427 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.301112596 seconds)
  done (took 89.596049114 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.302489384 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.3006363 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.302019522 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.301929975 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.302219124 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.301783826 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.303301763 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.302684427 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.303285654 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.302247547 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.302555292 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.306203469 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.303015195 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.304824388 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304974883 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.304879347 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.307076912 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.303020631 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.307199582 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.305081352 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.303381891 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.304665316 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.304618916 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.303046349 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.305213379 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.304444041 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.304750831 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.304939231 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.30705299 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.307359905 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.303790817 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.306600865 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.30553011 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.304258079 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.303889142 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.304509286 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.303421935 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.303672811 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.30557939 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.303696335 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.304606343 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.306297273 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.306371428 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.307267254 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.307286459 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.306192486 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.308367776 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.30714867 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.307085418 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.30786287 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.305329935 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.306720626 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309128619 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.306199642 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.307051024 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.306291632 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.307724684 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.308146511 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.307243347 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.307142431 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.307686986 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.308393095 seconds)
  done (took 82.146435389 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.306349115 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.308508044 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.306047282 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.304322896 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.304433612 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.30580536 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.306907009 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.306705425 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309028627 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.307210472 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308926503 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306525682 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305572546 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.309247557 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.307170449 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30469964 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305759777 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.304805848 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.311339228 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.306930866 seconds)
  done (took 27.36388566 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.309621795 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.310376413 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.30619895 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308058837 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.308848032 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.30857944 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.309261574 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30853543 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.308810114 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.310327475 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309998418 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.309077491 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.31004891 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.309817267 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.31210157 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.305790905 seconds)
  done (took 22.173408809 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.309717228 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.310588098 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.31278429 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.307795537 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.307900674 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.308364546 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.312283058 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.309615637 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.307456447 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.31175686 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.30975897 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.31252682 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.309860886 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.314116974 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.30802798 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.309152343 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.309667043 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.307933915 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.311730784 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.310628688 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.310630636 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.309740296 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.310611006 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.311155745 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.310017258 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.308429397 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.309761528 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.311438777 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.311563886 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.312648407 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.311234298 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.313053467 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.310296041 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.310457588 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.311191318 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.309115718 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.312710339 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.311701383 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.313210138 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.311284914 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.31415627 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.308420568 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.312503573 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.314112612 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.309490001 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.312033771 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.3096523 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.312497859 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.310001337 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.309254103 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.315933667 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.312705708 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.311626274 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.312816368 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.312074655 seconds)
  done (took 73.327624543 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.313010201 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.311653394 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.311734769 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.31472022 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.312568356 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.310097026 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.315163558 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.308469589 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.311526879 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.312194815 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.311534367 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.315014208 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.310641918 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.311581578 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.314125896 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.313953295 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.309490486 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.311868684 seconds)
  done (took 24.849087025 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.312932743 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.310280332 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.315561777 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.312952295 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.311131418 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.314953259 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.313156412 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.314855381 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.315201851 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.313906293 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.312137264 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.313917736 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315208284 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.31628475 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.3152282 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.311943419 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.315437048 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314043149 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.312835534 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.310791303 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.315936398 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.314645578 seconds)
  done (took 30.135170154 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.314382008 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.3169458 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.313269072 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.328207803 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.333923333 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.337086736 seconds)
  done (took 9.172337157 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.323838268 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.314820872 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313730625 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317145182 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316614605 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311355803 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31447567 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312579817 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316651995 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313839703 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312026774 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.315311112 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317451118 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.312972016 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.314522065 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315222602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.314928333 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312117654 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317844255 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317774584 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313629259 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316212378 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31355754 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.314591668 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315619097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316459014 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317366018 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314264931 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312884128 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.316297364 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317144397 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314404271 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.316729383 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.314583013 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318281459 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317226908 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316101165 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31950545 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.318118624 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316702744 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.319340672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317960165 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317607838 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.316837886 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31907337 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318452496 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317478754 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313676869 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.316150655 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318374082 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317649468 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315009547 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318906077 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320302098 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.321322892 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319693737 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317432729 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.316236748 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317732012 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.317585472 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.315922647 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319663047 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318910061 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321760846 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319700391 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318701099 seconds)
  done (took 88.151391088 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318500075 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.319109814 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.317755308 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317468983 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.315651382 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317716412 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317373724 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.319185229 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319299861 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317357828 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319784607 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317681904 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.318624435 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.318079247 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317956264 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.315781232 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.317869055 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.318763985 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.317355966 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321565743 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.317427572 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319038548 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.316739987 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318089131 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3200442 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.324379412 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31825257 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321095543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.319376448 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319677196 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319304347 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319988162 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317232342 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.3186277 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.318741461 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317398311 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319426404 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319189968 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.319311976 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.320499452 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.317737895 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.321804771 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.317206342 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31863346 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319949928 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.319761598 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318193945 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.318549528 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.319149609 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.318850707 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.319730256 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.320415119 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.322480935 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.319544068 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.321135489 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.3202519 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.320056041 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.31978876 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320960287 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.32468849 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.321056281 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.320169257 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.324533587 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.320530762 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.322020154 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.318064587 seconds)
  done (took 88.30898751 seconds)
done (took 1775.603368138 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.323669098 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.408819672 seconds)
  done (took 13.970576247 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.490922891 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.439842595 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.320705353 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.352382793 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.323475221 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.323028959 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.337072097 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.322222111 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.323335608 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.321732483 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.322291575 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.512839494 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.317863214 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.321840821 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.320793503 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.415997547 seconds)
  done (took 43.01295402 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.350630577 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.32928921 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.448718462 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.346107889 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.350177472 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.525250806 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.388757643 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.327592565 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.512115887 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.371187535 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.011043634 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.351872987 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.328359866 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.524855906 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.346211434 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.525342072 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.591035969 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.013724766 seconds)
  done (took 30.880209936 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.818398512 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.349446646 seconds)
  done (took 9.407873158 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.340324137 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.341469959 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.32062262 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.319471755 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.343135207 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.415652522 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.362914766 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.360112433 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.366095307 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.319211511 seconds)
  done (took 64.740421219 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.347863911 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.326595598 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.327517777 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.327050008 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.331691056 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.320148331 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.326231583 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.319978354 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.37224309 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.463418476 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.348817323 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.336013284 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.347685383 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.329992909 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.325830973 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.366734616 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.476181194 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.344878696 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.324993576 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.332768773 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.327890434 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.42647178 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.371613501 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.326276363 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.463714107 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.376571215 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.330181298 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.333744565 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.454203832 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.3471844 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.328122207 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.326382358 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.329973427 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.914872245 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.854547015 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.339206343 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.371570648 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.336485699 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.326336865 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.459573966 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.351202743 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.335950988 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.321520464 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.848740854 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.489611762 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.449364471 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.652646881 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.329374654 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.331472119 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.393287003 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.331132517 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.328687561 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.359833518 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.130908825 seconds)
  done (took 112.237694887 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.337833604 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.822346094 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.494276 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.346476864 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.235094947 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.116508272 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.341153266 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.636654374 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.399536616 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.322039712 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.614855697 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.865872175 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.348073042 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.393376946 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.852773958 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.328983299 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.328014124 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.141216662 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.343500428 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.332070867 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.758142367 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.342949632 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.32425295 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.498467355 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.364391529 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.815391367 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.941997365 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.872907626 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.342788578 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.324209542 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.827342069 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.347556965 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.377254191 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.324476125 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.609659281 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.711657152 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.701957146 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.348659895 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.375935139 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326788541 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.352611998 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.812178496 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.714657472 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.342485871 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.324922101 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.817470367 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.343552427 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.334834457 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.329648664 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.537866156 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.091817667 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.327054144 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.982508629 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.331179062 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.620747888 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.373583317 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.364123418 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.844010082 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.348804956 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.500881273 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.370851684 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.326155071 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.334543183 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331163082 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.32678244 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.701297972 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.716261221 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.330037883 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.702660056 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841076008 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.346051535 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.881761143 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.294540169 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.331172042 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.368649445 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.32558041 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.052609075 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.864050379 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.350887445 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.327367483 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.688090072 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.345298212 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.620079166 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.345387502 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.327865418 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.765136195 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.354914279 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.352173474 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.327581692 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.347251486 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.13013045 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.331242331 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.626418514 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.395425815 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.328641006 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.330278048 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.36577194 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.334525291 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.347313242 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.334730939 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.887308726 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.355700002 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.475482337 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.352035446 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330177426 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.330036692 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.331179858 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.32845884 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.557534021 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.823518314 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.333687126 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.328868699 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.329955555 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.353098021 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.504582962 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.331404052 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.663393281 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.349938227 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.329082348 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.333233043 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.196170085 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.374511686 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.330500067 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.350952697 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.188478984 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.557392181 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.349321789 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.350128984 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.331377594 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.349192355 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.838348268 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.332126708 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.410786793 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.329594043 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.065616821 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.354939254 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.363591426 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.752525081 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.337174307 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.329932699 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.338862962 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.333047718 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.644394654 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.618587222 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.711343192 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.344007612 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.331403413 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.045979113 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.362579198 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.482753031 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.351939207 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.316415158 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.53007413 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.61648306 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.333312094 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.890377569 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.331693365 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.553404346 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.332605474 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.658280653 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.857276936 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.35135818 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.338106306 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.075171564 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.011074506 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.04761717 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.33480238 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.624505572 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.351188337 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.789382315 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.332217676 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.333926066 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.925367918 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.33606983 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.337433333 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.33410316 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.33383028 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.403643708 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.510757351 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.056572086 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.335435374 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.821838778 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.378918444 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.346298244 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.335141493 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.338085711 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.690418246 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.374461697 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.339177183 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.337517764 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.333623497 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.336357679 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.833548342 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.320634854 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.335473354 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.492495774 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999036689 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.353108559 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.333924931 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.013069105 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.701751557 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.908829856 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.418580792 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.672407384 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.356284342 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.377791499 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.17255849 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.412148028 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.83620718 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.356914896 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.33682818 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.967325767 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.354825134 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.449120514 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.337152341 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.33831982 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.905559708 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.355023717 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.340044742 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.831617884 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.336094517 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.612536412 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.33541072 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.351430817 seconds)
  done (took 1114.853092149 seconds)
done (took 1390.336683789 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.337710716 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.342349924 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.322924182 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.341103588 seconds)
  done (took 26.601631824 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.345243779 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.34146877 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.343789442 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.341430397 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.34381932 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.341545332 seconds)
  done (took 9.315990725 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.469184152 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.342363912 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.343331608 seconds)
  done (took 19.41150899 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.580854056 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.718453188 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.751344862 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.755419852 seconds)
  done (took 11.065067619 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.342960483 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.344081374 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.343409534 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.345735103 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.34725992 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.348850486 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.345315124 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.346178869 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.348793545 seconds)
  done (took 13.368802551 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.612110726 seconds)
done (took 86.63035447 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.35420183 seconds)
    (2/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.348542955 seconds)
    (3/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.596742093 seconds)
    (4/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.465683401 seconds)
    (5/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.618419911 seconds)
    (6/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.526160474 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.398643546 seconds)
    (8/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.328169844 seconds)
    (9/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.368455007 seconds)
    (10/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.434051278 seconds)
    (11/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.05088784 seconds)
    (12/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.354952989 seconds)
    (13/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.918182008 seconds)
    (14/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.365300481 seconds)
    (15/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 4.405157452 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.010265675 seconds)
    (17/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.405335875 seconds)
    (18/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 4.158052177 seconds)
    (19/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.447012223 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.037555294 seconds)
    (21/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.336714439 seconds)
    (22/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.45557186 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 4.420924082 seconds)
    (24/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.263263032 seconds)
    (25/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.339010408 seconds)
    (26/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.419482718 seconds)
    (27/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.222850805 seconds)
    (28/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.719921741 seconds)
    (29/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.320443084 seconds)
    (30/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.763352121 seconds)
    (31/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.02360929 seconds)
    (32/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.422398317 seconds)
    (33/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.980120329 seconds)
    (34/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.44259911 seconds)
    (35/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.379803785 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.368395988 seconds)
    (37/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.359218976 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.455280425 seconds)
    (39/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.278628145 seconds)
    (40/309) benchmarking ("sort", Float32, false)...
    done (took 5.400495123 seconds)
    (41/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.93369168 seconds)
    (42/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.795157656 seconds)
    (43/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.359674602 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.138632808 seconds)
    (45/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.533150272 seconds)
    (46/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.074894239 seconds)
    (47/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.202815915 seconds)
    (48/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.449924262 seconds)
    (49/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.34317073 seconds)
    (50/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.61090739 seconds)
    (51/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.565803345 seconds)
    (52/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.261999424 seconds)
    (53/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.622475057 seconds)
    (54/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.385412739 seconds)
    (55/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.32120239 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.710768591 seconds)
    (57/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.422222946 seconds)
    (58/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.397466 seconds)
    (59/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.571032091 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.365326748 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.341165079 seconds)
    (62/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.929907044 seconds)
    (63/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.701269872 seconds)
    (64/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.636790993 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.789806829 seconds)
    (66/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.4727211 seconds)
    (67/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.96077931 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.446512617 seconds)
    (69/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.766159746 seconds)
    (70/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.443115073 seconds)
    (71/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.41231634 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.946822509 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.912712645 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.141777932 seconds)
    (75/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.760582454 seconds)
    (76/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.349972566 seconds)
    (77/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.343896845 seconds)
    (78/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.343908726 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.335567956 seconds)
    (80/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.342116693 seconds)
    (81/309) benchmarking ("sort", Int64, false)...
    done (took 5.604797883 seconds)
    (82/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.426223479 seconds)
    (83/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.780142127 seconds)
    (84/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.360753116 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.4181503 seconds)
    (86/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.71171797 seconds)
    (87/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.981000521 seconds)
    (88/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.769872327 seconds)
    (89/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.789813117 seconds)
    (90/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.008840437 seconds)
    (91/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.261442716 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.340007967 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.045360092 seconds)
    (94/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.472617997 seconds)
    (95/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.35053413 seconds)
    (96/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.370343254 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.370584306 seconds)
    (98/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.348038439 seconds)
    (99/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.325696572 seconds)
    (100/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.681489015 seconds)
    (101/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.897127337 seconds)
    (102/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.839466482 seconds)
    (103/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.355267524 seconds)
    (104/309) benchmarking ("sort", Float64, false)...
    done (took 5.723983689 seconds)
    (105/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.363675785 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.439764987 seconds)
    (107/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.371144027 seconds)
    (108/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.389340499 seconds)
    (109/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.757050539 seconds)
    (110/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.275461194 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.768256023 seconds)
    (112/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.575783088 seconds)
    (113/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.34476073 seconds)
    (114/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.83348428 seconds)
    (115/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.389615521 seconds)
    (116/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.234168721 seconds)
    (117/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.358330682 seconds)
    (118/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.685624912 seconds)
    (119/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.35518962 seconds)
    (120/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.841692471 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.350340162 seconds)
    (122/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.432819399 seconds)
    (123/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.342517597 seconds)
    (124/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.779421307 seconds)
    (125/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.41379013 seconds)
    (126/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.346130644 seconds)
    (127/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.498128233 seconds)
    (128/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.355265305 seconds)
    (129/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.3618282 seconds)
    (130/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.368407072 seconds)
    (131/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.285017236 seconds)
    (132/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.471287984 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 1.868672063 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.388894472 seconds)
    (135/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.627580254 seconds)
    (136/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.883119843 seconds)
    (137/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.232671539 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.606920362 seconds)
    (139/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.340668284 seconds)
    (140/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.178830568 seconds)
    (141/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.040306058 seconds)
    (142/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.628517897 seconds)
    (143/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.326938566 seconds)
    (144/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.36645969 seconds)
    (145/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.512331705 seconds)
    (146/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.084949093 seconds)
    (147/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.332454105 seconds)
    (148/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.367649411 seconds)
    (149/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.451970475 seconds)
    (150/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.814564679 seconds)
    (151/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.850112962 seconds)
    (152/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.373807031 seconds)
    (153/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.34643526 seconds)
    (154/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.903429857 seconds)
    (155/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.738273462 seconds)
    (156/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.187864848 seconds)
    (157/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.374602754 seconds)
    (158/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.356170455 seconds)
    (159/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.96301023 seconds)
    (160/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.344931869 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.370679989 seconds)
    (162/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.327456681 seconds)
    (163/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.434535801 seconds)
    (164/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.50508129 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.373461079 seconds)
    (166/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.038104995 seconds)
    (167/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.745092772 seconds)
    (168/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.3716138 seconds)
    (169/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.200668237 seconds)
    (170/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.394532802 seconds)
    (171/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.358015841 seconds)
    (172/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.921647585 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.385367562 seconds)
    (174/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.328488759 seconds)
    (175/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.359407184 seconds)
    (176/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.318841323 seconds)
    (177/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.311240723 seconds)
    (178/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.774931428 seconds)
    (179/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.353857038 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.774466613 seconds)
    (181/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.770716632 seconds)
    (182/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.432649031 seconds)
    (183/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.542138051 seconds)
    (184/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.396271397 seconds)
    (185/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.431571744 seconds)
    (186/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.747766375 seconds)
    (187/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.791324829 seconds)
    (188/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.614823732 seconds)
    (189/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.433730132 seconds)
    (190/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.399632784 seconds)
    (191/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.466084007 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.416893632 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.37558808 seconds)
    (194/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.36686511 seconds)
    (195/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.649818241 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.089734841 seconds)
    (197/309) benchmarking ("sort", BigInt, false)...
    done (took 6.352183507 seconds)
    (198/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.761727203 seconds)
    (199/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.410467067 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.069846362 seconds)
    (201/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.742965472 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.802874573 seconds)
    (203/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.18300668 seconds)
    (204/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.475761747 seconds)
    (205/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.077989439 seconds)
    (206/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.35715971 seconds)
    (207/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.361569671 seconds)
    (208/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.896924697 seconds)
    (209/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.457490136 seconds)
    (210/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.629142761 seconds)
    (211/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.015747107 seconds)
    (212/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.408816651 seconds)
    (213/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.346337303 seconds)
    (214/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.225373956 seconds)
    (215/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.881292521 seconds)
    (216/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.922210215 seconds)
    (217/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.702755286 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.331961218 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.003016859 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.56686143 seconds)
    (221/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.088677567 seconds)
    (222/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.3768625 seconds)
    (223/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.389277374 seconds)
    (224/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.480981845 seconds)
    (225/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.259739236 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.351948863 seconds)
    (227/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.766733411 seconds)
    (228/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.383565222 seconds)
    (229/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.377909442 seconds)
    (230/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.368667321 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.333317185 seconds)
    (232/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.38116551 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.392287135 seconds)
    (234/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.999625107 seconds)
    (235/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.371869517 seconds)
    (236/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.355040356 seconds)
    (237/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.500705275 seconds)
    (238/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.996126642 seconds)
    (239/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.017987714 seconds)
    (240/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.397383595 seconds)
    (241/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.654215984 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.3504748 seconds)
    (243/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.044815569 seconds)
    (244/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.623404954 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.371028045 seconds)
    (246/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.886374605 seconds)
    (247/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.571203604 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.117824927 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.836868569 seconds)
    (250/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.571491725 seconds)
    (251/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.605884243 seconds)
    (252/309) benchmarking ("sort", Int8, false)...
    done (took 4.418752926 seconds)
    (253/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.068526488 seconds)
    (254/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.454673214 seconds)
    (255/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.467718368 seconds)
    (256/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.964572982 seconds)
    (257/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.380037022 seconds)
    (258/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.03915904 seconds)
    (259/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.373330281 seconds)
    (260/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.583285371 seconds)
    (261/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.564320279 seconds)
    (262/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.45842473 seconds)
    (263/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.443375217 seconds)
    (264/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.910795475 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.311726448 seconds)
    (266/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.159288694 seconds)
    (267/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.438834187 seconds)
    (268/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.380880263 seconds)
    (269/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.741405279 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.374454472 seconds)
    (271/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.356995346 seconds)
    (272/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.194342082 seconds)
    (273/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.355742757 seconds)
    (274/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.061037869 seconds)
    (275/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.374878448 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.353713559 seconds)
    (277/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.482976202 seconds)
    (278/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.859095342 seconds)
    (279/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.235185157 seconds)
    (280/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.330867571 seconds)
    (281/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.008175811 seconds)
    (282/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.496205799 seconds)
    (283/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.626151841 seconds)
    (284/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.095196813 seconds)
    (285/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.400542788 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.438848782 seconds)
    (287/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.187910799 seconds)
    (288/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.104132962 seconds)
    (289/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.438829042 seconds)
    (290/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.856240767 seconds)
    (291/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.814687666 seconds)
    (292/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.486449241 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.437795591 seconds)
    (294/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.382691135 seconds)
    (295/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.403347526 seconds)
    (296/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.17081122 seconds)
    (297/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.879760336 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.399517293 seconds)
    (299/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.421314479 seconds)
    (300/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.083821543 seconds)
    (301/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.357061711 seconds)
    (302/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.055755635 seconds)
    (303/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.91437619 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.399248128 seconds)
    (305/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.367469852 seconds)
    (306/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.188902478 seconds)
    (307/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.365678827 seconds)
    (308/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.381095372 seconds)
    (309/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.448817696 seconds)
  done (took 942.93497135 seconds)
done (took 944.192212076 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.390721496 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.38450218 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.36845991 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.390405532 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.481389409 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.395800564 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.380493511 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.370418051 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.417337425 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.419188422 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.368923829 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.393092948 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.371653181 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.368920713 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.369153215 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383541217 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.497891253 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.371924413 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.387520113 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.379390569 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.387169839 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.368661488 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.419636656 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.39476987 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.373176917 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.372067939 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.374270337 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.389770389 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.483075957 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.374242289 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.373592772 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.382090536 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.498243304 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.37058828 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.366636403 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.392021481 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.384266915 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.381483494 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.375484387 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.403501047 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.948044682 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.389866197 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.372377651 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.372927415 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.371468405 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.376600539 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.374252663 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.380213434 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385116532 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.386029769 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.935734854 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.406187195 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.376834192 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.372779181 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.383573619 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.373697759 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.374651202 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.389921458 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.392662108 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.389398115 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.483708943 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.378540356 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.374747452 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.390739486 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.379937674 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.973095832 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.388515306 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.376766776 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.017469603 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.404961003 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.070777962 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.406705096 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.374850617 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.387839919 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.405384789 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.546177886 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.375007894 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.374120763 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.3819328 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.373278573 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.383883463 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387070435 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.3781286 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.375446128 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388932777 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.400096229 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.384220469 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.375763523 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.384015494 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.393938887 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.382523493 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.385579052 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.377898034 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.371014433 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.384437285 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.378695115 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.37768295 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.378600709 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.379478644 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.386923408 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.01298384 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.417491492 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.371763592 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.371406476 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.374619803 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.389870271 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.012341352 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.401813521 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.398177908 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.424334067 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.377639412 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.532000565 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.386810312 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.391945017 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.386930825 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.380251406 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.37312764 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.524110065 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.953752024 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.410286744 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.378276728 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.37727125 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.392343679 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.378929866 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.374319938 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.557353567 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.384831542 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.390766102 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.498724368 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.387792738 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.409135563 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.375315706 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.382562372 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.402566307 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.394474581 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.409728234 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.380996518 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.393538718 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.393705154 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.373727866 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.388364924 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.389003689 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.38011308 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.385110843 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.37205448 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.407937608 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390720125 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.39101075 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.398147957 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.499453326 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.376352366 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.546902562 seconds)
done (took 234.162070647 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.436862114 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.368232516 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.458979319 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.37418666 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.478859305 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.480644464 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.373050429 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.373617795 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.372722234 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.754354897 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.3738861 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.374496156 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.376598252 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.373555865 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.459752256 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.376132796 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.373504446 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.716581089 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.376250277 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.44451388 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.372498564 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.373374496 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.375792813 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.760047215 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.370960827 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.371078291 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.448129541 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.376399937 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.727779888 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.37247686 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.374364593 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.726685943 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.465341714 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.393169236 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.385448661 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.384490003 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.479534292 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.397521017 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.458847083 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.459899489 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.46318779 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.415157447 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.371415688 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.369778759 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.379435063 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.377082166 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.374938595 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.403679867 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.371576572 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.375619956 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.718766059 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.387441936 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.375436692 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.37463854 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.375623936 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.406221153 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.374894548 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.377484718 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.466315212 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.379091031 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.44070431 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.762611185 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.756522014 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.378313821 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.378746168 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.376203734 seconds)
  done (took 151.309165695 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.443618836 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.449577417 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.497667552 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.398413014 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.428252685 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.50329875 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.39859851 seconds)
  done (took 11.408868511 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.385274733 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.379943665 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.429173869 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.428576994 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.380183868 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.527793764 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.381161872 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.390571361 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.377711134 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.432169479 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.380928821 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.380321268 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.38677209 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.373375884 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.427724191 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.390667473 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.495382078 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.381181233 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.379915435 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.531246234 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.378037987 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.387462879 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.432689237 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.391763901 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.380467561 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.385908573 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.008055413 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.380184952 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.379096833 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.382208626 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.379226488 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.417849199 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.381442084 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.380349946 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.378692972 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.534092556 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.381798107 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.380059351 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.382617435 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.381859136 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.382289126 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.382303188 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.381514599 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.379451422 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.383679282 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.405369365 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.383540338 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.382860246 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.383090892 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.38302535 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.432682233 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.382394037 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.378314471 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.378889209 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.437854374 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.389593624 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.38339917 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.38122561 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.384320543 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380891525 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.534470701 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.430511465 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.381776993 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.431194029 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.383699212 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.38431116 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.384108741 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.383741229 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44812712 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.384124712 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.430868255 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.380816553 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.537982103 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.406720468 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.386042339 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.385913422 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.386282054 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.383071508 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.378830223 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.388850501 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.38137916 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.383881905 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.390417145 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.381739214 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.38246215 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.513857074 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.511738118 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.382102928 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.398636539 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.390555004 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.380847747 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.438271719 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.385236735 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.383551883 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.436363665 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.499230303 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.439110668 seconds)
  done (took 158.105608846 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.390625087 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.393012386 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.387023727 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.401584786 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.385394342 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.387168758 seconds)
  done (took 9.639659511 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.388036716 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.387089195 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.386473491 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.386936781 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.386059272 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.386464653 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.386356548 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.390880999 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.391898045 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.388209976 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.388044045 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.387832474 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.388718825 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.385219341 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.387766046 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.387301453 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.386392634 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.385009802 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.386321483 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.38556837 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.483356697 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.388684284 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.387606671 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.389566249 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.392129025 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.387145411 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.396090231 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.388757234 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.38840366 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.396819599 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.411634627 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.389484442 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.388922096 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.392766285 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.393036173 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.388932014 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.39315846 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.390809847 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.38617457 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.388805729 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.389818975 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.389754721 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.387940617 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.390292335 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.390610135 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.395951554 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.395603511 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.396925037 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.390035404 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.390136639 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.391266982 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.388800209 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.390027344 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.39115538 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.390650684 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.413227523 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.394559166 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.389946142 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.390065877 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.390979972 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.392084855 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.391738689 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.391943789 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.39444445 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.398129032 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.392726321 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.391478165 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.393687558 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390356411 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.390534687 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.392596383 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.388665672 seconds)
  done (took 102.523666469 seconds)
done (took 434.27148184 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.464626703 seconds)
  done (took 7.765662551 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.57480524 seconds)
  done (took 7.878346791 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.716768936 seconds)
  done (took 25.024197324 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.423055126 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.461398226 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.401211884 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.393173828 seconds)
  done (took 26.98305675 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.460482909 seconds)
  done (took 7.761117274 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.383627883 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.395690958 seconds)
  done (took 14.081102894 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.581523712 seconds)
  done (took 7.884370458 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.040036479 seconds)
  done (took 8.346527051 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.391855142 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.411858023 seconds)
  done (took 14.376069763 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.380529682 seconds)
  done (took 7.682128327 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.632701686 seconds)
  done (took 8.934798204 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.391435189 seconds)
  done (took 7.694251461 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.468003222 seconds)
  done (took 7.769734376 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.347402035 seconds)
  done (took 10.649944506 seconds)
done (took 164.129859794 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.384751531 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.392188003 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.392802311 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.391547729 seconds)
  done (took 26.863983743 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.896668811 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.425326887 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.426253721 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.437493506 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.429552095 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.444457673 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.418423682 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.419132892 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.43826476 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.429502101 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.427385015 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.429208072 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.425402972 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.418792323 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.428367802 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.428545694 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.437811286 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.429691471 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.418518814 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.43379117 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.394546041 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.437071319 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.429670364 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.39369489 seconds)
  done (took 36.002831855 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.919117302 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.466741573 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.546473844 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.446688957 seconds)
  done (took 7.682183276 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.444792183 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.447351459 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.459535219 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.500273471 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.524023116 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.457871906 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.420861778 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.415365942 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.401863654 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.448345484 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.522449166 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.462921593 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.532349106 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.394181164 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.59462041 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.393898993 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.394486452 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.446529817 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.497799826 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.511625005 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.395242791 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.447687095 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.450401956 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.464972387 seconds)
  done (took 36.334198862 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.407148332 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.401675348 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.394323128 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.392738037 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.416132128 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.394706912 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.395927868 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.396108563 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.395482269 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.400947678 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.392994692 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.410386427 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.394409573 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.394533193 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.402027445 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.397846407 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.402688956 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.394906314 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.396683512 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.40042578 seconds)
  done (took 29.286420202 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.390256481 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.243794956 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.741618407 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.646158365 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.391475719 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.39074365 seconds)
  done (took 28.109806741 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.475961249 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.638799772 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.398304538 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.800257275 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.896135982 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.416706357 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.396935706 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.662562709 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.026592561 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.035163936 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.467474341 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.471340577 seconds)
  done (took 20.993958302 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.402321354 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.398723219 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.404841655 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.412155766 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.458245195 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.42001863 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.40458302 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.391413148 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.467085061 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.483052485 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.422164133 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.46001221 seconds)
  done (took 38.433527999 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510967326 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.44543186 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.521657941 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.253714412 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.11881735 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.602729184 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.311893014 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.839935047 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.398102171 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668058654 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397922714 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513754608 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.649964012 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.409450044 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400436649 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.49280149 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640602674 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938132519 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.396315024 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.706237454 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.419244612 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.393333387 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.814403438 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.425435268 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.606187525 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.377196499 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.655174126 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.169379997 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713337083 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40554282 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405470681 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.39373702 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668442473 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.104725309 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.510893801 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405593062 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.287355032 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.943270053 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.377750984 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.715689243 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406393197 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397485155 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405748522 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394781049 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.328561252 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393778972 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.876613524 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.401435725 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.106591429 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.396073547 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.406512125 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.48942733 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.400808325 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.969088952 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.509360305 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.401839335 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.392452021 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.403074474 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.964064253 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.193313315 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.406302663 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.337403656 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.900674107 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.722279646 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08369471 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.518368015 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.400678696 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401280331 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.33264136 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.776976428 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.41313937 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.534206626 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.422068057 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.057453979 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172050147 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.423360789 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.327459762 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003384217 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.411492868 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.335439997 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626793435 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.173334616 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.337290909 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.342387482 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331946132 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.200153645 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.40760778 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.885435043 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.407430311 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.843197689 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.410919627 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416428062 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.422370969 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.623739199 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.276935103 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.397182136 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.398793952 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51551598 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.420111653 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.850222246 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335003347 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.402805419 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.657738539 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.611337073 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402570164 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.51387413 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.640548404 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412235732 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.426813956 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.40415816 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.417124361 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.038564429 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430830111 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.187333002 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41612083 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.17618017 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.224542312 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404152905 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.506682057 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.39981247 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668327253 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.248761494 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.284110799 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.469122111 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.406728525 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401363222 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.822477991 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.252735789 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.283522181 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.397763842 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.412980482 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.418742785 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.40182645 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.358504486 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.411638602 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416862293 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.179867178 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.626465427 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.404214473 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683784803 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.335639967 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.539757681 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418750772 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.626236764 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.714185035 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.41964354 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.664827349 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412312773 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.419636811 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.419856573 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421779031 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499361744 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424843689 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.404387527 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.667956865 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.406917756 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.407631358 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.852599515 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.182141144 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410859146 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.40935721 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.292575796 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.047117913 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.394687837 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.406875567 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.296176601 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.416456049 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470738701 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.409220327 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.414246363 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.461008359 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.433620716 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.40883839 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.399945801 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.628980869 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.414463143 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.760289098 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481929182 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.618383163 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.048835796 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.43781661 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.338269482 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.114888518 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.097733914 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405403265 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.608797662 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.404865642 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.414041219 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416193601 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.07935533 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.047718165 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425850373 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.770616432 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.411782459 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.416469772 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.409560905 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405079806 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.443425558 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241568113 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415298678 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.424581362 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.547864434 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.420315154 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.34077682 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.922100329 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.411854676 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.405458342 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.184541327 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440783186 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.756939158 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.907398837 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667760966 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.254463546 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.419216354 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.944534564 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.442943991 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.435359982 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.407745713 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410914508 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.418594175 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42473627 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.41817468 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.768668028 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.857028406 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975606678 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197214973 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027171464 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.455812824 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.408934543 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.29973654 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.862469097 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3441265 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.068608649 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.618729574 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.88203642 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366618753 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624897849 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.719380161 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.282353569 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.417902917 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.637745592 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434703116 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.426286086 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420929337 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.620691691 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443366919 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.411615944 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.339489867 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.690272603 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.66180232 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.426553128 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.488462739 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.864905462 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.418106124 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.188742157 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.408362484 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.875777786 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.619956305 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.9593156 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.8050694 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.421140623 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.409573245 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.92674859 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.415182574 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.939670171 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.087130911 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.430823965 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.634401499 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351521742 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.423489647 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.421617217 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.406689308 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.942308104 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.420942062 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.669375901 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.422122332 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.345927935 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.41372273 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.997833262 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.2872002 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.416256935 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412969236 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.258987881 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.41226101 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758114573 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.412473417 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.45282424 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434074195 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.346567378 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346652513 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.104854461 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421105676 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380650549 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973740275 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.859034161 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.512974387 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.447386572 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.269769162 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.670176681 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.426774621 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.061246678 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.660138649 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.377171356 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43543155 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.513128403 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.414846569 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.394781001 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.296348763 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.650970471 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.295906764 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.638053993 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.549027337 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.314329226 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.410970515 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.625709502 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.307117382 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.421550808 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.68070773 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.145061487 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.423660411 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.191793405 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.457295285 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.414367703 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431629198 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.918952373 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.424574532 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.485009156 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.425736746 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.424831777 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.425611269 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.602859318 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414553627 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.415146614 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.429771071 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508004855 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.245385162 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.437708851 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.189032227 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069825875 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.230167104 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.086576246 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.448915394 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416888098 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416923931 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349535147 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.562842385 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.945191838 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.692012064 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.537238421 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.001063127 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437557921 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428754734 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.419918051 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.62972692 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.690574432 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.29217978 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42966416 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08560403 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.582584451 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.426331291 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.628865425 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981026856 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045197936 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542969552 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.428517325 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.878026949 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.691865876 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.508136377 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416715099 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.011641215 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.435012405 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.888945514 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.44494223 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.418237118 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565518927 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.428013342 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125655871 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.448870172 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.577309825 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.190948973 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.900034976 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.676808407 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.970670192 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.430191364 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.071771409 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.218172324 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.685691046 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488807665 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.430228543 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.530906519 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.56463805 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.420615487 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.312932046 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.417571137 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310853033 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.129201564 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.429351618 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072656701 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.705432433 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.416271204 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.424155558 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442627507 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.430516697 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.645762561 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.220284821 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.645368356 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.430416475 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.430140679 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.411275334 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073947027 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.453332485 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353933543 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.423690204 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.687970495 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.677683832 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.445535579 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.873068425 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.131869691 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034750662 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.397318764 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443092491 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435796503 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.204665405 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072544696 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.470738002 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990440337 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082997219 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434701871 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.695503193 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.427665914 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.435264693 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698453242 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.425723089 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.435187469 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44205419 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.073321268 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.304054425 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.424827417 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.865749187 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.358011747 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.649699421 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.145630778 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3592255 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.421705942 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.618322404 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.422084405 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542274948 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.435208116 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.427039138 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.438714925 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.1555276 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.70241539 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.428831384 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.418927761 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.417327131 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424717708 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43822998 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677965486 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428556293 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.099501411 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.77503626 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.681431415 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.440567568 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.409322965 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.427088507 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42384907 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.148376682 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.402150725 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.102630578 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.060976318 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.432017794 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.441295575 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42824688 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.6413717 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637707662 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.43753762 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.43879314 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427318572 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44760801 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.325243524 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.197347355 seconds)
  done (took 1636.793132668 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.456645183 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.48227444 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.449370466 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.437796315 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.485695463 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.522084005 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.473142176 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.548830563 seconds)
  done (took 53.194522107 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.425672837 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.582010106 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.458059856 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.428155292 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.442034152 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.437255047 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.935451433 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.448836058 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.435423452 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.434875472 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.430010112 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.432816376 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.146941499 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.437166659 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.428457037 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.424377375 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.434802647 seconds)
  done (took 67.108842126 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.439463066 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.021912231 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.458289357 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.427150722 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.00094312 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.447684439 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.912578467 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.442436396 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.430858213 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.433177113 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.086403347 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.478132896 seconds)
  done (took 81.920209394 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.435640283 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.435317006 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.435741386 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.43585002 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.436082543 seconds)
  done (took 8.519468855 seconds)
done (took 2072.544838538 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.674597258 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.234547037 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.149622706 seconds)
  done (took 5.72660795 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.574562671 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.627440813 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.787661579 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.781383262 seconds)
  done (took 8.114073649 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.71507464 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.813301411 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.625626993 seconds)
  done (took 6.495259885 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.047786109 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.442936119 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.576754411 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.428343051 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.435052441 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.437386346 seconds)
  done (took 20.64243991 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.432792469 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.434915046 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.432693571 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.434892979 seconds)
  done (took 7.078873943 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.408562854 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.137536676 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.409562272 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.433377889 seconds)
  done (took 18.730292021 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.179343952 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.201787769 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.17614503 seconds)
  done (took 7.899054376 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.427021047 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.2943428 seconds)
  done (took 10.065121452 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.738528921 seconds)
  done (took 3.081082328 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.563127142 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.761281563 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.597495731 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.522262441 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.614133573 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.83507277 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.31553185 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.832298265 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.492019788 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.998100512 seconds)
  done (took 30.874955915 seconds)
done (took 132.789810462 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.699145962 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.45365464 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.632786131 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.712292434 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.672983152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.632307678 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.703775447 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.678376503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.176982096 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.163951751 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.668110691 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.69284051 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.667054672 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.45479649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.667013604 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.834225486 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.664045073 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.727801641 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.359495913 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.430103573 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.711451861 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.303856129 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.499716094 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.320633853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.663165214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.581253161 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.892929389 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.834380956 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.438861121 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.90130789 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.582464638 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.431176513 seconds)
  done (took 200.197990374 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.432437538 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.444645151 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.433513435 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.451990475 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.441494036 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.432652412 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.451426484 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.450352736 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.459973592 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.432685788 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.430767854 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.436144582 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.433770587 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.451168352 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.432158301 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.452243908 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.437570571 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.449335444 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.435375369 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.43338457 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.433243124 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.432349029 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.439352221 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.433312566 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.433339597 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.455139021 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.467539672 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.433484686 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.434320591 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.451161443 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.43493248 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.433621321 seconds)
  done (took 207.450321909 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.433227081 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.435509926 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.434351801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.434742572 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.445102046 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.434658555 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.433537198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.454763089 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.448558444 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.44036867 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.434384285 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.46685214 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.437113643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.433766588 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.436849342 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.434640843 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.456206746 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.444879986 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.444645569 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.43447116 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.435551197 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.435609341 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.434314951 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.434026567 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.438695581 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.436486829 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.4367627 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.436379161 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.435918073 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.442326648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.437372195 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.451090986 seconds)
  done (took 207.42130884 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.636696223 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.445063076 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.445227866 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.377984089 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.444739281 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.444376247 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.435198547 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.64309511 seconds)
  done (took 15.220635389 seconds)
done (took 631.633058947 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.89325238 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.600362429 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.658144191 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.466162458 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.32184416 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.486346415 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.465406211 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.649802958 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.404409933 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.658537382 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.796483241 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.481943238 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.945719638 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.464301377 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.733323704 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.569079091 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.418560223 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.538775965 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.805024349 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.071969272 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.747557559 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.01451831 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.668175804 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.402995949 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.969935648 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.012744867 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.345448156 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.397086244 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.484575239 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.807838737 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.269578961 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.613979613 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.540290042 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.531361914 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.586987576 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.569108467 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.54354286 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.530677554 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.675274646 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.768947273 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.079543329 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.214958927 seconds)
  done (took 98.556188191 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.430477753 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.428948777 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.427270073 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.429264582 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.430325486 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.430177465 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.42818041 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.428788769 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.428918569 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.428833123 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.428673486 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.431658894 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.429196544 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.430375808 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.428313562 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.429385828 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.430866079 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.433527079 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.428740969 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.429436672 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.430082144 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.429559058 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.431250045 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.430365669 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.431290166 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.430663673 seconds)
  done (took 38.528560615 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.448223267 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.724703977 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.907141574 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.462935143 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.448245473 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.452654767 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.538248141 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.451832262 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.452749796 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.452548972 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.631392863 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.454257594 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.489314584 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.93330601 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.452961793 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.45051822 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.45209357 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.448636703 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.732193436 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.460181085 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.562758692 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.451914329 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.53991356 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.460219518 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.477047314 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.452072213 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.455603258 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.987586042 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.474685731 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.630172295 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.375504349 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.545790626 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.937669006 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.932071948 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.377486687 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.461651296 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.451998808 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.640289993 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.453102384 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.452008676 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.539690607 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.453209257 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.907659742 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.092088061 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.474561081 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.452757514 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.004818916 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.658571094 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.733476416 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.46052984 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.93402512 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.454940425 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.455772205 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.454362301 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.73394264 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.458927164 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.451714725 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.013042916 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.477816257 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.541073542 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.455137792 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.45455379 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.735954523 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.454450269 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.723212061 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.454932462 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.462265203 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.475967247 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.913337305 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.456895731 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.127391968 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.475895052 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.454663997 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.6329334 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.723126339 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.044232893 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.479297157 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.740391957 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.952055232 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.562409944 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.458903088 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.972741385 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.566137163 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.459014371 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.456703746 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.457385454 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.454515343 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.499701666 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.542545565 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.050984587 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.127102301 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.03442339 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.565234998 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.468092047 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.456107439 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.01466163 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.47641536 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.454494147 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.906942583 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.115358683 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.475229216 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.463995246 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.126311275 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.477277332 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.546179125 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.461864902 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.927656143 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.457286317 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.50192931 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.457651476 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.462855231 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.480991245 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.544617956 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.458706129 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.456403331 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.092279063 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.664177748 seconds)
  done (took 191.447432488 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.463313067 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.450797806 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.458628444 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.44863996 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.450540787 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.456787274 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.450532851 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.449421 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.454949024 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.450972638 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.451854022 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.45037927 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.451474702 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.450544528 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.460473971 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.457434027 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.061795691 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.452081735 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.451094819 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.470665975 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.280112628 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.451513773 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.452322927 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.47063623 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.453065631 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.45336914 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.461376312 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.45490566 seconds)
  done (took 155.533972376 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.459525805 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.098172022 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.479089114 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.609157394 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.482261695 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.457434267 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.605339137 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.52411315 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.480133924 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.458104352 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.456279697 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.80254019 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.459732302 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.0443286 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.680679826 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.629201747 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.044166795 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.480332593 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.458415665 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.457455448 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.611405924 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.465210936 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.801800687 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.100186145 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.482328243 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.101061689 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.445205369 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.460920138 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.460264867 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.105030687 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.479220549 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.805214777 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.549213986 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.528932533 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.123841197 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.067627394 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.065895543 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.634258023 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.465583354 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.458909579 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.459998676 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.443443545 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.105561345 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.482502187 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.461189491 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.096208749 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.482040385 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.461031834 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.471286658 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.460887709 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.528569844 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.549290162 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.82918015 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.109893742 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.56929563 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.481872464 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.616619198 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.844241952 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.46405197 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.048199385 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.444651068 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.110970447 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.484641704 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.445680162 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.462576734 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.466970476 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.63444561 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.617430232 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.056450461 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.482834586 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.048972941 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.653266857 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.460704871 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.462105799 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.464479014 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.111058092 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.068396451 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.652804033 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.615688359 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.686685165 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.448597382 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.461597432 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.446595274 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.55044103 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.463159226 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.113728373 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.069903946 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.483304263 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.464470538 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.464695868 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.465146669 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.668035814 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.130576535 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.571661325 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.039828709 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.832037081 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.812595245 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.466783835 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.532731923 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.48393417 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.815869754 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.466853768 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.529536179 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.902529777 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.815593233 seconds)
  done (took 175.643950245 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.732419104 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.847776875 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.564057645 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.607357383 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.093384568 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.079124811 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.809480345 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.625409602 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.585489428 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.746278688 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.73607286 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.555640412 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.660133734 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.547238684 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.237571225 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.561057137 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.584444658 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.63127435 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.591704306 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.569526 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.155966623 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.773179633 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.661693124 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.543635899 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.565686682 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.340663554 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.074342239 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.025359928 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.661588781 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.932853997 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.021508487 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.684479779 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.505345638 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.207924091 seconds)
  done (took 70.892401442 seconds)
done (took 731.950568386 seconds)
SAVING RESULT...
DONE!
