cset: moving following pidspec: 6025
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.2594543 seconds)
loading group "string"... done (took 0.558822992 seconds)
loading group "linalg"... done (took 7.851711208 seconds)
loading group "parallel"... done (took 0.175272457 seconds)
loading group "find"... done (took 1.191463097 seconds)
loading group "tuple"... done (took 1.891356846 seconds)
loading group "dates"... done (took 1.272160995 seconds)
loading group "micro"... done (took 0.236533975 seconds)
loading group "io"... done (took 0.771819726 seconds)
loading group "scalar"... done (took 42.767327244 seconds)
loading group "sparse"... done (took 13.398481403 seconds)
loading group "broadcast"... done (took 1.159435278 seconds)
loading group "union"... done (took 14.235774363 seconds)
loading group "simd"... done (took 4.823852612 seconds)
loading group "random"... done (took 10.035249487 seconds)
loading group "problem"... done (took 2.186258511 seconds)
loading group "array"... done (took 22.991456395 seconds)
loading group "misc"... done (took 2.16581644 seconds)
loading group "sort"... done (took 3.491531479 seconds)
loading group "collection"... done (took 19.663158956 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.58652276 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146142843 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.154167257 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.150267628 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.193379314 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156385033 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158953773 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.09731513 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.005375757 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.181582748 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155873081 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.533846615 seconds)
done (took 5.323506518 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.219968804 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096388379 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106653021 seconds)
  done (took 0.942689291 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077681465 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147637137 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095805292 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07815953 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097500697 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.07853599 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.097298945 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.081075208 seconds)
  done (took 1.423669503 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087978057 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.100295212 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082870108 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.099337227 seconds)
  done (took 1.120829921 seconds)
done (took 4.542488988 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.753519772 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.285274846 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.207181611 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.478478126 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.201757185 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.221381818 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.687516561 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.358269195 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254167698 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103743905 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.146356606 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.395279263 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.140810924 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680992392 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089990712 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127659793 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.1808122 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.463786819 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082263249 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112094439 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.119208396 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.141303137 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.130127334 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093337135 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187956673 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081187341 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.197007282 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.111028432 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080517148 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.295844522 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202933029 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686964596 seconds)
  done (took 11.087463793 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113482398 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137292403 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.100160466 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139347607 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.133737305 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101210414 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.085351397 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.09851954 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125198001 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.179723682 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130718888 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.122072633 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.0979593 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083129856 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.118151428 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.248608298 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.119244978 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.103905026 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.103773447 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.105858473 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.123848807 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114159633 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111242279 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094104514 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.169687782 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222808914 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110318271 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125760488 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097087988 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11228815 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145526292 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142232253 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.094707982 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080913202 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175250308 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125295645 seconds)
  done (took 5.255051865 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.084345249 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.195489937 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124771788 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.175564083 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081988208 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148021087 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.097810966 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117686061 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.264123378 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.188951353 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.179685198 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.142140574 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099779878 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098314642 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.081924638 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.099878906 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.666959772 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157979124 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135764463 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097423018 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107859116 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.101677268 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.365623982 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088373451 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.097922879 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087335736 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.083783582 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164185575 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082561257 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.180830137 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101117581 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101168009 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131954043 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.192280676 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158711397 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.128731004 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.119588429 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101928592 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.098362144 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181081051 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088972062 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.099069552 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103582066 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.137099149 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134218688 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.099489275 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.082540433 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.223515249 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078183896 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.094762723 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09674008 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.931947001 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.180340268 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.103491698 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098438823 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32639528 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098872546 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102188773 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.07626262 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.277743828 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.188189932 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.09737493 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.079333526 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098001928 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081857204 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400942557 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081880916 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.725814874 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083850096 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.109368637 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083993993 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099207524 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105404653 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088855492 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118212614 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.081066604 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101407688 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.079827021 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.098210453 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082697721 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111893862 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104677629 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.081235681 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.16547069 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.0782322 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.09445161 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.097239971 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128525008 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098732262 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.077045552 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.130884354 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098381798 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.079399045 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133389976 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098767791 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.10942868 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083438748 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145621652 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096514527 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.146877264 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.095872544 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126132027 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102061207 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115921482 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112058722 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098618947 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083397935 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096998031 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077678752 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167417564 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.07902139 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098794949 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080300313 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.09471155 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108426926 seconds)
  done (took 22.748921733 seconds)
done (took 40.924495232 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.32456607 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.106965074 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.107735143 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.107034715 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.104568981 seconds)
  done (took 1.57513644 seconds)
done (took 2.369367105 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.299354653 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.178954048 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.09934786 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.173876588 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096979164 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.180357555 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.16600898 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.114686392 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208692496 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.098002626 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.169598133 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.096546535 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.077662366 seconds)
  done (took 2.784829429 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097130935 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117903157 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083340206 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114395495 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077577903 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115467556 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.094062671 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.12144242 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113202579 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088322105 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.097182955 seconds)
  done (took 1.911920421 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096230212 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115647693 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083409921 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113251551 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077254037 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113733443 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093800112 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.120667056 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112630374 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087156153 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.096754315 seconds)
  done (took 1.902970378 seconds)
done (took 7.38557897 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.093857162 seconds)
  done (took 0.877643681 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.956461371 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.025925814 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.114057837 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.154130091 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.308550138 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.198531591 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.491794122 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.128888906 seconds)
  done (took 11.377909041 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.149745761 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086785676 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.105164192 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.086909643 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.105838631 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.083357613 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.107735395 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.105206445 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087809453 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.1067528 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084409346 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.102718016 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101879636 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.086997102 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.103252247 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086634231 seconds)
  done (took 2.443837737 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120220505 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11761138 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109286449 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109105203 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.08676495 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107792134 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108102174 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089173235 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105842309 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106981577 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.092514415 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109299503 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.106019014 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081092331 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.110269654 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.111729101 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.087406556 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.110176703 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.109859209 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091802367 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.110597878 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09885588 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.08876797 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.110600035 seconds)
  done (took 3.38455987 seconds)
done (took 18.872929581 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.165847001 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.112016188 seconds)
  done (took 1.068719417 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.098607813 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.117168005 seconds)
  done (took 1.01467966 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.101122847 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.100271139 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.125238405 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.112854101 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081681476 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099617387 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.123262434 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.081363859 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.100980133 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.081246514 seconds)
  done (took 1.809490797 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.085097622 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.11394607 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.104841602 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097504678 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.109200106 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.097806404 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.09018821 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.102834734 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.113699762 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.079181709 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.105337215 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118555831 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.087571749 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118984628 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.108279921 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.084630589 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.106755719 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102017372 seconds)
  done (took 2.626802294 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.082396429 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.101427942 seconds)
  done (took 0.978383712 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.084221678 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097260616 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082371977 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101084757 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.096970248 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078870273 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09730967 seconds)
  done (took 1.433221556 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.508697401 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.139526819 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.27013434 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.10507139 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124151137 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.303683416 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100206962 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.085326453 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.107569763 seconds)
  done (took 2.582488347 seconds)
done (took 12.310108489 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095893209 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.121084848 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11409062 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.48254396 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.110245949 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.103181308 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.149421302 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255732373 seconds)
done (took 2.236997293 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.146503823 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.338141281 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.120025102 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.0688957 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.102136485 seconds)
  done (took 1.433303211 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.083408048 seconds)
    (2/2) benchmarking "read"...
    done (took 0.102511484 seconds)
  done (took 0.990364955 seconds)
done (took 3.382491043 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083238315 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099954805 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.080846041 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100050999 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.080656091 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097856979 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.082876615 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.133367142 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.080510433 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103206621 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.100565642 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.083120521 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101860249 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080369808 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096904099 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082390112 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097163822 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080239945 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097467378 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083470253 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097407834 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081929665 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.097857936 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079338855 seconds)
  done (took 3.048604354 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101858044 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102350153 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105173199 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.088662146 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.105175187 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.087516917 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.107206058 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.09998133 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.087917062 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.104109364 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103549071 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.087703918 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102794923 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.085519803 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103369658 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104778254 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088728503 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101516088 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085149155 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105508344 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105357123 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083011465 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105128686 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104498773 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086831559 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10456672 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08341209 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101408935 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106269947 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085793077 seconds)
  done (took 3.735475078 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088507775 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09737475 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080442829 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.105297496 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.080995343 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100098327 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.079981481 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.100109236 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080905453 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.099507001 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080993734 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.099221094 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.079271577 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.101212076 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.080051688 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.103319844 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111437257 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081413449 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.099312597 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081096374 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102532449 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.079777375 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099036069 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080033836 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098524856 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.079444469 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.098778875 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.079504554 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.099623103 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.079082293 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102612972 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.083221373 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.099913468 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.085938176 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.103503405 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07858115 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.102650277 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.078338203 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.100964224 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09694531 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080741251 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.098108703 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080686807 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.104551625 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.080605071 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.101019505 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.080393034 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.100844756 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.080350974 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102260127 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.079217501 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.099450892 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081324131 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100515702 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.08340717 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099795549 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.098863497 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.080183553 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.099259391 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080381484 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.09763289 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.079906795 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100710944 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081293177 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.115087433 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.086864591 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.098628358 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.082248727 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100806027 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.081231465 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.101209773 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.111856922 seconds)
  done (took 7.42680873 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.086246157 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1093218 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081413564 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101631104 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077116227 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100302393 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.102193212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080959906 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100244455 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086320972 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099197174 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080902759 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101485737 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110636363 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081355298 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.100473614 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087632528 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097347673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079860611 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10375298 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080698651 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103367987 seconds)
  done (took 2.872396698 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.214304779 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.109605662 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14687968 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.110540123 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085280861 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.110209808 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105401908 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089414148 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106277101 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084438027 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.10572156 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105941855 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085256379 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104861738 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103461114 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08817376 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.106515311 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.085862146 seconds)
  done (took 2.772876221 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095745377 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.102982943 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.103894354 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102919145 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.10170675 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085505043 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108134631 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111566854 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086149072 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.10244166 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.092182725 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105331562 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.10390018 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083406811 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104773747 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.082908699 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105211934 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08157349 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112814167 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.1075347 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106831373 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.09357478 seconds)
  done (took 3.006507375 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099324208 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104853504 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.122053475 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087053589 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.098621142 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081463034 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109626589 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082043885 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110824539 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.103227203 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083552014 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100423964 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088849119 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102374125 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106314156 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083991191 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.103910665 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083122857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105179644 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.078365132 seconds)
  done (took 2.760338524 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.217778967 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.104167008 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.103050941 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094827452 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.104034565 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.083495416 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114226162 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.104426491 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083918283 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129002846 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104470499 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.083890802 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.115170245 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109628126 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102752637 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095369858 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112568829 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113864309 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083940928 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103874206 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129427966 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.083930821 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.1139157 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103874064 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084110075 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10422922 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103102658 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090974986 seconds)
  done (took 3.805167114 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084903212 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101460096 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081133483 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099339337 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081057524 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.099133387 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081349621 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099341345 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083046639 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100357812 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083722085 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102216611 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08550429 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.101820172 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.082501208 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.102375466 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083029367 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.099519087 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080195101 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099997462 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082081448 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103453372 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.083206 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.101043457 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079923298 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102961432 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080589964 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100642289 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081965845 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.10053709 seconds)
  done (took 3.578728278 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092890526 seconds)
    (2/2) benchmarking "in"...
    done (took 0.110447334 seconds)
  done (took 1.031645475 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08270584 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11929857 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.079868561 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.107394099 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.087626863 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.106152254 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.112178916 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087878697 seconds)
  done (took 1.611711307 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.099356734 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.1144259 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0850407 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.117020209 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.113057678 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099777452 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.175108124 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10293035 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086437495 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.100515395 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113629317 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.08063436 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106733163 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081083732 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107570983 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087266339 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099189991 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10493648 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085076581 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098652301 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082769911 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110317017 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.082606445 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.099154945 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101430966 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091204224 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114261178 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.081977233 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105032334 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.107589763 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.08842187 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094399862 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081145815 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101765179 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079807062 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.113096893 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120329825 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086423664 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114749803 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08440573 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.115529545 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.098961576 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088485409 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.111046389 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113657955 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085657093 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.10425942 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.077139335 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09961704 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.083409788 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096582704 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081520282 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.09689348 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088693448 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.106827776 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111390171 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081016268 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.102658589 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08417477 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104999551 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087041249 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103829509 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103279639 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081607069 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108218927 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.08572444 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111339027 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076321503 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096194867 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.10146492 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.0921326 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.124251715 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.087991445 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103233638 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102689275 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.080066799 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104095064 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.082546411 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108265254 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.108706923 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.08515623 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110795736 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091528165 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104844534 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0859521 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112997278 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.10295843 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.086675754 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.102965918 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.121762169 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083657357 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101801719 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082153251 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115541617 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087132927 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.10448064 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081329615 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111982608 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.096533241 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.086218954 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105454152 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084995011 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.115579407 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109177301 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.090962195 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.113701244 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.09019082 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105484171 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.107302028 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.081837101 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105027758 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.087385081 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.111633323 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077485174 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107232085 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.083583549 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.106437275 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.112345448 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.082385952 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.104494544 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091573692 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.110751411 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081419171 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.101671755 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.106568251 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.085507765 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108255809 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.092389253 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.103673427 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078621945 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.100340791 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.107197698 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.085235956 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10759539 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.089931661 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10750272 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077407004 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10297963 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.107910852 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.094653109 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.104449107 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.082843508 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.10831125 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10160548 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.082449605 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.107649809 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.08396877 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.10103433 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.086987412 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103879379 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.076767142 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107413949 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.104073557 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081421247 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105427961 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085570321 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104196453 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.081899008 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100641458 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105996658 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08395946 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100870755 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08189549 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.10051314 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.091891808 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103825875 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.095737253 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080119839 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.108628776 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.079625421 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101787814 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.080977318 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.103824083 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.100853869 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08114472 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.102055922 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.084493581 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115289147 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.108097058 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086287991 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108417088 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.093926259 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.103163575 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.084150381 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102769691 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104855968 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086313949 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.113966552 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.089960436 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111458581 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.106074911 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082623683 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109892044 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093101747 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103720631 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.082479636 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105095774 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086989652 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.111555739 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.10843044 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.085421929 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103951414 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085069366 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10975687 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.106449641 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085214444 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.103725229 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090083609 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103662166 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.090504953 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107714333 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.116066799 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087709843 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100817399 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088123279 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104181954 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.109859474 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080492537 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.102638876 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084230086 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105592473 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.083318851 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.107632746 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079077679 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112842451 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.09110896 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106647296 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.103865949 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.084115809 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111665688 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.08616462 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.109106214 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.087654773 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.112480318 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116177706 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.084024204 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.108525631 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095306595 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106513099 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077942287 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.111949648 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.103214316 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.08152454 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.102529797 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.080801846 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109473248 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112503747 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.093167014 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.096409794 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086003285 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.103036236 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.08065606 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098957975 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087119104 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.108088743 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10466232 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.092623942 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107392347 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085872529 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110416559 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08403777 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.108902212 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.105275654 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089179636 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.106271611 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087237352 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10491852 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08766401 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.105475519 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08411446 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.108024499 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10471215 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.085160893 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111277671 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.08547301 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.105759418 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086759832 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.106855111 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084588242 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.10809738 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.104473826 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.089518143 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105225987 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.08558117 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.107698839 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079769217 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114022952 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084084891 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114457993 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.105859617 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081787341 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.110997564 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087423278 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.111529214 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.105153841 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.087303127 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.106740612 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085674291 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.108468627 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092066545 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.10435344 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.116186469 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094027959 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106287969 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088248234 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.106047081 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.085946685 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105305398 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.085688097 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107508794 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105029973 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085604431 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.110513556 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088249663 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105755674 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087141369 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.107777166 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.084135827 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.108324659 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.0996258 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.085498916 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105076539 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.08573451 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.116521642 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.08484207 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.110123417 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.103886962 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087679456 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.104962463 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.08201789 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113644558 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.114001666 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086852191 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114059436 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.083940954 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.107764984 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116666947 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080524711 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.103653371 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083923676 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102889981 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093431569 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.107355864 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.094988902 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.106656164 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.083375572 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.103588533 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.106868198 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.084915147 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.100335227 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.083489473 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110560925 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087788226 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104882549 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084552559 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109296733 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.10591262 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10487868 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.105145175 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.085372432 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.107288425 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.081600089 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.105305579 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083067845 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108758622 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.106318875 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.082959917 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.102565716 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.086077163 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.107511383 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086506918 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.1064198 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.086542899 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114742408 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104613797 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089321309 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110104012 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.079640817 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109416043 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084856303 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.106561872 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.084061322 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.110550685 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109733263 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.087853683 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.116004518 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085281113 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.107066439 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104910004 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084523786 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.105709797 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.085946185 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.106264403 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085062314 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.107614502 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093221734 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.104829178 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.10821963 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085741592 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.106460348 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.093181833 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.108167 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088231378 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.114969317 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.109362352 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.088041324 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.114323261 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089464931 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110636621 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106740155 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087796916 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112285911 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084415715 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113056189 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084536969 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.108509311 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085951443 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.1054757 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.105642127 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.086987441 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.105618204 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.092407902 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.107863689 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084509538 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.106861514 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082492813 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.107873237 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109672512 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093946384 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.109754223 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088321572 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.101866957 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.08193021 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.108860838 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081739859 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.109451523 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.109126841 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092905814 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.109152947 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085964504 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.106701296 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.093896415 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.114839067 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109971009 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.084122873 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.110862122 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.087792593 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.109238474 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085903643 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.106875955 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.107297533 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.090866256 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.107806817 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085420293 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114367873 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088904751 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108497761 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.106839543 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087817778 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.106852513 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082136923 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.10757005 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088064729 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113391196 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.087474079 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106971868 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11737542 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.085167338 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.103426894 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086846208 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102833051 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.086993895 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099200208 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103566351 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085751857 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104272362 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077692928 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102831805 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.080268483 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108200204 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083835448 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.103295296 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115860132 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09290706 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106293264 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081252545 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10275082 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078039644 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099262036 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.081934561 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106194963 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104227264 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093814349 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102506801 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081890006 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100079859 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082680789 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108709553 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.108631562 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.083521044 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.102462025 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085781267 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.110916752 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.092436265 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.106929653 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.085221396 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110918404 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108062155 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.085266624 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.11083413 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.08302974 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.111793821 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09918213 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.110510858 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107502827 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.093465384 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.116185058 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.08683993 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.103577136 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086550461 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.111641098 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.108200104 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.088461893 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.108756559 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10171886 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.112195587 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.106432074 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.085913168 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109935382 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.086242498 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116988068 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087409789 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.109325692 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.11206762 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089064701 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.118068459 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089243675 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.117454104 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.111328251 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090560361 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.106566963 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08648637 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.106056709 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084829562 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.109821624 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086523683 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113191123 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.116010999 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085386298 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120204981 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116856282 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092402576 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.104553892 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086148934 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107532452 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.082234941 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.109463407 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.084940145 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.10710138 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083947855 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.108588849 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.107549299 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.093849716 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.10939882 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087908084 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.107904309 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080233777 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.113246177 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088989005 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.109548863 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082738814 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.109755233 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.108793182 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.092170262 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111990912 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.08697292 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.110061505 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.088131001 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.110002847 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.081730689 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116085545 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106997739 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.090607186 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.107538821 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.087295347 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.110055719 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090231913 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11494046 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.109218622 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.089962381 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121109322 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.088730354 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.105974671 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.083226741 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.115426505 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.106640767 seconds)
  done (took 59.564655927 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.152476121 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082745166 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.103502693 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081439551 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.117879456 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103595272 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083612849 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10468183 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084074743 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.10730008 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081864053 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.103818246 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113637869 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128136586 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093558819 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.106950054 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079827888 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101349059 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101976943 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082590089 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.114409146 seconds)
  done (took 3.009507601 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.108762322 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.123377081 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11993194 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.123896528 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090403097 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118937694 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.117250838 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115508452 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099893215 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112083719 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119761643 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115188862 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.0916051 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112545337 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110978203 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093248389 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120622009 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110816091 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115907952 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095260815 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.114607408 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116253617 seconds)
  done (took 3.32606819 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.088231847 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10696648 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085725871 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098883172 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083085917 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099370852 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087768621 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.10361408 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086051795 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103757975 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08083281 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.104156516 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104844313 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07934925 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103528357 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082041662 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151702012 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.10899881 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.081629881 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107232438 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078335331 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.10712196 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.09956601 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079646334 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.10312498 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.087897687 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.105817359 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081476818 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.105502468 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082135001 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.10452048 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081135927 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105979761 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105623772 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083842936 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102696188 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.084726182 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103399955 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079545481 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101830266 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084127507 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.101302668 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084239681 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.107455986 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.083607819 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.106533462 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086949734 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.109035938 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102565731 seconds)
  done (took 5.577773736 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.109054602 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.165860919 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086816362 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.147001258 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.124827699 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114673562 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087266221 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143517757 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.107219352 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084283862 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.127180226 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121862541 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10758721 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089690159 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.11344908 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.105244572 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086403766 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104886742 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.108559739 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085086318 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108876489 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089889045 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120881457 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118957386 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.110124581 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08314401 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.106342289 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108883704 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.0970533 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110160402 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.109459905 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090096486 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121696335 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.106697445 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083025754 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109714719 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123451643 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103990433 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088327474 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.105181878 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.088477144 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.11416869 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.115353799 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.105946913 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.110953517 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.113874325 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.087747051 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.107108334 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.123109888 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.090342041 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11900187 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.126186302 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.090605547 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.108592023 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.111039523 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120313676 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085368396 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103413678 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087063901 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118464259 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.1027697 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088071163 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121820394 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107103704 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.112057903 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.09893888 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110488588 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109807429 seconds)
  done (took 8.324377084 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098151536 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.116967832 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126132541 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.125973197 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09480675 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.117269807 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.116880408 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.094351916 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.116580875 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.122050783 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115952317 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.140075874 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.089989389 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.120556234 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.116644204 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094853868 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.117017423 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.116356196 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.094482788 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.117314241 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.117295195 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126796247 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093021726 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.125481745 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145424597 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107947058 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090702834 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.11275367 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122566234 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112027045 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.122724141 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091593148 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112199658 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121450808 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124681299 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090154489 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105362376 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110884054 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091147883 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11312934 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106264941 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100808753 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113185392 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107962075 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.092815806 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1153337 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.123177595 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12598821 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117337164 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098915138 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.116685267 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.124931441 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11393948 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.090591182 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123805749 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149752493 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121662523 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122312517 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111886031 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100287748 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.12163087 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129510733 seconds)
  done (took 7.907225573 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.111161209 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.12064103 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.123597423 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.104057111 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08320116 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.111494786 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.08257905 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.105410659 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114903147 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094179183 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119171526 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109738115 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091054262 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118931841 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110666617 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113411067 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088195629 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.110414177 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115007267 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108405536 seconds)
  done (took 3.028243954 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.09787774 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.129856284 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.084394402 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114677093 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108893015 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.09107475 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.108588676 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107217039 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08616425 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108853304 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.095566734 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118391624 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106349779 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090582525 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.117373831 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112960616 seconds)
  done (took 2.571658593 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100399809 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.123488693 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.127100596 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087190446 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.108648149 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.082271394 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107198417 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100985315 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081134832 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.121729418 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08459236 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112622985 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105129979 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082657031 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102860667 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.086874751 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.10258491 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.080853503 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10656028 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120080934 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.094787715 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.105578385 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106914475 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.088134168 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.106196964 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090343097 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106600106 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103068701 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083696739 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106590593 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084641268 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114848194 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.10191785 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084887767 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103141944 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082173598 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106165503 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084943142 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.110102137 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104994965 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084460611 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.10503375 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084101777 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10812513 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080839041 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107026611 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100871139 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091815998 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.103154142 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.084113228 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106417159 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086604659 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107878467 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116684862 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088329037 seconds)
  done (took 6.346783465 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10523325 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.115321756 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083312899 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.10855031 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089164296 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.113442925 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.113034395 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088590556 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110946696 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082714509 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.111942422 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088329726 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108501802 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109147953 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087568591 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.11017359 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080416128 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.107813059 seconds)
  done (took 2.717855383 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.095541827 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.111158122 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093222587 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108670311 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.083833152 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109905666 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079538389 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106212078 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103553787 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08554852 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106025478 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.087334085 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105046744 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087358741 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.1070681 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084199928 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.109150848 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103683095 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085653542 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101870398 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087372316 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105260562 seconds)
  done (took 3.048332731 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123543019 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.131585346 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09536775 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.2354542 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.103438387 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.133151495 seconds)
  done (took 1.724614839 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113708966 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124285302 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106353497 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107184188 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11649568 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.085793444 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108729716 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108624379 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118839376 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101076484 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109387318 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11930425 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118477162 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.096667138 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115537902 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115584815 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107423186 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087299991 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107271282 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128203537 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087780361 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118592974 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108581353 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086500979 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109637849 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118608333 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118109404 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122222643 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087933857 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11866842 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115554888 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088472456 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120260679 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122616075 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109132111 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098744572 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109640701 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129398429 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114432972 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096941445 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.110128954 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114966846 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097423971 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11534806 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118898893 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109244951 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092183472 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109426431 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107824361 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136710344 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09313132 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118348681 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116467036 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119768869 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098110308 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157652937 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102356077 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118514316 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116620519 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123179882 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117431669 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.093433215 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118826635 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12351592 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116479417 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117225725 seconds)
  done (took 8.247510818 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107322487 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.131076072 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108466265 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123652726 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096973944 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10977156 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108947094 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08755436 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10932015 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107442498 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153187779 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088066967 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118051199 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118517492 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086736676 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109558502 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109286755 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117919753 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087265099 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136381763 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109126435 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118403349 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117369964 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097259129 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123702717 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116746019 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108528822 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088137639 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109172582 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107475436 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09323365 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110452266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118129907 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085711506 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119766695 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109915379 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086118007 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116501664 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109474323 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114158952 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097302016 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129211612 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109724124 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108543315 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10117118 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109955316 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109832159 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086491635 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110021719 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107806855 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101396329 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124342965 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123896337 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118538212 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108830166 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087468649 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109854441 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108852824 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087635546 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11747704 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119339358 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08597976 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.158063978 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08828193 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109514642 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117333251 seconds)
  done (took 8.120442973 seconds)
done (took 159.97055445 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.227112733 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.229880291 seconds)
  done (took 1.362733218 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102881622 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.140170007 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.094793857 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170410106 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107141532 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.12028532 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138796089 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097442402 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.10834728 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.08575197 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107855067 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086981038 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.172817458 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084701196 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.109015991 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109263461 seconds)
  done (took 2.74951559 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.206996782 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256648553 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101562096 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107313113 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.088036517 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111405798 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.10583233 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091129047 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110810621 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085483864 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109504686 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.0859428 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106615603 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085748749 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.111743433 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.086941791 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.10808994 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.0872712 seconds)
  done (took 2.960071585 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118007954 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154491138 seconds)
  done (took 1.190306186 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.124222151 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.183768179 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.316626233 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155539737 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.106096803 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127798635 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157389323 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131721159 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.197510545 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123987071 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122712317 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097078398 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.142262532 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116176848 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093779779 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119944923 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.142224664 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.09250612 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.117184993 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115875856 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.115493486 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.108073027 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115341996 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093288686 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181749892 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120549425 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084321003 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108608173 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.116778349 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.094655567 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.113761656 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125073581 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.097443723 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179558983 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.101996201 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177479707 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097881845 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114026742 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114576669 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092559001 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.119733952 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.119062496 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.105051314 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118762649 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.083631425 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119576285 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106526066 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085045226 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115586546 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.096230295 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115801152 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114003504 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156313487 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119423203 seconds)
  done (took 7.624152029 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.80010141 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156844066 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089126699 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.890192142 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13777049 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102874931 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.783352364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.134234142 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.234404804 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.759502932 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133913913 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.122349716 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226966421 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235670565 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.925663843 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307774451 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.673014985 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101555635 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.152016981 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.154281648 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119642528 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.13676549 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108182003 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.451645422 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094461845 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112595175 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.094937935 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.122553865 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.159565905 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.12579575 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114033034 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.177323257 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.246017984 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205293294 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115841345 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.089309442 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112506153 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.169671212 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265906515 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21380325 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180226732 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.086249122 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.113334717 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102492785 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.133749059 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109459427 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163793737 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.172544774 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.194550895 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092073201 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121165945 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119652759 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099169175 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.187688679 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098322073 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.309968922 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32245087 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111762438 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098457894 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.127722254 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.262357123 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122777831 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.199999469 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138922877 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213790606 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111149488 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756131466 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.189364932 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090705411 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118952718 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09652584 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118412421 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12505809 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.174819688 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.415229197 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.129895854 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.097393022 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117784646 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.211897754 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.130999641 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112633929 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161421699 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093679157 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.122010329 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.125626886 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122690623 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.171517721 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230206772 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123614414 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.119245603 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094197944 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125952187 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115539308 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211747168 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21991623 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162368718 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.213143055 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12302442 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.166451559 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.190713136 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09826521 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193833768 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098038843 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.126692057 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122276803 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21799275 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.144704378 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101747011 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.117502569 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.121414442 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.150306591 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107151265 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119344375 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172139715 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.483526386 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.167535537 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109625851 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105833324 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121226166 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.165998683 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118158798 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.260281867 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099703721 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189802348 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097293514 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.110280906 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120374684 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.167361803 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122769723 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098834346 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123467198 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122219246 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.233508002 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.218199849 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099490547 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.245015565 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184588603 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118736686 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17506156 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120972432 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168807501 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119516916 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098928885 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118240253 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.772973942 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.100656823 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121797179 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116518432 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188792989 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089409553 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124758107 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125128717 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086931257 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803419947 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127745346 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098575867 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125557874 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119381218 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120367666 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.098491848 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116912125 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.166287583 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.232485588 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12047253 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09701817 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.12591487 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159326396 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117664513 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.125470697 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.123926064 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.103596407 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12174675 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114270565 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102183414 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.193297513 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162921056 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220495848 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.573459034 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.113529798 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.125553544 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.205984781 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113167431 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288702994 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119371176 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.20316417 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.188075449 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098487732 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318159913 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.186899056 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187910213 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.105995409 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.194830791 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088472061 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118511483 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.166041926 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112520339 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095429626 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183779615 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.103542584 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124518187 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.958088683 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089878447 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249398455 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.0877373 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.170810703 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117647068 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.121350747 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288007086 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090700372 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.129561149 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.164537456 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115822136 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125266839 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.853262121 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12572795 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121621217 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.095923576 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222517023 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.162279273 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121374577 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119880785 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097585665 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.191588287 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.20790608 seconds)
  done (took 44.30558914 seconds)
done (took 61.104252134 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278092828 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217323669 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.266127067 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.170074923 seconds)
  done (took 1.95088744 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180649866 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.154462878 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.120707331 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.108745784 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15237471 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086571162 seconds)
  done (took 1.747869004 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.364813855 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277123798 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.241482167 seconds)
  done (took 1.831639147 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.324032312 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.248747106 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.47705005 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326174137 seconds)
  done (took 2.422476576 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.21976836 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.141165682 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.116433007 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104392294 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.203999147 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.247273447 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.146327846 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203562089 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.100460191 seconds)
  done (took 2.479138078 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.197961182 seconds)
done (took 11.579534656 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.174542312 seconds)
    (2/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.099085987 seconds)
    (3/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.149340293 seconds)
    (4/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.262094121 seconds)
    (5/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.225589585 seconds)
    (6/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.095328266 seconds)
    (7/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.122606619 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127597306 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.251133607 seconds)
    (10/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.253397647 seconds)
    (11/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.094218669 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.12813286 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.092311263 seconds)
    (14/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.124919736 seconds)
    (15/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123694389 seconds)
    (16/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.254398685 seconds)
    (17/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.187561548 seconds)
    (18/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.117372809 seconds)
    (19/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.199366651 seconds)
    (20/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.211734428 seconds)
    (21/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.166183614 seconds)
    (22/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.10174299 seconds)
    (23/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.192788838 seconds)
    (24/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124180158 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 0.22223838 seconds)
    (26/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.09354006 seconds)
    (27/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.117918219 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.092723565 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.185623873 seconds)
    (30/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.17212951 seconds)
    (31/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.13838533 seconds)
    (32/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.15358976 seconds)
    (33/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.123547497 seconds)
    (34/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.096251585 seconds)
    (35/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.208069326 seconds)
    (36/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117982606 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.109317315 seconds)
    (38/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.120495986 seconds)
    (39/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.116919556 seconds)
    (40/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.135255904 seconds)
    (41/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.118375008 seconds)
    (42/286) benchmarking ("sort", Int8, false)...
    done (took 0.187469409 seconds)
    (43/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.093583292 seconds)
    (44/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.178619127 seconds)
    (45/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124776883 seconds)
    (46/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089347142 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.118275555 seconds)
    (48/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.087208643 seconds)
    (49/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.255861856 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111511464 seconds)
    (51/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.112910151 seconds)
    (52/286) benchmarking ("sort", Float32, true)...
    done (took 0.23014271 seconds)
    (53/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.235208903 seconds)
    (54/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.098649783 seconds)
    (55/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.101671042 seconds)
    (56/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.22763435 seconds)
    (57/286) benchmarking ("sort", Int8, true)...
    done (took 0.218735026 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.088939248 seconds)
    (59/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.230454478 seconds)
    (60/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230578961 seconds)
    (61/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.121542952 seconds)
    (62/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.075662629 seconds)
    (63/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138444886 seconds)
    (64/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066750946 seconds)
    (65/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.114230431 seconds)
    (66/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066349159 seconds)
    (67/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.087883276 seconds)
    (68/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184407087 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.137146134 seconds)
    (70/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.086136789 seconds)
    (71/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.121161402 seconds)
    (72/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065386965 seconds)
    (73/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.121692597 seconds)
    (74/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.136538838 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.087417525 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.140074843 seconds)
    (77/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095642891 seconds)
    (78/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.120713367 seconds)
    (79/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.180471181 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 0.086023534 seconds)
    (81/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.189144138 seconds)
    (82/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.209146459 seconds)
    (83/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.07881146 seconds)
    (84/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.122223267 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.195444654 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.113476885 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.137879611 seconds)
    (88/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.117934999 seconds)
    (89/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.147941301 seconds)
    (90/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220066506 seconds)
    (91/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.187863869 seconds)
    (92/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.146796448 seconds)
    (93/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.139067546 seconds)
    (94/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.087988716 seconds)
    (95/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.230542448 seconds)
    (96/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.091965982 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.096869239 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.065633812 seconds)
    (99/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.09264546 seconds)
    (100/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.167724951 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.067658954 seconds)
    (102/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.186228787 seconds)
    (103/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.087832593 seconds)
    (104/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114759251 seconds)
    (105/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083985646 seconds)
    (106/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.189213224 seconds)
    (107/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.066543501 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.136231766 seconds)
    (109/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.151708645 seconds)
    (110/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.093536901 seconds)
    (111/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.066032674 seconds)
    (112/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.138814317 seconds)
    (113/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.100023188 seconds)
    (114/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.15023043 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121396001 seconds)
    (116/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.198595324 seconds)
    (117/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.149702601 seconds)
    (118/286) benchmarking ("sort", Float32, false)...
    done (took 0.173428508 seconds)
    (119/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.113300531 seconds)
    (120/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067439673 seconds)
    (121/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.09439922 seconds)
    (122/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.120130089 seconds)
    (123/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.184342367 seconds)
    (124/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.138196939 seconds)
    (125/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.204146 seconds)
    (126/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117705863 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.092362716 seconds)
    (128/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.142214882 seconds)
    (129/286) benchmarking ("sort", Bool, false)...
    done (took 0.181595924 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.094905177 seconds)
    (131/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.117358534 seconds)
    (132/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.093085388 seconds)
    (133/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.182854199 seconds)
    (134/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.116183049 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.099616195 seconds)
    (136/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127980575 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091564378 seconds)
    (138/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.118626669 seconds)
    (139/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.172442581 seconds)
    (140/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.075944571 seconds)
    (141/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.122383557 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.111854363 seconds)
    (143/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.097133853 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.08636294 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.118900832 seconds)
    (146/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.093846198 seconds)
    (147/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.147420977 seconds)
    (148/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.174353222 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.086914119 seconds)
    (150/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.120394793 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086073954 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118615232 seconds)
    (153/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.147660954 seconds)
    (154/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.115597907 seconds)
    (155/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.067975071 seconds)
    (156/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.112743756 seconds)
    (157/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.070375399 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.109809117 seconds)
    (159/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.067431616 seconds)
    (160/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.066625093 seconds)
    (161/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.142879905 seconds)
    (162/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.086828237 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.119780604 seconds)
    (164/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.108213581 seconds)
    (165/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.08641063 seconds)
    (166/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116267538 seconds)
    (167/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.150378557 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.110922318 seconds)
    (169/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.087618373 seconds)
    (170/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.199971353 seconds)
    (171/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.113062 seconds)
    (172/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087089088 seconds)
    (173/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.117764724 seconds)
    (174/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084951119 seconds)
    (175/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.121386371 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066719372 seconds)
    (177/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.156683529 seconds)
    (178/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.090588091 seconds)
    (179/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.397870478 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085932381 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118182248 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.119064806 seconds)
    (183/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111626417 seconds)
    (184/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.085152954 seconds)
    (185/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.092153862 seconds)
    (186/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.066551183 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.120079932 seconds)
    (188/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.091797464 seconds)
    (189/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139560519 seconds)
    (190/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183689112 seconds)
    (191/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.093811461 seconds)
    (192/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093174435 seconds)
    (193/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068124938 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.108767469 seconds)
    (195/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06820935 seconds)
    (196/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.066118733 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 0.219056601 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.11010869 seconds)
    (199/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.066673076 seconds)
    (200/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.192686432 seconds)
    (201/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.137645717 seconds)
    (202/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.068074432 seconds)
    (203/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.086738255 seconds)
    (204/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.093017716 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085076661 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.14046948 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109546736 seconds)
    (208/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100909487 seconds)
    (209/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.090607432 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.086152129 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.11853949 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094793718 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.110184841 seconds)
    (214/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.07691712 seconds)
    (215/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.066336508 seconds)
    (216/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.110418502 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.090184689 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111881834 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084926576 seconds)
    (220/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.090480412 seconds)
    (221/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.077484594 seconds)
    (222/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136357106 seconds)
    (223/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.067499533 seconds)
    (224/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.111730364 seconds)
    (225/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.102577025 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.092601377 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.077757226 seconds)
    (228/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112009313 seconds)
    (229/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.088776419 seconds)
    (230/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.090274443 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.105148122 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109572573 seconds)
    (233/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066369975 seconds)
    (234/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.081831602 seconds)
    (235/286) benchmarking ("sort", Float64, false)...
    done (took 0.17253927 seconds)
    (236/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.089723575 seconds)
    (237/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.118386298 seconds)
    (238/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.158709833 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.092870024 seconds)
    (240/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.112161605 seconds)
    (241/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.067519193 seconds)
    (242/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.113030308 seconds)
    (243/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068790339 seconds)
    (244/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.066277659 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.121359811 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.08532475 seconds)
    (247/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164815432 seconds)
    (248/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.091913731 seconds)
    (249/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.101230129 seconds)
    (250/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.164099464 seconds)
    (251/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085112039 seconds)
    (252/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138652205 seconds)
    (253/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.074742907 seconds)
    (254/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.113291741 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.12434695 seconds)
    (256/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092968297 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.06644619 seconds)
    (258/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.11102586 seconds)
    (259/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.066970479 seconds)
    (260/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.135046008 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117717199 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087524356 seconds)
    (263/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077196742 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.111634908 seconds)
    (265/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.181233616 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085946211 seconds)
    (267/286) benchmarking ("sort", Float64, true)...
    done (took 0.228878903 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119958597 seconds)
    (269/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.094983156 seconds)
    (270/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.110966748 seconds)
    (271/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.067416356 seconds)
    (272/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117322467 seconds)
    (273/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.1129182 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.116474038 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086017107 seconds)
    (276/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.11087372 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066371316 seconds)
    (278/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090108327 seconds)
    (279/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.069154237 seconds)
    (280/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.16404345 seconds)
    (281/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.077101001 seconds)
    (282/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06714484 seconds)
    (283/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.093511019 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.091581586 seconds)
    (285/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.090396875 seconds)
    (286/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.077647945 seconds)
  done (took 36.319544794 seconds)
done (took 37.273095145 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.106198404 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.155207395 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094776203 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136350213 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124295728 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091106964 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.11950647 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.096605859 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125406493 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125239039 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.09807239 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094180368 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096539761 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121606271 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.098585624 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139951252 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123830428 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094092017 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120612834 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.084569622 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120143535 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.08536766 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113324107 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069320736 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123021806 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.094127708 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117587066 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120432328 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087334138 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110924172 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090970321 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117824334 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087644849 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125235649 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.092465204 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.120402924 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.096327154 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.12147191 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087424272 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11195689 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118219234 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.08826784 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117660377 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095485333 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116229393 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092782013 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118860748 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.097992792 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140404498 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115443903 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095113772 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.121138736 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095787755 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.118909029 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.089436758 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.120371214 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091043128 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.140799156 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119093582 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091640038 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119261092 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094913929 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117579579 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094572884 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119768721 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119454322 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098586119 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116274368 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096886641 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116862071 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086437626 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119843354 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089382149 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111880604 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095260473 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122996403 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08500454 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118288292 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09281636 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117445104 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.10963608 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.08958885 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11137696 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094006175 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.112997679 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070571558 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090234746 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117739984 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085131154 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.12133263 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117024238 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094582715 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.11358284 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.098506244 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111593046 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091791178 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111251608 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086199118 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113566387 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090448499 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110913076 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088838764 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121472059 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087545634 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117771656 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.09758865 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.113170943 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.115988108 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086912213 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.10956392 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.101622908 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121602406 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.085780002 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116380025 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086843289 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119689334 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085297024 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111761936 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.085434052 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.11213206 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092318888 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112459086 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088301052 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119788468 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124239296 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.08789848 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114100318 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09019388 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110345697 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093174373 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111253643 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087035501 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113464614 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078045137 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11306425 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088005125 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118481694 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090099838 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119800643 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089252201 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.121630356 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091021349 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118932079 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092061523 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.111543115 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.073860135 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116474667 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089155014 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.113666642 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086479457 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113216319 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.085948672 seconds)
done (took 17.029888445 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.09396185 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.188459697 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151267657 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142371363 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10648659 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113119905 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12123564 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.118120239 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.114491252 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.142671976 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.109454132 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132842905 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147366748 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086709279 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113012639 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091781917 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.113498433 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.100897927 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.146482558 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133013183 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163887945 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085750586 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146143968 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136366871 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120582963 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114624576 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112221989 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.090896913 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115445987 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.102126223 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132800246 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.089315879 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.113384978 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134703794 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.103883074 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120600363 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086331066 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120357149 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.086566252 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113278454 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140180979 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.107925155 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.118905427 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117418472 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.090855034 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.114339563 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.088572379 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120938249 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097406057 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117571247 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.12536565 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156112922 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090617186 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122386755 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086445758 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.123453083 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120083685 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090582963 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112841186 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090547093 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111731811 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090881078 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.127829663 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142106491 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092461462 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122469397 seconds)
  done (took 8.673830588 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.111660085 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.145087883 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103940702 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.131927546 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.115219835 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.087848955 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11554457 seconds)
  done (took 1.821970765 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.095970898 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.139082436 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111242341 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.136564891 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.13189817 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.109494877 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123596719 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088124392 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132961296 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.08836739 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.134980089 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152256479 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089220328 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121718049 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137992832 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088116265 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138099198 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.087897724 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116775967 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.110938954 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117790059 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13483714 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090717508 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114236321 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102291757 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115607238 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162055177 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09415248 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114824701 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091894061 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112920327 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166538844 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.101858472 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.12609755 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087225152 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129904447 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.145239708 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086417743 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.13006153 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092286317 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129031633 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.087834019 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116380386 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.085665916 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119287191 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12272139 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090605407 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114175609 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091617566 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134604272 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.088589652 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.127617443 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088330174 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.118837363 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.088804116 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120468519 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.122776935 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090612008 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133852082 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090562934 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131637998 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104242532 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.128998436 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.13075022 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091489753 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.129137081 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102844034 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118550904 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089799712 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118735201 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.12927452 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087386938 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.115809841 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.099762515 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116701497 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112723808 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.13889966 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089513155 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125997809 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.11464276 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090596086 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.113764567 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.111315469 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118099849 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.087917014 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121705531 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090866513 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.11402333 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.086618468 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119296065 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086257692 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11638933 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091292141 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115756057 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116127021 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106217326 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117012514 seconds)
  done (took 11.913578208 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09740589 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.11633544 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092516073 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.114140123 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.089362078 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115175923 seconds)
  done (took 1.650236664 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.11930018 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118907529 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.102894641 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121256389 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155567482 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.102762476 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130348795 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.1245197 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106873499 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.128979439 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129081739 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103801622 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.13763286 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121193064 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103695565 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121957117 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103046777 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125828218 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127903912 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09595206 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137511166 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120276228 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096698659 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132259 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.117184086 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.096998039 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125646207 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.101521349 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.128879383 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122761071 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096067213 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118935721 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095343324 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125090499 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130125315 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09503375 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122200019 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118225758 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100782746 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.118954554 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.10351371 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123041748 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126225322 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.093946402 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124455362 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.120338519 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.094715277 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125563824 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.102413738 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.121195595 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119418811 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095413724 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118548496 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.092930094 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122558666 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123026003 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094684736 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130781063 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094984916 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.122734258 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118510414 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.092396458 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124465099 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.116454061 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104871394 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.120178002 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.094286309 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122428257 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122489648 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.095377739 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119889258 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.09195873 seconds)
  done (took 9.282609902 seconds)
done (took 34.349687761 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.702403646 seconds)
  done (took 1.722729234 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.83561941 seconds)
  done (took 1.858929817 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.504630797 seconds)
  done (took 18.558928548 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.511080533 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.595184247 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.008011869 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180174957 seconds)
  done (took 3.318369248 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.983393555 seconds)
  done (took 2.0299719 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.290998458 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.232298798 seconds)
  done (took 1.55232942 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.801334606 seconds)
  done (took 1.841957627 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.373615195 seconds)
  done (took 2.401694321 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334457645 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.185226304 seconds)
  done (took 1.559966386 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.555529271 seconds)
  done (took 1.595205374 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.025538453 seconds)
  done (took 8.0710943 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.27506244 seconds)
  done (took 1.325852858 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.308041468 seconds)
  done (took 1.3484582 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.63710594 seconds)
  done (took 4.680639975 seconds)
done (took 52.902792713 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.106953211 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.131363557 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102059759 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.124850933 seconds)
  done (took 1.5001908 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.10868937 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.127914445 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100818668 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122095048 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.125445115 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097136281 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.122929448 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100544037 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122455975 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095166996 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122481056 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119762352 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099520546 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123408879 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093322866 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124969984 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098136802 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121950427 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125036686 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096738601 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119718315 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.096979599 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126363876 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093448208 seconds)
  done (took 3.729334147 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.106110849 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119296006 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096947138 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118763736 seconds)
  done (took 1.493813304 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.107062505 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142682463 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139360749 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.10120953 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.142592494 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136751307 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093060808 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117764444 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09429957 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126664464 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.089548673 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.151138686 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13869422 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.098403199 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128839326 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088088028 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118462542 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137114014 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099269674 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12706336 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.091845899 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125993464 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.08888874 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.139931243 seconds)
  done (took 3.871569447 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.175308026 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128407351 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139480131 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.094816694 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161685657 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.140389084 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088463511 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14114567 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.08762675 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132162663 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117984261 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133421761 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130412805 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088090115 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115654823 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.0872215 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.129678979 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129379671 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091382607 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129487159 seconds)
  done (took 3.49616232 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.104725513 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.12178302 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088642278 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116872478 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099463723 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122466112 seconds)
  done (took 1.707018737 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097112044 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11416119 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091268143 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114545409 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.094419214 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115340624 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088934486 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115571307 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090156472 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115070176 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089694899 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.116123464 seconds)
  done (took 2.296536634 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.508259482 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.121884549 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119906655 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08991554 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.121500392 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.0888913 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128907726 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.091636628 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141437833 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.087274961 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116679936 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090220474 seconds)
  done (took 2.75990391 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240335666 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126609585 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286938956 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370133938 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157918145 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177900411 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283888147 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16471468 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.224680833 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166722238 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202914475 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223555329 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152625211 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190012788 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138167579 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144487265 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20518073 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.246825595 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153892641 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207805963 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228873159 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168428724 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179700877 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.151806976 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138339383 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171674662 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093918128 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130332476 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234543411 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176528504 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214397745 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16212687 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145590829 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209098651 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253217178 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220836045 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284859793 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138045366 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.149375069 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169160816 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267093958 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140504158 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203934895 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155395848 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132538998 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218595646 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169511527 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177288477 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152253386 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138826043 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195883672 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240698283 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.192294732 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139193335 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303776978 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15182789 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.200914436 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19574278 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253663497 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200676403 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213597032 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095600461 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188673775 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221799935 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186599362 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175604146 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.208161037 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147318754 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200600311 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189905512 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165074336 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222883975 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.186147945 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142283354 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170635985 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.174142364 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171756501 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259575136 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211528559 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095833666 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168325607 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148931921 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134887738 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194972352 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098524987 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241203963 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143570108 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.162811464 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2154503 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160278901 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160972957 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202780691 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230079108 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149557038 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083448513 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155399387 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156154713 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19298935 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141160273 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158929329 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16253913 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.131117003 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183071523 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.126111454 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183592882 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.118390006 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173951167 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182906217 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126795703 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1614538 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151384209 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125724429 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201682545 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19839697 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143388007 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132743622 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209694368 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179053153 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.152202559 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178037027 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.228018746 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.117172273 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149161856 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229767841 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215422736 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140547343 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.228637899 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156430384 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108656784 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.133628016 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180971793 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154778701 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161922761 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135560856 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.18341465 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232100002 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098410444 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139741117 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192041266 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134960651 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132824915 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163468962 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148850737 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.109925651 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.151596683 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153813601 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208534776 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179399201 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15519692 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166446831 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153273191 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25481927 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141290767 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124194188 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150248754 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120658424 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193341538 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196779619 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13259134 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232947716 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.17268002 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203808616 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17064941 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135944277 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177647139 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131429011 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092530963 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222481639 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168329146 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161831065 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196862271 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227017219 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183132343 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.183774647 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199249573 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175054547 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164907524 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156743312 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112229157 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160850067 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170068963 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124242466 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144436613 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133926704 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147269904 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11517589 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135252573 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22323775 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171774258 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189251088 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161116269 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151462938 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182222678 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.129448254 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174254809 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.177665905 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148575481 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.197081096 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223017205 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186582535 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144915738 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201177115 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122330927 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123967253 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.114694049 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197034905 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10778043 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137012631 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164610033 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181526337 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180576757 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205189021 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21267698 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200178326 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192351787 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094765499 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.169740539 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185299744 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177096845 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.194212359 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143389435 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151088413 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181406004 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160001994 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.256225148 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169225938 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176429689 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236661556 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.122348514 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132587774 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153352894 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192846111 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153100414 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204681948 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120345642 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143185197 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162773181 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.13455757 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160097856 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183367879 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163858075 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218227471 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149980542 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186472354 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128584446 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164992212 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160084687 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167033158 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081180336 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175292128 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233412332 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148742654 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169234956 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189547837 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.132781617 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.310039697 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245729207 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197300696 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137765259 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155870892 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161195434 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164177027 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173546134 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.179918801 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160239603 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187470376 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159774619 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137998551 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140408928 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122722675 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150316988 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.13252095 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148606068 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.177777082 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140214131 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187535468 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163268072 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160921486 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173326543 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151194529 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144615344 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150784859 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216241313 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184515234 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239540356 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151674978 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180614327 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233923755 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099198314 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133798678 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133010714 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179208122 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109262916 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222949941 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.188775636 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234042057 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184123597 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194014756 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141342957 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120548595 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129830633 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201603168 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208782929 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154315827 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160748727 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234277353 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.118648478 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133955211 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178575417 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293812423 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145958375 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224369313 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080273443 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.286535943 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129531244 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104432796 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164494025 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237257538 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137063486 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.191969932 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173634128 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172361653 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1650459 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150020992 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.191291318 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245678221 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202459176 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181129404 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.134336808 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156359301 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177128381 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221714294 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158681947 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113126154 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232374996 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195799425 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.195751934 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.143777136 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169449261 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169176062 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1584325 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216963779 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105943749 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236974211 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13469884 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195096954 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154672356 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145361284 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176988486 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.18978471 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143657909 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217390583 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185286701 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135527981 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105792073 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168729287 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21058552 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157598793 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.100213082 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208846256 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.098777643 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222457476 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232282101 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137134153 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155705636 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148778085 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106762996 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1551097 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186801889 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114019169 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168801073 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205964051 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136074529 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190296074 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233597874 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17092399 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175455975 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14720516 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693889988 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133631821 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195244417 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160615163 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236712607 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149638231 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175129033 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159142364 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168406228 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196058602 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162008388 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.230914079 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220744674 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.180300333 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103491496 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158346285 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192068219 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.116138803 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152544689 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168769748 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161442239 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.155484291 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.207384881 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173407895 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.10575341 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14288859 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19826898 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161527862 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214057951 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180996336 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110421268 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203563978 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19043905 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134764815 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179879047 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238516191 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113408475 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152910404 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.135978232 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.159206505 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264487787 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.095947733 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23588583 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185655584 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160412483 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169237562 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147747976 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223421274 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15944157 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.187521725 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148543754 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.162500771 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158393515 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138346599 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102398978 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157635414 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169101383 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151110766 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159529533 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.167596888 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19789335 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.095870418 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145952099 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.31730524 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195525841 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24562069 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.107438482 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137690072 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16303713 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153132666 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.177626387 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179271081 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.137439805 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136041397 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109087515 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160242219 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.11323946 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157997481 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19731692 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194549517 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209774555 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.137675866 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.277497088 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112412546 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156685562 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.117022207 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105068638 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151989185 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147698593 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160210724 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19386798 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.26961056 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.149979694 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134711249 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150865969 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.099487947 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137956197 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166670832 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166111532 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178495436 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146598521 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080391716 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157576182 seconds)
  done (took 83.756335332 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.175482322 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.197784187 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.161912888 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205316656 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181065196 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270773044 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212038835 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256445031 seconds)
  done (took 2.805775783 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094417371 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.148200059 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159109783 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134630941 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093092954 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120279227 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.349607225 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133559491 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118989201 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121644181 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.174562633 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095280509 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.558395649 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091111647 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119085238 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109510949 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092222317 seconds)
  done (took 3.855758858 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.47942643 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.748463718 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.518580433 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097361475 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.273191439 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112745281 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.905651446 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202190964 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.118026294 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.494939778 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.77642578 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.169206406 seconds)
  done (took 19.047117303 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.11610638 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.137840122 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123743481 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.15459063 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.141443293 seconds)
  done (took 1.831674288 seconds)
done (took 133.188239028 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104579882 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406255198 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071498276 seconds)
  done (took 1.665474136 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107706371 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137957721 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108304511 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137294016 seconds)
  done (took 1.652274122 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.098274082 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126974852 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.1095387 seconds)
  done (took 1.491149727 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.32499319 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.19188237 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.171018254 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.112245134 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129297251 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.1026968 seconds)
  done (took 1.500844943 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.10096066 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128523286 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098163689 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131407673 seconds)
  done (took 1.614696928 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.09551923 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070537562 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101470274 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075049724 seconds)
  done (took 1.49545549 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114222903 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133031721 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103170585 seconds)
  done (took 1.510796442 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.13107232 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.14071457 seconds)
  done (took 1.433106363 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.108311516 seconds)
  done (took 1.26604354 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.119663123 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169675713 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.189340778 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.165959758 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.238423949 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165925331 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142040398 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113876281 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132871773 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145242678 seconds)
  done (took 2.744325094 seconds)
done (took 18.323108369 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104053654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.423682464 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.412869066 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117092504 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72308445 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380009939 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.047891018 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147258507 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.167416349 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.09391713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139645324 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.67096242 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.040032798 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.3789736 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.997833771 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.375656118 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677700286 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122454501 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119395522 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094354138 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.032398857 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091673276 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123236588 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.091994059 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705317416 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.425349687 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095470017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.377280601 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092678886 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127561582 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383387111 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124105279 seconds)
  done (took 17.053764782 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095846764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174895366 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09760391 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139432156 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.12377542 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094121215 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125605975 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093741606 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180023639 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123319755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.109323902 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122822533 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.125837947 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095429409 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142771406 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092328431 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125619887 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092391914 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122794534 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121670616 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113575486 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120930636 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094452548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122486838 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093527666 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136234374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093807513 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123322703 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.120965574 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100207648 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128567304 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.093962334 seconds)
  done (took 4.904202422 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.143816163 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183333853 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129293765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126764192 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170377898 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12506387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199129963 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.118315261 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183759053 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124040468 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140382307 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092746563 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15832664 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.093775842 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144087664 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.121989539 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096207249 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123201735 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09213837 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124274475 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140111513 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093523259 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122378685 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093344591 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123652011 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107386615 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124800459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120711982 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09484087 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127510341 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100284807 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125157615 seconds)
  done (took 5.236475864 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097480329 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126329414 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109386062 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139514094 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094101428 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126962869 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096345307 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125005304 seconds)
  done (took 2.07937309 seconds)
done (took 30.431004958 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.1117846 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126628327 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106867819 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135067595 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.101559476 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132897346 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091362363 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134892529 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133746001 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103268754 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137865659 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091619883 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.124182426 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092776552 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.135487949 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097355732 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.132983422 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101572662 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134619789 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.131824386 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094999001 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133309928 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103204543 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133879814 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.103697633 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134596335 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137235096 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.101044947 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.12286871 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094742699 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.124848105 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104097201 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124644586 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105336544 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127892069 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.096706998 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124516146 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.09436037 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134676756 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132333823 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.10053513 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133153189 seconds)
  done (took 6.074519481 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108245064 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139639486 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.10581877 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081129019 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118061014 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080683231 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138795332 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079106327 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110105497 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108183522 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074215961 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.107682271 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078546054 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101733407 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077997117 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076090482 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108903687 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076410464 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076487303 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106486498 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08017234 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072023345 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109021347 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078270835 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07439759 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111329016 seconds)
  done (took 3.649351389 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101264933 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134800497 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113535121 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184949005 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.160776454 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100254397 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132735353 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109131423 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.139099514 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.119785295 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096631286 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.148916093 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109658465 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130765043 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.091663842 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137881664 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135030851 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095348733 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.127926106 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111530861 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138059286 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102326961 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.141599754 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.131724396 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092245099 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122706426 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097140718 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135220159 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097424755 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132155934 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096702962 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.125796552 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122337795 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105616167 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126250107 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094293306 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142532711 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10210787 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132386906 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092074192 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.130378731 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121805912 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114956888 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.162581631 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091455536 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.130251423 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.095305026 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.133653908 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121152451 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.112291423 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.131797403 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092467824 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126169547 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091627293 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122285729 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106232118 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.125009821 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.09398745 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132785185 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.126518862 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.10662632 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125513648 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109324607 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122431589 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099487049 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122380455 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092569889 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.12124256 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.11312515 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124038724 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.162111555 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093259562 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124030208 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.100729423 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131514979 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.127490716 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094049774 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138242454 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102125548 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126488148 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101887669 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126448415 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.094610757 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141021687 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093655104 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125364036 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092608974 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129469161 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.123239764 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094181156 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.135961833 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092132259 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125719693 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110948475 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123578732 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.09280082 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129698963 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126889115 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093235017 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137079407 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09853649 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123533898 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102962831 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123418798 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.094806605 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.1341523 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126600502 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092300659 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127147676 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099785904 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123041954 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093062023 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.125180492 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094204961 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133232109 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099631931 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128341337 seconds)
  done (took 14.901981661 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228720117 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215523999 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.20501764 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.293790231 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.13667035 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113367165 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.210576714 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.155917219 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123773039 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.159938279 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175722742 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.180778178 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170802846 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.183391182 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.180429077 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.092871889 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14361534 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.163538411 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215938487 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.258380012 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.144500362 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.130591666 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.160383803 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.129903272 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137244423 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.132520652 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109741072 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137208706 seconds)
  done (took 5.873690351 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.109032378 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156106841 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097747815 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145780312 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.149323388 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092182658 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129104908 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093573379 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135801364 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136079654 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.092436984 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129629733 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100044535 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133263039 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123194191 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103693527 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.131638066 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.09573409 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126236261 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097210386 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133735675 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.100728262 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12827969 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091416053 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.133490889 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121634518 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087034437 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142822314 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091707451 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.14714617 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121557129 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102236162 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.137258443 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093621324 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123412789 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094881642 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.12659705 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095008716 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125532582 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.090719176 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123732073 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.078025192 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122212605 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106231035 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130985606 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079974772 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.130582371 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.098473435 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.12507695 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119635095 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097155748 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125314235 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.098644398 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130621102 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.096945095 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124509533 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097340975 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116128644 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100032267 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125233831 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084941794 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.090628864 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.129909468 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117426113 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101941697 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129546874 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09242049 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126162266 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.097678295 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.13070533 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.095965789 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.130683592 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.0907044 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126956249 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095233451 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.130999956 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.096076743 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123197132 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.092855945 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.12482621 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075214688 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124028775 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074017376 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127929087 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092438255 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.122877212 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096487688 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13051475 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.138107139 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.09537764 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.132446217 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094198663 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122408227 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096720832 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113614134 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096791915 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140425541 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.140766154 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09512194 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122379783 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108900035 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126732232 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093127258 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106213056 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102180218 seconds)
  done (took 13.060437035 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127724177 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155176815 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.093763495 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142324682 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.15729794 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157436081 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102255771 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131901511 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096105564 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143241325 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093559298 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132469172 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.093433082 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138243472 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157212721 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104129549 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126209444 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.108151029 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.129981221 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.169416112 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.112161343 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143396344 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.110700082 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125541546 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098619116 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142141688 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161171821 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.106818833 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138776752 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142033087 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109269264 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.16151101 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.112934103 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129634484 seconds)
  done (took 5.558654397 seconds)
done (took 50.286859064 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.289096529 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.531109802 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.270376551 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.274912311 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.324630379 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.267328998 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.299805107 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.265799313 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.536363226 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.27091604 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.506725245 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.975922462 seconds)
done (took 60.008501823 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.315927055 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.406775622 seconds)
    (2/2) benchmarking "String"...
    done (took 1.571325183 seconds)
  done (took 4.169557222 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.628615418 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.233545535 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.533658584 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.271684636 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.270452032 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.557711719 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.06252592 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.639069645 seconds)
  done (took 28.762122448 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.281601389 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.360715631 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.296887422 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.279695686 seconds)
  done (took 6.411607191 seconds)
done (took 49.48045194 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.297275041 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.332621458 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.277309373 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.264002159 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.387937227 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.301178074 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.595569557 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.274883362 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.292728235 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.252438127 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.292154988 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.295360748 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.272732568 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.590396505 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.275597219 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.269026241 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.334013264 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.776544627 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.691003188 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.282771981 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.284709277 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.279546133 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.272901919 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.29004671 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.318741218 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.272750345 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.276108653 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.294024333 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.994697484 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.273241265 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.300871749 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.751280225 seconds)
  done (took 193.157846607 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.275322927 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.469380139 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.547509257 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.298394983 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.062402869 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.470436387 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.407524687 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.131754943 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.293416298 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.296196681 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.639839771 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.273552705 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.710364034 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.306303698 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.303445697 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.361599747 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.641552443 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.702606718 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.326507615 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.451622682 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.294332304 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.567346425 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.498147386 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.587411968 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.327342027 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.297624303 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.294878771 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.298918846 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.4594086 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.571772116 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.304854148 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.312711434 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.928550152 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.135030015 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.286761221 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.310232923 seconds)
  done (took 154.639949509 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.316646162 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.274619463 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.27430978 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.275708376 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.30986877 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.273648581 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.868360722 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.890872933 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.78277023 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.698913544 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.694854733 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.569419198 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.273770395 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.371280791 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.287259577 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.274898627 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.290762545 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.31986106 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.273850876 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.274385129 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.891472725 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.29101867 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.386116964 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.47300056 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.295619016 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308606156 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.667345256 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.275947018 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309891428 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.611699601 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.328064167 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.273070302 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.671286541 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.407237181 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.273746743 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.392063373 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.278073184 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.310585827 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.274618369 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.560012885 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.276277741 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.275337729 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.278669728 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.957519921 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.276476863 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.872234245 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.276543361 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.248078518 seconds)
    (48/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.276559681 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.277504105 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.279583827 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.694004947 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.969105118 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.296791839 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.278031243 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.278822388 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.276307015 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.277921864 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.311884809 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.647892065 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.369438074 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.29774852 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.282581391 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.312100446 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.2753282 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.501176233 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.278940864 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.443074248 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.360939106 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.496847025 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.898660138 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.282257923 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.379526499 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.40211402 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.277926218 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.278064491 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.279992671 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.278330616 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.394023976 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.277295602 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.719131638 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.45907236 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.296713026 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.690537017 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.279365516 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.378564247 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.277416257 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.69231586 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.279535459 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.276750036 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.062652894 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37863915 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.280960727 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.278125162 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.277235867 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.723150717 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.896753322 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.555185463 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.279393144 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.395210657 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.280867047 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.738126453 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.867891218 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.975972858 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.279044846 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.391067362 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.459544569 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.298345281 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.279228257 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.69396507 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.278417735 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.337498489 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.279669041 seconds)
    (113/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.280372308 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.679831039 seconds)
  done (took 375.052224032 seconds)
done (took 725.361919132 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.885970892 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.880097668 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.993367187 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.870763548 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.838440683 seconds)
  done (took 10.668761225 seconds)
done (took 11.87107026 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.481319163 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.48164953 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.346855425 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.486073566 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.311555665 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.501296843 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.464066772 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.300865997 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.389452737 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.371193394 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.389717746 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336877954 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.308542426 seconds)
  done (took 19.373316783 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.627866375 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.632786955 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.34595369 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.619643886 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.325848508 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.615208731 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.488594937 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.505192519 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.509406573 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.318654133 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294149008 seconds)
  done (took 17.489241363 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.62920689 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.619535747 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.350232523 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.618621582 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.326826259 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.606600516 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.494405633 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.511835665 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.511852453 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.321984932 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.294130886 seconds)
  done (took 17.489920166 seconds)
done (took 55.556341289 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.293411056 seconds)
  done (took 2.4948069 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.327874056 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.492047335 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.312199522 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.29277429 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.29347213 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.292540658 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.29361639 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.29480407 seconds)
  done (took 11.805440827 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.291489893 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.289255912 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.288154017 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.293935475 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.28687049 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.289948294 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.292684599 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.29413084 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.29035222 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.291791213 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.292421561 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.289119861 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.290918793 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.292931257 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.290156676 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.29035801 seconds)
  done (took 21.861393256 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.289752237 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.291839055 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.292038172 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.294059646 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.292272486 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.291575351 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.292098263 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.291361077 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.28926307 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.29118455 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.291127737 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.2901834 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.293514592 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.293900731 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.290356953 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.29072013 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.291824417 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.291221202 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.298920516 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.293186125 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.293179711 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.293757246 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.292507462 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.292646485 seconds)
  done (took 32.221007613 seconds)
done (took 69.58880508 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.540547873 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.04250416 seconds)
  done (took 9.791667705 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.293696679 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.296692865 seconds)
  done (took 3.802366217 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.297044451 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.292897086 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.2950512 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.29571425 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.29645847 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.291279246 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.295373693 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.294052169 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.293293516 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.293243945 seconds)
  done (took 14.154871866 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.295010901 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.297092871 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.293068526 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.297495292 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.296500344 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.294197797 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.300308225 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.294479603 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.297041794 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.291883091 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.295577525 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.294869341 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.297718764 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.294960666 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.296369175 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.2974219 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.296174828 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.292850299 seconds)
  done (took 24.53172813 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.299712867 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.298154991 seconds)
  done (took 3.810570468 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.295739984 seconds)
    (2/7) benchmarking "second"...
    done (took 1.297057893 seconds)
    (3/7) benchmarking "month"...
    done (took 1.297275144 seconds)
    (4/7) benchmarking "year"...
    done (took 1.296106668 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.294504258 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.295018333 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.295604423 seconds)
  done (took 10.283548446 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.29753492 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.47420005 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.55691028 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.906743782 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.29688333 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.300995343 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.13956715 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.299649586 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.302334497 seconds)
  done (took 14.787557146 seconds)
done (took 82.372089254 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.335019957 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.307460833 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.528529204 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.303489144 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.309989346 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.634301636 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.331509953 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.422859694 seconds)
done (took 38.385377173 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.307914268 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.27732828 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.126695113 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.287322112 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.363934142 seconds)
  done (took 19.267607853 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.38475861 seconds)
    (2/2) benchmarking "read"...
    done (took 1.633577106 seconds)
  done (took 5.232434157 seconds)
done (took 32.01995929 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.30188754 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.301565077 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.292264027 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.297580862 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.294677971 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.295199451 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.296810229 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.295141849 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.29828016 seconds)
    (10/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.301145628 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.3004562 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.302472018 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.299177695 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.294729886 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.294878428 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295828254 seconds)
    (17/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.296469912 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.297662991 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.299159978 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.301463837 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.295404292 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.298529968 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.296941056 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.296465325 seconds)
  done (took 32.358470132 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.304332706 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.301006767 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.298751223 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.301043037 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.297071074 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.299661842 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.302101015 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.295763814 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.2990549 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.302514133 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.296203169 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.299625771 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.299846823 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.29952794 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30122991 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.297619361 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.302982172 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29700719 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.299255757 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.299420451 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.300837246 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.298587491 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.298970964 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.300240721 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.300812808 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.301934181 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.303246418 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.300736294 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.301950514 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.300008272 seconds)
  done (took 40.218037129 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.30738435 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.311282715 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.302448321 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.29909581 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.300987053 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.305808258 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.302392982 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.297309625 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.300664835 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.298556318 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.300556448 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.303772214 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.304005463 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.303818044 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.299868549 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.304618899 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.301667981 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.3020437 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.304681371 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.306072209 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.302894136 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.30388839 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.30286458 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.303091754 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.303732727 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.302194981 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.307216391 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.300923492 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.301581672 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.30353508 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.303979457 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.303262602 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.300401084 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.304056916 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.302550247 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.303417786 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.311213203 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.308313622 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.305034453 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.306525225 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.306070738 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.301632502 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.30389887 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.305688031 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.30633286 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.307597576 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.307140132 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.302734724 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.303061849 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.303852018 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.306105227 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.305148222 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.303040759 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.305212183 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.302960801 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.304007479 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.304584363 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.305201501 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.306284674 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.30290434 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.302779744 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.304936021 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.304129758 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.302293896 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.305329788 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.305090899 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.306168573 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.307560477 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.306436186 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.305522845 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.308141737 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.306081374 seconds)
  done (took 95.115342569 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.303563351 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.306780087 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.305414098 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.303754566 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305706972 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.304728584 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.302570649 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.30703516 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.304927927 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.305824889 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306836674 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303645782 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.302856335 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.305507669 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.305396115 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.305275726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.306070702 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.303212014 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.306214283 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305152756 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.307543617 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.304490297 seconds)
  done (took 29.933495051 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.309528283 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.309987955 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.303333234 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.306590985 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305405735 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.308235971 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.30928044 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.309259168 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.305571916 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.307961449 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.303561827 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30664062 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.302967289 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30450873 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.303198649 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.306133351 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.306086126 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30468926 seconds)
  done (took 24.732297264 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.307485192 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.306520634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.305013755 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.30519836 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.304895633 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.307397951 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.304915736 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.307512776 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.305646272 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.304383951 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.308110527 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306019777 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.305941786 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.301672698 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.306731481 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.305511531 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.30853935 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.305655896 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309679947 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.305629592 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.305193862 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.30747528 seconds)
  done (took 29.958574091 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.307432821 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.309800417 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.305603132 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.305032551 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.305860402 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.306028911 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.30923098 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.306614733 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.308906064 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.309355948 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.306097338 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.306997961 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.306739452 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.306538171 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.304855312 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.305927534 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.308711647 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.307385424 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.309409259 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.305525796 seconds)
  done (took 27.365532847 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.310975685 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.30805851 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.310292779 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.310831885 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.311351294 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.309121613 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.30920905 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.308846654 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.311277225 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.308249987 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.312269065 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.310084429 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311430831 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.310548325 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.310007195 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.309139723 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.310435604 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310354412 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.312547865 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313544688 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.309843907 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.309776948 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.312186175 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.310812443 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.311567641 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.310023103 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311409858 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.311682202 seconds)
  done (took 37.92163535 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31006632 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311431633 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.306276838 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.308428389 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.307469347 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.307479688 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.307005566 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.306347892 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.308966317 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.305702823 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.31150226 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.309657233 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.31001236 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.309672473 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.30923887 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.311145634 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.310819085 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.306209268 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.308572346 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.307789397 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.310411431 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.311509195 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.312474306 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.308019395 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.309457921 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.313286917 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308201687 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.308452685 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.312595949 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.30815794 seconds)
  done (took 40.504839919 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.33285081 seconds)
    (2/2) benchmarking "in"...
    done (took 1.331926578 seconds)
  done (took 3.891785122 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.308078455 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.312816337 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.312841172 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.309210003 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.309584186 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.310767821 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.312445073 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.310129806 seconds)
  done (took 11.712541605 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.31298429 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.312965357 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.310952835 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.313537688 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.313887364 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.310979969 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.319684658 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.334645428 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.312131471 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.313922584 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.320588611 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.320816951 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.315715918 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.31365185 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.310643627 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.315192038 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.313128675 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.315250373 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.315081292 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.31310642 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316939268 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.315537189 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.315725506 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.312796928 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.315017129 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.324629768 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.339796149 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.314436575 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.31533705 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.31751554 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.314121006 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.311257804 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.315359827 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.322352764 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.314590104 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.315919315 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.322755073 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.33604392 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.320487602 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.33612167 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.314022773 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.312462734 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.316668614 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.315442556 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.316001745 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.315430491 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.315849781 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.313145004 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.314685393 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.319549737 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.323031636 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.313693352 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.313068221 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.316467569 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.314901374 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.319364296 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.335657247 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.31830711 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.323376437 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.324195416 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.347834329 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.340374845 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.317168817 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.316543007 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.324747856 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.338745538 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.321742858 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.334267798 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.312185045 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.317597633 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.320692732 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.348167756 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.343494166 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.316820528 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.315749101 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.316636729 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.31823923 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.317219738 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.322201577 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.34033074 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.318911591 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.319733015 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.329120058 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.340211541 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.31823066 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.319770417 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.318494375 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.320571878 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.318422072 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.328278623 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.342475242 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.319916523 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.317029179 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.319022032 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.31990685 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.318364903 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.316646612 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.317597889 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.315337304 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.31796643 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.319752713 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.322346878 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.327113204 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.32048151 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.320505521 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.324731678 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.341509914 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.318047778 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.323135617 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.319518515 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.320579945 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.31980464 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.324011184 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.316722214 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.32179503 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.326834787 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.320136979 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.319503538 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.319492248 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.320558885 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.329215763 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.34413101 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.319706513 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.319181136 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.324244176 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.33198101 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.320431682 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.321733607 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.319845219 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.316887091 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.317059128 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.32026912 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.319249142 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.318750796 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.321538354 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.320801311 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.318197594 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.321294767 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.320794623 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.321632554 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.321065467 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.320086935 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.320268488 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.321927526 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.322039904 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.320568423 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.325716687 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.342479247 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.321593555 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.320987823 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.319527178 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.321351731 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.320426216 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.321871588 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.321286653 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.322184506 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.320760606 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.323109365 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.321939941 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.322372307 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.322028942 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.323146315 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.32617946 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.323160281 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.325748751 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.321548978 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.31953348 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.321864858 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.322176565 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.322231063 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.323380382 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.322532486 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.325897621 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.331668115 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.323551333 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.323635557 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.326030424 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.323383463 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.324813296 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.32564866 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.327400641 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.331499234 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.324336187 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.328488858 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.344743091 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.325024823 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.324462276 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.324539721 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.322850918 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.323535935 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.327565108 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.332637033 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.335743126 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.353187682 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.324726008 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.328363053 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.324740188 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.32844152 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.328354679 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.325649939 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.325850954 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.324885208 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.324538054 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.325061019 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.326235908 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.325691515 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.324855334 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.325648063 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.325844644 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.326029739 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.325154315 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.325303596 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.325022636 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.323231694 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.327491659 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.326561148 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.326007815 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.323781062 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.325181991 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.32480703 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.327597392 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.327249752 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.331115083 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.324015299 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.326078717 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.328898262 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.326269633 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.328112476 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.325382939 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.329507553 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.325974562 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.332066434 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.34916018 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.326082248 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.332990803 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.348567128 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.326395317 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.329091506 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.327762791 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.324487762 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.329595901 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.33732788 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.328117225 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.327946856 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.328974775 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.327826731 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.328677674 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.332640095 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.347190305 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.326964787 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.328686978 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.328970952 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.326019391 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.328597972 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.329144099 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.327692715 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.329217657 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.329640626 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.330553513 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.327745234 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.328066444 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.329998461 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.329914896 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331841704 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.33861878 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.333874776 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.328367558 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.329971471 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.329833749 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.335367567 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.329430207 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.329481972 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.328356229 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.340824608 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.35700511 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.335184143 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.350820445 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.331213454 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.333584928 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.354578116 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.334224328 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.329443348 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.329229435 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.329756303 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.328421975 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.327514362 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.329108272 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.330966146 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.330887519 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.331543858 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.335016365 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.3307748 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.329767056 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.330699374 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.332126699 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.331304519 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.330350662 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.332084706 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.331979114 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.332307974 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.331586985 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.329731088 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.338078584 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.351648708 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.332447661 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.330333229 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.331335673 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.332107678 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.331322449 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.333841094 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.335410949 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.340924486 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.334307793 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.341164034 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.332814136 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.341432116 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.333009277 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.335347902 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.34038274 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.331671438 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.331235893 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.333868588 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.334283032 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339460598 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.355497828 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.335262919 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.337960967 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.336116647 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.334782586 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.335620962 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.334533147 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.335929126 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.335267794 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.341281339 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.356842921 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.336336735 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.33480413 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.332227062 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.335943305 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.334605347 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.332456515 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.336163246 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.33516763 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.336533989 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.334406885 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.334689004 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.334271057 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.334541213 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.335103863 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.332859974 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.335455135 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.338520237 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.359505009 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.339858898 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.335810771 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.339154283 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.359766616 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.341094771 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.358306923 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.335734161 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.333911839 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.335930315 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.336988217 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.334260582 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.336254949 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.336620399 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.336449584 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.339191989 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.337510174 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.338238575 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.336868172 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.337304565 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.334272718 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348698932 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.362554148 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.339348185 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.340108697 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.333396174 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.336974585 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.343135576 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.335961468 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.335361152 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.339186213 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.346578667 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.344332106 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.337398515 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.34014786 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336919493 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.341253627 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.337338472 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.339372467 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.338383367 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.337837218 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.337817829 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.338878346 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.339417989 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.340180243 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.34089027 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.337138829 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.340346632 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.347840584 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.360013262 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.339546917 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339346278 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.339917775 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.338062108 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.33927405 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.338377388 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.33929969 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339681782 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.340437103 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.345344872 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.348583049 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.340693409 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.338169094 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.339320527 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.338484119 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.339421515 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.340921769 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.339261892 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342486578 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.339623393 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.33862172 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.338325155 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.338042228 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.338916144 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.338139444 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.339984145 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344078552 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.349878154 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340289987 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.337046264 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.33954273 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.34130814 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.340579843 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.338737882 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.345899168 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364616875 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.354736744 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.34910906 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.344714527 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.339967643 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.341643503 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.349283402 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.339506958 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.339645074 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.342270406 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.341240069 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.341589672 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.344184973 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.34134897 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.347479854 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.363059868 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.33935695 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.34765676 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.362553173 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344369609 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.343780676 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.346386914 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.341833247 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.339981455 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.341405 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.339531834 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.347000521 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.365353477 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.341919505 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.3412215 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.339548876 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.343124389 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.34594623 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.34124254 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.343142176 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.339271586 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.342705164 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.340305693 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.341875086 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.339483318 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.340924515 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.340714377 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.345317018 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.347072392 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.339056083 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.341555253 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.339715083 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.33984464 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.341264468 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.342236374 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.338520284 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.337861403 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.340817856 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.340218636 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.339516666 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.341522701 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.338151804 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.342555647 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.342848671 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.340626116 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.343779994 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.350539559 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.349081037 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.337613575 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.341021171 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.340657238 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.342714087 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.341833817 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.341683329 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.341491665 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.341825516 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.342408799 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.342891667 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.340567295 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.344372316 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.354557995 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.363295099 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.339421916 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.341089469 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.342769574 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.338052607 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.335489273 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.339055998 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.339567475 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.340311448 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.347277389 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.339828083 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.344394391 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.359750771 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.339134554 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.344251146 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.341347978 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.345883406 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.339249567 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.342085565 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.33898419 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.344174679 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.356498305 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.340381685 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.350519366 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.370562583 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.362836357 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.339302605 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.339824921 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.339645697 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.34043777 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.340917627 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.34040662 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.341232989 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340497678 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.339283765 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.340977553 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.344403983 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.339733128 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.341264584 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.340087745 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.338292158 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.341301952 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.336819181 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.339787437 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.340084168 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.3392377 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.34006868 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.339107179 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.341315742 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.349265484 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.366935205 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.339436129 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.340344832 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.338730843 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.341359052 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.343054644 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.351087415 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.347191499 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.340576845 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.339807998 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.338296191 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.339429308 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.338023595 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.338668616 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.339384999 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336769437 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.33611873 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.34931495 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.366491187 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.342198388 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.338666596 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.339725031 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.338092498 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.339575633 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.338884882 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.339120709 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.341009024 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.342206891 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.343692147 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.33977838 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.340960528 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.343928128 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.348839579 seconds)
  done (took 795.740981009 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.338775356 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337041347 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.338008135 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.339603481 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.338427859 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334839077 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337792111 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.338949936 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.337425429 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.338609937 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.337445111 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339817479 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.337573756 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.340620451 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335928909 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.33857048 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.339365249 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.337725803 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.338593551 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.339326874 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.339014611 seconds)
  done (took 29.356289368 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.340621493 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.341172598 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.340416951 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.342327412 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.339074688 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.342120244 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.339181201 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.341584223 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.340980294 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340419963 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.342378539 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342425096 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.340819618 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.340448355 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340332422 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343674354 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.341199201 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.340898138 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.342434305 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.340232728 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.343928323 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.340126273 seconds)
  done (took 30.760163654 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.343287911 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.344613769 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.342002607 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.3394122 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.343391959 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.342590216 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.344357452 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.345946054 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.344313153 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.344709322 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.342841554 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.348642029 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.351836288 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.348719226 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.344504882 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.34426512 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.48785781 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.34467545 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.346730482 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.343997868 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.34158459 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.347822376 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.364024664 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.344170613 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.342688833 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.346186485 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.344850763 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.344139069 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.344467082 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.347263242 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.348947961 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.344981064 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.343493397 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.344443169 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.344177183 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.346783305 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.349189274 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.346005168 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.342136657 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.344554341 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.353792836 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.366694857 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.345971176 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.350819337 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.367582352 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.346088523 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.348715046 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.356075592 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.344462157 seconds)
  done (took 67.398131807 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.347297619 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.347291974 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.344428409 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.348266033 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.346706136 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.346937012 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.345057676 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.346424193 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.34489141 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.343262011 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.350516476 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.345324228 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.343321255 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.345931694 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.347688417 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.345099873 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.344968099 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.344398717 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.344817219 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.343840991 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.343353085 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.345559464 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.347289524 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.346858458 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.347330747 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.343654053 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.345387472 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.347790507 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.343939065 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.3440994 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.346151678 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.348675147 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.35015713 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.346687124 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.345472177 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.347435839 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.347583298 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.347037629 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.347149949 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.345144393 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.348399721 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.347800274 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.34830126 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.348977646 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.344684501 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.345564757 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.346375294 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.346781271 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.346062237 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.3502211 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.349232544 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.345835198 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.348695355 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.344705044 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.347906164 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.348948757 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.346407098 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.34612356 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.348781554 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.344354318 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.346133919 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.347765134 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.346837594 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.347462685 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.34781917 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.345739712 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.345035249 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.349031136 seconds)
  done (took 92.823269466 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.348340289 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.350383517 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.349263223 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.348304489 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.349759448 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.347513043 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.349557348 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.347187684 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.349306169 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.34781882 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.349154469 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.350766337 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.347870123 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.348380729 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.347604337 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.349454069 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.352704124 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.351389836 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.352208277 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350716212 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.349405332 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.351915359 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.352253158 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.352856375 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.351642348 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.350053298 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.350169009 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.350417417 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.351457117 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.35099025 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.354286164 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.351169042 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.351870732 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.350610792 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.350923106 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.351303135 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.353394607 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351798078 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.352452628 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.351700647 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.349932641 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.350371718 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.352624345 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.353348184 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351535453 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.35528822 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.352540579 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.353978655 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.352678094 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.354038815 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.353897724 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.351066185 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350379944 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.3547304 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.354901626 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.35324739 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.358085346 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.354420495 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352522984 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.355338451 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.355040828 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.354276758 seconds)
  done (took 85.055710663 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.360447248 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.356072715 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.354248778 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.352643049 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.355516373 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352089906 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.360687169 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.356055127 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.356545444 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.357113821 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355937122 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.354159709 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.356349892 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.357567572 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.352033471 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.35286871 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355950215 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.356735469 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.360534929 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.355126286 seconds)
  done (took 28.381656641 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.35699769 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.35941656 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.355452861 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.354159559 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.357585709 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.35873955 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.356270163 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357779448 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354571287 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356305354 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.361316929 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.357199793 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.353621841 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.356241344 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.359450943 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.358130806 seconds)
  done (took 22.978812498 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.358610633 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.360983478 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.361318643 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.36196918 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.35316576 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.353522614 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.358886434 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.351959996 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.351631926 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.357244865 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.35592641 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.358338814 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.356386144 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.356269309 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.356096811 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.355619098 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.353978923 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.352309842 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.357224177 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.360622159 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.352970113 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.350993616 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.35937969 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.356462031 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.356814967 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.360072204 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.351423216 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.352939696 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.353676765 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.354036187 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.355954379 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.352014334 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.351458594 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.353322869 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.35889409 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.357930226 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.359567001 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.354914615 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.3577526 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.356648438 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.359582784 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.35662977 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.355663474 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.358081143 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.352280546 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.358202907 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.352971925 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.353796003 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.35192264 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.350931346 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.352575829 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.359828801 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.356937496 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.355246055 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.356397864 seconds)
  done (took 75.838201992 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.358476053 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.357576513 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.353860888 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.354060612 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.354804373 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.353186778 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.35424419 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.352921926 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352397255 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.35488445 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.354584473 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.357369646 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.355861358 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.356307464 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.355512769 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356625319 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.3550213 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.352794601 seconds)
  done (took 25.653478321 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.35536149 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.353670044 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.356446679 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.35489502 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.352635139 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.354220049 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353635084 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.353956185 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35450779 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.356029257 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354780115 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.354628105 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.354243612 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.355787136 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.354636106 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355638628 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.357579865 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.355958968 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.352307262 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.350685177 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.35467339 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.35603174 seconds)
  done (took 31.069676288 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.354251709 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.355794561 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.35352706 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.372124784 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.376004704 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.378509842 seconds)
  done (took 9.460115315 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.364944746 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.356903652 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351283438 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.355506584 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355578833 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351668719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352473379 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.35098335 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354240846 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353033934 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349932847 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355841526 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35628545 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351456588 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.354166794 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355723251 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351961663 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351534118 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354069676 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.357813286 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.353448576 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.355894131 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35371027 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354526969 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.35485878 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353529391 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354534891 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.355262271 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352337296 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355799351 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.356284889 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.355551917 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.358294654 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.35652732 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.358747323 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.356545806 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.354619599 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.357956293 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.358209005 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.353312125 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.353260461 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353607655 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.354601939 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.352391151 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354847614 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352492177 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.354338323 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34886501 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35091278 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353262933 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.353833222 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351253059 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.35385255 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352833582 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.353934024 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352976003 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350039892 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350706579 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.353163471 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351581936 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350172916 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.354315147 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349113578 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34907957 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.352424602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348324458 seconds)
  done (took 90.640876746 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349163776 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351397435 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3486147 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350317902 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348267895 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348718027 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350436602 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.349102 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348601263 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350831476 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351719473 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348306156 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348219328 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348516067 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349587231 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348329424 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348002508 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348809585 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348401505 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352380544 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348231436 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348844381 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348438791 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349509362 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349133204 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352205409 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349217292 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34938797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348468966 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349538483 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349774031 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350624683 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350367076 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.350094989 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.350329192 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35007677 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350220118 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349431365 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350846368 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353515086 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350476097 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.352536743 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.349726193 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351108427 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351302889 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.35103736 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350490878 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350849611 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351503296 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351182528 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351038813 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.351831824 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351720182 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.350934479 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350598901 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.351884608 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350823239 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.351290689 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350857996 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35438956 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351248808 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.35183312 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.355930735 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351427821 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351667127 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.351776657 seconds)
  done (took 90.389852358 seconds)
done (took 1850.470167555 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.379398616 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.400731952 seconds)
  done (took 14.044968868 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.525761807 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.473222323 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.356107952 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.396824871 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.357706697 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.369396924 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.357152139 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.358313566 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.358349819 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.356129631 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.356886375 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.540992817 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.405650025 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.35611008 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.355981843 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.451636982 seconds)
  done (took 43.648010504 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.384084903 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.362642634 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.474485144 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.385186124 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.384050444 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.548072962 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.419648686 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.365104124 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.531004757 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.404355101 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.92625599 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.386975105 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.359371273 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.474286022 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.385042446 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.546574863 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.606035681 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.906598342 seconds)
  done (took 31.121971437 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.799397933 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.393401145 seconds)
  done (took 9.461877575 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.375173515 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.361313946 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.358957526 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.354828857 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.351096339 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.351359977 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.359856349 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.355724577 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.867512267 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.483964696 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.358919664 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.365154002 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.383627143 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.362842378 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.358117091 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.392998107 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.538586351 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.357854461 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.355958816 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.36436975 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.35365925 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.440686573 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.398552189 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.356035396 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.482889198 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.83951957 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.365771743 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.361651721 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.507171256 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.355999795 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.357111551 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.357444061 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.356925006 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.949555551 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.786076415 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.365905493 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.38146749 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.365061057 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.355271171 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.495361844 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.358954365 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.365335778 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.35323714 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.783285226 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.48705662 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.473782855 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.557055001 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.373851899 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.361476762 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.418973403 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.360460028 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.357662027 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.384358002 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.112776814 seconds)
  done (took 112.306153041 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.376221175 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.739388891 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.518499279 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.36436665 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.977105388 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.993159567 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.362062919 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.625856393 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.417249348 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.350254799 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.646502673 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.841460075 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.36856464 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.368964921 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.994240656 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.401912982 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.347900883 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.067797055 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.367168044 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.357847843 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.841340104 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.355688901 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.375157129 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.496544406 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.386823957 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.796467452 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.692960634 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.787734775 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.370294548 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.353679208 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.803329788 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.375534549 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.368174577 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.357277916 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.610708022 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.698817003 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.696496434 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.372137932 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.395316527 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.357930051 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.388785261 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.791461831 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.698172099 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.372657949 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.36133775 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814633859 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.368798964 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.356929305 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.356497333 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.554501104 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.011089009 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.362449167 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.685010286 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.356666229 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.734282729 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.425961655 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.410934477 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.825762669 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.371358004 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.417857582 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.401181715 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.357003728 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.357924166 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.356354351 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.360047994 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.690796808 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.499646957 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.360631033 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.689197441 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.817012145 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.368567382 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.879217767 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.264833075 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.386122764 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.449594862 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.355350447 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.877771766 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.834258498 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.396212547 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.356245394 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.676331947 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.372810187 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.631247328 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.370503099 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.35727229 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.872217577 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.36472607 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.411061074 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.356365666 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.372742519 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.966780643 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.364472648 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.639394617 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.398503489 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.355657501 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.358287102 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.37623988 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.359390409 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.372847656 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.361527777 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.871015619 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.372513419 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.459847091 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.38034995 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.358711236 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.360714084 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.359177609 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.359195261 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.574634137 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.845178629 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.381276762 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.359349367 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.352725369 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.374911366 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.518403792 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.357976469 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.652704503 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.373079727 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35756827 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.376774639 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.030369833 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.419683802 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357679141 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.374345058 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.243893117 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.567004069 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.382607761 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.357672124 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.358578133 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.374810726 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.549315137 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.379357822 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.39935729 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.35940469 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.047752088 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.417432359 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.378932249 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.671487117 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.367251546 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.161937782 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.378423264 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.358001922 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.659660482 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.626901148 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.406593158 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.360365577 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.374684407 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.043910194 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.382505731 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.495664653 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.382878629 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.451332895 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.560969424 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.818024377 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.360620222 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.011143524 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.359607568 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.5731507 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.361849312 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.657059717 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.838392579 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.380446541 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.367511179 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.048497052 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.087451585 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.171292513 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.363944715 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.630983206 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.303161723 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.839068048 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.359608018 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.35587068 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.790962928 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.361742672 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.367129105 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.36002211 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.357507764 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.505559715 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.528498492 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.93185644 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.362955854 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.798676725 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.392409347 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.36239476 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.377184988 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.36123781 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.709785507 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.412001811 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.361656594 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.364004548 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.3623734 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.365366921 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.824856802 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.304450645 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.365435911 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.513932979 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.975457463 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.382201838 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.361591471 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.013579093 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.618592932 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.854772359 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.380114741 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.656053893 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.38022418 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.398048986 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.961563178 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.420803127 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.862665808 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.381501505 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.36116995 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.935714817 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.381789648 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.729192142 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.363107749 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.364966056 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.88024002 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.382484196 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.367205972 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.557850803 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.381412466 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.625081394 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.373676316 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.405411648 seconds)
  done (took 1116.126427773 seconds)
done (took 1327.974112812 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.365585051 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.360260455 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.352754035 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.367274886 seconds)
  done (took 26.722104197 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.376950253 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.377742102 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.372918867 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.372505265 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.370537785 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.374715138 seconds)
  done (took 9.522251505 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.442705499 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.36323028 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.36958568 seconds)
  done (took 19.451904305 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.567229088 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.642770834 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.719606337 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.536873827 seconds)
  done (took 10.74457003 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.37633037 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.374387476 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.373824855 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.376642063 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.379167108 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.382556011 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.376563888 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.377156168 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.379454368 seconds)
  done (took 13.673931604 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.375770842 seconds)
done (took 82.767940239 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.470375818 seconds)
    (2/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.392140501 seconds)
    (3/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.070889552 seconds)
    (4/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.359786364 seconds)
    (5/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.454629704 seconds)
    (6/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.396411038 seconds)
    (7/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.372706486 seconds)
    (8/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.603248479 seconds)
    (9/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.388011294 seconds)
    (10/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.096735391 seconds)
    (11/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.09595565 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.404146621 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.393022403 seconds)
    (14/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.366173849 seconds)
    (15/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.397109626 seconds)
    (16/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.362717145 seconds)
    (17/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.345847891 seconds)
    (18/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.378490857 seconds)
    (19/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.359760697 seconds)
    (20/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.392848898 seconds)
    (21/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.349243252 seconds)
    (22/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.37608991 seconds)
    (23/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.350068821 seconds)
    (24/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.548060664 seconds)
    (25/286) benchmarking ("sort", Int64, true)...
    done (took 6.362196005 seconds)
    (26/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.446570939 seconds)
    (27/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.474330447 seconds)
    (28/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.499844122 seconds)
    (29/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.350125196 seconds)
    (30/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.174633239 seconds)
    (31/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.171009911 seconds)
    (32/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.31872626 seconds)
    (33/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.473356611 seconds)
    (34/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.378177857 seconds)
    (35/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.05589224 seconds)
    (36/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.407388163 seconds)
    (37/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.382623978 seconds)
    (38/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.394882399 seconds)
    (39/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.454203951 seconds)
    (40/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.137851984 seconds)
    (41/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.165592371 seconds)
    (42/286) benchmarking ("sort", Int8, false)...
    done (took 4.375286661 seconds)
    (43/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.447539149 seconds)
    (44/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.957557201 seconds)
    (45/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.372010737 seconds)
    (46/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.436752835 seconds)
    (47/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.481390626 seconds)
    (48/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.492594496 seconds)
    (49/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.350081758 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.645252986 seconds)
    (51/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.433210578 seconds)
    (52/286) benchmarking ("sort", Float32, true)...
    done (took 6.367085648 seconds)
    (53/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.916808584 seconds)
    (54/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.473276462 seconds)
    (55/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.306164226 seconds)
    (56/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.352205449 seconds)
    (57/286) benchmarking ("sort", Int8, true)...
    done (took 6.365026194 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.438470775 seconds)
    (59/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.970119933 seconds)
    (60/286) benchmarking ("sort", BigInt, true)...
    done (took 6.363703617 seconds)
    (61/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.375780451 seconds)
    (62/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.764674456 seconds)
    (63/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.226395185 seconds)
    (64/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.360297869 seconds)
    (65/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.383424625 seconds)
    (66/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.569276117 seconds)
    (67/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.754558223 seconds)
    (68/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.363061321 seconds)
    (69/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.761530499 seconds)
    (70/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.38326683 seconds)
    (71/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.472250862 seconds)
    (72/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.567318547 seconds)
    (73/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.504072893 seconds)
    (74/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.453735181 seconds)
    (75/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.367915455 seconds)
    (76/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.718039302 seconds)
    (77/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.451143756 seconds)
    (78/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.429018374 seconds)
    (79/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.381444776 seconds)
    (80/286) benchmarking ("sort", Int64, false)...
    done (took 5.540077252 seconds)
    (81/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.347567298 seconds)
    (82/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.73992297 seconds)
    (83/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.560639206 seconds)
    (84/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.390247114 seconds)
    (85/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.787422889 seconds)
    (86/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.278653984 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.267108491 seconds)
    (88/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.39441396 seconds)
    (89/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.54926439 seconds)
    (90/286) benchmarking ("sort", BigInt, false)...
    done (took 6.372088272 seconds)
    (91/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.285189012 seconds)
    (92/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.389009062 seconds)
    (93/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.414709238 seconds)
    (94/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.38463128 seconds)
    (95/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.36603386 seconds)
    (96/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.347129477 seconds)
    (97/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.789042309 seconds)
    (98/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.374452064 seconds)
    (99/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.469000234 seconds)
    (100/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.505587307 seconds)
    (101/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.353345461 seconds)
    (102/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.468648811 seconds)
    (103/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.469377549 seconds)
    (104/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.435554409 seconds)
    (105/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.932361737 seconds)
    (106/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.370407671 seconds)
    (107/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.915171562 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.584180316 seconds)
    (109/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.71949979 seconds)
    (110/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.384114429 seconds)
    (111/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.73300673 seconds)
    (112/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.802503637 seconds)
    (113/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.610483699 seconds)
    (114/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.730315094 seconds)
    (115/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.006839109 seconds)
    (116/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.350649084 seconds)
    (117/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.593461186 seconds)
    (118/286) benchmarking ("sort", Float32, false)...
    done (took 5.372039284 seconds)
    (119/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.67718373 seconds)
    (120/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.349542783 seconds)
    (121/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.402876064 seconds)
    (122/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.186514778 seconds)
    (123/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.391297289 seconds)
    (124/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.38999665 seconds)
    (125/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.409551922 seconds)
    (126/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.395666207 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.617793766 seconds)
    (128/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.564349192 seconds)
    (129/286) benchmarking ("sort", Bool, false)...
    done (took 1.901971034 seconds)
    (130/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.408963003 seconds)
    (131/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.45922242 seconds)
    (132/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.630702145 seconds)
    (133/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.741088359 seconds)
    (134/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.396520338 seconds)
    (135/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.562633367 seconds)
    (136/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.706913612 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.118070511 seconds)
    (138/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.638366726 seconds)
    (139/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.36505735 seconds)
    (140/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.714093444 seconds)
    (141/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.369620921 seconds)
    (142/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.83486617 seconds)
    (143/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.356590864 seconds)
    (144/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.803590834 seconds)
    (145/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.488644754 seconds)
    (146/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.374842419 seconds)
    (147/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.012740887 seconds)
    (148/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.37090757 seconds)
    (149/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.006419383 seconds)
    (150/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.376004602 seconds)
    (151/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.121175605 seconds)
    (152/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.4066862 seconds)
    (153/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.333857007 seconds)
    (154/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.514208136 seconds)
    (155/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.37569622 seconds)
    (156/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.369819182 seconds)
    (157/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.366872409 seconds)
    (158/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.796588705 seconds)
    (159/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.366396723 seconds)
    (160/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.292477665 seconds)
    (161/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.971831855 seconds)
    (162/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.478992348 seconds)
    (163/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.398294769 seconds)
    (164/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.499965123 seconds)
    (165/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.458424659 seconds)
    (166/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.461605906 seconds)
    (167/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.360280415 seconds)
    (168/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.778509724 seconds)
    (169/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.461603554 seconds)
    (170/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.905893236 seconds)
    (171/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.456036136 seconds)
    (172/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.383048994 seconds)
    (173/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.739966263 seconds)
    (174/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.158169742 seconds)
    (175/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.456915213 seconds)
    (176/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.851930445 seconds)
    (177/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.630072365 seconds)
    (178/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.374120959 seconds)
    (179/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.356428102 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.28897395 seconds)
    (181/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.400903195 seconds)
    (182/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.742678612 seconds)
    (183/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.386488559 seconds)
    (184/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.738998799 seconds)
    (185/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.354133923 seconds)
    (186/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.554535354 seconds)
    (187/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.432914751 seconds)
    (188/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.869332712 seconds)
    (189/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.378416348 seconds)
    (190/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.208861545 seconds)
    (191/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.401896968 seconds)
    (192/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.358402252 seconds)
    (193/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.934587508 seconds)
    (194/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.821579969 seconds)
    (195/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.370516104 seconds)
    (196/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.356035268 seconds)
    (197/286) benchmarking ("sort", Bool, true)...
    done (took 5.454158498 seconds)
    (198/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.446427631 seconds)
    (199/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.974021712 seconds)
    (200/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.358660455 seconds)
    (201/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.856961333 seconds)
    (202/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.412889061 seconds)
    (203/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.487304093 seconds)
    (204/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.364761479 seconds)
    (205/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.237061466 seconds)
    (206/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.007427981 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.006790665 seconds)
    (208/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.081987086 seconds)
    (209/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.369275318 seconds)
    (210/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.230930508 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.034797455 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.578456569 seconds)
    (213/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.943669398 seconds)
    (214/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.628458983 seconds)
    (215/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.361813659 seconds)
    (216/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.127936137 seconds)
    (217/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.404721024 seconds)
    (218/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.465860457 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.420473035 seconds)
    (220/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.198347475 seconds)
    (221/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.597910718 seconds)
    (222/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.420005963 seconds)
    (223/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.356534323 seconds)
    (224/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.377532722 seconds)
    (225/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.27338498 seconds)
    (226/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.928502462 seconds)
    (227/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.355590396 seconds)
    (228/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.433143397 seconds)
    (229/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.44448885 seconds)
    (230/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.781595329 seconds)
    (231/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.724145809 seconds)
    (232/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.583676334 seconds)
    (233/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.764618871 seconds)
    (234/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.357346487 seconds)
    (235/286) benchmarking ("sort", Float64, false)...
    done (took 5.687016254 seconds)
    (236/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.14610574 seconds)
    (237/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.558272169 seconds)
    (238/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.152226325 seconds)
    (239/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.409297428 seconds)
    (240/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.382460672 seconds)
    (241/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.129493248 seconds)
    (242/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.435018771 seconds)
    (243/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.356779996 seconds)
    (244/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.978331044 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.772777171 seconds)
    (246/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.977312771 seconds)
    (247/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.378063476 seconds)
    (248/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.582669003 seconds)
    (249/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.728468272 seconds)
    (250/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.377614816 seconds)
    (251/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.136227256 seconds)
    (252/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.706094791 seconds)
    (253/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.727862136 seconds)
    (254/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.422860942 seconds)
    (255/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.585439055 seconds)
    (256/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.411136849 seconds)
    (257/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.362738461 seconds)
    (258/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.107004246 seconds)
    (259/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.937915057 seconds)
    (260/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.394956973 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.465780796 seconds)
    (262/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.294068751 seconds)
    (263/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.361739653 seconds)
    (264/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.480060837 seconds)
    (265/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.485097445 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.494670857 seconds)
    (267/286) benchmarking ("sort", Float64, true)...
    done (took 6.382601336 seconds)
    (268/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.196268333 seconds)
    (269/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.387794747 seconds)
    (270/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.592888489 seconds)
    (271/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.380006247 seconds)
    (272/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.410969206 seconds)
    (273/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.230110774 seconds)
    (274/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.438752648 seconds)
    (275/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.735801424 seconds)
    (276/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.412079694 seconds)
    (277/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.402530737 seconds)
    (278/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.397941734 seconds)
    (279/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.667994499 seconds)
    (280/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.360013753 seconds)
    (281/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.192743437 seconds)
    (282/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.360017276 seconds)
    (283/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.375681207 seconds)
    (284/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.408297972 seconds)
    (285/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.161852528 seconds)
    (286/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.668420651 seconds)
  done (took 948.075666469 seconds)
done (took 949.35417215 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.417054724 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.413155931 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.394310299 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.416118772 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.506210275 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.420268802 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.405929442 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.398051031 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.442679407 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.442753282 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.392814636 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.416334468 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.396852684 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.395459134 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.395087892 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.410889672 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.420428659 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.392459678 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.412770533 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.405879885 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.411983493 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.394631355 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.44593328 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.418861994 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.399893951 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.397925223 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.398088649 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.415692836 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.509167303 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.399798103 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.399671689 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.408555823 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.420475803 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.389394011 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.39296997 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.41693166 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.408589064 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.406819357 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.400368077 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.428839226 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.82723011 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.412751139 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.396004139 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.396562843 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.395638998 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.401416837 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.397739854 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.404989565 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.410310976 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.413427492 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.813729817 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.421699326 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.398766478 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.396774621 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.409275649 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.397936334 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.401383359 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.414594927 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.41593348 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.414725802 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.404311031 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.398041585 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.401420354 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.414091282 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.406550896 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.845652717 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.404129003 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.403726115 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.816525656 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.414476293 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.838950196 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.41757868 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.400039636 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.411413215 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.430014255 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.420853902 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.388432079 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.399894473 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.406401772 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.398276293 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.409484013 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.409878299 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.402791144 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.401101062 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.414323182 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.423810646 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.409505677 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.398529341 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.40716897 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.417317784 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.408888887 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.407784576 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.397309255 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.392656153 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.406049158 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.399415228 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.4021379 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.403603669 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.405204616 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.410184998 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.815861053 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.428326749 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.396072455 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.393660058 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.398922416 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.409696423 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.815128367 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.409268638 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.423105793 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.446969914 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.400270851 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.408728902 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.399367505 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420236882 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.410173607 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.404317432 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.395622755 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.413113047 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.806477997 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.425390578 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.405340322 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.400605104 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.42071378 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.405523874 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.396446133 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.427214112 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.398014895 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.416854722 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.523594749 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.413586572 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.430244022 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.400203366 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.407651451 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.425246076 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.421231631 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.434037708 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.403237247 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.417201557 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.416462985 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.402800428 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.414321837 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.414905193 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.405464047 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.41094523 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.400597752 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.427977384 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.417832975 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.416585157 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.42264918 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.524664809 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.400259344 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.414546109 seconds)
done (took 235.205991472 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.46321708 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.396394774 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.485948067 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.398973988 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.500988253 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.503136268 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.394362199 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.399889749 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.400379231 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.774529479 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.400882771 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.400377684 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.403602908 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.396895181 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.482696519 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.402605802 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.395604588 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.739473508 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.403852291 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.472091316 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.401265287 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.398772425 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.404174733 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.783754328 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.393719943 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.393617324 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.470092028 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.400967212 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.748384221 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.39487862 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.39746766 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.747933091 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.492835019 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.420244225 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.413278835 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.411193981 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.505678339 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.416879137 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.486310365 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.484661923 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.487175865 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.442447632 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.405047868 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.400470991 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.399150481 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.404930182 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.40399141 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.43046855 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.403256218 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.404275709 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.740990915 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.414492506 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.413505503 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.399851076 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.403916046 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.423449542 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.403492154 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.403161954 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.490619555 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.402375251 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.467056791 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.784302241 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.777607615 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.40575632 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.402938403 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.397496385 seconds)
  done (took 152.997889891 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.469380755 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.476213164 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.51291966 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.414052783 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.44964651 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.51698537 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.41578534 seconds)
  done (took 11.560309237 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.410365282 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.403955463 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.454989622 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.454124868 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.403659843 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.553754088 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.408661946 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.417562568 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.404370999 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.457275637 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.406914508 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.407334761 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.412754664 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.404727219 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.455400807 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.417253376 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.520214963 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.408915355 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.408787353 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.558034064 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.405352594 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.414475945 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.456265763 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.415631535 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.404720122 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.412170097 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.971741028 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.40425309 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401157721 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.405652151 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.402184832 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.438783022 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.407054238 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.40031809 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.403303342 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.519847745 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.405003186 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.404890752 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.40431208 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.400777934 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.406774204 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.406973084 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.408867733 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.406429621 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.408579501 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.430718405 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.404723246 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.408697886 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.407573405 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.408033364 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.45855315 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.405984884 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.403437181 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.407348836 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.463958419 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.415985933 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.40941952 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.408912352 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.405591596 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.408517 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.559963538 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.457894846 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.403933822 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.456156842 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.410371885 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.409999151 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.409039597 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.409271622 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460515927 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.40845548 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.456479999 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.407721853 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.55945793 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.431164695 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.410906949 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.413016119 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.408443157 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.410412307 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.404292363 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.416985623 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.408702596 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.410454008 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.411332441 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.404862241 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.408136512 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.508109036 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.517674875 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.411300035 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.422209874 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.417665411 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.40440429 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.464825822 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.411189343 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.403753514 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.463045031 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.527378291 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.460397376 seconds)
  done (took 160.399842126 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.415236736 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.418892024 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.41159811 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.427058537 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.409854482 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.411115277 seconds)
  done (took 9.801773494 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.412926214 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.414065285 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.412487548 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.411244108 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.407090682 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.412639311 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.409734165 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.414192015 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.412580591 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.413772452 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.414180215 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.413678556 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.413795508 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.414546934 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.411989919 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.413195658 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.412021426 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.411068488 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.414177637 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.411694896 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.507736527 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.414058753 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.414608365 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.416235916 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.416539547 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.408887531 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.419770285 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.411605958 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.415815034 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.417160808 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.433592854 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.416365392 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.411711751 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.415647811 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.419622524 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.416128473 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.4185325 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.415981393 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.413718207 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.414851531 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.41633733 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.415687806 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.414828753 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.416407636 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.416864689 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.417735984 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.419517118 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.422634055 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.417140513 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.417212067 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.417855474 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.417324563 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.416128462 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.416958756 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.419146126 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.43569043 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.41913958 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.417962906 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.416385065 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.417024795 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.416424473 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.415219724 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.416723532 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.420290306 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.424116696 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.417126029 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.415800935 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.421546873 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.417580343 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.416833027 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.418460871 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.415588354 seconds)
  done (took 104.365643084 seconds)
done (took 440.426457693 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.750218019 seconds)
  done (took 8.06446458 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.580203804 seconds)
  done (took 7.894230094 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.030053025 seconds)
  done (took 22.351119097 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.473525436 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.451649707 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.424964729 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.41218128 seconds)
  done (took 27.077492881 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.787853233 seconds)
  done (took 8.101417367 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.409767601 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.406616671 seconds)
  done (took 14.129847698 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.515136051 seconds)
  done (took 7.827821129 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.082470875 seconds)
  done (took 8.405044726 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.411365263 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.421416646 seconds)
  done (took 14.418978876 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.392380153 seconds)
  done (took 7.706902302 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.523033786 seconds)
  done (took 8.838697778 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.420840787 seconds)
  done (took 7.736501679 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.43718578 seconds)
  done (took 7.752402898 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.414944737 seconds)
  done (took 9.730571772 seconds)
done (took 161.349773584 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.411685317 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.41022503 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.410534325 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.412578958 seconds)
  done (took 26.958159123 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.449489047 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.452011815 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.452321576 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.463055502 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.454172749 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.451291939 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.444737963 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.443739275 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.464666527 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.455608612 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.454259829 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.455854653 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.452083558 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.444778758 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.455162773 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.455329414 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.463474722 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.45462989 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.444462222 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.456965422 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.42015128 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.463894674 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.457118739 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.421055937 seconds)
  done (took 36.146627596 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.938837987 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.488945514 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.572284851 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.470106335 seconds)
  done (took 7.786413073 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.470505364 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.473184271 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.484116337 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.526761453 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.553949291 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.483837483 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.447109928 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.443555587 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.428843272 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.474812843 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.550366571 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.491816089 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.556855472 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.422296726 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.606744447 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.421971378 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.42121864 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.474065111 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.525482795 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.541733792 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.421903896 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.474497709 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.477659567 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.491395845 seconds)
  done (took 36.981493208 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.421620355 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.43944992 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.420838524 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.419007112 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.429265294 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.419838725 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.420603629 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.421435626 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.421714572 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.426476374 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.420192741 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.433491492 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.419587208 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.421664561 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.42910144 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.422912443 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.427874169 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.421972075 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.422403862 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.428636543 seconds)
  done (took 29.805704459 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.413826 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.269375071 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.767508864 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.672010419 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.415429844 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.417132794 seconds)
  done (took 28.274253087 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.489770999 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.640099719 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.422459509 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.774025172 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.866969647 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.43920051 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.423379748 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.664590552 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.976168929 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.963993937 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.478925419 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.490624288 seconds)
  done (took 20.949619849 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.417944498 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.418930674 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.428185108 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.434014035 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.476134816 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.443148964 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.429794801 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.417232633 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.477210226 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.497246039 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.443619868 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.478048141 seconds)
  done (took 38.682910424 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.504438169 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.465155079 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.309625248 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.417602429 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.137290219 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.624350275 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.48308064 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.902879638 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.415662064 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.693092941 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431431746 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.509843424 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.676348503 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433295641 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.42073313 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.402698869 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661440818 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.917034008 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.42119027 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.515979243 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447204569 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.433420385 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.520788585 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.451074775 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.633343068 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.562127095 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.681829413 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.199256789 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.714062982 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.432577682 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431845755 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.422083287 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.696233485 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07998037 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526716274 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431226395 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433522659 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.968011247 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.406058276 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.413736539 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.434926351 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425510135 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432583947 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423414437 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.357328453 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.436854655 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.894663379 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.428091824 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.133296053 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.423763145 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.432284213 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51696343 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.424475919 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.991234663 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456245442 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.449418319 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.419917827 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.512355687 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007742348 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.940821509 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.43425896 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.358010356 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.428137713 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.500668614 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069081167 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.542208465 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.43028925 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.427780944 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.357959888 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.486860508 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.439585605 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.572579546 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.438649021 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.07436599 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164704 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.452086012 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.356460368 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981270599 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439541613 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.360342755 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.652863201 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.200364808 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360179613 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.370381171 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.35929023 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133270983 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432734494 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.832355245 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.443485233 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.90994043 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.428541008 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442917433 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447424151 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.648244229 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.30344475 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425480022 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.427142942 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551046895 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440491954 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.891327617 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.35390267 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.420878873 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.680478288 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.637119666 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433993898 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.410443868 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663149162 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436146585 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.441469064 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.427132515 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.437711195 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.007982929 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.453208704 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.938277112 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444203218 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.205704129 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167656138 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430126163 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.526796528 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.441533076 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671616022 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.205693025 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.32452071 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.494789466 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433553105 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.428518128 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.949488148 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.019631538 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.327736935 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.423093584 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439337567 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.436426946 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.426393535 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373157628 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.426761421 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434726909 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.206610382 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.652139198 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.428649154 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.704783676 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.361797765 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576304081 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.431552835 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.644517296 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.635950315 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.441874821 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.686739969 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.427306143 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.434422856 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439630872 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.446885454 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.529775544 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450356427 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.430536568 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.685632463 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.432137729 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.433491502 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.536552037 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.208436041 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.430930733 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.43391338 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441818343 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.028805691 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424817709 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425120089 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.320230208 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.444273391 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.497927646 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.437122523 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.438872065 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.24306764 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.442434566 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.435974604 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.427720185 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.646691415 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.439800844 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.448823524 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509272715 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.644772322 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.026661461 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.461005819 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.364817778 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.140821545 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.123344587 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431949074 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.620218511 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.429824205 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.440685912 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442568087 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.430692941 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.036515947 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450807738 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.449351799 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.437270448 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.440689496 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.436265026 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431349563 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.22847546 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.961011049 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.43671388 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.442605812 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.574178103 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.445364555 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.365649976 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.9479886 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.435550724 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.431992418 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.209804994 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465125197 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.452710316 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.925529561 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68202811 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.433149947 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.442659817 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.559927537 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.46559217 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.430474556 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.433264737 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.464261899 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.441933252 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442573943 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.443868238 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.541176558 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.797849103 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993698689 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.195664551 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.00697062 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379065033 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.445786519 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.31741773 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.902932087 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362198568 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.095890109 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620812802 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.921051277 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.378458772 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.648101912 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.653641927 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210364176 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44565707 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.662093393 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.360235547 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.4425677 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.447728943 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.64518451 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468077353 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.444153041 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.363637309 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.708422897 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.709640698 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.431203046 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.5133344 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.904930142 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.437859256 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.212408553 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.474093102 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.754903146 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.626285291 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.980688475 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.821263092 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440699075 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.445081139 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.927792895 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.431200167 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.960359614 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072656825 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.453452969 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.653379546 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.3711274 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.446207975 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.447997265 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.432395964 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.728772192 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.439082276 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.692640633 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44742763 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.370938812 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.440076268 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976853688 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.307060734 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.441397233 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436614525 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186803087 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.436509325 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735067299 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.449281182 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.196755214 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456487482 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.373094718 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.371703552 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.129281449 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.446608258 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.411704116 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938781466 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.447230513 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454337018 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.453654374 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285380823 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.692728881 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.45134323 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.038035846 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68044174 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440078966 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479035713 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.539703385 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.4440853 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.420717468 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.342220839 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.675973316 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.528497627 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663803244 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.342486517 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.338618027 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.49979512 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.666475569 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.335321444 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.452932797 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.695410577 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.166109297 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.460093236 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207826985 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481924498 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.442958136 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452552508 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.43155515 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477486889 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.526346499 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.448695884 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.450360332 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.450859329 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.616965129 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.455452103 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44374668 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.455130055 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.533762654 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.988879789 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.210531981 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.214892419 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.043579366 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.234536845 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.055705273 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469512681 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.441638162 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.441098942 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.375742745 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.586219494 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.966131197 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.713841669 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571657734 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.448063432 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465171717 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.441580587 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.443831553 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67014477 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716790095 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.411347249 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445473963 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.229364999 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.323132889 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.453678778 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.654956315 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958955372 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018699823 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560628661 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.441000285 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.925344004 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.715084661 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.532838351 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441847494 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.032296386 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.451155518 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.7846344 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.465529604 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4460717 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.590134492 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.452078513 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106024138 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.470396597 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.60254181 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.217666329 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.573927861 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.699625906 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.916286249 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.445012973 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.049244842 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.180579152 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.709729497 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.513565689 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.454623866 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.543425541 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.594428753 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.441337902 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.335129537 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.44454721 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.285908546 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.153649151 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.454635112 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.04197355 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724099904 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.44189597 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.441085213 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474971415 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.454694631 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.66780322 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.155158999 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669508837 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454845038 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.453302413 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.435048416 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04221745 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.473786189 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379916831 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.438912117 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.701243915 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.697678506 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.466843666 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.897591601 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.155572842 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.010841253 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.416248126 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.467954504 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.458460119 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.159548116 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.046755906 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.256513245 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961763036 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.105395567 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459921379 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721700139 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.452257643 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4468925 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.739525864 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.45002725 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.451949403 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.459714634 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.053998192 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236113779 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.44059873 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.622010085 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.384953997 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.673425684 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.530529721 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382947915 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.440500802 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.630367843 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447237332 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.578647383 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450887063 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.445772925 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456100418 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.20507772 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.731399742 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.447070305 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.433389667 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.431009058 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.460096051 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.541528121 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.725881952 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446820448 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.121557744 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.799208515 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.704133197 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.448463031 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.428622677 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.453783226 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.449891389 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.167627846 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452392502 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.444193409 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.050839071 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.45005401 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.476407787 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.453409373 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.665686787 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.662409198 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449351647 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464627339 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453594994 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464379225 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.35557224 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.216860775 seconds)
  done (took 1691.125018676 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.472374276 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.490239976 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.485581516 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.524749818 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.496847865 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.459424899 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.547094392 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.483074716 seconds)
  done (took 53.307788316 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.447331898 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.594406645 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.478136455 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.461666485 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.450692601 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.45989088 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.911200652 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.463440503 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.450161825 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.458240931 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.453668363 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.448996919 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.120964037 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.460463019 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.454035164 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.430644817 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.450312942 seconds)
  done (took 67.349046589 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.45111401 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.06037472 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.549671949 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.45457967 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.49916591 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.472342585 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.282888952 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.475013783 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.448355397 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.835691256 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.107180684 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.488067101 seconds)
  done (took 86.475704296 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.467933116 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.468148324 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.467879888 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.468708858 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.468978379 seconds)
  done (took 8.695028973 seconds)
done (took 2133.854434432 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.456487233 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.157244501 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.079829424 seconds)
  done (took 5.587696069 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.600056206 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.649377213 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.766522814 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.772748688 seconds)
  done (took 8.139691974 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.73282011 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.844586538 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.640515301 seconds)
  done (took 6.569429508 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.731923863 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.456322535 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.451746971 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.451556136 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.453474759 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.452963973 seconds)
  done (took 20.713087102 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.457309426 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.459419653 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.45535577 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.460130472 seconds)
  done (took 7.186705419 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.43315044 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.14590487 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.433682384 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.451226386 seconds)
  done (took 18.815491799 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.203818935 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.215511746 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.200335566 seconds)
  done (took 7.972848615 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.483821101 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.47873326 seconds)
  done (took 4.314531017 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.755737351 seconds)
  done (took 3.107235249 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.473123199 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.508623616 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.51492805 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.449037421 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.786375337 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.80481385 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.071784542 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.66290134 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.423257106 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.644442368 seconds)
  done (took 31.692780427 seconds)
done (took 131.548320006 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.268508534 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.446671508 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.653360519 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.240190654 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.677359838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.650809487 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.673709792 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.206694427 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.742343926 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.730765909 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.234534335 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.678306986 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.623001305 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.455025073 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.622348693 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.703162534 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.686452421 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.318184053 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.917192978 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.120605154 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.668632227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.879284526 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.067129886 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.889582263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.677831056 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.608091771 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.472085498 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.448809238 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.09693196 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.485422238 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.601160444 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.298528816 seconds)
  done (took 194.196454925 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.455110749 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.448797448 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.463824275 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.450010244 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.448011281 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.447696823 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.449579492 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.44809763 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.448021421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.46594547 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.457284124 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.447989744 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.448105244 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.463854228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.463156219 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.457951231 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.45359752 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.44829489 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.448964476 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.460447031 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.448559101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.44926245 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.448839308 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.465892728 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.45961955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.450816831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.449895924 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.449035135 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.452788967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.45949287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.450003233 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.448135569 seconds)
  done (took 207.86245994 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.455724168 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.460596074 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.450212597 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.450055921 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.465568486 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.450300624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.451227351 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.449523503 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.455778725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.448286337 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.449419197 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.464468237 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.451784583 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.449997724 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.453564919 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.450361742 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.45195934 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.453305971 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.45105028 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.449811462 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.452475491 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.450802145 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.467321065 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.451163892 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.451193001 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.453209808 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.451780316 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.452347176 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.451686513 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.465518194 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.450175096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.465213703 seconds)
  done (took 207.883139115 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.655408068 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.46784794 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.466584284 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.399730558 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.467041178 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.467225613 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.460796863 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.664371044 seconds)
  done (took 15.408313556 seconds)
done (took 626.70474852 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.794587821 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.517542306 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.666241223 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.490874032 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.246428664 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.504673396 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.48580765 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.653455051 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.407889196 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.667351913 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.764600867 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.492323091 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.909482986 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.480499231 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.744552757 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.587282107 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.34313983 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.456937683 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.794563444 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.035392948 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.749274522 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.93466352 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.671072835 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.41097572 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.919076212 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.926151176 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.192124115 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.336985479 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.495573767 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.810103307 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.1747903 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.480235657 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.549687274 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.546147999 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.60668188 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.586325153 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.436706657 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.541735329 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.685864227 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.711551184 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.021822939 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.22010912 seconds)
  done (took 97.411710143 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.45220614 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.453377785 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.452474293 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.453268837 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.454763597 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.452926911 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.45384089 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.45247788 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.454048813 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.453360542 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.450828772 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.453714177 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.453210768 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.455900425 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.452068124 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.453299298 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.454347385 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.455361006 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.452106079 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.452931626 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.453647135 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.455717506 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.454022882 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.453060434 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.455658838 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.453362569 seconds)
  done (took 39.154547692 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.472987308 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.720307 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.881426241 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.478069657 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.471860122 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.474001805 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.549170186 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.474967241 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.472353989 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.475435411 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.625376369 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.475456415 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.504457822 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.907230111 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.467458905 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.47417399 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.473129969 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.470776224 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.726137016 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.471624496 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.566517431 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.475735568 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.550301477 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.482778848 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.489419065 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.471515639 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.477064478 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.0448115 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.490547239 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.626527123 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.282079184 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.548245912 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.015958805 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.910106111 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.273862651 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.477104986 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.474862763 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.631827407 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.468331498 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.469311108 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.547870351 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.475843217 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.892468803 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.14357369 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.493973787 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.475332555 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.063554048 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.639755229 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.718449222 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.47606883 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.912472139 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.475832612 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.477468814 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.475473178 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.716362959 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.483185386 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.47478647 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.080546347 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.494532741 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.551619319 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.477761805 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.476561089 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.737057916 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.470874173 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.724556872 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.47677342 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.481560656 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.502531756 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.895947412 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.478979074 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.166932005 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.494088321 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.478787026 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.630289032 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.7259458 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.092238153 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.497063078 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.742477363 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.025589739 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.569420239 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.481148289 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.036207633 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.573021482 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.481800741 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.478064339 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.479673823 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.477465491 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.52974837 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.551687565 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.10537329 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.166011709 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.109208414 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.575580933 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.490990115 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.478868772 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.086083025 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.500061951 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.478392254 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.892758032 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.169877754 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.498372829 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.485435159 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.168841539 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.500022329 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.556944525 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.486633318 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.902333391 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.481478808 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.530821943 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.480366277 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.486554235 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.499503731 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.555877862 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.483702341 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.479009674 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.138986382 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.6608092 seconds)
  done (took 193.4135101 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.473883047 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.484270891 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.472602538 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.465310459 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.472137653 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.481958412 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.470495335 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.473619317 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.480100048 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.471834296 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.473481115 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.476045827 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.475821944 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.501249285 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.485880397 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.481014505 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.084933909 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.473505955 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.475845135 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.467331911 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.270809511 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.47690732 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.479251823 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.467725332 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.474816788 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.475365725 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.481339467 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.484703643 seconds)
  done (took 156.122923333 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.481719059 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.046307076 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.49995681 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.611929692 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.504915364 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.479440475 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.608540789 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.542262142 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.499720998 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.480334821 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.479431463 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.786212372 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.48618383 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.001570644 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.675921667 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.620496868 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.000277954 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.499580144 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.480335011 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.482537714 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.61372482 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.48093618 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.786706291 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.051840857 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.500748162 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.051015314 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.469043005 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.486290444 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.485454298 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.055397494 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.498632818 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.789024418 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.561878306 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.543910782 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.068896789 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.018276225 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.017218363 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.632606741 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.485150602 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.480609979 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.481483217 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.467223054 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.047431469 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.492709415 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.484380691 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.035931253 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.495825247 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.486261902 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.490935812 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.483640285 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.543325335 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.559733711 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.80470403 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.044770142 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.569530146 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.498390449 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.612947708 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.837993036 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.48812917 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.00324827 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.469725437 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.060134543 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.504331308 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.466402015 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.485164005 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.491041456 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.63437618 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.616670551 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.004001099 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.500754345 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.002408203 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.649368954 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.485349058 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.483285114 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.488452588 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.057059498 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.022067047 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.645835675 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.619687778 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.680128361 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.471721047 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.485226335 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.469195789 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.561692781 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.487080711 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.061594517 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.020811009 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.496744854 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.488049155 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.487966186 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.48865378 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.661835201 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.077385199 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.580804775 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.990188813 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.803275776 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.795239489 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.489177782 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.547243985 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.501004468 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.79673952 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.488837161 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.546779497 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.911998568 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.796180566 seconds)
  done (took 175.521475766 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.732512816 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.691502879 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.570398235 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.62962927 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.096433321 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.048185299 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.765799577 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.629779571 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.598821151 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.745625373 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.637348268 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.581747687 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.70092091 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.577261252 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.251345022 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.571642566 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.598709193 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.632587949 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.647429504 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.524682384 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.170988696 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.771290472 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.674042447 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.393802732 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.579768324 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.252381949 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.038846614 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.016877333 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.665404204 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.825940155 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.046530867 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.610357762 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.454801576 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.205221615 seconds)
  done (took 70.31887549 seconds)
done (took 733.303289123 seconds)
SAVING RESULT...
DONE!
